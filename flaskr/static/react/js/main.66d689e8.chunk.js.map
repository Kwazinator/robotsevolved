{"version":3,"sources":["components/LearnGameItems.js","constants/constants.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinModal.jsx","components/YouWinDailySingleModal.js","components/YouWinDailyFinalModal.js","components/AddPuzzleModal.jsx","components/ToggleSettings.js","components/Timer.js","containers/DisplayView.js","components/HighScores.jsx","components/DailyChallengeScores.jsx","containers/Modals/PuzzleRushFinishedModal.js","containers/Modals/RandomGameStatsModal.jsx","components/CloseIconWithOnClick.jsx","components/DescriptionList.jsx","components/YouWinLessonModal.js","components/ShowDailyChallengeScoresCard.jsx","components/DailyChallengeHistoryData.js","components/boardgenerator.js","containers/Modals/BoardResetModal.js","containers/Game.js","Pages/CreateGame.js","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","Material-UI/themes.jsx","Pages/Home.js","containers/Modals/LoginModal.js","components/SignInButton.js","components/LoggedInUser.js","containers/Modals/PuzzleRushDifficultyModal.js","containers/Modals/RandomGameDifficultyModal.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","components/ProfilePageComponents/ProfilePageCreatedGamesDetails.js","components/ProfilePageComponents/ProfilePageSolutionDetails.js","Pages/ProfilePage.js","Pages/RandomGamePage.js","Pages/PuzzleRushPage.js","Pages/LessonsPage.js","Pages/DailyChallenge.js","Pages/AboutUs.js","components/ShowDailyPuzzleHistory.js","Pages/DailyChallengeHistory.js","Pages/DailyChallengeHistoryAnswersPage.js","components/LoadingPage.jsx","App.js","serviceWorker.js","index.js"],"names":["LearnGameItems","props","handleClick","handleClickGame","index","selected","Button","variant","color","aria-label","onClick","name","UP","GOAL_IMAGE","DIRECTION_MAP_IMAGES","yellow","DOWN","LEFT","RIGHT","red","green","blue","MovesView","style","width","float","display","this","moveHistory","length","map","move","src","playerState","robot","colorSignifier","dir","React","Component","styleoutside","dimension","position","dim","height","backgroundColor","top","left","styleinside","styleinside2","Square","border","margin","overflow","children","id","transition","styleoutsidedraggable","selectedColor","undefined","borderStyle","borderColor","borderRadius","Robot","onStopDragHandler","e","handleCreateMode","isCreateMode","buildMode","x","y","grid","draggableGrid","onStop","bounds","onTouchStart","onMouseDown","orientation","opacity","wallThickness","wallOffset","Wall","userSelect","styledragable","Goal","show","endPosition","obj","key","hasOwnProperty","YouWinModal","Dialog","onClose","handleClose","container","document","getElementById","BackdropProps","aria-labelledby","open","maxWidth","DialogTitle","DialogContent","dividers","numMoves","TextField","label","defaultValue","username","DialogActions","submitAnswer","resetPuzzle","YouWinDailySingleModal","Typography","totalMoves","undoMove","moveNextPuzzle","YouWinDailyFinalModal","handleClickSubmitGame","robotPosition","AddPuzzleModal","submitPuzzle","ToggleSettings","event","FormControlLabel","value","control","Switch","onChange","checked","showColoredLineDirections","Timer","state","minutes","seconds","timer","myInterval","setInterval","setState","puzzleRushTimeUp","clearInterval","valuetext","DisplayView","createMode","fullWidth","handleCreateBoardClick","toggleBuildMode","createBoardPressed","copyToClipboard","dummy","createElement","body","appendChild","window","location","host","uri","select","execCommand","removeChild","copiedClipboard","thisThing","copyButtonText","setTimeout","handleDimensionChange","getElementsByClassName","blur","parseInt","toString","DimensionChanged","showPuzzleLink","isPuzzleRush","isLesson","isDailyChallengeAnswers","isDailyChallenge","paddingBottom","marginRight","marginTop","marginBottom","Divider","ButtonGroup","toggleLineIndicators","gutterBottom","Slider","onChangeCommitted","getAriaValueText","step","marks","min","max","squareSizeValue","valueLabelDisplay","highscores","Grid","item","xs","marginleft","highscore","Paper","elevation","spacing","comment","userid","created","highscorestyle","wins","i","crowns","push","CrownCounter","user_id","score","submitted","direction","PuzzleRushWinModal","difficulty","md","List","dense","ListItem","ListItemText","primary","secondary","numPuzzlesCompleted","averageTime","averageMoves","differenceOptimal","movesPerSecond","playPuzzleRushAgain","closeModal","RandomGameStatsModal","showStatsModal","handleShowRandomAnswers","answers","lowestMoveSequence","lowestMoves","CloseIconWithOnClick","Descriptionlist","tipsText","text","ListItemSecondaryAction","IconButton","edge","handleCloseToolTips","YouWinLessonModal","useStyles","makeStyles","root","minWidth","bullet","transform","title","fontSize","pos","ShowDailyChallengeScoresCard","classes","Card","className","CardContent","component","bestScore","MovesforPuzzle","MoveSequence","DailyChallengeHistoryData","difficultyforPuzzle","lowestMovesforPuzzle","nameSubmitted","scoreSubmitted","playerMovedSequence","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","type","boardState","wallVerticle","wallHorizontal","goal","randompos1","randompos2","randompos3","randompos4","randomPositions","extend","j","gameWon","playerStart","slice","BoardResetModal","createBoardHandler","preventDefault","percent","createBoard","textAlign","paddingRight","Input","inputProps","placeholder","addEventListener","keyCode","target","indexOf","formatGeneratedMoveSequence","moves","images","charAt","setDefaultSquareSize","boardWidth","boardHeight","drawerWidth","getComputedStyle","windowWidth","innerWidth","settingstop","innerHeight","settings","squarevalue","ColoredLineDirections","Game","updateHighscores","axios","get","then","res","highscoresdata","JSON","parse","data","FindhighscoreIsDiff","squareSize","copiedToClipboard","check","tocheck","toreturn","DChighscoreIsDiff","updateDailyHighscores","dc_id","dchighscores","handleClickDailyChallenge","componentDidMount","onkeydown","handleKeyDown","loadedGame","IntervalId","dailyChallengeMode","componentWillUnmount","newDirection","tabSelector","handleUndoMove","handlePlayerMovement","robotSelect","robotSelected","namesubmit","userInfo","console","log","post","puzzledata","authorname","history","handleLineDirections","showBoardResetPanelModal","closeRandomStatsModal","closeCreateBoardModal","closePuzzleRushFinishedModal","showPuzzleRushFinishedModal","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","totalMovesDiff","solutiondifference","numPuzzleon","totalMovesList","avgMoves","p_id","differenceFrom","percentile","submitDailyAnswer","LastRobotPosition","moveHistoryList","playerStateList","solutiondata","dc_movesList","dc_playerList","checkwin","puzzleRush","randomGame","dailyChallengeModeAnswers","Won","gamesWonDaily","games","handleDailyClickGame","learnMode","g_id","solutionmoves","g_moves","g_puzzledata","newarray","concat","oldPositon","prevPosition","splice","handleLearnClickGame","description","handleDailyClickAnswersGame","g_solutiondata","g_difficulty","solutionDataSubmitted","loadSidebar","game","paddingTop","DailyChallengeScores","HighScores","handlePlayerMovementFromMouse","moveObj","pop","createModeWallClick","indexToChange","newWallHorizontal","wallH","newWallVerticle","wallV","onStopDragHandlerGoal","round","lastY","lastX","goals","gamedata","savedMoves","g_uri","pushState","settingsWidth","settingsHeight","percentWall","settingsPercent","LineDirections","paddingLeft","alignItems","sm","numPuzzleRush","zeroMinWidth","Board","square","player","ColoredLineDirection","ColoredLine","puzzleRushPercentileCompleted","withRouter","CreateGame","withStyles","theme","background","padding","upperPadding","upperPaddingButton","bottom","lowerPadding","rightSideText","leftSideText","numberOfHighScores","trimName","separated","split","word","substring","trimNameShort","justifyContent","Tooltip","plays","handleGameClick","disableGutters","FindGame","handleFilterMenuOpen","anchorEl","currentTarget","handleCloseFilterMenuMostPlayed","searchTerm","searchRef","search","filter","offset","highscoreslist","gameslist","handleCloseFilterMenuHighest","handleSearchSubmit","align","InputBase","input","inputRef","ref","onKeyPress","iconButton","divider","startIcon","Menu","keepMounted","Boolean","handleCloseFilterMenu","MenuItem","FindGameElements","marginLeft","flex","PlayGame","flexGrow","homepage","griditems","paper","Width","image","img","maxHeight","baseExpansion","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","darkmode","iconcards","marginBotton","iconcardsDaily","titlehome","fontFamily","titledailyroto","iconfonts","createboardcard","content","demo","centeredProfile","expandedPanelDCH","ComplexGrid","justify","paragraph","CardActionArea","handleClickCreateGame","CardMedia","alt","handleClickFindGame","handleClickRandomGame","handleClickLearnGame","handleClickPuzzleRush","dividerFullWidth","LoginModal","loginGoogle","href","closeLoginModal","class","SignInButton","loggedin","textToShow","LoggedInUser","SignInButtonPressed","profilePicture","PuzzleRushDifficultyModal","handleClickPuzzleRushModal","action","isLoading","handleClickEasyPuzzleRush","handleClickMediumPuzzleRush","handleClickHardPuzzleRush","handleClickExHardPuzzleRush","handleChange","wrap","CircularProgress","FormControl","FormLabel","RadioGroup","Radio","handleClickRandomGameModal","handleClickEasy","handleClickMedium","handleClickHard","handleClickExHard","handleClickGodMode","ProfilePageCreatedGamesDetails","handleClickPlayGame","ProfilePageSolutionDetails","solution","WinnerCreated","WinnerUsername","ProfilePage","useState","error","setError","expandedGame","setExpandedGame","expandedHighscores","setExpandedHighscores","puzzlerushview","newuser","gamesview","ExpansionPanel","expanded","panel","isExpandedGame","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","solutionsview","isExpandedHighScores","WinnerUserId","userID","maxeasy","averageeasy","averagediffeasy","maxmedium","averagemedium","averagediffmedium","maxhard","averagehard","averagediffhard","maxexhard","averageexhard","averagediffexhard","RandomGamePage","PuzzleRushPage","LessonsPage","learngameslist","DailyChallengePage","dailyChallengeGameslist","AboutUs","ShowDailyPuzzleHistory","size","handleDailyPuzzleHistoryClick","DailyChallengeHistory","expandedPanel","setExpandedPanel","dailychallengehistory","isExpanded","DailyChallengeHistoryAnswersPage","LoadingPage","App","handleDrawerClose","boolean","isOpen","PageSelected","DailyChallenge","handleDrawerOpen","showLoginModal","showRandomGameModal","showPuzzleRushModal","handleClickDailyChallengeHistory","historydata","challengeHistoryData","dailychallengehistoryloaded","closePuzzleRushLoginModal","closeRandomGameLoginModal","handleClickProfile","profileData","profileDataloaded","handleHomePageClick","handleClickAboutUs","handleMobileMenuClose","mobileAnchorEl","mobileMenuOpen","showPage","handleMobileMenuOpen","token","linedir","LineDirFlag","createMuiTheme","teal","main","AppBar","clsx","appBar","appBarShift","Toolbar","toolbar1","menuButton","hide","noWrap","grow","sectionDesktop","sectionMobile","aria-haspopup","anchorOrigin","vertical","horizontal","transformOrigin","Drawer","drawer","anchor","drawerPaper","drawerHeader","drawerHeaderLeft","drawerHeaderRight","useTheme","button","ListItemIcon","contentShift","RandomGameDifficultyModal","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","mixins","toolbar","breakpoints","up","toggleBorder","gradient","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"4dAGe,SAASA,EAAeC,GACnC,IAAMC,EAAc,WAChBD,EAAME,gBAAgBF,EAAMG,QAEhC,OAAIH,EAAMI,WAAaJ,EAAMG,MAErB,kBAACE,EAAA,EAAD,CACIC,QAAQ,YAAYC,MAAM,UAC1BC,aAAW,yCACXC,QAASR,GAERD,EAAMU,MAMX,kBAACL,EAAA,EAAD,CACIC,QAAQ,YACRG,QAASR,EACTO,aAAW,0CAEVR,EAAMU,MCzBhB,IAAMC,EAAK,KAwBLC,EAAa,2BAGbC,EAAuB,CAChCC,OAAQ,CACJH,GAAI,+BACJI,KAAM,iCACNC,KAAM,iCACNC,MAAO,mCAEXC,IAAM,CACFP,GAAI,4BACJI,KAAM,8BACNC,KAAM,8BACNC,MAAO,gCAEXE,MAAQ,CACJR,GAAI,8BACJI,KAAM,gCACNC,KAAM,gCACNC,MAAO,kCAEXG,KAAO,CACHT,GAAI,6BACJI,KAAM,+BACNC,KAAM,+BACNC,MAAO,kC,4PC/Cf,IA4BeI,E,uNAjBX,WAAYrB,GAAQ,uCACVA,G,qDAGA,IAAD,OACL,OACI,yBAAKsB,MAhBN,CACCC,MAAO,MACPC,MAAO,OACPC,QAAS,aAaY,sCAAYC,KAAK1B,MAAM2B,YAAYC,QAEhDF,KAAK1B,MAAM2B,YAAYE,KAAI,SAAAC,GAAI,OAC3B,yBAAKC,IAAKlB,EAAqB,EAAKb,MAAMgC,YAAYF,EAAKG,OAAOC,gBAAgBJ,EAAKK,e,GAXvFC,IAAMC,W,4PCR9B,IAAMC,EAAe,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,UAAUC,EAAc,EAAdA,SACvBC,EAAMF,EAAY,KACxB,MAAO,CACHhB,MAAOkB,EACPC,OAAQD,EACRE,gBFE4B,UED5BH,SAAU,WACVI,IAAKJ,EAASI,IAAML,EAAY,KAChCM,KAAML,EAASK,KAAON,EAAY,OAIpCO,EAAc,SAAC,GAA0B,IAAzBP,EAAwB,EAAxBA,UACZE,GADoC,EAAdD,SACfD,EAAY,EAAK,MAC9B,MAAO,CACHhB,MAAOkB,EACPC,OAAQD,EACRE,gBFX0B,UEY1BH,SAAU,WACVI,IAAK,MACLC,KAAM,QAIRE,EAAe,SAAC,GAA0B,IAAzBR,EAAwB,EAAxBA,UACbE,GADqC,EAAdD,UAChBD,EAAU,GAAG,EAAI,MAC9B,MAAO,CACHhB,MAAOkB,EACPC,OAAQD,EACRE,gBFxByB,UEyBzBH,SAAU,WACVI,KAAML,EAAU,GAAG,EAAI,KACvBM,MAAON,EAAU,GAAG,EAAI,OAgBjBS,E,4UATP,OACI,yBAAKvC,QAASiB,KAAKzB,YAAaqB,MAAOgB,EAAaZ,KAAK1B,QACrD,yBAAKsB,MAAOwB,EAAYpB,KAAK1B,QACzB,yBAAKsB,MAAOyB,EAAarB,KAAK1B,e,GAN7BoC,IAAMC,WCtCrBf,EAAQ,SAACC,EAAMmB,GAGjB,MAAO,CACHnB,MAHaA,EAAQ,KAIrBmB,OAHcA,EAAS,KAIvBO,OAAQ,kBACRT,SAAU,WACVU,OAAQ,SACRC,SAAU,WAIH,kBAAG5B,EAAH,EAAGA,MAAMmB,EAAT,EAASA,OAAQU,EAAjB,EAAiBA,SAAjB,OACX,yBAAKC,GAAG,gBAAgB/B,MAAOA,EAAMC,EAAMmB,IACtCU,I,4PCZT,IAAMd,EAAe,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,UAAUC,EAAc,EAAdA,SACvBC,EAAMF,EAAY,KACxB,MAAO,CACHhB,MAAOkB,EACPC,OAAQD,EACRD,SAAU,WACVI,IAAKJ,EAASI,IAAML,EAAY,KAChCM,KAAML,EAASK,KAAON,EAAY,KAClCe,WAAY,kBAIdC,EAAwB,SAAC,GAA0B,IAAzBhB,EAAwB,EAAxBA,UACtBE,GAD8C,EAAdD,SAC1BD,EAAY,MACxB,MAAO,CACHhB,MAAOkB,EACPC,OAAQD,EACRD,SAAU,WACVc,WAAY,kBAKdR,EAAc,SAAC,GAAiB,IAC5BL,EAD2B,EAAfF,UACO,EAAK,KAC9B,MAAO,CACHhB,MAAOkB,EACPC,OAAQD,EACRD,SAAU,WACVI,IAAK,MACLC,KAAM,MACNS,WAAY,kBAIdP,EAAe,SAAC,GAAsC,IAArCR,EAAoC,EAApCA,UAAUhC,EAA0B,EAA1BA,MACvBkC,EAAqB,GAAbF,EAAU,GAAM,EAAI,KAC9BiB,OAAgBC,EAChBC,EAAc,OAKlB,OARuD,EAApBvD,QAAoB,EAAdC,WAKrCoD,EJxBsB,UIyBtBE,EAAc,SAEX,CACHnC,MAAOkB,EACPC,OAAQD,EACRE,gBAAiBpC,EACjBmD,YAAaA,EACbC,YAAaH,EACbhB,SAAU,WACVoB,aAAc,MACdhB,KAAML,EAAU,GAAG,EAAI,KACvBM,MAAON,EAAU,GAAG,EAAI,KACxBe,WAAY,kBAiDLO,E,iXA1CX5D,YAAc,WACV,EAAKD,MAAMS,QAAQ,EAAKT,MAAMG,Q,EAGlC2D,kBAAoB,SAACC,EAAGvB,GACpB,EAAKxC,MAAM8D,kBAAkBtB,EAAS,EAAKxC,MAAMG,Q,EAIrD6D,iBAAmB,WACf,MAAgC,QAA5B,EAAKhE,MAAMiE,cAA0B,EAAKjE,MAAMkE,UAEhD,kBAAC,IAAD,CAAW1B,SAAU,CAAC2B,EAAG,EAAKnE,MAAMwC,SAASK,KAAO,EAAK7C,MAAMuC,UAAW6B,EAAE,EAAKpE,MAAMwC,SAASI,IAAI,EAAK5C,MAAMuC,WAAY8B,KAAM,EAAKrE,MAAMsE,cAAeC,OAAQ,EAAKT,kBAAmBU,OAAO,UAC9L,yBAAKC,aAAc,EAAKxE,YAAayE,YAAa,EAAKzE,YAAaqB,MAAOiC,EAAsB,EAAKvD,QAClG,yBAAKsB,MAAOwB,EAAY,EAAK9C,QACzB,yBAAKsB,MAAOyB,EAAa,EAAK/C,YAQ1C,yBAAKyE,aAAc,EAAKxE,YAAayE,YAAa,EAAKzE,YAAaqB,MAAOgB,EAAa,EAAKtC,QACzF,yBAAKsB,MAAOwB,EAAY,EAAK9C,QACzB,yBAAKsB,MAAOyB,EAAa,EAAK/C,Y,uDAW1C,OACI0B,KAAKsC,uB,GAvCG5B,IAAMC,W,4PC7D1B,IAAMf,EAAQ,SAAC,GAAsD,IAArDqD,EAAoD,EAApDA,YAAYpC,EAAwC,EAAxCA,UAAUC,EAA8B,EAA9BA,SAASoC,EAAqB,EAArBA,QACrCC,GAD0D,EAAbpE,QAC5B8B,EAAU,EAAK,MAChCuC,EAAcvC,EAAU,EAAG,EACjC,GAAiB,cAAboC,EACA,IAAIpD,EAAQgB,EAAY,KACpBG,EAASmC,EACTjC,EAAQJ,EAASI,IAAML,EAAauC,EAAc,KAClDjC,EAAOL,EAASK,KAAON,EAAY,UAGnChB,EAAQsD,EACRnC,EAASH,EAAY,KACrBK,EAAMJ,EAASI,IAAML,EAAY,KACjCM,EAASL,EAASK,KAAON,EAAauC,EAAc,KAE5D,MAAO,CACHvD,MAAOA,EACPmB,OAAQA,EACRC,gBAAiB,QACjBH,SAAU,WACVI,IAAKA,EACLC,KAAMA,EACN+B,QAASA,IAyBFG,G,uNApBX,WAAY/E,GAAQ,IAAD,8BACf,cAAMA,IAIVC,YAAc,WACgB,GAAtB,EAAKD,MAAM4E,QACX,EAAK5E,MAAMS,QAAQ,EAAE,EAAKT,MAAM2E,YAAY,EAAK3E,MAAMwC,SAASI,IAAI,EAAK5C,MAAMwC,SAASK,MAGxF,EAAK7C,MAAMS,QAAQ,EAAE,EAAKT,MAAM2E,YAAY,EAAK3E,MAAMwC,SAASI,IAAI,EAAK5C,MAAMwC,SAASK,OAV7E,E,qDAcf,OACI,yBAAKvB,MAAOA,EAAMI,KAAK1B,OAAQS,QAASiB,KAAKzB,kB,GAhBtCmC,IAAMC,WCvBnBf,GAAQ,SAAC,GAA0B,IAAzBiB,EAAwB,EAAxBA,UAAUC,EAAc,EAAdA,SAChBC,EAAMF,EAAY,KACxB,MAAO,CACHhB,MAAOkB,EACPC,OAAQD,EACRD,SAAU,WACVI,IAAKJ,EAASI,IAAML,EAAY,KAChCM,KAAML,EAASK,KAAON,EAAY,KAClCyC,WAAY,SAIdC,GAAgB,SAAC,GAA0B,IAAzB1C,EAAwB,EAAxBA,UACdE,GADsC,EAAdD,SAClBD,EAAY,MACxB,MAAO,CACHhB,MAAOkB,EACPC,OAAQD,EACRD,SAAU,WACVwC,WAAY,SAML,SAASE,GAAKlF,GACzB,GAA2B,QAAvBA,EAAMiE,cAA2BjE,EAAMkE,UAAW,CAIlD,OACA,kBAAC,IAAD,CAAW1B,SAAU,CAAC2B,EAAEnE,EAAMwC,SAASK,KAAO7C,EAAMuC,UAAU6B,EAAGpE,EAAMwC,SAASI,IAAM5C,EAAMuC,WAAYiC,OAAO,SAASH,KAAMrE,EAAMsE,cAAeC,OAJzH,SAACR,EAAGvB,GAC1BxC,EAAM8D,kBAAkBtB,KAIxB,yBAAKT,IAAKnB,EAAYU,MAAO2D,GAAcjF,MAK/C,OAAO,yBAAK+B,IAAKnB,EAAYU,MAAOA,GAAMtB,K,cCtC5CsB,GAAQ,SAAC,GAAkE,EAAjE4C,UAAkE,IAAxDiB,EAAuD,EAAvDA,KAAK5C,EAAkD,EAAlDA,UAAWJ,EAAuC,EAAvCA,IAAKK,EAAkC,EAAlCA,SAAU4C,EAAwB,EAAxBA,YAAa7E,EAAW,EAAXA,MAC9DgB,EAAQ,EACRmB,EAAS,EACTE,EAAM,EACNC,EAAO,EAwBX,YAvBiBY,IAAbjB,QAA0CiB,IAAhB2B,IPNd,SOORjD,GACAS,EAAMwC,EAAYxC,IAAIL,EACtBM,EAAOuC,EAAYvC,KAAKN,EACxBhB,EAASiB,EAASK,KAAKN,EAAc6C,EAAYvC,KAAKN,EAAa,KACnEG,EAASH,EAAY,MPVZ,UOWFJ,GACPS,EAAMJ,EAASI,IAAIL,EACnBM,EAAOL,EAASK,KAAKN,EAAYA,EACjChB,EAAS6D,EAAYvC,KAAKN,EAAcC,EAASK,KAAKN,EAAa,KACnEG,EAASH,EAAY,MACdJ,IAAQxB,GACfiC,EAAMwC,EAAYxC,IAAIL,EACtBM,EAAOuC,EAAYvC,KAAKN,EACxBhB,EAAQgB,EAAY,KACpBG,EAAUF,EAASI,IAAIL,EAAc6C,EAAYxC,IAAIL,EAAa,OAElEK,EAAMJ,EAASI,IAAIL,EAAYA,EAC/BM,EAAOL,EAASK,KAAKN,EACrBhB,EAAQgB,EAAY,KACpBG,EAAU0C,EAAYxC,IAAIL,EAAcC,EAASI,IAAIL,EAAa,OAGnE,CACHhB,MAAOA,EACPmB,OAAQA,EACRC,gBAAiBpC,EACjBiC,SAAU,WACVI,IAAKA,EAAM,KACXC,KAAMA,EAAO,KACb+B,QAASO,EAAO,MAAQ,MACxB7B,WAAY,kBAML,YAACtD,GAIZ,MAAwB,cAApBA,EAAMkE,WAA8BlE,EAAMkE,UAOnC,KAJH,yBAAKQ,YANO,WAChB1E,EAAMC,YAAYD,EAAMmC,MAKWb,MAAOA,GAAMtB,MCpDzC,YAACqF,EAAKtD,GACjB,IAAK,IAAIuD,KAAOvD,EACRA,EAAIwD,eAAeD,KAAMD,EAAIC,GAAOvD,EAAIuD,IAEhD,OAAOD,G,+SCIX,IAsCeG,G,wNA5BX,WAAYxF,GAAQ,uCACVA,G,qDAIN,OACI,kBAACyF,GAAA,EAAD,CAAQC,QAAShE,KAAKiE,YAAaC,UAAW,kBAAMC,SAASC,eAAe,kBAAkBxE,MAAO,CAACkB,SAAU,YAAauD,cAAe,CAAEzE,MAAO,CAAEkB,SAAU,aACzJwD,kBAAgB,0BAChBC,KAAMvE,KAAK1B,MAAMmF,KACjBe,SAAU,MAEd,kBAACC,GAAA,EAAD,CAAa9C,GAAG,0BAA0BqC,QAAShE,KAAKiE,aAAxD,YACA,kBAACS,GAAA,EAAD,CAAeC,UAAQ,GACnB,yCACc3E,KAAK1B,MAAMsG,SADzB,WAGA,6BACA,kBAACC,GAAA,EAAD,CAAWlD,GAAI,eAAgBmD,MAAO,WAAYC,aAAc/E,KAAK1B,MAAM0G,YAE/E,kBAACC,GAAA,EAAD,KACI,kBAACtG,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYE,QAASiB,KAAK1B,MAAM4G,cAAlE,oBACA,kBAACvG,EAAA,EAAD,CAAQI,QAASiB,KAAK1B,MAAM6G,aAA5B,e,GAvBMzE,IAAMC,W,sQCLhC,IAgDeyE,G,wNAtCX,WAAY9G,GAAQ,uCACVA,G,qDAMN,OACI,kBAACyF,GAAA,EAAD,CAAQC,QAAShE,KAAKiE,YAAaC,UAAW,kBAAMC,SAASC,eAAe,kBAAkBxE,MAAO,CAACkB,SAAU,YAAauD,cAAe,CAAEzE,MAAO,CAAEkB,SAAU,aACzJwD,kBAAgB,0BAChBC,KAAMvE,KAAK1B,MAAMmF,KACjBe,SAAU,MAEd,kBAACC,GAAA,EAAD,CAAa9C,GAAG,0BAA0BqC,QAAShE,KAAKiE,aAAxD,cACA,kBAACS,GAAA,EAAD,CAAeC,UAAQ,GACnB,kBAACU,GAAA,EAAD,CAAYzG,QAAQ,SAApB,YACcoB,KAAK1B,MAAMsG,SADzB,4BAGA,6BACA,kBAACS,GAAA,EAAD,CAAYzG,QAAQ,SAApB,gBACkBoB,KAAK1B,MAAMgH,YAE7B,6BACA,kBAACD,GAAA,EAAD,CAAYzG,QAAQ,SAApB,gDAGA,8BAEJ,kBAACqG,GAAA,EAAD,KACI,kBAACtG,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUE,QAASiB,KAAK1B,MAAMiH,UAAhE,aACA,kBAAC5G,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYE,QAASiB,KAAK1B,MAAMkH,gBAAlE,eACA,kBAAC7G,EAAA,EAAD,CAAQI,QAASiB,KAAK1B,MAAM6G,aAA5B,e,GAjCiBzE,IAAMC,W,6PCX3C,IA2Ce8E,G,wNAjCX,WAAYnH,GAAQ,IAAD,8BACf,cAAMA,IAGVoH,sBAAwB,WACpB,EAAKpH,MAAM4G,aAAa,EAAK5G,MAAMqH,gBALpB,E,qDASf,OACI,kBAAC5B,GAAA,EAAD,CAAQC,QAAShE,KAAKiE,YAAaC,UAAW,kBAAMC,SAASC,eAAe,kBAAkBxE,MAAO,CAACkB,SAAU,YAAauD,cAAe,CAAEzE,MAAO,CAAEkB,SAAU,aACzJwD,kBAAgB,0BAChBC,KAAMvE,KAAK1B,MAAMmF,KACjBe,SAAU,MAEd,kBAACC,GAAA,EAAD,CAAa9C,GAAG,0BAA0BqC,QAAShE,KAAKiE,aAAxD,gCACA,kBAACS,GAAA,EAAD,CAAeC,UAAQ,GACnB,yCACc3E,KAAK1B,MAAMsG,SADzB,WAGA,6BACA,kBAACC,GAAA,EAAD,CAAWlD,GAAI,eAAgBmD,MAAO,WAAYC,aAAc/E,KAAK1B,MAAM0G,YAE/E,kBAACC,GAAA,EAAD,KACI,kBAACtG,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUE,QAASiB,KAAK1B,MAAMiH,UAAhE,aACA,kBAAC5G,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYE,QAASiB,KAAK0F,uBAA5D,oBACA,kBAAC/G,EAAA,EAAD,CAAQI,QAASiB,KAAK1B,MAAM6G,aAA5B,e,GA5BgBzE,IAAMC,W,6PCR1C,IAkCeiF,G,wNAxBX,WAAYtH,GAAQ,uCACVA,G,qDAIN,OACI,kBAACyF,GAAA,EAAD,CAAQC,QAAShE,KAAKiE,YACdK,kBAAgB,0BAChBC,KAAMvE,KAAK1B,MAAMmF,KACjBe,SAAU,MAEd,kBAACC,GAAA,EAAD,CAAa9C,GAAG,0BAA0BqC,QAAShE,KAAKiE,aAAxD,iBACA,kBAACS,GAAA,EAAD,CAAeC,UAAQ,GACnB,kBAACE,GAAA,EAAD,CAAWlD,GAAI,aAAcmD,MAAO,oBAExC,kBAACG,GAAA,EAAD,KACI,kBAACtG,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYE,QAASiB,KAAK1B,MAAMuH,cAAlE,iBACA,kBAAClH,EAAA,EAAD,CAAQI,QAASiB,KAAK1B,MAAM6G,aAA5B,e,GAnBSzE,IAAMC,W,oSCZnC,IA+BemF,G,wNAvBX,WAAYxH,GAAQ,IAAD,8BACf,cAAMA,IAGVC,YAAc,SAAAwH,GACV,EAAKzH,MAAMS,WALI,E,qDAUf,OACI,yBAAKa,MAlBN,CACHE,MAAO,SAkBC,kBAACkG,GAAA,EAAD,CACIC,MAAM,MACNC,QAAS,kBAACC,GAAA,EAAD,CAAQtH,MAAM,UAAUuH,SAAUpG,KAAKzB,cAChDuG,MAAM,kBACNuB,QAASrG,KAAK1B,MAAMgI,iC,GAlBX5F,IAAMC,W,iQCRd4F,G,kXAEjBC,MAAQ,CACAC,QAAS,EACTC,QAAS,G,EA0BjBC,MAAQ,WACJ,OAA2B,IAAvB,EAAKH,MAAMC,SAAwC,IAAvB,EAAKD,MAAME,QAC/B,2CAIJ,+CAAqB,EAAKF,MAAMC,QAAhC,IAA0C,EAAKD,MAAME,QAAU,GAArB,WAA8B,EAAKF,MAAME,SAAY,EAAKF,MAAME,U,kEA7BjG,IAAD,OAChB1G,KAAK4G,WAAaC,aAAY,WAAO,IAAD,EACH,EAAKL,MAA1BE,EADwB,EACxBA,QAASD,EADe,EACfA,QAEbC,EAAU,GACV,EAAKI,UAAS,kBAAkB,CAC5BJ,QADU,EAAGA,QACM,MAGX,IAAZA,IACgB,IAAZD,GACA,EAAKnI,MAAMyI,mBACXC,cAAc,EAAKJ,aAEnB,EAAKE,UAAS,kBAAkB,CAC5BL,QADU,EAAGA,QACM,EACnBC,QAAS,UAItB,O,6CAcHM,cAAchH,KAAK4G,c,+BAGb,IAAD,EACwB5G,KAAKwG,MAD7B,EACGC,QADH,EACYC,QACjB,OACI1G,KAAK2G,Y,GA/CkBhG,a,6PCUnC,IAgBMsG,GAAY,SAAChB,GACf,OAAOA,EAAQ,MA4HJiB,G,wNAtHX,WAAY5I,GAAQ,IAAD,8BACf,cAAMA,IAOViE,aAAe,SAAC4E,GACZ,MAAmB,QAAfA,EAEI,6BACI,kBAACxI,EAAA,EAAD,CAAQE,MAAM,YAAYD,QAAS,WAAYwI,WAAW,EAAMrI,QAAS,EAAKsI,wBAA9E,gBACA,kBAACrB,GAAA,EAAD,CACIC,MAAM,MACNC,QAAS,kBAACC,GAAA,EAAD,CAAQtH,MAAM,UAAUwH,QAAS,EAAK/H,MAAMkE,UAAW4D,SAAU,EAAK9H,MAAMgJ,kBACrFxC,MAAM,gBAMX,MAtBI,EA0BnBuC,uBAAyB,SAAAtB,GACrB,OAAO,EAAKzH,MAAMiJ,mBAAmB,iBA3BtB,EA8BnBC,gBAAkB,WACd,IAAIC,EAAQtD,SAASuD,cAAc,YACnCvD,SAASwD,KAAKC,YAAYH,GAC1BA,EAAMxB,MAAQ,UAAY4B,OAAOC,SAASC,KAAO,SAAW,EAAKvB,MAAMwB,IACvEP,EAAMQ,SACN9D,SAAS+D,YAAY,QACrB/D,SAASwD,KAAKQ,YAAYV,GAC1B,EAAKnJ,MAAM8J,kBACX,IAAIC,EAAS,gBACbA,EAAUvB,SAAS,CAACwB,eAAgB,gBACpCC,YAAW,WACPF,EAAUvB,SAAS,CAACwB,eAAgB,uBACrC,OA1CY,EA6CnBE,sBAAwB,SAACzC,EAAME,GAC3B9B,SAASsE,uBAAuB,mBAAmB,GAAGC,OACtD,IAAI7H,EAAY8H,SAAS1C,GACI,QAAzBpF,EAAU+H,WACV/H,EAAY,GACLA,EAAY,GACnBA,EAAY,GACLA,EAAY,IACnBA,EAAY,GAEhB,EAAKvC,MAAMuK,iBAAiBhI,IAvDb,EA0DnBiI,eAAiB,WACb,MAA8B,QAA1B,EAAKxK,MAAM6I,YAAoD,QAA5B,EAAK7I,MAAMyK,cAAkD,QAAxB,EAAKzK,MAAM0K,UAA6D,QAAvC,EAAK1K,MAAM2K,yBAAqE,QAAhC,EAAK3K,MAAM4K,iBAC7J,KAIE,yBAAKtJ,MAAO,CAACuJ,cAAe,SACxB,kBAACxK,EAAA,EAAD,CAAQyI,WAAW,EAAMxI,QAAQ,YAAYC,MAAM,YAAYe,MAAO,CAACwJ,YAAa,QAC5ErK,QAAS,EAAKyI,iBAAkB,EAAKhB,MAAM8B,kBAhEpE,EAAK9B,MAAQ,CACG8B,eAAgB,oBAEhC,EAAK9B,MAAMwB,IAAsC,QAAhC,EAAK1J,MAAM4K,iBAA6B,iBAAmB,EAAK5K,MAAM0J,IALxE,E,qDAyEd,OACI,yBAAKpI,MAhGP,CACHwJ,YAAa,OACbC,UAAW,OACXC,aAAc,OACdpG,QAAS,IA6FAlD,KAAK8I,iBACL,kBAACS,EAAA,EAAD,MACA,kBAAClE,GAAA,EAAD,CACIxG,MAAM,gBACNkB,QAAQ,QACRnB,QAAQ,UACRgB,MAAO,CAACuJ,cAAe,SAJ3B,iBAQA,kBAACK,EAAA,EAAD,CAAapC,WAAW,EAAMvI,MAAM,YAAYC,aAAW,kCACvD,kBAACH,EAAA,EAAD,CAAQI,QAASiB,KAAK1B,MAAM6G,aAA5B,SACA,kBAACxG,EAAA,EAAD,CAAQI,QAASiB,KAAK1B,MAAMiH,UAA5B,SAEHvF,KAAKuC,aAAavC,KAAK1B,MAAM6I,YAC9B,kBAACoC,EAAA,EAAD,MACA,kBAAC,GAAD,CAAgBjD,0BAA2BtG,KAAK1B,MAAMgI,0BAA2BvH,QAASiB,KAAK1B,MAAMmL,uBACrG,yBAAK7J,MAzGX,CACHG,QAAS,cACTF,MAAO,UAwGM,kBAACwF,GAAA,EAAD,CAAY1D,GAAG,8BACH9C,MAAM,gBACNkB,QAAQ,SACR2J,cAAY,GAHxB,iBAMA,kBAACC,GAAA,EAAD,CACIC,kBAAmB5J,KAAKwI,sBACxBqB,iBAAkB5C,GAClB3C,kBAAgB,8BAChBwF,KAAM,EACNC,OAAK,EACLC,IAAK,EACLC,IAAK,GACLlF,aAAc/E,KAAK1B,MAAM4L,gBACzBC,kBAAkB,OAClBxI,GAAG,mBAGX,kBAAC4H,EAAA,EAAD,W,GAlHS7I,IAAMC,W,oBCWjB,mBAAEyJ,EAAF,EAAEA,WAAF,OACX,kBAACC,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI3K,MAtCZ,CACH4K,WAAY,OACZ1K,MAAO,SAsCHsK,EAAWjK,KAAI,SAAAsK,GAAS,OA5Bb,SAAAA,GACnB,OACY,kBAACC,GAAA,EAAD,CAAO9K,MAPZ,CACH0J,aAAc,QAMqBqB,UAAW,GAClC,kBAACN,GAAA,EAAD,CAAMnG,WAAS,EAAC0G,QAAS,GACrB,kBAACP,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAAClF,GAAA,EAAD,CAAYxG,MAAO,UAAWe,MAAO,CAACE,MAAO,SACxC2K,EAAUI,UAGnB,kBAACR,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACc,GAApBE,EAAUK,OAAc,kBAAC,KAAD,MAAgB,MAEjD,kBAACT,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACf,kBAAClF,GAAA,EAAD,CAAYxG,MAAO,iBAAkB4L,EAAU7F,WAE/C,kBAACyF,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACf,kBAAClF,GAAA,EAAD,CAAYxG,MAAO,YAAaD,QAAS,SAAU6L,EAAUM,YAarEC,CAAeP,Q,SCZzBO,GAAiB,SAAAP,GACnB,OAAQ,kBAACJ,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACG,GAAA,EAAD,CAAOC,UAAW,GACd,kBAACN,GAAA,EAAD,CAAMnG,WAAS,EAAC0G,QAAS,GACrB,kBAACP,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAAClF,GAAA,EAAD,CAAYxG,MAAO,UAAWe,MAAO,CAACE,MAAO,SACxC2K,EAAUzL,OAGnB,kBAACqL,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACY,GAAlBE,EAAUQ,MAA+B,MAAlBR,EAAUQ,KAAe,KAvB5D,SAAAR,GACjB,IACIS,EADAC,EAAS,GAEb,IAAKD,EAAE,EAAGA,EAAET,EAAUQ,KAAKC,IACvBC,EAAOC,KAAK,kBAAC,KAAD,OAEhB,OACI,6BACKD,GAe2EE,CAAaZ,GAC/C,GAArBA,EAAUa,QAAe,kBAAC,KAAD,MAAgB,MAElD,kBAACjB,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACf,kBAAClF,GAAA,EAAD,CAAYxG,MAAO,iBAAkB4L,EAAUc,QAE/C,kBAAClB,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACf,kBAAClF,GAAA,EAAD,CAAYxG,MAAO,YAAaD,QAAS,SAAU6L,EAAUe,gBAUtE,mBAAEpB,EAAF,EAAEA,WAAF,OACX,kBAACC,GAAA,EAAD,CAAMzK,MAvDC,CACHyJ,UAAW,QAsDYnF,WAAS,EAACuH,UAAW,SAAUb,QAAS,GAEvDR,EAAWjK,KAAI,SAAAsK,GAAS,OACpBO,GAAeP,Q,+RCsBpBiB,G,wNAxEX,WAAYpN,GAAQ,IAAD,8BACf,cAAMA,IAGV2F,YAAc,WACV,EAAK3F,MAAMmF,MAAO,GALH,E,qDASf,OACI,kBAACM,GAAA,EAAD,CAAQC,QAAShE,KAAKiE,YACdK,kBAAgB,4BAChBC,KAAMvE,KAAK1B,MAAMmF,KACjBe,SAAU,KACV4C,WAAW,GAEf,kBAAC3C,GAAA,EAAD,CAAa9C,GAAG,4BAA4BqC,QAAShE,KAAKiE,aAA1D,iBAAsFjE,KAAK1B,MAAMqN,YACjG,kBAACjH,GAAA,EAAD,CAAeC,UAAQ,GACjB,kBAAC0F,GAAA,EAAD,CAAMnG,WAAS,EAAC0G,QAAS,GACvB,kBAACP,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIqB,GAAI,GACrB,kBAACvG,GAAA,EAAD,CAAYzG,QAAQ,MAApB,cAGA,6BACE,kBAACiN,GAAA,EAAD,CAAMC,OAAO,GAET,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,QAAQ,8BACRC,UAAWlM,KAAK1B,MAAM6N,uBAG1B,kBAACJ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,QAAQ,0BACRC,UAAWlM,KAAK1B,MAAM8N,eAG1B,kBAACL,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,QAAQ,2BACRC,UAAWlM,KAAK1B,MAAM+N,gBAG1B,kBAACN,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,QAAQ,wCACRC,UAAWlM,KAAK1B,MAAMgO,qBAG1B,kBAACP,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,QAAQ,mBACRC,UAAWlM,KAAK1B,MAAMiO,uBAQ1C,kBAACtH,GAAA,EAAD,KACI,kBAACtG,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYE,QAASiB,KAAK1B,MAAMkO,qBAAlE,eACA,kBAAC7N,EAAA,EAAD,CAAQI,QAASiB,KAAK1B,MAAMmO,YAA5B,e,GAjEa/L,IAAMC,W,6PCUvC,IAmDe+L,G,wNAzCX,WAAYpO,GAAQ,IAAD,8BACf,cAAMA,IAMVqO,eAAiB,WACb,EAAKrO,MAAMsO,0BACX,EAAK9F,SAAS,CACV+F,QAAS,EAAKvO,MAAMwO,sBARxB,EAAKtG,MAAQ,CACTqG,QAAS,MAHE,E,qDAef,OACI,kBAAC9I,GAAA,EAAD,CAAQC,QAAShE,KAAKiE,YAAaC,UAAW,kBAAMC,SAASC,eAAe,kBAAkBxE,MAAO,CAACkB,SAAU,YAAauD,cAAe,CAAEzE,MAAO,CAAEkB,SAAU,aACzJwD,kBAAgB,0BAChBC,KAAMvE,KAAK1B,MAAMmF,KACjBe,SAAU,MAEd,kBAACC,GAAA,EAAD,CAAa9C,GAAG,iCAAiCqC,QAAShE,KAAKiE,aAA/D,YACA,kBAACS,GAAA,EAAD,CAAeC,UAAQ,GACnB,yCACc3E,KAAK1B,MAAMsG,SADzB,WAGA,6BACA,uDAC4B5E,KAAK1B,MAAMyO,aAEtC/M,KAAKwG,MAAMqG,SAEhB,kBAAC5H,GAAA,EAAD,KACI,kBAACtG,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYE,QAASiB,KAAK2M,gBAA5D,uBACA,kBAAChO,EAAA,EAAD,CAAQI,QAASiB,KAAK1B,MAAM6G,aAA5B,e,GApCezE,IAAMC,W,yCC9B1B,SAASqM,GAAqB1O,GAIzC,OAAQ,kBAAC,KAAD,CAAW0E,YAHC,WAChB1E,EAAM2F,YAAY3F,EAAMG,UCQjB,SAASwO,GAAgB3O,GACpC,OACQ,kBAACuN,GAAA,EAAD,KAEMvN,EAAM4O,SAAS/M,KAAI,SAACgN,EAAK1O,GAAN,OACjB,kBAACsN,GAAA,EAAD,KACE,6BACGoB,GAEH,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYC,KAAK,MAAMxO,aAAW,UAChC,kBAACkO,GAAD,CAAsBvO,MAAOA,EAAOwF,YAAa3F,EAAMiP,6B,6PCfjF,IAsCeC,G,wNA5BX,WAAYlP,GAAQ,uCACVA,G,qDAIN,OACI,kBAACyF,GAAA,EAAD,CAAQC,QAAShE,KAAKiE,YAAaC,UAAW,kBAAMC,SAASC,eAAe,kBAAkBxE,MAAO,CAACkB,SAAU,YAAauD,cAAe,CAAEzE,MAAO,CAAEkB,SAAU,aACzJwD,kBAAgB,0BAChBC,KAAMvE,KAAK1B,MAAMmF,KACjBe,SAAU,MAEd,kBAACC,GAAA,EAAD,CAAa9C,GAAG,0BAA0BqC,QAAShE,KAAKiE,aAAxD,YACA,kBAACS,GAAA,EAAD,CAAeC,UAAQ,GACnB,yCACc3E,KAAK1B,MAAMsG,SADzB,WAGA,6BACA,kBAACS,GAAA,EAAD,6DAGJ,kBAACJ,GAAA,EAAD,KACI,kBAACtG,EAAA,EAAD,CAAQI,QAASiB,KAAK1B,MAAM6G,aAA5B,e,GAvBYzE,IAAMC,W,8BCThC8M,GAAYC,aAAW,CAC3BC,KAAM,CACJC,SAAU,KAEZC,OAAQ,CACN9N,QAAS,eACTyB,OAAQ,QACRsM,UAAW,cAEbC,MAAO,CACLC,SAAU,IAEZC,IAAK,CACH3E,aAAc,MAIH,SAAS4E,GAA6B5P,GACnD,IAAM6P,EAAUV,KACcU,EAAQN,OAEtC,OACE,kBAACO,GAAA,EAAD,CAAMC,UAAWF,EAAQR,KAAM/O,QAAQ,YACrC,kBAAC0P,GAAA,EAAD,KACE,kBAACjJ,GAAA,EAAD,CAAYgJ,UAAWF,EAAQJ,MAAOlP,MAAM,gBAAgB6K,cAAY,GACrEpL,EAAMU,MAET,kBAACqG,GAAA,EAAD,CAAYzF,MAAO,CAAC0J,aAAc,QAAS1K,QAAQ,KAAK2P,UAAU,MAC/DjQ,EAAMkQ,WAET,kBAACnJ,GAAA,EAAD,CAAYzG,QAAQ,QAAQ2P,UAAU,KACnCjQ,EAAMmQ,eACP,6BACCnQ,EAAMoQ,aACP,gC,6PCrCV,IAoCeC,G,wNA3BX,WAAYrQ,GAAQ,uCACVA,G,qDAIN,OACI,6BACI,kBAAC+G,GAAA,EAAD,CAAYzF,MAfjB,CACHyJ,UAAW,OACXC,aAAc,QAa2B1K,QAAQ,MAAzC,IAAgDoB,KAAK1B,MAAMsQ,oBAA3D,KACA,kBAAC,GAAD,CACI5P,KAAM,YACNwP,UAAWxO,KAAK1B,MAAMkQ,UACtBC,eAAgBzO,KAAK1B,MAAMuQ,qBAC3BH,aAAc1O,KAAK1B,MAAMwO,qBAE7B,kBAAC,GAAD,CACI9N,KAAMgB,KAAK1B,MAAMwQ,cACjBN,UAAWxO,KAAK1B,MAAMyQ,eACtBN,eAAgB,KAChBC,aAAc,kBAAC,EAAD,CACMzO,YAAaD,KAAK1B,MAAM0Q,oBAAqB1O,YAAa,CAAC,CAACE,eAAgB,QAAQ,CAACA,eAAgB,SAAS,CAACA,eAAgB,OAAO,CAACA,eAAgB,oB,GArBvJE,IAAMC,WCCxCsO,GAAyB,SAACC,EAAmBC,EAAgBC,EAASvP,EAAMmB,GAC9E,IAAIqO,EAASF,EAAgBhO,KACzBmO,EAASH,EAAgBjO,IACzBqO,GAAc,EAClBL,EAAmB/O,KAAI,SAAAqP,GACfA,EAAKtO,KAAOoO,GAAUE,EAAKrO,MAAQkO,EAAO,GAAqB,GAAhBG,EAAKtM,UACpDqM,GAAc,MAItB,IAAIE,EAAgBL,EAASlO,KAAOoO,GAAUF,EAASjO,MAASkO,EAAO,GAA0B,GAApBD,EAASlM,QAOtF,QAASqM,GAAeE,IAOtBC,GAAkB,SAACC,EAAkBC,EAAiBC,EAAchQ,EAAMmB,GAC5E,IAAIqO,EAASO,EAAiBzO,KAC1BmO,EAASM,EAAiB1O,IAC1BqO,GAAc,EAClBM,EAAc1P,KAAI,SAAAqP,GACVA,EAAKtO,KAAOoO,EAAO,GAAKE,EAAKrO,MAAQkO,GAA0B,GAAhBG,EAAKtM,UACpDqM,GAAc,MAGtB,IAAIO,GAAmB,EACnBC,GAAoB,EASxB,OARAJ,EAAiBxP,KAAI,SAAAqP,GACbA,EAAKtO,KAAOoO,EAAO,GAAME,EAAKrO,MAAQkO,GAA2B,GAAhBG,EAAKtM,UACtD4M,GAAmB,GAEnBN,EAAKtO,KAAOoO,EAAO,GAAME,EAAKrO,MAAQkO,EAAO,GAAsB,GAAhBG,EAAKtM,UACxD6M,GAAoB,QAGlBR,IAAgBO,GAAoBC,IAAwBD,GAAoBC,IAIxFC,GAAsB,SAACC,EAAmBpQ,EAAMmB,GAClD,IACIkP,EAAEC,EADFC,EAAW,EAEf,GACIA,EAAW,EACXF,EAAIG,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMtP,IAC1CmP,EAAIE,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMzQ,IAC1CoQ,EAAmB9P,KAAI,SAAAW,GACfoP,GAAKpP,EAASI,KAAOiP,GAAKrP,EAASK,OACnCiP,EAAW,YAGF,GAAZA,GACT,MAAO,CAAClP,IAAKgP,EAAE/O,KAAMgP,IAGV,YAACtQ,EAAMmB,EAAOwP,EAAcC,GACvC,IAAIC,EAAa,GACbC,EAAe,CAAC,CAACzP,IAAK,EAAGC,KAAM,IAC/ByP,EAAiB,GACjBtQ,EAAc,GAClB,GAAa,UAATmQ,EACA,IAAII,EAAO,CAAC3P,IAAKF,EAAO,EAAGG,KAAMtB,EAAM,GACnCiR,EAAa,CAAC5P,IAAK,EAAEC,KAAM,EAAGtC,MzBrEhB,UyBqEmC2B,eAAgB,QACjEuQ,EAAa,CAAC7P,IAAK,EAAEC,KAAM,EAAGtC,MzBvEf,UyBuEmC2B,eAAgB,SAClEwQ,EAAa,CAAC9P,IAAK,EAAEC,KAAM,EAAGtC,MzBrEjB,UyBqEmC2B,eAAgB,OAChEyQ,EAAa,CAAC/P,IAAK,EAAEC,KAAM,EAAGtC,MzBvEd,UyBuEmC2B,eAAe,cAErE,CAGD,IAFA,IACI0Q,EAAkB,CADlBL,EAAO,CAAC3P,IAAImP,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMtP,IAAUG,KAAKkP,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMzQ,MAElGqL,EAAE,EAAEA,EAAE,EAAEA,IACbgG,EAAgB9F,KAAK4E,GAAoBkB,EAAgBrR,EAAMmB,IAE/D8P,EAAaK,GAAOD,EAAgB,GAAG,CAACrS,MzBhF1B,UyBgF6C2B,eAAgB,SAC3EuQ,EAAaI,GAAOD,EAAgB,GAAG,CAACrS,MzBlFzB,UyBkF6C2B,eAAgB,UAC5EwQ,EAAaG,GAAOD,EAAgB,GAAG,CAACrS,MzBhF3B,UyBgF6C2B,eAAgB,QAC1EyQ,EAAaE,GAAOD,EAAgB,GAAG,CAACrS,MzBlFxB,UyBkF6C2B,eAAe,WAEpFF,EAAY8K,KAAK0F,GACjBxQ,EAAY8K,KAAK2F,GACjBzQ,EAAY8K,KAAK4F,GACjB1Q,EAAY8K,KAAK6F,GACjB,IAAS/F,EAAE,EAAEA,EAAErL,EAAMqL,GAAG,EACpB,IAAK,IAAIkG,EAAE,EAAEA,EAAEpQ,EAAOoQ,GAAG,EACrBV,EAAWtF,KAAK,CAAClK,IAAKkQ,EAAEjQ,KAAM+J,IAGtC,IAASkG,EAAE,EAAEA,EAAEpQ,EAAOoQ,GAAG,EACrB,IAASlG,EAAE,EAAEA,EAAErL,EAAMqL,GAAG,EAChBA,EAAI,EACJyF,EAAavF,KAAK,CAAClK,IAAKkQ,EAAGjQ,KAAM+J,EAAGhI,QAAS,IAExCgI,GAAIrL,EAAM,GACf8Q,EAAavF,KAAK,CAAClK,IAAKkQ,EAAGjQ,KAAM+J,EAAE,EAAGhI,QAAS,IAE/CkO,EAAI,EACJR,EAAexF,KAAK,CAAClK,IAAKkQ,EAAEjQ,KAAM+J,EAAGhI,QAAS,IAEzCkO,GAAMpQ,EAAO,GAClB4P,EAAexF,KAAK,CAAClK,IAAKkQ,EAAE,EAAGjQ,KAAM+J,EAAGhI,QAAS,IAI7D,IAASkO,EAAE,EAAEA,EAAEpQ,EAAOoQ,GAAG,EACrB,IAASlG,EAAE,EAAEA,EAAErL,EAAMqL,GAAG,EAChBA,EAAI,GAAKA,GAAMrL,EAAM,GAAMwQ,KAAKE,SAAWC,GAAiBvB,GAAuB2B,EAAgB,CAAC1P,IAAKkQ,EAAGjQ,KAAM+J,GAAIyF,EAAaA,EAAazQ,OAAQ,IACxJyQ,EAAavF,KAAK,CAAClK,IAAKkQ,EAAEjQ,KAAM+J,EAAEhI,QAAS,IAG3CyN,EAAavF,KAAK,CAAClK,IAAKkQ,EAAEjQ,KAAM+J,EAAGhI,QAAS,IAE5CkO,EAAI,GAAKA,GAAMpQ,EAAO,GAAMqP,KAAKE,SAAWC,GAAiBd,GAAgBiB,EAAa,CAACzP,IAAKkQ,EAAEjQ,KAAK+J,GAAI0F,GAC3GA,EAAexF,KAAK,CAAClK,IAAKkQ,EAAEjQ,KAAM+J,EAAGhI,QAAS,IAG9C0N,EAAexF,KAAK,CAAClK,IAAKkQ,EAAEjQ,KAAM+J,EAAGhI,QAAS,IAI1D,MAAO,CACH5C,YAAaA,EACb+Q,SAAS,EACTX,WAAYA,EACZE,eAAgBA,EAChBD,aAAcA,EACdE,KAAMA,EACNS,YAAahR,EAAYiR,U,uQC3IjC,IAoGeC,G,wNAhFX,WAAYlT,GAAQ,IAAD,8BACf,cAAMA,IAGVmT,mBAAqB,SAAA1L,GACjBA,EAAM2L,iBACN,IAAI7R,EAAQ8I,SAASxE,SAASC,eAAe,mBAAmB6B,OAC5DjF,EAAS2H,SAASxE,SAASC,eAAe,oBAAoB6B,OAC9D0L,EAAUhJ,SAASxE,SAASC,eAAe,sBAAsB6B,OAE5C,QAArBpG,EAAM+I,WACN/I,EAAQ,GACDA,EAAQ,GACfA,EAAQ,GACDA,EAAQ,IACfA,EAAQ,GAGc,QAAtBmB,EAAO4H,WACP5H,EAAS,GACoB,QAAtBA,EAAO4H,YAAwB5H,EAAS,GAC/CA,EAAS,GACFA,EAAS,IAChBA,EAAS,GAGc,QAAvB2Q,EAAQ/I,WACR+I,EAAU,GACHA,EAAU,EACjBA,EAAU,EACHA,EAAU,MACjBA,EAAU,KAId,EAAKrT,MAAMsT,YACP/R,EACAmB,GACC,IAAM2Q,GAAS,MAtCL,EAyCnB1N,YAAc,WACV,EAAK3F,MAAMmF,MAAO,GA1CH,E,qDA8Cf,OACI,kBAACM,GAAA,EAAD,CAAQC,QAAShE,KAAKiE,YACdK,kBAAgB,0BAChBC,KAAMvE,KAAK1B,MAAMmF,KACjBe,SAAU,KACV4C,WAAW,GAEf,kBAAC3C,GAAA,EAAD,CAAa9C,GAAG,0BAA0BqC,QAAShE,KAAKiE,aAAxD,yBACA,kBAACS,GAAA,EAAD,CAAeC,UAAQ,GACnB,6BACI,2BAAO/E,MAnEpB,CACHG,QAAS,eACT8R,UAAW,QACXhS,MAAO,QACPiS,aAAc,SA+DgC,oBAC9B,kBAACC,GAAA,EAAD,CAAOpQ,GAAI,kBAAmBqQ,WAAY,CAAC/H,IAAK,KAAMD,IAAK,IAAK+D,MAAM,iBAAkB0C,KAAM,SAAUwB,YAAa,UAEzH,6BACI,2BAAOrS,MAvEpB,CACHG,QAAS,eACT8R,UAAW,QACXhS,MAAO,QACPiS,aAAc,SAmE+B,qBAC7B,kBAACC,GAAA,EAAD,CAAOpQ,GAAI,mBAAoBqQ,WAAY,CAAC/H,IAAK,KAAMD,IAAK,IAAK+D,MAAM,iBAAkB0C,KAAM,SAAUwB,YAAa,UAE1H,6BACI,2BAAOrS,MA3EpB,CACHG,QAAS,eACT8R,UAAW,QACXhS,MAAO,QACPiS,aAAc,SAuE+B,sBAC7B,kBAACC,GAAA,EAAD,CAAOpQ,GAAI,qBAAsBqQ,WAAY,CAAC/H,IAAK,MAAOD,IAAK,IAAK+D,MAAM,kBAAmB0C,KAAM,SAAUwB,YAAa,aAGlI,kBAAChN,GAAA,EAAD,KACI,kBAACtG,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYE,QAASiB,KAAKyR,oBAA5D,oBACA,kBAAC9S,EAAA,EAAD,CAAQI,QAASiB,KAAK1B,MAAMmO,YAA5B,e,GAxEU/L,IAAMC,W,6PCuBpCkH,OAAOqK,iBAAiB,WAAW,SAAS7P,GAExB,IAAbA,EAAE8P,SAAiB9P,EAAE+P,QAAUjO,SAASwD,MAC3CtF,EAAEqP,iBAEC,CAAC,GAAI,GAAI,GAAI,GAAI,EAAE,IAAIW,QAAQhQ,EAAE8P,UAAY,GAC5C9P,EAAEqP,oBAEP,GAGH,IAsBMY,GAA8B,SAACC,GACjC,IAAIC,EAAS,GA8Bb,OA7BAD,EAAMpS,KAAI,SAAAC,GACN,IAAIvB,EAAQuB,EAAKqS,OAAO,GACpBhH,EAAYrL,EAAKqS,OAAO,GAExB5T,EADS,KAATA,EACQ,OAEM,KAATA,EACG,MAEM,KAATA,EACG,SAGA,QAGR4M,EADa,KAAbA,EACYxM,EAEM,KAAbwM,E3BrGG,O2BwGU,KAAbA,E3BtGI,QADD,O2B6GZ+G,EAAOpH,KAAK,yBAAK/K,IAAKlB,EAAqBN,GAAO4M,SAE/C+G,GAILE,GAAuB,SAACC,EAAWC,GACrC,IAAMC,EAAuD,MAAzC1O,SAASC,eAAe,cAAwB,IAAMuE,SAASmK,iBAAiB3O,SAASC,eAAe,eAAevE,OACrIkT,EAAclL,OAAOmL,WAEvBC,EADiBpL,OAAOqL,YACK,IAEjCD,GAA4BL,EAC5BK,EAActK,SAASsK,GACvBA,GAA6BA,EAAc,EAE3C,IAAIE,EAAaJ,E3BxHoB,M2BwHuBA,EAAc,IAAMA,EAAcF,GAAe,KAC7GM,GAAsBR,EACtBQ,EAAWxK,SAASwK,GAEpB,IAAIC,GADJD,GAAuBA,EAAW,GACLF,EAAcA,EAAcE,EAOzD,OANIC,EAAc,GACdA,EAAc,GAETA,EAAc,KACnBA,EAAc,IAEXA,GAGLC,GAAwB,C3B3IV,OACC,Q2B0IqBpU,E3B5ItB,Q2B+IdqU,G,wNAEF,WAAYhV,GAAQ,IAAD,EAEf,GAFe,qBACf,cAAMA,IAwJViV,iBAAmB,WACfC,IAAMC,IAAI,yBAA2B,EAAKjN,MAAMwB,KAC3C0L,MAAM,SAAAC,GACH,IAAMC,EAAiBC,KAAKC,MAAMH,EAAII,KAAK3J,YACvC,EAAK4J,oBAAoB,EAAKxN,MAAM4D,WAAWwJ,IAC/C,EAAK9M,SAAS,CACVsD,WAAYyJ,KAAKC,MAAMH,EAAII,KAAK3J,kBA/JjC,EAqKnBvB,iBAAmB,SAAChI,GAChB,EAAKiG,SAAS,CACVmN,WAAwB,EAAZpT,KAvKD,EA2KnBuH,gBAAkB,WACd,EAAKtB,SAAS,CACVoN,mBAAmB,KA7KR,EAmLnBF,oBAAsB,SAACG,EAAMC,GACzB,GAAID,EAAMjU,QAAUkU,EAAQlU,OACxB,OAAO,EAEX,IAAImU,GAAW,EAMf,OALAD,EAAQjU,KAAI,SAACsK,EAAUhM,GACfgM,EAAU7F,UAAYuP,EAAM1V,GAAOmG,WACnCyP,GAAW,MAGZA,GA7LQ,EAiMnBC,kBAAoB,SAACH,EAAMC,GACvB,GAAID,EAAMjU,QAAUkU,EAAQlU,OACxB,OAAO,EAEX,IAAImU,GAAW,EAMf,OALAD,EAAQjU,KAAI,SAACsK,EAAUhM,GACfgM,EAAUc,OAAS4I,EAAM1V,GAAO8M,QAChC8I,GAAW,MAGZA,GA3MQ,EA8MnBE,sBAAwB,WACpBf,IAAMC,IAAI,mCAAqC,EAAKjN,MAAMgO,OACrDd,MAAM,SAAAC,GACH,GAAIA,EAAII,KAAKS,OAAS,EAAKhO,MAAMgO,MAAjC,CAIA,IAAMZ,EAAiBC,KAAKC,MAAMH,EAAII,KAAK3J,YACvC,EAAKkK,kBAAkB,EAAK9N,MAAM4D,WAAWwJ,KAC7C,EAAK9M,SAAS,CACVsD,WAAYyJ,KAAKC,MAAMH,EAAII,KAAK3J,cAEpCvC,OAAO4M,aAAeZ,KAAKC,MAAMH,EAAII,KAAK3J,kBAR1C,EAAK9L,MAAMoW,gCAlNR,EA+NnBC,kBAAoB,WAEhB,GADA9M,OAAO+M,UAAY,EAAKC,cACM,QAA1B,EAAKvW,MAAMwW,WAAsB,CACjC,EAAKvB,mBACL,IAAIwB,EAAalO,YAAY,EAAK0M,iBAAkB,KACpD,EAAKzM,SAAS,CACViO,WAAYA,SAGf,GAAsC,QAAlC,EAAKzW,MAAM0W,mBAA8B,CAC9C,EAAKT,wBACDQ,EAAalO,YAAY,EAAK0N,sBAAuB,KACzD,EAAKzN,SAAS,CACViO,WAAYA,MA5OL,EAiPnBE,qBAAuB,YACW,QAA1B,EAAK3W,MAAMwW,YAG4B,QAAlC,EAAKxW,MAAM0W,qBAFhBhO,cAAc,EAAKR,MAAMuO,aAnPd,EA0PnBF,cAAgB,SAACxS,GACb,IAAI6S,EACJ,OAAO7S,EAAE8P,SACL,KAAK,GACD+C,EAAe,CAAEhU,IAAK,EAAGC,MAAO,GAAIV,I3B9YhC,Q2B+YJ,MACJ,KAAK,GACDyU,EAAe,CAAEhU,KAAM,GAAIC,KAAM,EAAGV,IAAKxB,GACzC,MACJ,KAAK,GACDiW,EAAe,CAAEhU,IAAK,EAAGC,KAAM,GAAIV,I3BnZ9B,S2BoZL,MACJ,KAAK,GACDyU,EAAe,CAAEhU,IAAK,GAAIC,KAAM,EAAGV,I3BxZ/B,Q2ByZJ,MACJ,KAAK,EAED,YADA,EAAK0U,cAGT,KAAK,GACI,EAAK3O,MAAM6K,SACZ,EAAK+D,iBAET,MAEJ,KAAK,GACI,EAAK5O,MAAM6K,SACZ,EAAKlM,cAWb,QACI,OAER,EAAKkQ,qBAAqBH,IAnSX,EAsSnBI,YAAc,SAACpK,GACX,EAAKpE,SAAS,CACVyO,cAAerK,KAxSJ,EA4SnBrF,aAAe,SAAAE,GACXA,EAAM2L,iBACN,IAAI8D,EAAarR,SAASC,eAAe,cAAc6B,MACnDO,EAAQ,EAAKA,MACjBA,EAAMlG,YAAc,EAAKkG,MAAM8K,YAAYC,QAC3C/K,EAAMvG,YAAc,GACpBuG,EAAMW,WAAa,KACnB,IAAInC,EAAW,YACS,OAApB6C,OAAO4N,WACPzQ,EAAW6C,OAAO4N,SAASzQ,UAE/B0Q,QAAQC,IAAInP,GACZgN,IAAMoC,KAAK,gBAAiBzE,GAAO,CAAC0E,WAAYrP,GAAO,CAACxH,KAAMwW,EAAWM,WAAY9Q,KAChF0O,MAAM,SAAAC,GACH,EAAK7M,SAAS,CACVkB,IAAK2L,EAAII,KAAK/L,IACdqJ,SAAS,IAEb,EAAK/S,MAAMyX,QAAQ3K,KAAK,SAAWuI,EAAII,KAAK/L,SA9TrC,EAkUnByB,qBAAuB,YAC0B,IAAzC,EAAKjD,MAAMF,2BACX,EAAKQ,SAAS,CACVR,2BAA2B,IAE/B,EAAKhI,MAAM0X,sBAAqB,KAGhC,EAAKlP,SAAS,CACVR,2BAA2B,IAE/B,EAAKhI,MAAM0X,sBAAqB,KA7UrB,EAiVnB1O,gBAAkB,WACV,EAAKd,MAAMhE,UACX,EAAKsE,SAAS,CACVtE,WAAW,EACXlC,YAAa,EAAKkG,MAAM8K,YAAYC,QACpCtR,YAAa,KAIjB,EAAK6G,SAAS,CACVxG,YAAa,EAAKkG,MAAM8K,YAAYC,QACpCtR,YAAa,GACbuC,WAAW,KA7VJ,EAkWnB0C,aAAe,SAAAa,GACXA,EAAM2L,iBACN8B,IAAMoC,KAAK,mBAAoB,CAACnL,UAAW,EAAKjE,MAAMvG,YAAYC,OAAQlB,KAAMmF,SAASC,eAAe,gBAAgB6B,MAAO+B,IAAK,EAAKxB,MAAMwB,MAC1I0L,MAAM,SAAAC,GACH,EAAK7M,SAAS,CAACuK,SAAS,OAEhC,EAAKlM,eAxWU,EA2WnBA,YAAc,SAAAY,GACW,qBAAVA,GACPA,EAAM2L,iBAEV,EAAK5K,SAAS,CACVxG,YAAa,EAAKkG,MAAM8K,YAAYC,QACpCtR,YAAa,GACboR,SAAS,KAlXE,EAsXnB8D,YAAc,WACV,IAA2B,IAAvB,EAAK3O,MAAM6K,QAAmB,CAC9B,IAAIkE,EAAgB,EAAK/O,MAAM+O,cAAgB,EAC/CA,GAAgC,EAChC,EAAKzO,SAAS,CACVyO,cAAeA,MA3XR,EAgYnBhO,mBAAqB,SAACkJ,GACL,iBAATA,GACA,EAAK3J,SAAS,CACVmP,0BAA0B,KAnYnB,EAwYnBC,sBAAwB,SAAAnQ,GACpB,EAAKe,SAAS,CACVoP,uBAAuB,EACvB5V,YAAa,EAAKkG,MAAM8K,YAAYC,QACpCtR,YAAa,GACboR,SAAS,KA7YE,EAiZnB8E,sBAAwB,SAAApQ,GACpB,EAAKe,SAAS,CACVmP,0BAA0B,KAnZf,EAuZnBG,6BAA+B,SAAArQ,GAC3B,EAAKe,SAAS,CACVuP,6BAA6B,KAzZlB,EA8ZnBzE,YAAc,SAAC/R,EAAMmB,EAAO2Q,GACxB,IAAI2E,EAAQC,GAAe1W,EAAMmB,EAAO2Q,EAAS,SAC7CsC,EAAavB,GAAqB7S,EAAMmB,GAC5C,EAAK8F,SAASqK,GAAO,CACjBtR,MAAOA,EACPmB,OAAQA,EACR2Q,QAASA,EACTsC,WAAYA,GACdqC,IACF,EAAKH,yBAvaU,EA0anBxJ,eAAiB,WACb,EAAK7F,SAAS,CACVxG,YAAa,EAAKkG,MAAM8K,YAAYC,QACpCtR,YAAa,GACboR,SAAS,EACT1E,gBAAgB,KA/aL,EAmbnB6J,gBAAkB,SAACC,EAAOlB,EAAc1W,GACpC,IAAI6X,EACAC,EAAS,EAAKnQ,MAAMlG,YAAYiV,GAAepU,KAC/CyV,EAAS,EAAKpQ,MAAMlG,YAAYiV,GAAerU,IACnD,OAAOuV,EAAOhW,KACV,KAAKxB,EACD,IAAI4X,EAAc,EAClB,EAAKrQ,MAAMoK,eAAezQ,KAAI,SAAAqP,GAEtBA,EAAKrO,OAASwV,GAAUnH,EAAKtO,KAAO0V,GAAUpH,EAAKtO,IAAM2V,GAAgC,IAAjBrH,EAAKtM,UAC7E2T,EAAcrH,EAAKtO,QAG3B,EAAKsF,MAAMlG,YAAYH,KAAI,SAAA2W,GACnBA,EAAW3V,OAASwV,GAAUG,EAAW5V,IAAM0V,GAAUE,EAAW5V,IAAM,EAAI2V,IAC9EA,EAAcC,EAAW5V,IAAM,MAKvCwV,EAAc,CAACxV,IAAK2V,EAAa1V,KAAMwV,EAAQ9X,MAAOA,GACtD,MACJ,I3BxlBS,Q2BylBDgY,EAAc,EAAKrQ,MAAM3G,MAAQ,EACrC,EAAK2G,MAAMmK,aAAaxQ,KAAI,SAAAqP,GACpBA,EAAKtO,MAAQ0V,GAAUpH,EAAKrO,KAAOwV,GAAUnH,EAAKrO,KAAO0V,EAAc,GAAsB,IAAjBrH,EAAKtM,UACjF2T,EAAcrH,EAAKrO,KAAO,MAIlC,EAAKqF,MAAMlG,YAAYH,KAAI,SAAA2W,GACnBA,EAAW5V,MAAQ0V,GAAUE,EAAW3V,KAAOwV,GAAUG,EAAW3V,KAAO0V,EAAc,IACzFA,EAAcC,EAAW3V,KAAO,MAIxCuV,EAAc,CAACxV,IAAK0V,EAAQzV,KAAK0V,EAAahY,MAAOA,GACrD,MACJ,I3BzmBQ,O2B0mBAgY,EAAc,EAClB,EAAKrQ,MAAMmK,aAAaxQ,KAAI,SAAAqP,GACpBA,EAAKtO,MAAQ0V,GAAUpH,EAAKrO,MAAQwV,GAAUnH,EAAKrO,KAAO0V,GAAgC,IAAjBrH,EAAKtM,UAC9E2T,EAAcrH,EAAKrO,SAG3B,EAAKqF,MAAMlG,YAAYH,KAAI,SAAA2W,GACnBA,EAAW5V,MAAQ0V,GAAUE,EAAW3V,KAAOwV,GAAUG,EAAW3V,KAAO,EAAI0V,IAC/EA,EAAcC,EAAW3V,KAAO,MAGxCuV,EAAc,CAACxV,IAAK0V,EAAQzV,KAAK0V,EAAahY,MAAOA,GACrD,MACJ,I3BxnBQ,O2BynBAgY,EAAc,EAAKrQ,MAAMxF,OAAS,EACtC,EAAKwF,MAAMoK,eAAezQ,KAAI,SAAAqP,GAEtBA,EAAKrO,OAASwV,GAAUnH,EAAKtO,IAAM0V,GAAUpH,EAAKtO,IAAM2V,EAAc,GAAsB,IAAjBrH,EAAKtM,UAChF2T,EAAcrH,EAAKtO,IAAM,MAGjC,EAAKsF,MAAMlG,YAAYH,KAAI,SAAA2W,GACnBA,EAAW3V,OAASwV,GAAUG,EAAW5V,IAAM0V,GAAUE,EAAW5V,IAAM2V,EAAc,IACxFA,EAAcC,EAAW5V,IAAM,MAGvCwV,EAAc,CAACxV,IAAK2V,EAAa1V,KAAMwV,EAAQ9X,MAAOA,GACtD,MACJ,QACI,OAER,OAAO6X,GAzfQ,EA6fnB3P,iBAAmB,WACf,IAAIgQ,EAAiB,EACrB,EAAKvQ,MAAMwQ,mBAAmB7W,KAAI,SAAAyE,GAC9BmS,GAAkBnS,KAEtB,IAAIwH,EAAczD,SAAS,IAAO,EAAKnC,MAAMyQ,aACzC3R,EAAa,EACjB,EAAKkB,MAAM0Q,eAAe/W,KAAI,SAAAyE,GAC1BU,GAAcV,KAElB,IAAIuS,EAAWxO,SAASrD,EAAc,EAAKkB,MAAMyQ,aAC7C1K,EAAiBjH,EAAa,IAElCkO,IAAMoC,KAAK,iBAAkB,CAACwB,KAAM,EAAK5Q,MAAM4Q,KAAK9R,WAAYA,EAAW+R,eAAgBN,IACtFrD,MAAM,SAAAC,GACH+B,QAAQC,IAAIhC,EAAII,SAGxB,EAAKjN,SAAS,CACVuP,6BAA6B,EAC7BlK,oBAAqB,EAAK3F,MAAMyQ,YAChCK,WAAY,OACZlL,YAAaA,EAAc,IAC3BC,aAAc8K,EACd7K,kBAAmByK,EACnBxK,eAAgBA,KAthBL,EA0hBnBgL,kBAAoB,SAACC,GACjB,IAAIC,EAAkB,EAAKjR,MAAMiR,gBAAgBlG,QACjDkG,EAAgB,EAAKjR,MAAMyQ,aAAe,EAAKzQ,MAAMvG,YAAYsR,QACjE,IAAI3M,EAAW,EACf6S,EAAgBtX,KAAI,SAAAF,GAChB2E,GAAY3E,EAAYC,UAE5B,IAAIwX,EAAkB,EAAKlR,MAAMkR,gBAAgBnG,QAC7CjR,EAAc,EAAKkG,MAAMlG,YAAYiR,QACzCjR,EAAYqI,SAAS,EAAKnC,MAAM+O,gBAAkBiC,EAClDE,EAAgB,EAAKlR,MAAMyQ,aAAe3W,EAC1CkT,IAAMoC,KAAK,kBAAmB,CAACrK,MAAO3G,EAAU5F,KAAMmF,SAASC,eAAe,gBAAgB6B,MAAO0R,aAAcF,EAAiBjD,MAAO,EAAKhO,MAAMgO,MAAOkD,gBAAiBA,IACzKhE,MAAM,SAAAC,GACH,EAAKyB,oBAEbvN,OAAO+P,aAAeH,EACtB5P,OAAOgQ,cAAgBH,EACvB,EAAKlR,MAAM6K,SAAU,GA3iBN,EA8iBnByG,SAAW,SAACnS,GACR,GAAIA,EAAczE,MAAQ,EAAKsF,MAAMqK,KAAK3P,KAAOyE,EAAcxE,OAAS,EAAKqF,MAAMqK,KAAK1P,KA+GpF,MAAO,GA5GP,IAF2B,IAAvB,EAAKqF,MAAM6K,SACX,EAAKvK,SAAS,CAACuK,SAAS,IACE,OAA1B,EAAK7K,MAAMW,YAAiD,QAA1B,EAAK7I,MAAMyZ,WAAsB,CACnE,IAAI/S,EAAW,GAIf,GAHwB,OAApB6C,OAAO4N,WACPzQ,EAAW6C,OAAO4N,SAASzQ,UAED,QAA1B,EAAK1G,MAAM0Z,WACX,OACI,kBAAC,GAAD,CACIvU,KAAM,EAAK+C,MAAM6K,QACjBtE,YAAa,EAAKvG,MAAMuG,YACxBD,mBAAoB,EAAKtG,MAAMsG,mBAC/BlI,SAAU,EAAK4B,MAAMvG,YAAYC,OACjCyL,WAAY,EAAKnF,MAAMmF,WACvBxG,YAAa,EAAKA,YAClByH,wBAAyB,EAAKA,0BAIrC,GAA6C,QAAzC,EAAKtO,MAAM2Z,0BAChB,OAAO,KAEN,GAAsC,QAAlC,EAAK3Z,MAAM0W,mBAA8B,CAC9C,IAAIkD,GAAI,EACR,EAAK1R,MAAM2R,cAAchY,KAAI,SAACkR,EAAQ5S,GAC5BA,GAAS,EAAK+H,MAAMyQ,aAAiB5F,IACvC6G,GAAM,MAGd,IAAIT,EAAkB,EAAKjR,MAAMiR,gBACjCA,EAAgB,EAAKjR,MAAMyQ,aAAe,EAAKzQ,MAAMvG,YACrD,IAAI2E,EAAW,EAIf,OAHA6S,EAAgBtX,KAAI,SAAAF,GAChB2E,GAAY3E,EAAYC,UAEpBgY,EAAM,kBAAC,GAAD,CACVzU,KAAM,EAAK+C,MAAM6K,QACjBzM,SAAUA,EACVM,aAAc,EAAKqS,kBACnBpS,YAAa,EAAKA,YAClBH,SAAUA,EACVO,SAAU,EAAK6P,eACfzP,cAAeA,IACd,kBAAC,GAAD,CACDlC,KAAM,EAAK+C,MAAM6K,QACjBzM,SAAU,EAAK4B,MAAMvG,YAAYC,OACjCoF,WAAYV,EACZW,SAAU,EAAK6P,eACfjQ,YAAa,EAAKA,YAClBiT,MAAO,EAAK5R,MAAM4R,MAClB5Z,gBAAiB,EAAK6Z,qBACtBpB,YAAa,EAAKzQ,MAAMyQ,YACxBzR,eAAgB,EAAKA,iBAGxB,MAA6B,QAAzB,EAAKlH,MAAMga,UACP,kBAAC,GAAD,CACL7U,KAAM,EAAK+C,MAAM6K,QACjBzM,SAAU,EAAK4B,MAAMvG,YAAYC,OACjCiF,YAAa,EAAKA,cAIb,kBAAC,GAAD,CACL1B,KAAM,EAAK+C,MAAM6K,QACjBzM,SAAU,EAAK4B,MAAMvG,YAAYC,OACjCgF,aAAc,EAAKA,aACnBC,YAAa,EAAKA,YAClBH,SAAUA,IAIjB,GAA8B,QAA1B,EAAK1G,MAAMyZ,WA6BhB,OAAQ,kBAAC,GAAD,CACJtU,KAAM,EAAK+C,MAAM6K,QACjBxL,aAAc,EAAKA,aACnBV,YAAa,EAAKA,cA/BtBqO,IAAMoC,KAAK,oBAAqB,CAACwB,KAAM,EAAK5Q,MAAM4Q,KAAKmB,KAAK,EAAK/R,MAAM4R,MAAM,EAAK5R,MAAMyQ,aAAasB,KAAMtY,YAAa,EAAKuG,MAAMvG,cAC9HyT,MAAM,SAAAC,GACH+B,QAAQC,IAAIhC,EAAII,SAExB,IAAIzO,EAAa,EAAKkB,MAAMvG,YAAYsR,QAAQrR,OAC5CgX,EAAiB,EAAK1Q,MAAM0Q,eAChCA,EAAe9L,KAAK9F,GACpB,IAAIkT,EAAgBlT,EAAa,EAAKkB,MAAM4R,MAAM,EAAK5R,MAAMyQ,aAAawB,QACtEzB,EAAqB,EAAKxQ,MAAMwQ,mBACpCA,EAAmB5L,KAAKoN,GACxB,IAAI3C,EAAahC,KAAKC,MAAM,EAAKtN,MAAM4R,MAAM,EAAK5R,MAAMyQ,YAAc,GAAGyB,cACrE,EAAKlS,MAAMyQ,YAAc,GAAK,EAAKzQ,MAAM4R,MAAMlY,QAC/CsT,IAAMC,IAAI,2BAA6B,EAAKnV,MAAM8Y,KAAO,eAAiB,EAAK9Y,MAAMqN,YAChF+H,MAAM,SAAAC,GACC,IAAIyE,EAAQvE,KAAKC,MAAMH,EAAII,KAAKqE,OAE5BO,EADa,EAAKnS,MAAM4R,MACFQ,OAAOR,GACjC,EAAKtR,SAAS,CACVsR,MAAOO,OAI3B,EAAK7R,SACDqK,GAAO0E,EAAW,CAACoB,YAAa,EAAKzQ,MAAMyQ,YAAc,EAAG3W,YAAauV,EAAWvE,YAAYC,QAASF,SAAS,EAAO2F,mBAAoBA,EAAoBE,eAAgBA,MAjpB9K,EAkqBnBtK,wBAA0B,WACtB,EAAK9F,SAAS,CACVoG,SAAU,CAAC,EAAK1G,MAAMsG,uBApqBX,EAwqBnBuI,qBAAuB,SAACoB,GACpB,QAAmB1U,IAAf0U,EAAOhW,MAA4C,IAAvB,EAAK+F,MAAM6K,UAAsB,EAAK7K,MAAMhE,UAAW,CACnF,IAAIqW,EAAa,CAAC1X,KAAM,EAAKqF,MAAMlG,YAAY,EAAKkG,MAAM+O,eAAepU,KAAMD,IAAK,EAAKsF,MAAMlG,YAAY,EAAKkG,MAAM+O,eAAerU,KACjIwV,EAAc,EAAKF,gBAAgBC,EAAQ,EAAKjQ,MAAM+O,cAAe,EAAK/O,MAAMlG,YAAY,EAAKkG,MAAM+O,eAAe1W,OACtHyB,EAAc,EAAKkG,MAAMlG,YACzBL,EAAc,EAAKuG,MAAMvG,aAC7ByW,EAAcvF,GAAOuF,EAAa,CAAClW,eAAgBF,EAAY,EAAKkG,MAAM+O,eAAe/U,kBACvEU,MAAQZ,EAAY,EAAKkG,MAAM+O,eAAerU,KAAOwV,EAAYvV,OAASb,EAAY,EAAKkG,MAAM+O,eAAepU,MAAU,EAAKqF,MAAMhE,WACnJvC,EAAYmL,KAAK,CACb3K,IAAKgW,EAAOhW,IACZF,MAAO,EAAKiG,MAAM+O,cAClB/U,eAAgBF,EAAY,EAAKkG,MAAM+O,eAAe/U,eACtDsY,aAAcD,IAGtBvY,EAAY,EAAKkG,MAAM+O,eAAiBmB,EACxC,EAAK5P,SAAS,CACVxG,YAAaA,EACbL,YAAaA,IAEjB,EAAK6X,SAASpB,KA5rBH,EAgsBnBnJ,oBAAsB,SAAC9O,GACnB,EAAK+H,MAAM0G,SAAS6L,OAAOta,EAAM,GACjC,EAAKqI,SAAS,CACVoG,SAAU,EAAK1G,MAAM0G,YAnsBV,EAusBnB1H,eAAiB,WACb,EAAK6S,sBAAsB,EAAK7R,MAAMyQ,YAAc,GAAK,IAxsB1C,EA2sBnB+B,qBAAuB,SAAAva,GACnB,IAAIoX,EAAahC,KAAKC,MAAM,EAAKxV,MAAM8Z,MAAM3Z,GAAOoX,YAChD5B,EAAavB,GAAqBmD,EAAWhW,MAAMgW,EAAW7U,QAClE,EAAK8F,SACDqK,GAAO0E,EAAW,CAACrT,WAAW,EAAMyR,WAAYA,EAAYgD,YAAaxY,EAAOwB,YAAa,GAAIoR,SAAS,EAAO/Q,YAAauV,EAAWvE,YAAYC,QAAQrE,SAAU,CAAC,EAAK5O,MAAM8Z,MAAM3Z,GAAOwa,iBA/sBrL,EAmtBnBC,4BAA8B,SAAAza,GAC1B,IAAIoX,EAAahC,KAAKC,MAAM,EAAKxV,MAAM8Z,MAAM3Z,GAAOia,cACpD,QAAuC3W,GAAnC,EAAKyE,MAAMiR,gBAAgBhZ,GAC3B,IAAIwB,EAAc,QAGdA,EAAc,EAAKuG,MAAMiR,gBAAgBhZ,QAGVsD,GAAnC,EAAKyE,MAAMkR,gBAAgBjZ,GAC3BoX,EAAWvV,YAAcuV,EAAWvE,YAAYC,QAGhDsE,EAAWvV,YAAc,EAAKkG,MAAMkR,gBAAgBjZ,GAExD,IAAI0Z,EAAgB,EAAK3R,MAAM2R,cAC3B,EAAK3R,MAAM6K,QACX8G,EAAc,EAAK3R,MAAMyQ,cAAe,EAGxCkB,EAAc,EAAK3R,MAAMyQ,cAAe,EAE5C,IAAI3W,EAAc,EAAKkG,MAAMlG,YAAYiR,QACrCmG,EAAkB,EAAKlR,MAAMkR,gBACjCA,EAAgB,EAAKlR,MAAMyQ,aAAe3W,EAC1C,IAAImX,EAAkB,EAAKjR,MAAMiR,gBACjCA,EAAgB,EAAKjR,MAAMyQ,aAAe,EAAKzQ,MAAMvG,YAAYsR,QACjE,IAAIzE,EAAqBwF,GAA4BuB,KAAKC,MAAM,EAAKxV,MAAM8Z,MAAM3Z,GAAO0a,iBACpFtK,EAAuB,EAAKvQ,MAAM8Z,MAAM3Z,GAAOga,QAC/C7J,EAAsB,EAAKtQ,MAAM8Z,MAAM3Z,GAAO2a,aAC9CpK,EAAsB6E,KAAKC,MAAM,EAAKxV,MAAM+a,uBAAuB5a,GAEvE,EAAKqI,SACDqK,GAAO0E,EAAW,CAACzL,WAAY,EAAK5D,MAAM4D,WAAY6M,YAAaxY,EAAOwB,YAAaA,EAC/EoR,SAAS,EAAOqG,gBAAiBA,EAAiBD,gBAAiBA,EAAiBU,cAAeA,EACnGrL,mBAAoBA,EAAoB+B,qBAAsBA,EAAsBD,oBAAqBA,EACzGI,oBAAqBA,MAvvBlB,EA2vBnBqJ,qBAAuB,SAAA5Z,GACnB,IAAIoX,EAAahC,KAAKC,MAAM,EAAKxV,MAAM8Z,MAAM3Z,GAAOia,cACpD,QAAuC3W,GAAnC,EAAKyE,MAAMiR,gBAAgBhZ,GAC3B,IAAIwB,EAAc,QAGdA,EAAc,EAAKuG,MAAMiR,gBAAgBhZ,QAGVsD,GAAnC,EAAKyE,MAAMkR,gBAAgBjZ,GAC3BoX,EAAWvV,YAAcuV,EAAWvE,YAAYC,QAGhDsE,EAAWvV,YAAc,EAAKkG,MAAMkR,gBAAgBjZ,GAExD,IAAI0Z,EAAgB,EAAK3R,MAAM2R,cAC3B,EAAK3R,MAAM6K,QACX8G,EAAc,EAAK3R,MAAMyQ,cAAe,EAGxCkB,EAAc,EAAK3R,MAAMyQ,cAAe,EAE5C,IAAI3W,EAAc,EAAKkG,MAAMlG,YAAYiR,QACrCmG,EAAkB,EAAKlR,MAAMkR,gBACjCA,EAAgB,EAAKlR,MAAMyQ,aAAe3W,EAC1C,IAAImX,EAAkB,EAAKjR,MAAMiR,gBACjCA,EAAgB,EAAKjR,MAAMyQ,aAAe,EAAKzQ,MAAMvG,YAAYsR,QAEjE,EAAKzK,SACDqK,GAAO0E,EAAW,CAACzL,WAAY,EAAK5D,MAAM4D,WAAY6M,YAAaxY,EAAOwB,YAAaA,EAAaoR,SAAS,EAAOqG,gBAAiBA,EAAiBD,gBAAiBA,EAAiBU,cAAeA,MAxxB5L,EA6xBnBmB,YAAc,WACV,MAA4B,OAAxB,EAAKhb,MAAMga,UAEP,kBAACjO,GAAA,EAAD,CAAMnG,WAAS,EAACqG,GAAI,GAAIkB,UAAU,UAC9B,kBAACjC,EAAA,EAAD,CACIvG,YAAY,WACZnE,aAAW,0CACXF,QAAQ,aACR,kBAAC2K,EAAA,EAAD,MACA,kBAAClE,GAAA,EAAD,CACKxG,MAAM,gBACNkB,QAAQ,QACRnB,QAAQ,UACRgB,MAAO,CAACuJ,cAAe,SAJ5B,oBASI,EAAK3C,MAAM4R,MAAMjY,KAAI,SAACoZ,EAAK9a,GACnB,OAAc,IAAVA,EAEQ,kBAAC4G,GAAA,EAAD,CACKxG,MAAM,gBACNkB,QAAQ,QACRnB,QAAQ,UACRgB,MAAO,CAACuJ,cAAe,OAAQqQ,WAAY,SAJhD,wBAUO,IAAV/a,EAEG,kBAAC4G,GAAA,EAAD,CACKxG,MAAM,gBACNkB,QAAQ,QACRnB,QAAQ,UACRgB,MAAO,CAACuJ,cAAe,OAAQqQ,WAAY,SAJhD,oBAWR,kBAACnb,EAAD,CAAgBK,SAAU,EAAK8H,MAAMyQ,YAAasC,KAAMA,EAAMva,KAAMua,EAAKva,KAAMP,MAAOA,EAAOD,gBAAiB,EAAKwa,4BAUjG,QAAzC,EAAK1a,MAAM2Z,0BAEZ,kBAAC5N,GAAA,EAAD,CAAMnG,WAAS,EAACqG,GAAI,GAAIkB,UAAU,UAC9B,kBAACpB,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACf,EAAA,EAAD,CACIvG,YAAY,WACZrD,MAAO,CAACC,MAAO,QACff,aAAW,0CACXF,QAAQ,aAEJ,EAAK4H,MAAM4R,MAAMjY,KAAI,SAACoZ,EAAK9a,GAAN,OACb,kBAACJ,EAAD,CAAgBK,SAAU,EAAK8H,MAAMyQ,YAAasC,KAAMA,EAAMva,KAAM,YAAcP,EAAQ,GAAIA,MAAOA,EAAOD,gBAAiB,EAAK0a,mCAKtJ,kBAAC7O,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC,GAAD,CACIsE,qBAAsB,EAAKrI,MAAMqI,qBACjC/B,mBAAoB,EAAKtG,MAAMsG,mBAC/B8B,oBAAqB,EAAKpI,MAAMoI,oBAChCE,cAAe,EAAKxQ,MAAMwQ,cAC1BE,oBAAqB,EAAKxI,MAAMwI,oBAChCR,UAAW,EAAKlQ,MAAMkQ,UACtBO,eAAgB,EAAKzQ,MAAMyQ,mBAMJ,QAAlC,EAAKzQ,MAAM0W,mBAEZ,kBAAC3K,GAAA,EAAD,CAAMnG,WAAS,EAACqG,GAAI,GAAIkB,UAAU,UAC9B,kBAACpB,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACf,EAAA,EAAD,CACIvG,YAAY,WACZrD,MAAO,CAACC,MAAO,QACff,aAAW,0CACXF,QAAQ,aAEJ,EAAK4H,MAAM4R,MAAMjY,KAAI,SAACoZ,EAAK9a,GAAN,OACb,kBAACJ,EAAD,CAAgBK,SAAU,EAAK8H,MAAMyQ,YAAasC,KAAMA,EAAMva,KAAM,YAAcP,EAAQ,GAAIA,MAAOA,EAAOD,gBAAiB,EAAK6Z,4BAKtJ,kBAAChO,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACkP,GAAD,CAAsBrP,WAAY,EAAK5D,MAAM4D,eAK1B,QAA1B,EAAK5D,MAAMW,YAGe,QAA1B,EAAK7I,MAAM0Z,WAFT,KAKF,EAAK1Z,MAAMyZ,WAEP,6BACG,kBAAC,GAAD,CAAOhR,iBAAkB,EAAKA,mBAE9B,kBAAC1B,GAAA,EAAD,CAAY1D,GAAG,8BACF9C,MAAM,UACND,QAAQ,KACRmB,QAAQ,SACR2J,cAAY,GACnB,EAAKlD,MAAMyQ,cAO7B,yBAAKrX,MAAO,CAACG,QAAS,SAClB,kBAACsF,GAAA,EAAD,CACIxG,MAAM,YACNkB,QAAQ,QACRnB,QAAS,MAGR,EAAKN,MAAMU,MAEhB,6BACA,kBAACqL,GAAA,EAAD,CAAMnG,WAAS,EAACqG,GAAI,GAAIkB,UAAU,UAClC,kBAACiO,GAAD,CAAYtP,WAAY,EAAK5D,MAAM4D,gBAz6B5B,EAg7BnBuP,8BAAgC,SAAClO,GAC7B,EAAK4J,qBAAqB,CAAC5U,IAAKgL,KAj7BjB,EAo7BnB2J,eAAiB,WACb,IAAInV,EAAc,EAAKuG,MAAMvG,YACzBK,EAAc,EAAKkG,MAAMlG,YAC7B,GAA2B,IAAvBL,EAAYC,OAAc,CAC1B,IAAI0Z,EAAU3Z,EAAY4Z,MAC1BvZ,EAAYsZ,EAAQrZ,OAAOY,KAAOyY,EAAQd,aAAa3X,KACvDb,EAAYsZ,EAAQrZ,OAAOW,IAAM0Y,EAAQd,aAAa5X,IACtD,EAAK4F,SAAS,CACVxG,YAAaA,EACbL,YAAaA,EACboR,SAAS,MA97BF,EAm8BnByI,oBAAsB,SAAC5W,EAAQD,EAAY/B,EAAIC,GAGvC,IAAI4Y,EAFR,GAA8B,QAA1B,EAAKvT,MAAMW,YAAwB,EAAKX,MAAMhE,UAG9C,GAFA,EAAK2C,cAEe,eAAhBlC,EAA8B,CAC9B,IAAI+W,EAAoB,EAAKxT,MAAMoK,eACnCoJ,EAAkB7Z,KAAI,SAAC8Z,EAAOxb,GACtBwb,EAAM/Y,MAAQA,GAAO+Y,EAAM9Y,OAASA,IACpC4Y,EAAgBtb,MAGxBub,EAAkBD,GAAiB,CAAC7Y,IAAKA,EAAIC,KAAMA,EAAK+B,QAASA,GACjE,EAAK4D,SAAS,CACV8J,eAAgBoJ,SAGnB,GAAoB,aAAhB/W,EAA4B,CACjC,IAAIiX,EAAkB,EAAK1T,MAAMmK,aACjCuJ,EAAgB/Z,KAAI,SAACga,EAAO1b,GACpB0b,EAAMjZ,MAAQA,GAAOiZ,EAAMhZ,OAASA,IACpC4Y,EAAgBtb,MAGxByb,EAAgBH,GAAiB,CAAC7Y,IAAKA,EAAKC,KAAMA,EAAM+B,QAASA,GACjE,EAAK4D,SAAS,CACV6J,aAAcuJ,MA59BX,EAk+BnBE,sBAAwB,SAACtZ,GACrB,EAAKgG,SAAS,CACV+J,KAAM,CAAC3P,IAAKmP,KAAKgK,MAAMvZ,EAASwZ,MAAQ,EAAK9T,MAAMyN,YAAa9S,KAAMkP,KAAKgK,MAAMvZ,EAASyZ,MAAQ,EAAK/T,MAAMyN,aAC7G3T,YAAa,EAAKkG,MAAM8K,YAAYC,QACpCtR,YAAa,MAt+BF,EA2+BnBmC,kBAAoB,SAACtB,EAASrC,GAC1B,IAAI6B,EAAc,EAAKkG,MAAMlG,YAAYiR,QACrCgJ,EAAQzZ,EAASyZ,MAAQ,EAAK/T,MAAMyN,WACpCqG,EAAQxZ,EAASwZ,MAAQ,EAAK9T,MAAMyN,WACxC3T,EAAY7B,GAAOyC,IAAMmP,KAAKgK,MAAMC,GACpCha,EAAY7B,GAAO0C,KAAOkP,KAAKgK,MAAME,GACrC,EAAKzT,SAAS,CACVwK,YAAahR,EAAYiR,QACzBjR,YAAaA,EACbL,YAAa,MAl/Ba,QAA1B,EAAK3B,MAAMyZ,WACX,EAAKvR,MAAQqN,KAAKC,MAAM,EAAKxV,MAAM8Z,MAAM,GAAGM,cAC5C,EAAKlS,MAAM4R,MAAQ,EAAK9Z,MAAM8Z,MAC9B,EAAK5R,MAAM4Q,KAAO,EAAK9Y,MAAM8Y,KAC7B,EAAK5Q,MAAM6K,SAAU,EACrB,EAAK7K,MAAM6M,sBAAwB,GACnC,EAAK7M,MAAMyP,0BAA2B,EACtC,EAAKzP,MAAMyN,WAAa,GACxB,EAAKzN,MAAM0N,mBAAoB,EAC/B,EAAK1N,MAAMyQ,YAAc,EACzB,EAAKzQ,MAAMW,WAAa,KACxB,EAAKX,MAAMhE,WAAY,EACvB,EAAKgE,MAAM0Q,eAAiB,GAC5B,EAAK1Q,MAAMwQ,mBAAqB,GAChC,EAAKxQ,MAAMyN,WAAavB,GAAqB,EAAKlM,MAAM3G,MAAM,EAAK2G,MAAMxF,QACzE,EAAKwF,MAAM0G,SAAW,QAErB,GAA6C,QAAzC,EAAK5O,MAAM2Z,0BAChB,EAAKzR,MAAQqN,KAAKC,MAAM,EAAKxV,MAAM8Z,MAAM,GAAGM,cAC5C,EAAKlS,MAAMgU,MAAQ,GACnB,EAAKlc,MAAM8Z,MAAMjY,KAAI,SAAAoZ,GACjB,IAAIkB,EAAW5G,KAAKC,MAAMyF,EAAKb,cAC/B,EAAKlS,MAAMgU,MAAMpP,KAAKqP,EAAS5J,SAEnC,EAAKrK,MAAM4R,MAAQ,EAAK9Z,MAAM8Z,MAC9B,EAAK5R,MAAM6K,SAAU,EACrB,EAAK7K,MAAM6M,sBAAwB,GACnC,EAAK7M,MAAMyP,0BAA2B,EACtC,EAAKzP,MAAM0N,mBAAoB,EAC/B,EAAK1N,MAAMyQ,YAAc,EACzB,EAAKzQ,MAAMW,WAAa,KACxB,EAAKX,MAAMhE,WAAY,EACvB,EAAKgE,MAAM0Q,eAAiB,GAC5B,EAAK1Q,MAAMwQ,mBAAqB,GAChC,EAAKxQ,MAAMyN,WAAavB,GAAqB,EAAKlM,MAAM3G,MAAM,EAAK2G,MAAMxF,QACzE,EAAKwF,MAAM2R,cAAgB,EAAC,GAAM,GAAM,GAAM,GAC9C,EAAK3R,MAAMiR,gBAAgB,GAE3B,EAAKjR,MAAMsG,mBAAqBwF,GAA4BuB,KAAKC,MAAM,EAAKxV,MAAM8Z,MAAM,GAAGe,iBAC3F,EAAK3S,MAAMqI,qBAAuB,EAAKvQ,MAAM8Z,MAAM,GAAGK,QACtD,EAAKjS,MAAMoI,oBAAsB,EAAKtQ,MAAM8Z,MAAM,GAAGgB,aACrD,EAAK5S,MAAMwI,oBAAsB6E,KAAKC,MAAM,EAAKxV,MAAM+a,uBAAuB,GAE9E,EAAK7S,MAAMkR,gBAAkB,GAC7B,EAAKlR,MAAM0G,SAAW,GACtB,EAAK1G,MAAM4D,WAAa,QAEvB,GAAsC,QAAlC,EAAK9L,MAAM0W,mBAChB,EAAKxO,MAAQqN,KAAKC,MAAM,EAAKxV,MAAM8Z,MAAM,GAAGM,cAC5C,EAAKlS,MAAMgU,MAAQ,GACnB,EAAKlc,MAAM8Z,MAAMjY,KAAI,SAAAoZ,GACjB,IAAIkB,EAAW5G,KAAKC,MAAMyF,EAAKb,cAC/B,EAAKlS,MAAMgU,MAAMpP,KAAKqP,EAAS5J,SAEnC,EAAKrK,MAAM4R,MAAQ,EAAK9Z,MAAM8Z,MAC9B,EAAK5R,MAAM6K,SAAU,EACrB,EAAK7K,MAAM6M,sBAAwB,GACnC,EAAK7M,MAAMyP,0BAA2B,EACtC,EAAKzP,MAAM0N,mBAAoB,EAC/B,EAAK1N,MAAMyQ,YAAc,EACzB,EAAKzQ,MAAMW,WAAa,KACxB,EAAKX,MAAMhE,WAAY,EACvB,EAAKgE,MAAM0Q,eAAiB,GAC5B,EAAK1Q,MAAMwQ,mBAAqB,GAChC,EAAKxQ,MAAMyN,WAAavB,GAAqB,EAAKlM,MAAM3G,MAAM,EAAK2G,MAAMxF,QACzE,EAAKwF,MAAM2R,cAAgB,EAAC,GAAM,GAAM,GAAM,GACjB,MAAzB,EAAK7Z,MAAMoc,YACX,EAAKlU,MAAMiR,gBAAkB,EAAKnZ,MAAMoc,WACxC,EAAKlU,MAAM2R,cAAgB,EAAC,GAAK,GAAK,GAAK,GAC3C,EAAK3R,MAAMvG,YAAc,EAAK3B,MAAMoc,WAAW,GAAGnJ,QAClD,EAAK/K,MAAMlG,YAAc,EAAKhC,MAAMoZ,gBAAgB,GAAGnG,SAGvD,EAAK/K,MAAMiR,gBAAgB,GAE/B,EAAKjR,MAAMkR,gBAAgD,MAA9B,EAAKpZ,MAAMoZ,gBAA0B,EAAKpZ,MAAMoZ,gBAAkB,GAC/F,EAAKlR,MAAM0G,SAAW,CAAC,iDAAiD,+DAA+D,iEACvI,EAAK1G,MAAM4D,WAAa,EAAK9L,MAAM8L,WACnC,EAAK5D,MAAMgO,MAAQ,EAAKlW,MAAMkW,WAE7B,GAA8B,QAA1B,EAAKlW,MAAM0Z,WAChB,EAAKxR,MAAQqN,KAAKC,MAAM,EAAKxV,MAAMib,KAAKb,cACxC,EAAKlS,MAAMuG,YAAc,EAAKzO,MAAMib,KAAKd,QACzC,EAAKjS,MAAMsG,mBAAqBwF,GAA4BuB,KAAKC,MAAM,EAAKxV,MAAMib,KAAKJ,iBACvF,EAAK3S,MAAMmF,WAAa,EAAKrN,MAAMib,KAAKH,aACxC,EAAK5S,MAAMW,WAAa,KACxB,EAAKX,MAAM6K,SAAU,EACrB,EAAK7K,MAAMhE,WAAY,EACvB,EAAKgE,MAAM6M,sBAAwB,GACnC,EAAK7M,MAAMyN,WAAavB,GAAqB,EAAKlM,MAAM3G,MAAM,EAAK2G,MAAMxF,QACzE,EAAKwF,MAAM0G,SAAW,CAAC,oCACvB,EAAK1G,MAAMwB,IAAM,EAAK1J,MAAMib,KAAKoB,MACjC9S,OAAOkO,QAAQ6E,UAAU,CAACjZ,GAAI,eAAe,8BAA8B,SAAW,EAAKrD,MAAMib,KAAKoB,YAErG,GAA6B,QAAzB,EAAKrc,MAAMga,UAChB,EAAK9R,MAAQqN,KAAKC,MAAM,EAAKxV,MAAM8Z,MAAM,GAAGvC,YAC5C,EAAKrP,MAAM4R,MAAQ,EAAK9Z,MAAM8Z,MAC9B,EAAK5R,MAAM6K,SAAU,EACrB,EAAK7K,MAAM6M,sBAAwB,GACnC,EAAK7M,MAAMyP,0BAA2B,EACtC,EAAKzP,MAAM0N,mBAAoB,EAC/B,EAAK1N,MAAMyQ,YAAc,EACzB,EAAKzQ,MAAMW,WAAa,KACxB,EAAKX,MAAMhE,WAAY,EACvB,EAAKgE,MAAM0Q,eAAiB,GAC5B,EAAK1Q,MAAMwQ,mBAAqB,GAChC,EAAKxQ,MAAMyN,WAAavB,GAAqB,EAAKlM,MAAM3G,MAAM,EAAK2G,MAAMxF,QACzE,EAAKwF,MAAM0G,SAAW,CAAC,EAAK5O,MAAM8Z,MAAM,GAAGa,kBAE1C,GAA8B,QAA1B,EAAK3a,MAAMwW,WAChB,EAAKtO,MAAQqN,KAAKC,MAAM,EAAKxV,MAAMmc,UACnC,EAAKjU,MAAM4D,WAAa,EAAK9L,MAAM8L,WACnC,EAAK5D,MAAMwB,IAAM,EAAK1J,MAAM0J,IAC5B,EAAKxB,MAAM6K,SAAU,EACrB,EAAK7K,MAAM6M,sBAAwB,GACnC,EAAK7M,MAAMyP,0BAA2B,EACtC,EAAKzP,MAAMyN,WAAa,GACxB,EAAKzN,MAAMhE,WAAY,EACvB,EAAKgE,MAAM0N,mBAAoB,EAC/B,EAAK1N,MAAMyN,WAAavB,GAAqB,EAAKlM,MAAM3G,MAAM,EAAK2G,MAAMxF,QACzE,EAAKwF,MAAM0G,SAAW,GACtBrF,OAAOkO,QAAQ6E,UAAU,CAACjZ,GAAI,aAAa,4BAA4B,SAAU,EAAKrD,MAAM0J,SAE3F,CACD,IACIsO,EAAQC,GAAe,EAAKjY,MAAMuc,cAAc,EAAKvc,MAAMwc,eAAe,EAAE,SAChF,EAAKtU,MAAQ2K,GAAO,CAChBoE,cAAe,EACftV,YAAa,GACb+H,IAAK,GACLb,WAAY,MACZ3E,WAAW,EACX4H,WAAY,GACZ6L,0BAA0B,EAC1B5C,sBAAuB,GACvBxT,MAAO,EAAKvB,MAAMuc,cAClB7Z,OAAQ,EAAK1C,MAAMwc,eACnBC,YAAa,EAAKzc,MAAM0c,gBACxB/G,WAda,GAebC,mBAAmB,EACnBhH,SAAU,CACc,gCACA,+CACA,qEACA,kDAC1BoJ,GACF,EAAK9P,MAAMyN,WAAavB,GAAqB,EAAKlM,MAAM3G,MAAM,EAAK2G,MAAMxF,QApJ9D,OAsJf,EAAKwF,MAAMF,0BAA4B,EAAKhI,MAAM2c,eAtJnC,E,qDAw/BT,IAAD,OACL,OACA,yBAAKrb,MA/kCF,CACHC,MAAO,OACP2Z,WAAY,OACZ0B,YAAarT,OAAOmL,W3BzDa,M2ByD4B,MAAQ,SA6kCjE,kBAAC3I,GAAA,EAAD,CAAMnG,WAAS,EAACiX,WAAY,WACxB,kBAAC9Q,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI6Q,GAAI,EAAGxP,GAAI,GAC1B,kBAAC,GAAD,CACI7E,iBAAkB/G,KAAK+G,iBACvBgC,aAAc/I,KAAK1B,MAAMyZ,WACzBsD,cAAerb,KAAKwG,MAAMyQ,YAC1BjP,IAAKhI,KAAKwG,MAAMwB,IAChB7C,YAAanF,KAAKmF,YAClByM,YAAa5R,KAAK4R,YAClB/R,MAAOG,KAAKwG,MAAM3G,MAClBmB,OAAQhB,KAAKwG,MAAMxF,OACnB2Q,QAAS3R,KAAKwG,MAAMmL,QACpBxK,WAAYnH,KAAKwG,MAAMW,WACvBI,mBAAoBvH,KAAKuH,mBACzBsB,iBAAkB7I,KAAK6I,iBACvBT,gBAAmBpI,KAAKoI,gBACxB8L,kBAAqBlU,KAAKkU,kBAC1BzK,qBAAwBzJ,KAAKyJ,qBAC7BnD,0BAA2BtG,KAAKwG,MAAMF,0BACtCgB,gBAAmBtH,KAAKsH,gBACxB/B,SAAYvF,KAAKoV,eACjB5S,UAAaxC,KAAKwG,MAAMhE,UACxB0H,gBAAmBvB,SAAU3I,KAAKwG,MAAMyN,WAAW,GACnDjL,SAAYhJ,KAAK1B,MAAMga,UACvBpP,iBAAoBlJ,KAAK1B,MAAM0W,mBAC/B/L,wBAA2BjJ,KAAK1B,MAAM2Z,4BAEzCpQ,OAAOmL,W3BjqCa,M2BiqC4B,KAAO,kBAAC,EAAD,CAAW/S,YAAaD,KAAKwG,MAAMvG,YAAaK,YAAaN,KAAKwG,MAAMlG,eAEpI,kBAAC+J,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI6Q,GAAI,EAAGxP,GAAI,EAAG0P,cAAY,GACzC,kBAACC,EAAD,CAAO1b,MAAOG,KAAKwG,MAAM3G,MAAQG,KAAKwG,MAAMyN,WAAYjT,OAAQhB,KAAKwG,MAAMxF,OAAShB,KAAKwG,MAAMyN,YAEvFjU,KAAKwG,MAAMkK,WAAWvQ,KAAI,SAAAqb,GAAM,OAC5B,kBAAC,EAAD,CAAQ3a,UAAW,EAAK2F,MAAMyN,WACtBnT,SAAU,CAACI,IAAIsa,EAAOta,IAAIC,KAAMqa,EAAOra,WAIvD,kBAACqC,GAAD,CACI3C,UAAWb,KAAKwG,MAAMyN,WACtBnT,SAAUd,KAAKwG,MAAMqK,KACrBzO,kBAAmBpC,KAAKoa,sBACxBxX,cAAe,CAAC5C,KAAKwG,MAAMyN,WAAWjU,KAAKwG,MAAMyN,YACjD1R,aAAcvC,KAAKwG,MAAMW,WACzB3E,UAAWxC,KAAKwG,MAAMhE,YAGtBxC,KAAKwG,MAAMlG,YAAYH,KAAI,SAACsb,EAAQhd,GAAT,OACvB,kBAAC,EAAD,CACIoC,UAAW,EAAK2F,MAAMyN,WACtBnT,SAAU,CAACI,IAAIua,EAAOva,IAAIC,KAAKsa,EAAOta,MACtCtC,MAAO4c,EAAO5c,MACdH,SAAU,EAAK8H,MAAM+O,cACrB9W,MAAOA,EACPM,QAAS,EAAKuW,YACdD,qBAAsB,EAAKA,qBAC3BF,YAAa,EAAKA,YAClB5S,aAAc,EAAKiE,MAAMW,WACzB3E,UAAW,EAAKgE,MAAMhE,UACtBJ,kBAAmB,EAAKA,kBACxBQ,cAAe,CAAC,EAAK4D,MAAMyN,WAAW,EAAKzN,MAAMyN,iBAKzDjU,KAAKwG,MAAMoK,eAAezQ,KAAI,SAAA8Z,GAAK,OAC/B,kBAAC,GAAD,CACIhX,YAAa,aACbpC,UAAW,EAAK2F,MAAMyN,WACtBnT,SAAU,CAACI,IAAI+Y,EAAM/Y,IAAIC,KAAK8Y,EAAM9Y,MACpC+B,QAAS+W,EAAM/W,QACfnE,QAAS,EAAK+a,yBAKtB9Z,KAAKwG,MAAMmK,aAAaxQ,KAAI,SAAAga,GAAK,OAC7B,kBAAC,GAAD,CACIlX,YAAa,WACbpC,UAAW,EAAK2F,MAAMyN,WACtBnT,SAAU,CAACI,IAAIiZ,EAAMjZ,IAAIC,KAAKgZ,EAAMhZ,MACpC+B,QAASiX,EAAMjX,QACfnE,QAAS,EAAK+a,yBAKtBzG,GAAsBlT,KAAI,SAAAub,GAAoB,OAC1C,kBAACC,GAAD,CACI9a,UAAW,EAAK2F,MAAMyN,WACtBxT,IAAKib,EACL5a,SAAU,CACNI,IAAK,EAAKsF,MAAMlG,YAAY,EAAKkG,MAAM+O,eAAerU,IACtDC,KAAM,EAAKqF,MAAMlG,YAAY,EAAKkG,MAAM+O,eAAepU,MAE3DuC,YAAa,EAAK8S,gBAAgB,CAAC/V,IAAKib,GAAuB,EAAKlV,MAAM+O,cAAe,EAAK/O,MAAMlG,YAAY,EAAKkG,MAAM+O,eAAe1W,OAC1IA,MAAO,EAAK2H,MAAMlG,YAAY,EAAKkG,MAAM+O,eAAe1W,MACxD4E,KAAM,EAAK+C,MAAMF,0BACjB/H,YAAa,EAAKob,8BAClBnX,UAAW,EAAKgE,MAAMhE,gBAKrCqF,OAAOmL,W3B9uCa,M2B8uC4B,kBAAC,EAAD,CAAW/S,YAAaD,KAAKwG,MAAMvG,YAAaK,YAAaN,KAAKwG,MAAMlG,cAAiB,MAE9I,kBAAC+J,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI6Q,GAAI,EAAGxP,GAAI,GAC1B,kBAAC,GAAD,CACI2B,oBAAqBvN,KAAKuN,oBAC1BL,SAAUlN,KAAKwG,MAAM0G,WAExBlN,KAAKsZ,eAEV,kBAAC,GAAD,CACI1H,YAAa5R,KAAK4R,YAClB/R,MAAOG,KAAKwG,MAAM3G,MAClBmB,OAAQhB,KAAKwG,MAAMxF,OACnB2Q,QAAS3R,KAAKwG,MAAMmL,QACpBlF,WAAYzM,KAAKmW,sBACjB1S,KAAMzD,KAAKwG,MAAMyP,2BAGjBjW,KAAKwG,MAAMlG,YAAYH,KAAI,SAAAW,GAAQ,OAC/B,EAAKgX,SAAShX,MAEtB,kBAAC,GAAD,CACI2C,KAAMzD,KAAKwG,MAAM6P,4BACjB5J,WAAYzM,KAAKoW,6BACjBjK,oBAAqBnM,KAAKwG,MAAM2F,oBAChCmL,WAAYtX,KAAKwG,MAAMoV,8BACvBxP,YAAapM,KAAKwG,MAAM4F,YACxBC,aAAcrM,KAAKwG,MAAM6F,aACzBC,kBAAmBtM,KAAKwG,MAAM8F,kBAC9BC,eAAgBvM,KAAKwG,MAAM+F,eAC3BZ,WAAY3L,KAAK1B,MAAMqN,mB,GAnoCxBjL,IAAMC,WA2oCVkb,eAAWvI,I,iQC/vCXwI,G,wNAvBX,WAAYxd,GAAQ,IAAD,8BACf,cAAMA,IACDkI,MAAQ,CACTqU,cAAe,GACfC,eAAgB,GAChBE,gBAAiB,IALN,E,qDASf,OACI,kBAAC,GAAD,CAAMlG,WAAW,KACXkB,qBAAsBhW,KAAK1B,MAAM0X,qBACjCiF,eAAgBjb,KAAK1B,MAAM2c,eAC3BJ,cAAe7a,KAAKwG,MAAMqU,cAC1BC,eAAgB9a,KAAKwG,MAAMsU,eAC3BE,gBAAiBhb,KAAKwG,MAAMwU,sB,GAjBrBta,IAAMC,W,kBCmDhBob,iBAxCA,SAAAC,GAAK,MAAK,CACrBrO,KAAM,CACF9N,MAAO,OACP2E,SAAUqD,OAAOmL,W7BVgB,M6BUyB,OAAS,IACnEpF,SAAU/F,OAAOmL,W7BXgB,M6BWyB,OAAS,IACnEhS,OAAQ,IACRF,SAAU,WACVmb,WAAY,qDAGhB3R,KAAM,CACF4R,QAAS,GAGbC,aAAc,CACV3C,WAAY,GAEhB4C,mBAAoB,CAChB5C,WAAY,EACZ1Y,SAAU,WACVub,OAAQ,GACRlb,KAAM,IAGVmb,aAAc,CACVnT,cAAe,GAGnBoT,cAAe,CACX1K,UAAW,QACXxI,UAAW,EACXC,aAAc,GAGlBkT,aAAc,CACVnT,UAAW,EACXC,aAAc,MAIPyS,EAEf,SAAqBzd,GAAQ,IACjB6P,EAAY7P,EAAZ6P,QAKJsO,EAAqB,EAqBnBC,EAAW,SAAA1d,GACb,IAAI2d,GAAa3d,EAAO,IAAI4d,MAAM,KAC9BvI,EAAW,GAQf,OAPAsI,EAAUxc,KAAI,SAAC0c,GACPA,EAAK3c,OAAS,GACdmU,GAAYwI,EAAKC,UAAU,EAAG,IAAM,OAEpCzI,GAAYwI,EAAO,OAGpBxI,EAASyI,UAAU,EAAGzI,EAASnU,OAAS,IAG7C6c,EAAgB,SAAA/d,GAGlB,OAFIA,EAAKkB,OAAS,KACdlB,EAAOA,EAAK8d,UAAU,EAAG,IAAM,OAC5B9d,GAIX,OACI,kBAACqL,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIqB,GAAI,EAAGwP,GAAI,GAC1B,kBAAChN,GAAA,EAAD,CAAMxP,QAAQ,WAAWyP,UAAWF,EAAQR,MACxC,kBAACW,GAAA,EAAD,KACI,yBAAK1O,MA/BV,CACHG,QAAS,OACTid,eAAgB,kBA8BJ,yBAAKpd,MAAO,CAACC,MAAO,UAChB,kBAACod,GAAA,EAAD,CAASlP,MAAOzP,EAAMib,KAAKva,MACvB,kBAACqG,GAAA,EAAD,CAAYzG,QAAQ,KAAKuP,QAAS,CAAER,KAAMQ,EAAQmO,eAC7CI,EAASpe,EAAMib,KAAKva,QAG7B,6BACI,kBAACqG,GAAA,EAAD,CAAYzG,QAAQ,WAApB,OACS8d,EAASpe,EAAMib,KAAKzD,cAGjC,6BACI,kBAACzQ,GAAA,EAAD,CAAYzG,QAAQ,WACfN,EAAMib,KAAKxO,UAGpB,6BACI,kBAAC1F,GAAA,EAAD,CAAYxG,MAAM,gBAAgBD,QAAQ,WAA1C,UACYN,EAAMib,KAAK2D,QAG3B,6BACA,kBAACve,EAAA,EAAD,CAAQI,QAxEZ,WAChBT,EAAM6e,gBAAgB7e,EAAMib,KAAKva,KAAMV,EAAMib,KAAK1D,WAAWvX,EAAM8L,WAAW9L,EAAMib,KAAKvR,MAuEvCmG,QAAS,CAAER,KAAMQ,EAAQiO,oBAAsBxd,QAAQ,YAAYC,MAAM,WAAvG,SAEJ,yBAAKe,MAAO,CAACC,MAAO,UAChB,kBAACwF,GAAA,EAAD,CAAYxG,MAAM,gBAAgBD,QAAQ,WAA1C,cAGA,kBAACiN,GAAA,EAAD,KAEQvN,EAAM8L,WAAWjK,KAAI,SAAAsK,GAAS,OA1EvC,SAAAA,GACnB,OAA2B,IAAvBgS,EAAiC,IACrCA,IAEI,kBAAC1Q,GAAA,EAAD,CAAUqR,gBAAgB,EAAMjP,QAAS,CAAER,KAAMQ,EAAQ7D,OACrD,kBAAC0B,GAAA,EAAD,CAAcC,QAAS8Q,EAActS,EAAUI,SAAUsD,QAAS,CAAER,KAAMQ,EAAQqO,gBAClF,kBAACxQ,GAAA,EAAD,CAAcE,UAAWzB,EAAU7F,SAAUuJ,QAAS,CAAER,KAAMQ,EAAQoO,mBAqE9CvR,CAAeP,e,wUC3HvD,IAgCM4S,G,wNAEF,WAAY/e,GAAQ,IAAD,uBACf,cAAMA,IAUV6e,gBAAkB,SAACne,EAAKyb,EAASrQ,EAAWpC,GACxC,EAAK1J,MAAM6e,gBAAgBne,EAAKyb,EAASrQ,EAAWpC,IAZrC,EAenBsV,qBAAuB,SAAAvX,GACnB,EAAKe,SAAU,CACbyW,SAAUxX,EAAMyX,iBAjBH,EAqBnBC,gCAAkC,SAAA1X,GAC9B,EAAKe,SAAU,CACXyW,SAAU,OAEd,IAAIG,EAAa,EAAKC,UAAU1X,MAChCuN,IAAMoC,KAAK,UAAW,CAACgI,OAAQF,EAAYG,OAAQ,aAAcC,OAAQ,IACpEpK,MAAM,SAAAC,GACH,EAAK7M,SAAS,CACViX,eAAgBlK,KAAKC,MAAMH,EAAII,KAAKgK,gBACpCC,UAAWnK,KAAKC,MAAMH,EAAII,KAAKiK,iBA9B5B,EAmCnBC,6BAA+B,SAAAlY,GAC3B,EAAKe,SAAU,CACXyW,SAAU,OAEd,IAAIG,EAAa,EAAKC,UAAU1X,MAChCuN,IAAMoC,KAAK,UAAW,CAACgI,OAAQF,EAAYG,OAAQ,UAAWC,OAAQ,IACjEpK,MAAM,SAAAC,GACH,EAAK7M,SAAS,CACViX,eAAgBlK,KAAKC,MAAMH,EAAII,KAAKgK,gBACpCC,UAAWnK,KAAKC,MAAMH,EAAII,KAAKiK,iBA5C5B,EAiDnBE,mBAAqB,SAAAnY,GACjB,IAAI2X,EAAa,EAAKC,UAAU1X,MAChCuN,IAAMoC,KAAK,UAAW,CAACgI,OAAQF,EAAYG,OAAQ,OAAQC,OAAQ,IAC9DpK,MAAM,SAAAC,GACH,EAAK7M,SAAS,CACViX,eAAgBlK,KAAKC,MAAMH,EAAII,KAAKgK,gBACpCC,UAAWnK,KAAKC,MAAMH,EAAII,KAAKiK,iBArD3C,IAAIA,EAAY,EAAK1f,MAAM0f,UACvBD,EAAiB,EAAKzf,MAAMyf,eAHjB,OAIf,EAAKvX,MAAQ,CACTwX,UAAWA,EACXD,eAAgBA,EAChBR,SAAU,MAPC,E,qDA4DR,IAAD,OACGpP,EAAYnO,KAAK1B,MAAjB6P,QACT,OACI,yBAAKvO,MAhGN,CACHC,MAAO,OACP2Z,WAAY,OACZ0B,YAAarT,OAAOmL,W9Bba,M8Ba4B,MAAQ,OACrExR,OAAQ,SACR2c,MAAO,WA4FC,kBAACzT,GAAA,EAAD,CAAO6D,UAAU,OAAOF,UAAWF,EAAQR,MACvC,kBAACyQ,GAAA,EAAD,CACI/P,UAAWF,EAAQkQ,MACnBpM,YAAY,SACZD,WAAY,CAAE,aAAc,UAC5BsM,SAAU,SAAAC,GAAG,OAAI,EAAKZ,UAAYY,GAClCC,WAAY,SAACzY,GACS,UAAdA,EAAMnC,MACN,EAAKsa,qBACLnY,EAAM2L,qBAIlB,kBAACrE,GAAA,EAAD,CAAYtO,QAASiB,KAAKke,mBAAoB7P,UAAWF,EAAQsQ,WAAY3f,aAAW,UACpF,kBAAC,KAAD,OAEJ,kBAACyK,EAAA,EAAD,CAAS8E,UAAWF,EAAQuQ,QAASzb,YAAY,aACjD,kBAACtE,EAAA,EAAD,CACII,QAASiB,KAAKsd,qBACdqB,UAAW,kBAAC,KAAD,MACX/f,QAAQ,YACRC,MAAM,aAJV,QAQA,kBAAC+f,GAAA,EAAD,CACIjd,GAAG,cACH4b,SAAUvd,KAAKwG,MAAM+W,SACrBsB,aAAW,EACXta,KAAMua,QAAQ9e,KAAKwG,MAAM+W,UACzBvZ,QAAShE,KAAK+e,uBAEd,kBAACC,GAAA,EAAD,CAAUjgB,QAASiB,KAAKyd,iCAAxB,eACA,kBAACuB,GAAA,EAAD,CAAUjgB,QAASiB,KAAKie,8BAAxB,oBAGR,6BACA,kBAAC5T,GAAA,EAAD,CAAMnG,WAAS,EAACiX,WAAY,UAAWvQ,QAAS,GAExC5K,KAAKwG,MAAMwX,UAAU7d,KAAI,SAACoZ,EAAK9a,GAAN,OACrB,kBAACwgB,GAAD,CAAkB9B,gBAAiB,EAAKA,gBAAiB5D,KAAMA,EAAMnP,WAAY,EAAK5D,MAAMuX,eAAetf,GAAQgM,UAAW,EAAKjE,MAAMuX,eAAetf,GAAO,c,GA1GpKiC,IAAMC,WAqHdob,iBA3IA,SAAAC,GAAK,MAAK,CACrBrO,KAAM,CACFuO,QAAS,UACTnc,QAAS,OACTob,WAAY,SACZtb,MAAOgI,OAAOmL,W9BxBmB,M8BwBsB,OAAS,KAEpEqL,MAAO,CACHa,WAAY,EACZC,KAAM,GAEVV,WAAY,CACRvC,QAAS,IAEbwC,QAAS,CACL1d,OAAQ,GACRQ,OAAQ,EACR0d,WAAY,EACZ9V,YAAa,MAyHN2S,CAAmBsB,I,iQC3InB+B,G,wNArBX,WAAY9gB,GAAQ,uCACVA,G,qDAIN,OACI,kBAAC,GAAD,CACM0X,qBAAsBhW,KAAK1B,MAAM0X,qBACjCiF,eAAgBjb,KAAK1B,MAAM2c,eAC3BnG,WAAY,MACZ9V,KAAMgB,KAAK1B,MAAMU,KACjByb,SAAUza,KAAK1B,MAAMmc,SACrBrQ,WAAYpK,KAAK1B,MAAM8L,WACvBpC,IAAKhI,KAAK1B,MAAM0J,U,GAfXtH,IAAMC,WC4Fd8M,GA7FGC,cAAW,SAACsO,GAAD,MAAY,CACvCrO,KAAM,CACJ0R,SAAU,GAEZ1c,KAAM,CACJ0G,UAAW,SAEbiW,SAAU,CACRjW,UAAW,QAEbkW,UAAW,CACT/d,OAAQ,QAEVge,MAAO,CACLtD,QAASF,EAAMpR,QAAQ,GACvBpJ,OAAQ,OACRie,MAAO,KAETC,MAAO,CACL7f,MAAO,IACPmB,OAAQ,KAEV2e,IAAK,CACHne,OAAQ,OACRzB,QAAS,QACTyE,SAAU,OACVob,UAAW,QAEbC,cAAe,CACbhgB,MAAO,QAETigB,QAAS,CACP9R,SAAUgO,EAAM+D,WAAWC,QAAQ,IACnCC,UAAW,SACXC,WAAY,GAEdC,iBAAkB,CAChBnS,SAAUgO,EAAM+D,WAAWC,QAAQ,IACnCnhB,MAAOmd,EAAMoE,QAAQjT,KAAKjB,UAC1BgT,WAAY,QAEdmB,SAAU,CACNpf,gBAAiB,QACjBpC,MAAO,QACPwK,UAAW,SAEfiX,UAAW,CACTzgB,MAAO,QACPE,QAAS,eACTmf,WAAY,OACZ7V,UAAW,OACXkX,aAAc,OACdnX,YAAa,OACbyI,UAAW,UAEb2O,eAAgB,CACdhc,SAAU,IACVoJ,SAAU,IACV9N,MAAO,OACPof,WAAY,OACZ7V,UAAW,OACXkX,aAAc,OACdnX,YAAa,OACbyI,UAAW,UAEb4O,UAAW,CACTC,WAAY,yBACZpX,aAAc,QAEhBqX,eAAgB,CACdD,WAAY,yBACZpX,aAAc,QAEhBsX,UAAW,CACTF,WAAY,iBAEdG,gBAAiB,CACf,SAAU,CACNC,QAAS,iDAGfC,KAAM,CACJ9f,gBAAiB+a,EAAMoE,QAAQnE,WAAWuD,OAE5CwB,gBAAiB,CACf3X,UAAW,OACXtJ,QAAS,gBAEXkhB,iBAAkB,CAChBhF,WAAY,iH,oBC/DD,SAASiF,GAAY5iB,GAChC,IAEmD,EAF7C6P,EAAUV,KAEhB,OAAI5F,OAAOmL,WjCxB0B,MiCyBzB,yBAAK3E,UAAWF,EAAQmR,UACxB,kBAACjV,GAAA,EAAD,CAAMnG,WAAS,EAAC0G,QAAS,GACrB,kBAACP,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIK,QAAS,EAAGuQ,WAAW,SAASgG,QAAQ,SAASvhB,MAAO,CAACiS,UAAW,WACnF,kBAACxM,GAAA,EAAD,CAAYgJ,UAAWF,EAAQsS,UAAW7hB,QAAQ,MAAlD,6BAEA,kBAACyG,GAAA,EAAD,CAAYzG,QAAQ,KAAKwiB,WAAW,GAApC,+FAAsI,6BAAtI,4CAAoL,yBAAKxhB,MAAO,CAACC,MAAO,OAAOmB,OAAO,QAASX,IAAKnB,KAEpO,8BAEJ,kBAACmL,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIK,QAAS,EAAGuQ,WAAW,SAASgG,QAAQ,SAASvhB,MAAO,CAACiS,UAAW,WACnF,kBAACxM,GAAA,EAAD,CAAYgJ,UAAWF,EAAQsS,UAAW7hB,QAAQ,MAAlD,SAEA,kBAACyG,GAAA,EAAD,wCAA4C,6BAA5C,mEAGJ,kBAACgF,GAAA,GAAD,GAAMnG,WAAS,EAACoG,MAAI,EAAC6Q,WAAY,UAAWvQ,QAAS,GAArD,2BAAmE,UAAnE,wBAAoF,UAApF,GACI,kBAACP,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI6Q,GAAI,EAAGxb,MAAO,CAACiS,UAAW,WACzC,kBAACzD,GAAA,EAAD,CAAMC,UAAWF,EAAQmS,WACrB,kBAACe,GAAA,EAAD,CAAgBtiB,QAAST,EAAMgjB,uBAC3B,kBAACC,GAAA,EAAD,CACIlT,UAAWF,EAAQ0S,gBACnBtS,UAAU,MACViT,IAAI,eACJxgB,OAAO,MACP0e,MAAM,yCACN3R,MAAM,iBAEV,kBAACO,GAAA,EAAD,KACI,kBAACjJ,GAAA,EAAD,CAAYqE,cAAY,EAAC2E,UAAWF,EAAQyS,UAAWhiB,QAAQ,KAAK2P,UAAU,MAA9E,oBAOhB,kBAAClE,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI6Q,GAAI,EAAGxb,MAAO,CAACiS,UAAW,WACzC,kBAACzD,GAAA,EAAD,CAAMC,UAAWF,EAAQmS,WACrB,kBAACe,GAAA,EAAD,CAAgBtiB,QAAST,EAAMmjB,qBAC3B,kBAACF,GAAA,EAAD,CACIhT,UAAU,MACViT,IAAI,cACJxgB,OAAO,MACP0e,MAAM,uCACN3R,MAAM,gBAEV,kBAACO,GAAA,EAAD,KACI,kBAACjJ,GAAA,EAAD,CAAYqE,cAAY,EAAC2E,UAAWF,EAAQyS,UAAWhiB,QAAQ,KAAK2P,UAAU,MAA9E,mBAOhB,kBAAClE,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI6Q,GAAI,EAAGxb,MAAO,CAACiS,UAAW,WACzC,kBAACzD,GAAA,EAAD,CAAMC,UAAWF,EAAQmS,WACrB,kBAACe,GAAA,EAAD,CAAgBtiB,QAAST,EAAMoW,2BAC3B,kBAAC6M,GAAA,EAAD,CACIhT,UAAU,MACViT,IAAI,eACJxgB,OAAO,MACP0e,MAAM,wCACN3R,MAAM,oBAEV,kBAACO,GAAA,EAAD,KACI,kBAACjJ,GAAA,EAAD,CAAYqE,cAAY,EAAC2E,UAAWF,EAAQyS,UAAWhiB,QAAQ,KAAK2P,UAAU,MAA9E,uBAOhB,kBAAClE,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI6Q,GAAI,EAAGxb,MAAO,CAACiS,UAAW,WACzC,kBAACzD,GAAA,EAAD,CAAMC,UAAWF,EAAQmS,WACrB,kBAACe,GAAA,EAAD,CAAgBtiB,QAAST,EAAMojB,uBAC3B,kBAACH,GAAA,EAAD,CACIhT,UAAU,MACViT,IAAI,qBACJxgB,OAAO,MACP0e,MAAM,4BACN3R,MAAM,uBAEV,kBAACO,GAAA,EAAD,KACI,kBAACjJ,GAAA,EAAD,CAAYqE,cAAY,EAAC2E,UAAWF,EAAQyS,UAAWhiB,QAAQ,KAAK2P,UAAU,MAA9E,0BAOhB,kBAAClE,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI6Q,GAAI,EAAGxb,MAAO,CAACiS,UAAW,WACzC,kBAACzD,GAAA,EAAD,CAAMC,UAAWF,EAAQmS,WACrB,kBAACe,GAAA,EAAD,CAAgBtiB,QAAST,EAAMqjB,sBAC3B,kBAACJ,GAAA,EAAD,CACIhT,UAAU,MACViT,IAAI,eACJxgB,OAAO,MACP0e,MAAM,0CACN3R,MAAM,UAEV,kBAACO,GAAA,EAAD,KACI,kBAACjJ,GAAA,EAAD,CAAYqE,cAAY,EAAC2E,UAAWF,EAAQyS,UAAWhiB,QAAQ,KAAK2P,UAAU,MAA9E,aAOhB,kBAAClE,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI6Q,GAAI,EAAGxb,MAAO,CAACiS,UAAW,WACzC,kBAACzD,GAAA,EAAD,CAAMC,UAAWF,EAAQmS,WACrB,kBAACe,GAAA,EAAD,CAAgBtiB,QAAST,EAAMsjB,uBAC3B,kBAACL,GAAA,EAAD,CACIhT,UAAU,MACViT,IAAI,wBACJxgB,OAAO,MACP0e,MAAM,oCACN3R,MAAM,0BAEV,kBAACO,GAAA,EAAD,CAAa1O,MAAO,CAACiS,UAAW,WAC5B,kBAACxM,GAAA,EAAD,CAAYgJ,UAAWF,EAAQyS,UAAWlX,cAAY,EAAC9K,QAAQ,KAAK2P,UAAU,MAA9E,oBAQpB,kBAAClE,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIK,QAAS,EAAGuQ,WAAW,SAASgG,QAAQ,SAASvhB,MAAO,CAACiS,UAAW,WACvF,kBAACxM,GAAA,EAAD,CAAYgJ,UAAWF,EAAQwS,eAAgB/hB,QAAQ,MAAvD,6BAEI,kBAACyG,GAAA,EAAD,CAAYzG,QAAQ,SAApB,kBACmB,6BACf,kBAACyG,GAAA,EAAD,CAAY+b,WAAW,EAAMxiB,QAAQ,WAArC,uBAFJ,oBAGqB,6BACjB,kBAACyG,GAAA,EAAD,CAAY+b,WAAW,EAAMxiB,QAAQ,WAArC,8BAJJ,mBAKoB,6BAChB,kBAACyG,GAAA,EAAD,CAAY+b,WAAW,EAAMxiB,QAAQ,WAArC,qBANJ,qBAOsB,6BAClB,kBAACyG,GAAA,EAAD,CAAY+b,WAAW,EAAMxiB,QAAQ,WAArC,sCARJ,gBASiB,6BACb,kBAACyG,GAAA,EAAD,CAAY+b,WAAW,EAAMxiB,QAAQ,WAArC,uBAVJ,mBAWoB,6BAChB,kBAACyG,GAAA,EAAD,CAAY+b,WAAW,EAAMxiB,QAAQ,WAArC,qBAZJ,mBAaoB,6BAChB,kBAACyG,GAAA,EAAD,CAAY+b,WAAW,EAAMxiB,QAAQ,WAArC,sBAEJ,kBAACyG,GAAA,EAAD,CAAYzF,MAAO,CAACyJ,UAAW,QAASgF,UAAWF,EAAQsS,UAAW7hB,QAAQ,MAA9E,2BAEA,kBAAC6a,GAAD,CAAsBrP,WAAYvC,OAAO4M,kBAQrD,yBAAKpG,UAAWF,EAAQmR,UACtB,kBAACjV,GAAA,EAAD,CAAMnG,WAAS,EAAC0G,QAAS,GACvB,kBAACP,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGK,QAAS,EAAGuQ,WAAW,SAASgG,QAAQ,SAASvhB,MAAO,CAACiS,UAAW,WAClF,kBAACxM,GAAA,EAAD,CAAYgJ,UAAWF,EAAQsS,UAAW7hB,QAAQ,MAAlD,aAEA,kBAAC2K,EAAA,EAAD,MACI,kBAAClE,GAAA,EAAD,CACIgJ,UAAWF,EAAQ0T,iBACnBhjB,MAAM,gBACNkB,QAAQ,QACRnB,QAAQ,WAJZ,YAQJ,yBAAKiB,MAAO,MAAOmB,OAAQ,OAAQX,IAAK,gCACxC,kBAACgF,GAAA,EAAD,2DACA,kBAACkE,EAAA,EAAD,MACI,kBAAClE,GAAA,EAAD,CACIgJ,UAAWF,EAAQ0T,iBACnBhjB,MAAM,gBACNkB,QAAQ,QACRnB,QAAQ,WAJZ,oBAQA,yBAAKiB,MAAO,MAAOmB,OAAQ,OAAQX,IAAK,2BAE5C,kBAACgF,GAAA,EAAD,iBACA,kBAACkE,EAAA,EAAD,MACI,kBAAClE,GAAA,EAAD,CACIgJ,UAAWF,EAAQ0T,iBACnBhjB,MAAM,gBACNkB,QAAQ,QACRnB,QAAQ,WAJZ,WAQA,yBAAKiB,MAAO,MAAOmB,OAAQ,OAAQX,IAAK,gCAnChD,IAmCiF,kBAACgF,GAAA,EAAD,CAAYtF,QAAS,SAArB,QACzE,yBAAKF,MAAO,MAAOmB,OAAQ,OAAQX,IAAK,gCApChD,IAoCiF,kBAACgF,GAAA,EAAD,cAC7E,kBAACkE,EAAA,EAAD,MACA,yBAAK3J,MAAO,CAACyJ,UAAU,UACvB,kBAAChE,GAAA,EAAD,CAAYgJ,UAAWF,EAAQsS,UAAW7hB,QAAQ,MAAlD,SAEA,kBAACyG,GAAA,EAAD,wCAA4C,6BAA5C,oEAMJ,kBAACgF,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGK,QAAS,EAAGuQ,WAAW,SAASgG,QAAQ,SAASvhB,MAAO,CAACiS,UAAW,WAClF,kBAACxM,GAAA,EAAD,CAAYgJ,UAAWF,EAAQsS,UAAW7hB,QAAQ,MAAlD,6BAEA,kBAACyG,GAAA,EAAD,CAAY+b,WAAW,EAAMxiB,QAAQ,MAArC,8FAAqI,6BAArI,4CAAmL,yBAAKgB,MAAO,CAACC,MAAO,OAAOmB,OAAO,QAASX,IAAKnB,KAEnO,6BACI,yBAAKW,MAAM,MAAMmB,OAAO,MAAMX,IAAI,6BACtC,6BACA,kBAAC+N,GAAA,EAAD,CAAMC,UAAWF,EAAQmS,WACf,kBAACe,GAAA,EAAD,CAAgBtiB,QAAST,EAAMgjB,uBAC7B,kBAACC,GAAA,EAAD,CACElT,UAAWF,EAAQ0S,gBACnBtS,UAAU,MACViT,IAAI,eACJxgB,OAAO,MACP0e,MAAM,yCACN3R,MAAM,iBAER,kBAACO,GAAA,EAAD,KACE,kBAACjJ,GAAA,EAAD,CAAYqE,cAAY,EAAC2E,UAAWF,EAAQyS,UAAWhiB,QAAQ,KAAK2P,UAAU,MAA9E,mBAMN,kBAACH,GAAA,EAAD,CAAMC,UAAWF,EAAQmS,WACvB,kBAACe,GAAA,EAAD,CAAgBtiB,QAAST,EAAMmjB,qBAC7B,kBAACF,GAAA,EAAD,CACEhT,UAAU,MACViT,IAAI,cACJxgB,OAAO,MACP0e,MAAM,uCACN3R,MAAM,gBAER,kBAACO,GAAA,EAAD,KACE,kBAACjJ,GAAA,EAAD,CAAYqE,cAAY,EAAC2E,UAAWF,EAAQyS,UAAWhiB,QAAQ,KAAK2P,UAAU,MAA9E,kBAMN,kBAACH,GAAA,EAAD,CAAMC,UAAWF,EAAQmS,WACvB,kBAACe,GAAA,EAAD,CAAgBtiB,QAAST,EAAMoW,2BAC7B,kBAAC6M,GAAA,EAAD,CACEhT,UAAU,MACViT,IAAI,eACJxgB,OAAO,MACP0e,MAAM,wCACN3R,MAAM,oBAER,kBAACO,GAAA,EAAD,KACE,kBAACjJ,GAAA,EAAD,CAAYqE,cAAY,EAAC2E,UAAWF,EAAQyS,UAAWhiB,QAAQ,KAAK2P,UAAU,MAA9E,sBAMN,kBAACH,GAAA,EAAD,CAAMC,UAAWF,EAAQmS,WACjC,kBAACe,GAAA,EAAD,CAAgBtiB,QAAST,EAAMojB,uBAC3B,kBAACH,GAAA,EAAD,CACIhT,UAAU,MACViT,IAAI,qBACJxgB,OAAO,MACP0e,MAAM,4BACN3R,MAAM,uBAEV,kBAACO,GAAA,EAAD,KACI,kBAACjJ,GAAA,EAAD,CAAYqE,cAAY,EAAC2E,UAAWF,EAAQyS,UAAWhiB,QAAQ,KAAK2P,UAAU,MAA9E,yBAMR,kBAACH,GAAA,EAAD,CAAMC,UAAWF,EAAQmS,WACrB,kBAACe,GAAA,EAAD,CAAgBtiB,QAAST,EAAMqjB,sBAC3B,kBAACJ,GAAA,EAAD,CACIhT,UAAU,MACViT,IAAI,eACJxgB,OAAO,MACP0e,MAAM,0CACN3R,MAAM,UAEV,kBAACO,GAAA,EAAD,KACI,kBAACjJ,GAAA,EAAD,CAAYqE,cAAY,EAAC2E,UAAWF,EAAQyS,UAAWhiB,QAAQ,KAAK2P,UAAU,MAA9E,YAMZ,kBAACH,GAAA,EAAD,CAAMC,UAAWF,EAAQmS,WACrB,kBAACe,GAAA,EAAD,CAAgBtiB,QAAST,EAAMsjB,uBAC3B,kBAACL,GAAA,EAAD,CACIhT,UAAU,MACViT,IAAI,wBACJxgB,OAAO,MACP0e,MAAM,oCACN3R,MAAM,0BAEV,kBAACO,GAAA,EAAD,CAAa1O,MAAO,CAACiS,UAAW,WAC5B,kBAACxM,GAAA,EAAD,CAAYgJ,UAAWF,EAAQyS,UAAWlX,cAAY,EAAC9K,QAAQ,KAAK2P,UAAU,MAA9E,mBAOhB,kBAAClE,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGK,QAAS,EAAGuQ,WAAW,SAASgG,QAAQ,SAASvhB,MAAO,CAACiS,UAAW,WACtF,kBAACxM,GAAA,EAAD,CAAYgJ,UAAWF,EAAQwS,eAAgB/hB,QAAQ,MAAvD,6BAEA,kBAACyG,GAAA,EAAD,CAAYzG,QAAQ,SAApB,kBAC2B,6BACf,kBAACyG,GAAA,EAAD,CAAY+b,WAAW,EAAMxiB,QAAQ,WAArC,uBAFZ,oBAG6B,6BACjB,kBAACyG,GAAA,EAAD,CAAY+b,WAAW,EAAMxiB,QAAQ,WAArC,8BAJZ,mBAK4B,6BAChB,kBAACyG,GAAA,EAAD,CAAY+b,WAAW,EAAMxiB,QAAQ,WAArC,qBANZ,qBAO8B,6BAClB,kBAACyG,GAAA,EAAD,CAAY+b,WAAW,EAAMxiB,QAAQ,WAArC,sCARZ,gBASyB,6BACb,kBAACyG,GAAA,EAAD,CAAY+b,WAAW,EAAMxiB,QAAQ,WAArC,uBAVZ,mBAW4B,6BAChB,kBAACyG,GAAA,EAAD,CAAY+b,WAAW,EAAMxiB,QAAQ,WAArC,qBAZZ,mBAa4B,6BAChB,kBAACyG,GAAA,EAAD,CAAY+b,WAAW,EAAMxiB,QAAQ,WAArC,sBAEZ,kBAACyG,GAAA,EAAD,CAAYgJ,UAAWF,EAAQsS,UAAW7hB,QAAQ,MAAlD,2BAEA,kBAAC6a,GAAD,CAAsBrP,WAAYvC,OAAO4M,kB,oQChWzD,IAgBqBqN,G,wNACjB,WAAYxjB,GAAQ,IAAD,8BACf,cAAMA,IAGVyjB,YAAc,SAAAhc,GACVA,EAAM2L,iBACN7J,OAAOC,SAASka,KAAO,iBANR,E,qDAUf,OACI,kBAACje,GAAA,EAAD,CAAQC,QAAShE,KAAK1B,MAAM2jB,gBACpB3d,kBAAgB,0BAChBC,KAAMvE,KAAK1B,MAAMmF,KACjBe,SAAU,MAEd,kBAACC,GAAA,EAAD,CAAa9C,GAAG,0BAA0BqC,QAAShE,KAAK1B,MAAM2jB,iBAA9D,0BACA,kBAACvd,GAAA,EAAD,CAAeC,UAAQ,GACf,kBAACU,GAAA,EAAD,CAAYzF,MAxBzB,CACC0J,aAAc,QAuB4B1K,QAAQ,QAAQmB,QAAQ,UAAtD,eACU,kBAAC,KAAD,MADV,+CAGA,6BACA,kBAACsF,GAAA,EAAD,CAAYzF,MA5BzB,CACC0J,aAAc,QA2B4B1K,QAAQ,QAAQmB,QAAQ,UAAtD,gEAGA,6BACA,kBAACsF,GAAA,EAAD,CAAYzG,QAAQ,QAAQmB,QAAQ,UAApC,0DAGJ,yBAAKmiB,MAAM,OACP,uBAAGF,KAAK,IAAIrgB,GAAI,YACd,uBAAGugB,MAAM,yBADX,wBAGA,uBAAGnjB,QAASiB,KAAK+hB,YAAaC,KAAK,IAAIrgB,GAAI,gBAAgB,uBAAGugB,MAAM,uBAApE,uBAIJ,kBAAC7c,GAAA,EAAD,CAAYzG,QAAQ,UAAUmB,QAAQ,SAAtC,2DAIJ,kBAACkF,GAAA,EAAD,KACI,kBAACtG,EAAA,EAAD,CAAQI,QAASiB,KAAK1B,MAAM2jB,iBAA5B,e,GA3CoBvhB,IAAMC,W,iQCvBzBwhB,G,wNAEjB,WAAY7jB,GAAQ,IAAD,8BACf,cAAMA,IAGVC,YAAc,SAAAwH,GACV,MAAuB,OAAnB8B,OAAOua,SACA,EAAK9jB,MAAMS,QAAQ,UAGnB,EAAKT,MAAMS,QAAQ,YATf,E,qDAgBf,GAAuB,OAAnB8I,OAAOua,SACP,IAAIC,EAAa,cAGbA,EAAa,UAErB,OACI,kBAAC1jB,EAAA,EAAD,CAAQE,MAAM,QAAQE,QAASiB,KAAKzB,aAAa,2BAAI8jB,Q,GAzBvB3hB,IAAMC,W,6PCAhD,IAkBqB2hB,G,kXAEjBC,oBAAsB,WAClB,EAAKjkB,MAAMC,YAAY,Y,uDAIvB,MAAuB,MAAnBsJ,OAAOua,SACA,kBAAC,GAAD,CAAcrjB,QAASiB,KAAKuiB,sBAI/B,yBAAK3iB,MApBV,CACHG,QAAS,cACTob,WAAY,SACZ6B,eAAgB,eAChBnd,MAAO,UAiBK,6BAAMgI,OAAO4N,SAASzQ,UACtB,yBAAKkd,MAAM,UACP,yBAAK7hB,IAAKwH,OAAO4N,SAAS+M,eAAgB5iB,MAhCvD,CACHsC,aAAc,MACdlB,OAAQ,OACRnB,MAAO,OACPwJ,UAAW,e,GAauB3I,IAAMC,W,mhBCEhD,IAmJe8hB,G,wNAzIX,WAAYnkB,GAAQ,IAAD,8BACf,cAAMA,IAOV2F,YAAc,WACV,EAAK3F,MAAMmF,MAAO,GATH,EAYnBif,2BAA6B,SAAC/W,GAC1B+J,QAAQC,IAAIhK,GACZ6H,IAAMoC,KAAK,cAAe,CAACjK,WAAYA,EAAYgX,OAAQ,QAAQlS,KAAM,EAAKjK,MAAMP,QAC3EyN,MAAM,SAAAC,GACC,IAAIyE,EAAQvE,KAAKC,MAAMH,EAAII,KAAKqE,OAC5BhB,EAAOzD,EAAII,KAAKqD,KACpB,EAAKtQ,SAAS,CACV8b,WAAW,IAEf,EAAKtkB,MAAMsjB,sBAAsBjW,EAAWyM,EAAMhB,OArBnD,EAyBnByL,0BAA4B,SAAC9c,GACzBA,EAAM2L,iBACN,EAAKgR,2BAA2B,OAAO,EAAKlc,MAAMP,OAClD,EAAKa,SAAS,CACV8b,WAAW,KA7BA,EAiCnBE,4BAA8B,SAAC/c,GAC3BA,EAAM2L,iBACN,EAAKgR,2BAA2B,SAAS,EAAKlc,MAAMP,OACpD,EAAKa,SAAS,CACV8b,WAAW,KArCA,EAyCnBG,0BAA4B,SAAChd,GACzBA,EAAM2L,iBACN,EAAKgR,2BAA2B,OAAO,EAAKlc,MAAMP,OAClD,EAAKa,SAAS,CACV8b,WAAW,KA7CA,EAiDnBI,4BAA8B,SAACjd,GAC3BA,EAAM2L,iBACN,EAAKgR,2BAA2B,iBAAiB,EAAKlc,MAAMP,OAC5D,EAAKa,SAAS,CACV8b,WAAW,KArDA,EAyDnBK,aAAe,SAACld,GACZ,EAAKe,SACD,CAACb,MAAOF,EAAMqM,OAAOnM,SAzDzB,EAAKO,MAAQ,CACToc,WAAW,EACX3c,MAAO,WAJI,E,qDAiEf,OACI,kBAAClC,GAAA,EAAD,CAAQC,QAAShE,KAAKiE,YACdK,kBAAgB,4BAChBC,KAAMvE,KAAK1B,MAAMmF,KACjBe,SAAU,KACV4C,WAAW,GAEf,kBAAC3C,GAAA,EAAD,CAAa9C,GAAG,4BAA4BqC,QAAShE,KAAKiE,aAA1D,uBACA,kBAACS,GAAA,EAAD,CAAeC,UAAQ,GACN3E,KAAKwG,MAAMoc,UACR,kBAACvY,GAAA,EAAD,CACInG,WAAS,EAACqG,GAAI,GACdK,QAAS,EACTa,UAAU,SACV0P,WAAW,SACXgG,QAAQ,SACR+B,KAAK,UAEL,yBAAKtjB,MA5FjC,CACAG,QAAS,OACTsJ,UAAW,OACXC,aAAc,SA0FoB,kBAAC6Z,GAAA,EAAD,QAIV,kBAAC9Y,GAAA,EAAD,CACInG,WAAS,EAACqG,GAAI,GACdK,QAAS,EACTuQ,WAAW,SACXgG,QAAQ,SACR+B,KAAK,UAEJ,kBAAC7Y,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACf,kBAACf,EAAA,EAAD,CACGvG,YAAY,WACZpE,MAAM,UACNC,aAAW,0CAEX,kBAACH,EAAA,EAAD,CAAQI,QAASiB,KAAK6iB,0BAA2BjkB,QAAQ,YAAYC,MAAM,WAA3E,QAGA,kBAACF,EAAA,EAAD,CAAQI,QAASiB,KAAK8iB,4BAA6BlkB,QAAQ,YAAYC,MAAM,WAA7E,UAGA,kBAACF,EAAA,EAAD,CAAQI,QAASiB,KAAK+iB,0BAA2BnkB,QAAQ,YAAYC,MAAM,WAA3E,QAGA,kBAACF,EAAA,EAAD,CAAQI,QAASiB,KAAKgjB,4BAA6BpkB,QAAQ,YAAYC,MAAM,WAA7E,qBAKJ,kBAACwL,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAAC6Y,GAAA,EAAD,CAAa7U,UAAU,YACrB,kBAAC8U,GAAA,EAAD,CAAW9U,UAAU,UAArB,aACA,kBAAC+U,GAAA,EAAD,CAAYxkB,aAAW,YAAYE,KAAK,WAAWiH,MAAOjG,KAAKwG,MAAMP,MAAOG,SAAUpG,KAAKijB,cACzF,kBAACjd,GAAA,EAAD,CAAkBC,MAAM,UAAUC,QAAS,kBAACqd,GAAA,EAAD,MAAWze,MAAM,YAC5D,kBAACkB,GAAA,EAAD,CAAkBC,MAAM,SAASC,QAAS,kBAACqd,GAAA,EAAD,MAAWze,MAAM,gBAO3F,kBAACG,GAAA,EAAD,KACI,kBAACtG,EAAA,EAAD,CAAQI,QAASiB,KAAK1B,MAAMmO,YAA5B,e,GAlIoB/L,IAAMC,W,6PCT9C,IAwJe8hB,G,wNA9IX,WAAYnkB,GAAQ,IAAD,8BACf,cAAMA,IAOV2F,YAAc,WACV,EAAK3F,MAAMmF,MAAO,GATH,EAYnB+f,2BAA6B,SAAC7X,EAAW8E,GACrC+C,IAAMC,IAAI,0BAA4B9H,EAAa,SAAW8E,GACzDiD,MAAM,SAAAC,GACH,IAAI4F,EAAO1F,KAAKC,MAAMH,EAAII,KAAKwF,MAC/B,EAAKzS,SAAS,CACV8b,WAAW,IAEf,EAAKtkB,MAAMojB,sBAAsBnI,EAAK5N,OAnB/B,EAuBnB8X,gBAAkB,SAAA1d,GACdA,EAAM2L,iBACN,EAAK8R,2BAA2B,OAAO,EAAKhd,MAAMP,OAClD,EAAKa,SAAS,CACV8b,WAAW,KA3BA,EA+BnBc,kBAAoB,SAAA3d,GAChBA,EAAM2L,iBACL,EAAK8R,2BAA2B,SAAS,EAAKhd,MAAMP,OACrD,EAAKa,SAAS,CACV8b,WAAW,KAnCA,EAuCnBe,gBAAkB,SAAA5d,GACdA,EAAM2L,iBACL,EAAK8R,2BAA2B,OAAO,EAAKhd,MAAMP,OACnD,EAAKa,SAAS,CACV8b,WAAW,KA3CA,EA+CnBgB,kBAAoB,SAAA7d,GAChBA,EAAM2L,iBACN,EAAK8R,2BAA2B,iBAAiB,EAAKhd,MAAMP,OAC5D,EAAKa,SAAS,CACV8b,WAAW,KAnDA,EAuDnBiB,mBAAqB,SAAA9d,GACjBA,EAAM2L,iBACN,EAAK8R,2BAA2B,UAAU,EAAKhd,MAAMP,QAzDtC,EA4DnBgd,aAAe,SAACld,GACZ,EAAKe,SACD,CAACb,MAAOF,EAAMqM,OAAOnM,SA5DzB,EAAKO,MAAQ,CACToc,WAAW,EACX3c,MAAO,WAJI,E,qDAmEf,OACI,kBAAClC,GAAA,EAAD,CAAQC,QAAShE,KAAKiE,YACdK,kBAAgB,4BAChBC,KAAMvE,KAAK1B,MAAMmF,KACjBe,SAAU,KACV4C,WAAW,GAEf,kBAAC3C,GAAA,EAAD,CAAa9C,GAAG,4BAA4BqC,QAAShE,KAAKiE,aAA1D,uBACA,kBAACS,GAAA,EAAD,CAAeC,UAAQ,GACV3E,KAAKwG,MAAMoc,UACJ,kBAACvY,GAAA,EAAD,CACInG,WAAS,EAACqG,GAAI,GACdK,QAAS,EACTa,UAAU,SACV0P,WAAW,SACXgG,QAAQ,SACR+B,KAAK,UAEL,yBAAKtjB,MA9FjC,CACAG,QAAS,OACTsJ,UAAW,OACXC,aAAc,SA4FoB,kBAAC6Z,GAAA,EAAD,QAIlB,kBAAC9Y,GAAA,EAAD,CACInG,WAAS,EAACqG,GAAI,GACdK,QAAS,EACTuQ,WAAW,SACXgG,QAAQ,SACR+B,KAAK,UAEL,kBAAC7Y,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACf,EAAA,EAAD,CACIvG,YAAY,WACZpE,MAAM,UACNC,aAAW,0CAEX,kBAACH,EAAA,EAAD,CAAQI,QAASiB,KAAKyjB,gBAAiB7kB,QAAQ,YAAYC,MAAM,WAAjE,QAGA,kBAACF,EAAA,EAAD,CAAQI,QAASiB,KAAK0jB,kBAAmB9kB,QAAQ,YAAYC,MAAM,WAAnE,UAGA,kBAACF,EAAA,EAAD,CAAQI,QAASiB,KAAK2jB,gBAAiB/kB,QAAQ,YAAYC,MAAM,WAAjE,QAGA,kBAACF,EAAA,EAAD,CAAQI,QAASiB,KAAK4jB,kBAAmBhlB,QAAQ,YAAYC,MAAM,WAAnE,kBAGA,kBAACF,EAAA,EAAD,CAAQI,QAASiB,KAAK6jB,mBAAoBjlB,QAAQ,YAAYC,MAAM,WAApE,cAKR,kBAACwL,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAAC6Y,GAAA,EAAD,CAAa7U,UAAU,YACrB,kBAAC8U,GAAA,EAAD,CAAW9U,UAAU,UAArB,aACA,kBAAC+U,GAAA,EAAD,CAAYxkB,aAAW,YAAYE,KAAK,WAAWiH,MAAOjG,KAAKwG,MAAMP,MAAOG,SAAUpG,KAAKijB,cACzF,kBAACjd,GAAA,EAAD,CAAkBC,MAAM,UAAUC,QAAS,kBAACqd,GAAA,EAAD,MAAWze,MAAM,YAC5D,kBAACkB,GAAA,EAAD,CAAkBC,MAAM,SAASC,QAAS,kBAACqd,GAAA,EAAD,MAAWze,MAAM,gBAOnF,kBAACG,GAAA,EAAD,KACI,kBAACtG,EAAA,EAAD,CAAQI,QAASiB,KAAK1B,MAAMmO,YAA5B,e,GAvIoB/L,IAAMC,W,sQCJfD,IAAMC,U,6PCjBLD,IAAMC,UARtC,I,kDCIe,SAASmjB,GAA+BxlB,GAKnD,OAAQ,6BACA,kBAAC+L,GAAA,EAAD,CAAMnG,WAAS,EAACqG,GAAI,IAChB,kBAACF,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAAClF,GAAA,EAAD,6BAEH,kBAACgF,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACd,kBAAClF,GAAA,EAAD,KACG/G,EAAMib,KAAKvU,SADd,MAC2B1G,EAAMib,KAAK3U,YAI1C,kBAACjG,EAAA,EAAD,CAAQI,QAfU,WACxBT,EAAMylB,oBAAoBzlB,EAAMib,KAAKva,KAAKV,EAAMib,KAAK1D,WAAW,GAAGvX,EAAMib,KAAKvR,MAclCpJ,QAAQ,YAAYC,MAAM,WAAhE,SChBC,SAASmlB,GAA2B1lB,GAI/C,OAAQ,6BACE,kBAAC+L,GAAA,EAAD,CAAMnG,WAAS,EAACqG,GAAI,IAClB,kBAACF,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAAClF,GAAA,EAAD,CAAYxG,MAAO,YAAaD,QAAS,SAAzC,IAAoDN,EAAM2lB,SAASC,cAAnE,MAEH,kBAAC7Z,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACd,kBAAClF,GAAA,EAAD,KACG/G,EAAM2lB,SAASE,eADlB,MACqC7lB,EAAM2lB,SAASrf,YAIxD,kBAACjG,EAAA,EAAD,CAAQI,QAdU,WACxBT,EAAMylB,oBAAoBzlB,EAAM2lB,SAASjlB,KAAKV,EAAM2lB,SAASpO,WAAW,GAAGvX,EAAM2lB,SAASjc,MAa9CpJ,QAAQ,YAAYC,MAAM,WAAhE,SCYC,SAASulB,GAAY9lB,GAChC,IAAM6P,EAAUV,KADuB,EAcb/M,IAAM2jB,SAAS,MAdF,oBAchCC,EAdgC,KAczBC,EAdyB,OAeC7jB,IAAM2jB,UAAS,GAfhB,oBAehCG,EAfgC,KAelBC,EAfkB,OAgBa/jB,IAAM2jB,UAAS,GAhB5B,oBAgBhCK,EAhBgC,KAgBZC,EAhBY,KAwBvC,OADAjP,QAAQC,IAAIrX,EAAMsmB,gBAEV,yBAAKhlB,MAnCN,CACHC,MAAO,OACP2Z,WAAY,OACZ0B,YAAarT,OAAOmL,W3CnBa,M2CmB4B,MAAQ,OACrExR,OAAQ,SACR2c,MAAO,WA+BC,kBAAC9T,GAAA,EAAD,CAAMnG,WAAS,EAAC0G,QAAS,EAAGuQ,WAAY,WACpC,kBAAC9Q,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI4W,QAAS,SAAUhG,WAAY,UAC9C,kBAACtW,GAAA,EAAD,CAAWwJ,UAAWF,EAAQ6S,gBAAiBrf,GAAI,cAAemD,MAAO,WAAYC,aAAc8C,OAAO4N,SAASzQ,WACnH,kBAACrG,EAAA,EAAD,CAAQ0P,UAAWF,EAAQ6S,gBAAiBpiB,QAAQ,YAAYC,MAAM,YAAYE,QA3BjF,WACjByU,IAAMoC,KAAK,cAAc,CAACiP,QAAS1gB,SAASC,eAAe,eAAe6B,QACrEyN,MAAM,SAAAC,GACa,MAAZA,EAAII,KACJlM,OAAOC,SAASka,KAAO,IAGvBuC,EAAS5Q,EAAII,WAoBT,mBACA,kBAAC1O,GAAA,EAAD,CAAYxG,MAAO,aAAcylB,IAErC,kBAACja,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI6Q,GAAI,EAAGxP,GAAI,GAC1B,kBAACvG,GAAA,EAAD,CAAYgJ,UAAWF,EAAQsS,UAAW7hB,QAAQ,MAAlD,iBAEIN,EAAMwmB,UAAU3kB,KAAI,SAACoZ,EAAK9a,GAAN,OACZ,kBAACsmB,GAAA,EAAD,CAAgBC,SAAUR,IAAiB,YAAc/lB,EAAO2H,UAnBtE6e,EAmBiG,YAAcxmB,EAnBrG,SAACsH,EAAOmf,GACxCT,IAAgBS,GAAiBD,MAmBD,kBAACE,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZC,gBAAe,QAAU5mB,EAAQ,WACjCkD,GAAI,QAAUlD,EAAQ,WAEtB,kBAAC4G,GAAA,EAAD,CAAYgJ,UAAWF,EAAQ2R,SAAUvG,EAAKva,MAC9C,kBAACqG,GAAA,EAAD,CAAYgJ,UAAWF,EAAQgS,kBAA/B,UAAyD5G,EAAK2D,QAEhE,kBAACoI,GAAA,EAAD,KACE,kBAACxB,GAAD,CACEvK,KAAMA,EACNwK,oBAAqBzlB,EAAMylB,wBA/B1C,IAACkB,MAsCV,kBAAC5a,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI6Q,GAAI,EAAGxP,GAAI,GAC1B,kBAACvG,GAAA,EAAD,CAAYgJ,UAAWF,EAAQsS,UAAW7hB,QAAQ,MAAlD,gBAEIN,EAAMinB,cAAcplB,KAAI,SAAC8jB,EAASxlB,GAAV,OACpB,kBAACsmB,GAAA,EAAD,CAAgBC,SAAUN,IAAuB,YAAcjmB,EAAO2H,UAvClE6e,EAuCmG,YAAcxmB,EAvCvG,SAACsH,EAAOyf,GAC9Cb,IAAsBa,GAAuBP,MAuCjB,kBAACE,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZC,gBAAe,QAAU5mB,EAAQ,WACjCkD,GAAI,QAAUlD,EAAQ,WAEtB,kBAAC4G,GAAA,EAAD,CAAYgJ,UAAWF,EAAQ2R,SAAUmE,EAASjlB,MAClD,kBAACqG,GAAA,EAAD,CAAYgJ,UAAWF,EAAQgS,kBAA/B,SAAwD8D,EAASrf,UAChEqf,EAASwB,cAAgB5d,OAAO4N,SAASiQ,OAAS,kBAAC,KAAD,CAAS9lB,MAAO,CAACsf,WAAY,UAAa,MAE/F,kBAACoG,GAAA,EAAD,KACI,kBAACtB,GAAD,CACIC,SAAUA,EACVF,oBAAqBzlB,EAAMylB,wBApDpC,IAACkB,MA2DhB,kBAAC5a,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI6Q,GAAI,EAAGxP,GAAI,GAC1B,kBAACvG,GAAA,EAAD,CAAYgJ,UAAWF,EAAQsS,UAAW7hB,QAAQ,MAAlD,qBACA,kBAAC8L,GAAA,EAAD,KACM,kBAACrF,GAAA,EAAD,CAAYgJ,UAAWF,EAAQ2R,SAA/B,QACA,kBAACza,GAAA,EAAD,CAAYgJ,UAAWF,EAAQgS,kBAA/B,eAA8D7hB,EAAMsmB,eAAee,SACnF,kBAACtgB,GAAA,EAAD,uBACkB/G,EAAMsmB,eAAegB,aAEvC,kBAACvgB,GAAA,EAAD,2DACsD/G,EAAMsmB,eAAeiB,kBAG/E,6BACA,kBAACnb,GAAA,EAAD,KACI,kBAACrF,GAAA,EAAD,CAAYgJ,UAAWF,EAAQ2R,SAA/B,UACA,kBAACza,GAAA,EAAD,CAAYgJ,UAAWF,EAAQgS,kBAA/B,eAA8D7hB,EAAMsmB,eAAekB,WACnF,kBAACzgB,GAAA,EAAD,uBACkB/G,EAAMsmB,eAAemB,eAEvC,kBAAC1gB,GAAA,EAAD,2DACsD/G,EAAMsmB,eAAeoB,oBAG7E,6BACA,kBAACtb,GAAA,EAAD,KACE,kBAACrF,GAAA,EAAD,CAAYgJ,UAAWF,EAAQ2R,SAA/B,QACA,kBAACza,GAAA,EAAD,CAAYgJ,UAAWF,EAAQgS,kBAA/B,eAA8D7hB,EAAMsmB,eAAeqB,SACnF,kBAAC5gB,GAAA,EAAD,uBACkB/G,EAAMsmB,eAAesB,aAEvC,kBAAC7gB,GAAA,EAAD,2DACsD/G,EAAMsmB,eAAeuB,kBAG7E,6BACA,kBAACzb,GAAA,EAAD,KACE,kBAACrF,GAAA,EAAD,CAAYgJ,UAAWF,EAAQ2R,SAA/B,kBACA,kBAACza,GAAA,EAAD,CAAYgJ,UAAWF,EAAQgS,kBAA/B,eAA8D7hB,EAAMsmB,eAAewB,WACnF,kBAAC/gB,GAAA,EAAD,uBACkB/G,EAAMsmB,eAAeyB,eAEvC,kBAAChhB,GAAA,EAAD,2DACsD/G,EAAMsmB,eAAe0B,uBCvJ1F,SAASC,GAAejoB,GACnC,OACI,kBAAC,GAAD,CACM0X,qBAAsB1X,EAAM0X,qBAC5BiF,eAAgB3c,EAAM2c,eACtBjD,WAAY,MACZuB,KAAMjb,EAAMib,KACZ5N,WAAYrN,EAAMqN,a,iQCajB6a,G,wNAlBX,WAAYloB,GAAQ,uCACVA,G,qDAIN,OACI,kBAAC,GAAD,CACM0X,qBAAsBhW,KAAK1B,MAAM0X,qBACjCiF,eAAgBjb,KAAK1B,MAAM2c,eAC3BlD,WAAY,MACZX,KAAMpX,KAAK1B,MAAM8Y,KACjBgB,MAAOpY,KAAK1B,MAAM8Z,MAClBzM,WAAY3L,KAAK1B,MAAMqN,iB,GAdZjL,IAAMC,W,iQCmBpB8lB,G,wNAjBX,WAAYnoB,GAAQ,uCACVA,G,qDAIN,OACI,kBAAC,GAAD,CACI0X,qBAAsBhW,KAAK1B,MAAM0X,qBACjCiF,eAAgBjb,KAAK1B,MAAM2c,eAC3B3C,UAAW,MACXF,MAAOvQ,OAAO6e,qB,GAZJhmB,IAAMC,W,iQCgBjBgmB,G,wNAdX,WAAYroB,GAAQ,uCACVA,G,qDAIN,OACI,kBAAC,GAAD,CAAMoW,0BAA2B1U,KAAK1B,MAAMoW,0BAA2BsB,qBAAsBhW,KAAK1B,MAAM0X,qBAAsBiF,eAAgBjb,KAAK1B,MAAM2c,eAAgBjG,mBAAoB,MAAO0C,gBAAiB1X,KAAK1B,MAAMoZ,gBAAiBgD,WAAY1a,KAAK1B,MAAMoc,WAAYtC,MAAOpY,KAAK1B,MAAMsoB,wBAAyBpS,MAAOxU,KAAK1B,MAAMkW,MAAOpK,WAAYpK,KAAK1B,MAAMmW,mB,GAR1V/T,IAAMC,WCgBxB,SAASkmB,GAAQvoB,GAC5B,OAAQ,yBAAKsB,MAVN,CACHC,MAAO,OACP2Z,WAAY,OACZ0B,YAAarT,OAAOmL,WhDNa,MgDM4B,MAAQ,OACrExR,OAAQ,SACR2c,MAAO,WAMC,kBAAC9T,GAAA,EAAD,CAAMnG,WAAS,EAAC0G,QAAS,EAAGuQ,WAAY,WACpC,kBAAC9Q,GAAA,EAAD,CAAMC,MAAI,EAACM,QAAS,EAAGL,GAAI,GAAI4W,QAAS,SAAUhG,WAAY,UAC1D,kBAAC9V,GAAA,EAAD,CAAYzG,QAAS,SAArB,4TAOJ,kBAACyL,GAAA,EAAD,CAAMO,QAAS,EAAGN,MAAI,EAACC,GAAI,GAAI6Q,GAAI,EAAG+F,QAAS,SAAUhG,WAAY,UACjE,kBAAC/M,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,KACI,kBAACjJ,GAAA,EAAD,CAAYxG,MAAO,cAAeD,QAAS,MAA3C,4BAGA,kBAACyG,GAAA,EAAD,CAAYzG,QAAS,QAASwiB,WAAW,GAAzC,wHAEI,6BAFJ,8BAII,6BAJJ,wCAMI,6BANJ,6BAQI,6BARJ,sDAUI,6BAVJ,6BAYI,6BAZJ,8BAcI,6BAdJ,+BAiBA,kBAAC/b,GAAA,EAAD,CAAYxG,MAAO,cAAeD,QAAS,MAA3C,mBAGA,kBAACyG,GAAA,EAAD,CAAYzG,QAAS,QAASwiB,WAAW,GAAzC,wJAGA,kBAAC/b,GAAA,EAAD,CAAYzG,QAAS,KAAMmB,QAAS,UAApC,kBAGA,kBAACsF,GAAA,EAAD,CAAYzG,QAAS,QAASwiB,WAAW,GAAzC,2KAMZ,kBAAC/W,GAAA,EAAD,CAAMO,QAAS,EAAGN,MAAI,EAACC,GAAI,GAAI6Q,GAAI,EAAG+F,QAAS,SAAUhG,WAAY,UACjE,kBAAC/M,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,KACI,kBAACjJ,GAAA,EAAD,CAAYzG,QAAS,MAArB,QAGA,kBAACyG,GAAA,EAAD,CAAYzG,QAAS,QAASwiB,WAAW,GAAzC,gEAGA,kBAAC/b,GAAA,EAAD,CAAYzG,QAAS,MAArB,UAGA,kBAACyG,GAAA,EAAD,CAAYzG,QAAS,QAASwiB,WAAW,GAAzC,iEAGA,kBAAC/b,GAAA,EAAD,CAAYzG,QAAS,MAArB,QAGA,kBAACyG,GAAA,EAAD,CAAYzG,QAAS,QAASwiB,WAAW,GAAzC,kEAGA,kBAAC/b,GAAA,EAAD,CAAYzG,QAAS,MAArB,kBAGA,kBAACyG,GAAA,EAAD,CAAYzG,QAAS,QAASwiB,WAAW,GAAzC,kEAGA,kBAAC/b,GAAA,EAAD,CAAYzG,QAAS,MAArB,YAGA,kBAACyG,GAAA,EAAD,CAAYzG,QAAS,QAASwiB,WAAW,GAAzC,6JAMZ,kBAAC/W,GAAA,EAAD,CAAMC,MAAI,EAACM,QAAS,EAAGL,GAAI,GAAI6Q,GAAI,EAAG+F,QAAS,SAAUhG,WAAY,UACjE,kBAACzQ,GAAA,EAAD,CAAOwX,MAAM,SACX,yBAAK7hB,IAAK,0DAA2DmhB,IAAI,SACzE,yBAAKU,MAAM,cACT,gDACA,uBAAGA,MAAM,UAAT,4BACA,meACA,kDACA,yDAIR,kBAAC7X,GAAA,EAAD,CAAMC,MAAI,EAACM,QAAS,EAAGL,GAAI,GAAI6Q,GAAI,EAAG+F,QAAS,SAAUhG,WAAY,UACjE,yBAAK9M,UAAU,QAAQzO,MAAO,CAACoB,OAAQ,UACnC,yBAAKX,IAAK,0DAA2DmhB,IAAI,SACzE,yBAAKnT,UAAU,cACX,+CACA,uBAAGA,UAAU,UAAb,kBACA,yPAMZ,kBAAChE,GAAA,EAAD,CAAMC,MAAI,EAACM,QAAS,EAAGL,GAAI,GAAI6Q,GAAI,EAAG+F,QAAS,SAAUhG,WAAY,UACjE,yBAAK9M,UAAU,QAAQzO,MAAO,CAACoB,OAAQ,UACnC,yBAAKX,IAAK,kCAAmCmhB,IAAI,SACjD,yBAAKnT,UAAU,cACX,6CACA,uBAAGA,UAAU,UAAb,iBACA,6TCjIjB,SAASyY,GAAuBxoB,GAK3C,OACQ,kBAACK,EAAA,EAAD,CAAQiB,MAAOiI,OAAOmL,WjDJO,MiDIkC,CAACkM,WAAY,OAAS,CAACA,WAAY,QAAStgB,QAAQ,YAAYmoB,KAAK,QAAQloB,MAAM,UAAUE,QAL9H,SAAAgH,GAClC2P,QAAQC,IAAIrX,EAAMyX,SAClBzX,EAAM0oB,8BAA8B1oB,EAAMyX,WAGtC,gBCoBG,SAASkR,GAAsB3oB,GAAQ,IAAD,EACPoC,IAAM2jB,UAAS,GADR,oBAC1C6C,EAD0C,KAC3BC,EAD2B,KAK3ChZ,EAAUV,KAChB,OAAQ,yBAAK7N,MAfN,CACHC,MAAO,OACP2Z,WAAY,OACZ0B,YAAarT,OAAOmL,WlDlBa,MkDkB4B,MAAQ,OACrExR,OAAQ,SACR2c,MAAO,WAWC,kBAAC9Y,GAAA,EAAD,CAAYgJ,UAAWF,EAAQsS,UAAW7hB,QAAQ,MAAlD,2BAEIN,EAAM8oB,sBAAsBjnB,KAAI,SAAC4V,EAAStX,GAAV,OAC5B,kBAACsmB,GAAA,EAAD,CAAgBC,SAAUkC,IAAkB,YAAczoB,EAAO2H,UAR1D6e,EAQsF,YAAcxmB,EAR1F,SAACsH,EAAOshB,GACzCF,IAAiBE,GAAapC,MAQV,kBAACE,GAAA,EAAD,CACIC,WAAY,kBAAC,KAAD,MACZC,gBAAe,QAAU5mB,EAAQ,WACjCkD,GAAI,QAAUlD,EAAQ,WAEtB,kBAAC4G,GAAA,EAAD,CAAYgJ,UAAWF,EAAQ2R,SAAU/J,EAAQhL,SACjD,kBAAC1F,GAAA,EAAD,CAAYgJ,UAAWF,EAAQgS,kBAA/B,WAA0DpK,EAAQjH,eAClE,kBAACgY,GAAD,CAAwB/Q,QAASA,EAASiR,8BAA+B1oB,EAAM0oB,iCAEnF,kBAAC1B,GAAA,EAAD,KACQ,kBAACjgB,GAAA,EAAD,CAAYqE,cAAY,EAAC9K,QAAQ,KAAK2P,UAAU,MAC5C,kBAAC,KAAD,MADJ,IACgBwH,EAAQjH,cADxB,MAC0CiH,EAAQhH,eADlD,IACkE,kBAAC,KAAD,OAElE,kBAAC1J,GAAA,EAAD,CAAYgJ,UAAWF,EAAQgS,kBAA/B,6BAA4EpK,EAAQvH,aAtB1F,IAACyW,M,iQCDhBqC,G,wNA3BX,WAAYhpB,GAAQ,uCACVA,G,qDAKN,OADAoX,QAAQC,IAAI3V,KAAK1B,MAAMyX,SAEnB,kBAAC,GAAD,CACIC,qBAAsBhW,KAAK1B,MAAM0X,qBACjCiF,eAAgBjb,KAAK1B,MAAM2c,eAC3BhD,0BAA2B,MAC3BnJ,cAAe9O,KAAK1B,MAAMyX,QAAQjH,cAClCN,UAAWxO,KAAK1B,MAAMyX,QAAQvH,UAC9BzD,QAAS/K,KAAK1B,MAAMyX,QAAQhL,QAC5BqN,MAAOpY,KAAK1B,MAAMyX,QAAQqC,MAC1BV,gBAAiB1X,KAAK1B,MAAMyX,QAAQ2B,gBACpC3I,eAAgB/O,KAAK1B,MAAMyX,QAAQhH,eACnCsK,sBAAuBrZ,KAAK1B,MAAMyX,QAAQsD,sBAC1C7N,UAAWxL,KAAK1B,MAAMyX,QAAQvK,UAC9BF,QAAStL,KAAK1B,MAAMgN,c,GArBW5K,IAAMC,W,qBCC/C8M,GAAYC,cAAW,SAACsO,GAAD,MAAY,CACvCrO,KAAM,CACJ7M,SAAU,WACVK,KAAM,MACND,IAAK,WAIM,SAASqmB,KACtB,IAAMpZ,EAAUV,KAEhB,OACE,yBAAKY,UAAWF,EAAQR,MACtB,kBAACwV,GAAA,EAAD,CAAkB4D,KAAM,IAAKloB,MAAM,e,6PC0CzC,IAyGM2oB,G,wNAEF,WAAYlpB,GAAQ,IAAD,EAGf,GAHe,qBACf,cAAMA,IAwCVmpB,kBAAoB,WAChB,EAAK3gB,SAAU,CACXvC,MAAM,KA3CK,EA+CnByR,qBAAuB,SAAC0R,GACI,QAApB7f,OAAOua,UACP5O,IAAMoC,KAAK,kBAAmB,CAACqF,eAAgByM,EAAU,IAAM,MAC1DhU,MAAM,SAAAC,GACH+B,QAAQC,IAAI,cAGxB,EAAK7O,SAAS,CACVmU,eAAgByM,KAvDL,EA2DnBhT,0BAA4B,WACxBlB,IAAMC,IAAI,0BACLC,MAAM,SAAAC,GACC,IAAIgU,EAAS,EAAKnhB,MAAMjC,KACpBsD,OAAOmL,WrD9NU,QqD+NjB2U,GAAS,GAEb,IAAM/P,EAAwC,MAAzBjE,EAAII,KAAK6D,aAAuB,KAAO/D,KAAKC,MAAMH,EAAII,KAAK6D,cAC1EC,EAA0C,MAA1BlE,EAAII,KAAK8D,cAAwB,KAAOhE,KAAKC,MAAMH,EAAII,KAAK8D,eAClF,EAAK/Q,SAAS,CACE8gB,aAAc,kBAACC,GAAD,CACMnT,0BAA2B,EAAKA,0BAChCkS,wBAAyB/S,KAAKC,MAAMH,EAAII,KAAK6S,yBAC7CpS,MAAOb,EAAII,KAAKS,MAChBC,aAAcZ,KAAKC,MAAMH,EAAII,KAAKU,cAClCuB,qBAAsB,EAAKA,qBAC3BiF,eAAgB,EAAKzU,MAAMyU,eAC3BP,WAAY9C,EACZF,gBAAiBG,IAErCtT,KAAMojB,OAGlC,EAAK7gB,SAAS,CACV8gB,aAAc,kBAACL,GAAD,SAnFH,EAuFnBO,iBAAmB,WACf,EAAKhhB,SAAU,CACXvC,MAAM,KAzFK,EA6FnBge,oBAAsB,SAAC9R,GACN,YAATA,EACA,EAAK3J,SAAS,CACVihB,gBAAgB,IAIpBlgB,OAAOC,SAASka,KAAO,gBApGZ,EAwGnBwB,2BAA6B,SAACjK,EAAK5N,GAC/B,IAAIgc,EAAS,EAAKnhB,MAAMjC,KACpBsD,OAAOmL,WrDzQsB,QqD0Q7B2U,GAAS,GAEb,EAAK7gB,SAAS,CACV8gB,aAAc,OAElB,EAAK9gB,SAAS,CACVkhB,qBAAqB,EACrBJ,aAAc,kBAACrB,GAAD,CAAgBvQ,qBAAsB,EAAKA,qBAAsBiF,eAAgB,EAAKzU,MAAMyU,eAAgBjD,WAAY,MAAOuB,KAAMA,EAAM5N,WAAYA,IACrKpH,KAAMojB,KAnHK,EAuHnBjG,sBAAwB,SAAC3b,GACrBA,EAAM2L,iBACN,EAAK5K,SAAS,CACVkhB,qBAAqB,KA1HV,EA+HnBpG,sBAAwB,SAAA7b,GACpBA,EAAM2L,iBACN,EAAK5K,SAAS,CACVmhB,qBAAqB,KAlIV,EAsInBC,iCAAmC,SAACniB,GAChCA,EAAM2L,iBACN8B,IAAMC,IAAI,6BACLC,MAAM,SAAAC,GACC,IAAIgU,EAAS,EAAKnhB,MAAMjC,KACpBsD,OAAOmL,WrD1SU,QqD2SjB2U,GAAS,GAEb,IAAIQ,EAActU,KAAKC,MAAMH,EAAII,MACjC,EAAKjN,SAAS,CACV8gB,aAAc,kBAACX,GAAD,CAAuBD,8BAA+B,EAAKA,8BAA+BI,sBAAuBe,IAC/HC,qBAAsBD,EACtBE,6BAA6B,EAC7B9jB,KAAMojB,OAGtB,EAAK7gB,SAAS,CACV8gB,aAAc,kBAACL,GAAD,SAvJH,EA2JnBP,8BAAgC,SAAAjR,GAC5B,IAAI4R,EAAS,EAAKnhB,MAAMjC,KACpBsD,OAAOmL,WrD5TsB,QqD6T7B2U,GAAS,GAEb,EAAK7gB,SAAS,CACV8gB,aAAc,kBAAC,GAAD,CAAkC5R,qBAAsB,EAAKA,qBAAsBiF,eAAgB,EAAKzU,MAAMyU,eAAgBlF,QAASA,IACrJxR,KAAMojB,KAlKK,EAsKnBjF,2BAA6B,SAAC/W,EAAWyM,EAAMhB,GAC3C,IAAIuQ,EAAS,EAAKnhB,MAAMjC,KACpBsD,OAAOmL,WrDvUsB,QqDwU7B2U,GAAS,GAEb,EAAK7gB,SAAS,CACV8gB,aAAc,OAElB,EAAK9gB,SAAS,CACVmhB,qBAAqB,EACrBL,aAAc,kBAAC,GAAD,CAAgB5R,qBAAsB,EAAKA,qBAAsBiF,eAAgB,EAAKzU,MAAMyU,eAAgBlD,WAAY,MAAOK,MAAOA,EAAOhB,KAAMA,EAAMzL,WAAYA,IACnLpH,KAAMojB,KAjLK,EAqLnB1F,gBAAkB,SAAAlc,GACdA,EAAM2L,iBACN,EAAK5K,SAAS,CACVihB,gBAAgB,KAxLL,EA4LnBO,0BAA4B,SAAAviB,GACxBA,EAAM2L,iBACN,EAAK5K,SAAS,CACVmhB,qBAAqB,KA/LV,EAmMnBM,0BAA4B,SAAAxiB,GACxBA,EAAM2L,iBACN,EAAK5K,SAAS,CACVkhB,qBAAqB,KAtMV,EA0MnB7K,gBAAkB,SAACne,EAAMyb,EAASrQ,EAAWpC,GACzC,IAAI2f,EAAS,EAAKnhB,MAAMjC,KACpBsD,OAAOmL,WrD3WsB,QqD4W7B2U,GAAS,GAEb,EAAK7gB,SAAS,CACV8gB,aAAc,kBAAC,GAAD,CAAU5R,qBAAsB,EAAKA,qBAAsBiF,eAAgB,EAAKzU,MAAMyU,eAAgBjc,KAAMA,EAAMoL,WAAYA,EAAYqQ,SAAUA,EAAUzS,IAAKA,IACjLzD,KAAMojB,KAjNK,EAqNnBrG,sBAAwB,SAAAvb,GACpBA,EAAM2L,iBACN,IAAIiW,EAAS,EAAKnhB,MAAMjC,KACpBsD,OAAOmL,WrDvXsB,QqDwX7B2U,GAAS,GAEb,EAAK7gB,SAAS,CACV8gB,aAAc,kBAAC,GAAD,CAAY5R,qBAAsB,EAAKA,qBAAsBiF,eAAgB,EAAKzU,MAAMyU,eAAgBzU,MAAO,QAC5HjC,KAAMojB,KA7NI,EAkOnBa,mBAAqB,SAAAziB,GACO,QAApB8B,OAAOua,UACC5O,IAAMC,IAAI,mBACLC,MAAM,SAAAC,GACH,IAAIgU,EAAS,EAAKnhB,MAAMjC,KACpBsD,OAAOmL,WrDtYE,QqDuYT2U,GAAS,GAEb,IAAIc,EAAc9U,EAAII,KAClB+Q,EAAYjR,KAAKC,MAAM2U,EAAY3D,WACnCS,EAAgB1R,KAAKC,MAAM2U,EAAYlD,eACvCX,EAAiB/Q,KAAKC,MAAM2U,EAAY7D,gBAC5C,EAAK9d,SAAS,CACV8gB,aAAc,kBAACxD,GAAD,CAAaL,oBAAqB,EAAK5G,gBAAiB2H,UAAWA,EAAWS,cAAeA,EAAeX,eAAgBA,IAC1IE,UAAWA,EACXS,cAAeA,EACfX,eAAgBA,EAChB8D,mBAAmB,EACnBnkB,KAAMojB,OAGlB,EAAK7gB,SAAS,CACV8gB,aAAc,kBAACL,GAAD,SAI1B,EAAKhF,oBAAoB,YA5Pd,EAiQnBd,oBAAsB,SAAA1b,GAClBA,EAAM2L,iBACN8B,IAAMC,IAAI,iBACLC,MAAM,SAAAC,GACH,IAAMqK,EAAYnK,KAAKC,MAAMH,EAAII,KAAKiK,WAChCD,EAAiBlK,KAAKC,MAAMH,EAAII,KAAKgK,gBACvC4J,EAAS,EAAKnhB,MAAMjC,KACpBsD,OAAOmL,WrDvac,QqDwarB2U,GAAS,GAEb,EAAK7gB,SAAS,CACV8gB,aAAc,kBAAC,GAAD,CAAU5J,UAAWA,EAAWD,eAAgBA,EAAgBZ,gBAAiB,EAAKA,kBACpG5Y,KAAMojB,OAGlB,EAAK7gB,SAAS,CACV8gB,aAAc,kBAACL,GAAD,SAjRH,EAqRnBoB,oBAAsB,WAClB,EAAK7hB,SAAS,CACV8gB,aAAc,kBAAC,GAAD,CAAMlT,0BAA2B,EAAKA,0BAA2BgN,sBAAuB,EAAKA,sBAAuBC,qBAAsB,EAAKA,qBAAsBL,sBAAuB,EAAKA,sBAAuBG,oBAAqB,EAAKA,oBAAqBG,sBAAuB,EAAKA,2BAvRtS,EA4RnBgH,mBAAqB,SAAA7iB,GACjB,IAAI4hB,EAAS,EAAKnhB,MAAMjC,KACpBsD,OAAOmL,WrD7bsB,QqD8b7B2U,GAAS,GAEb,EAAK7gB,SAAS,CACV8gB,aAAc,kBAACf,GAAD,MACdtiB,KAAMojB,KAnSK,EAuSnBhG,qBAAuB,SAAA5b,GACnBA,EAAM2L,iBACN,IAAIiW,EAAS,EAAKnhB,MAAMjC,KACpBsD,OAAOmL,WrDzcsB,QqD0c7B2U,GAAS,GAEb,EAAK7gB,SAAS,CACV8gB,aAAc,kBAAC,GAAD,CAAa5R,qBAAsB,EAAKA,qBAAsBiF,eAAgB,EAAKzU,MAAMyU,iBACvG1W,KAAMojB,KA/SK,EAoTnBkB,sBAAwB,WACpB,EAAK/hB,SAAS,CACVgiB,eAAgB,KAChBC,gBAAgB,KAvTL,EA2TnBC,SAAW,WACP,OACI,EAAKxiB,MAAMohB,cA7TA,EAkUnBqB,qBAAuB,SAACljB,GACpB,EAAKe,SAAS,CACVgiB,eAAgB/iB,EAAMyX,cACtBuL,gBAAgB,KAlUD,KAAflhB,OAAOG,IACP,EAAKxB,MAAQ,CACTohB,aAAc,kBAAC,GAAD,CAAMlT,0BAA2B,EAAKA,0BAA2BgN,sBAAuB,EAAKA,sBAAuBC,qBAAsB,EAAKA,qBAAsBL,sBAAuB,EAAKA,sBAAuBG,oBAAqB,EAAKA,oBAAqBG,sBAAuB,EAAKA,wBACjTyG,6BAA6B,EAC7BK,mBAAmB,QAIvB,QAAyB3mB,GAArB8F,OAAOqhB,MAAM3Q,KAAmB,CAChC,IAAM4Q,OAA6BpnB,GAAnB8F,OAAO4N,UAA+D,MAAhC5N,OAAO4N,SAAS2T,YACtE,EAAK5iB,MAAQ,CACTohB,aAAc,kBAAC,GAAD,CAAU5R,qBAAsB,EAAKA,qBAAsBiF,eAAgBkO,EAASnqB,KAAM6I,OAAOqhB,MAAMlqB,KAAMyb,SAAU5S,OAAOqhB,MAAMrT,WAAYzL,WAAYvC,OAAOuC,WAAYpC,IAAKH,OAAOG,MACzMqgB,6BAA6B,EAC7BK,mBAAmB,OAGtB,CACD,IAAMS,OAA6BpnB,GAAnB8F,OAAO4N,UAA+D,MAAhC5N,OAAO4N,SAAS2T,YACtE,EAAK5iB,MAAQ,CACTohB,aAAc,kBAACrB,GAAD,CAAgBvQ,qBAAsB,EAAKA,qBAAsBiF,eAAgBkO,EAASnR,WAAY,MAAOuB,KAAM1R,OAAOqhB,MAAOvd,WAAY9D,OAAOqhB,MAAM9P,eACxKiP,6BAA6B,EAC7BK,mBAAmB,GAxBhB,OA4Bf,EAAKliB,MAAMjC,MAAO,EAClB,EAAKiC,MAAMsiB,eAAiB,KAC5B,EAAKtiB,MAAMuiB,gBAAiB,EAC5B,EAAKviB,MAAMuhB,gBAAiB,EAC5B,EAAKvhB,MAAMyhB,qBAAsB,EACR,QAApBpgB,OAAOua,SACR,EAAK5b,MAAMyU,eAAiD,MAAhCpT,OAAO4N,SAAS2T,YAG5C,EAAK5iB,MAAMyU,gBAAiB,EArCjB,E,qDAyUT,IACE9M,EAAYnO,KAAK1B,MAAjB6P,QACF6N,EAAQqN,aAAe,CACzBjJ,QAAS,CACLnU,QAASqd,KACTpd,UAAW,CACPqd,KAAM,cAIlB,OACI,kBAAC,KAAD,CAAkBvN,MAAOA,GACrB,yBAAK3N,UAAWF,EAAQR,MACpB,kBAAC6b,GAAA,EAAD,CACI1oB,SAAS,QACTuN,UAAWob,YAAKtb,EAAQub,OAAT,eACVvb,EAAQwb,YAAc3pB,KAAKwG,MAAMjC,QAGtC,kBAACqlB,GAAA,EAAD,CAASvb,UAAWF,EAAQ0b,UACxB,kBAACxc,GAAA,EAAD,CACIxO,MAAM,UACNC,aAAW,cACXC,QAASiB,KAAK8nB,iBACdxa,KAAK,QACLe,UAAWob,YAAKtb,EAAQ2b,WAAY9pB,KAAKwG,MAAMjC,MAAQ4J,EAAQ4b,OAE/D,kBAAC,KAAD,OAEJ,yBAAKhrB,QAASiB,KAAK2oB,oBAAqB9oB,MAAO,GAAImB,OAAQ,GAAIX,IAAI,+BACnE,kBAACgF,GAAA,EAAD,CAAYzG,QAAQ,KAAKyP,UAAWF,EAAQJ,MAAOic,QAAM,GACrD,uBAAGhI,KAAK,IAAIpiB,MAAO,CAACf,MAAO,UAA3B,gBACI,wCAGR,yBAAKwP,UAAWF,EAAQ8b,OACxB,yBAAK5b,UAAWF,EAAQ+b,gBACpB,kBAAC,GAAD,CAAc3rB,YAAayB,KAAKuiB,uBAEpC,yBAAKlU,UAAWF,EAAQgc,eACpB,kBAAC9c,GAAA,EAAD,CACIvO,aAAW,YACXumB,gBAAe,qCACf+E,gBAAc,OACdrrB,QAASiB,KAAKipB,qBACdpqB,MAAM,WAEN,kBAAC,KAAD,UAKhB,kBAAC+f,GAAA,EAAD,CACIrB,SAAUvd,KAAKwG,MAAMsiB,eACrBuB,aAAc,CAACC,SAAU,MAAOC,WAAY,SAC5C5oB,GAAI,qCACJkd,aAAW,EACX2L,gBAAiB,CAACF,SAAU,MAAOC,WAAY,SAC/ChmB,KAAMvE,KAAKwG,MAAMuiB,eACjB/kB,QAAShE,KAAK6oB,uBAEd,kBAAC7J,GAAA,EAAD,KACI,kBAAC,GAAD,CAAczgB,YAAayB,KAAKuiB,wBAGxC,kBAACkI,GAAA,EAAD,CACI9oB,GAAG,aACH0M,UAAWF,EAAQuc,OACnB9rB,QAAQ,aACR+rB,OAAO,OACPpmB,KAAMvE,KAAKwG,MAAMjC,KACjB4J,QAAS,CACLqR,MAAOrR,EAAQyc,cAGnB,yBAAKvc,UAAWF,EAAQ0c,cACpB,yBAAKxc,UAAWF,EAAQ2c,kBACpB,kBAAC,GAAD,CAAc/rB,QAASiB,KAAKuiB,uBAEhC,yBAAKlU,UAAWF,EAAQ4c,mBACpB,kBAAC1d,GAAA,EAAD,CAAYtO,QAASiB,KAAKynB,mBACE,QAAvBuD,KAASvf,UAAsB,kBAAC,KAAD,MAAsB,kBAAC,KAAD,SAIlE,kBAAClC,EAAA,EAAD,MACA,kBAAClE,GAAA,EAAD,CACIgJ,UAAWF,EAAQ0T,iBACnBhjB,MAAM,gBACNkB,QAAQ,QACRnB,QAAQ,WAJZ,QAQA,kBAACiN,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAUkf,QAAM,EAACrnB,IAAK,gBAAiB7E,QAASiB,KAAKshB,uBACjD,kBAAC4J,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAAClf,GAAA,EAAD,CAAcC,QAAS,mBAE3B,kBAACF,GAAA,EAAD,CAAUkf,QAAM,EAACrnB,IAAK,cAAe7E,QAASiB,KAAKyhB,qBAC/C,kBAACyJ,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAAClf,GAAA,EAAD,CAAcC,QAAS,iBAE3B,kBAACF,GAAA,EAAD,CAAUkf,QAAM,EAACrnB,IAAK,kBAAmB7E,QAASiB,KAAK0U,2BACnD,kBAACwW,GAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAAClf,GAAA,EAAD,CAAcC,QAAS,qBAE3B,kBAACF,GAAA,EAAD,CAAUkf,QAAM,EAACrnB,IAAK,cAAe7E,QAASiB,KAAK0hB,uBAC/C,kBAACwJ,GAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAAClf,GAAA,EAAD,CAAcC,QAAS,iBAE3B,kBAACF,GAAA,EAAD,CAAUkf,QAAM,EAACrnB,IAAK,cAAe7E,QAASiB,KAAK4hB,uBAC/C,kBAACsJ,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAAClf,GAAA,EAAD,CAAcC,QAAS,kBAG/B,kBAAC1C,EAAA,EAAD,MACA,kBAAClE,GAAA,EAAD,CACIgJ,UAAWF,EAAQ0T,iBACnBhjB,MAAM,gBACNkB,QAAQ,QACRnB,QAAQ,WAJZ,SAQA,kBAACiN,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAUkf,QAAM,EAACrnB,IAAK,UAAW7E,QAASiB,KAAK2hB,sBAC3C,kBAACuJ,GAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAAClf,GAAA,EAAD,CAAcC,QAAS,cAG/B,kBAAC1C,EAAA,EAAD,MACA,kBAAClE,GAAA,EAAD,CACIgJ,UAAWF,EAAQ0T,iBACnBhjB,MAAM,gBACNkB,QAAQ,QACRnB,QAAQ,WAJZ,aAQA,kBAACiN,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAUkf,QAAM,EAACrnB,IAAK,UAAW7E,QAASiB,KAAKwoB,oBAC3C,kBAAC0C,GAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAAClf,GAAA,EAAD,CAAcC,QAAS,aAE3B,kBAACF,GAAA,EAAD,CAAUkf,QAAM,EAACrnB,IAAK,0BAA2B7E,QAASiB,KAAKkoB,kCAC3D,kBAACgD,GAAA,EAAD,KAAc,kBAAC,KAAD,OACd,kBAAClf,GAAA,EAAD,CAAcC,QAAS,8BAG/B,kBAAC1C,EAAA,EAAD,MACA,kBAAClE,GAAA,EAAD,CACIgJ,UAAWF,EAAQ0T,iBACnBhjB,MAAM,gBACNkB,QAAQ,QACRnB,QAAQ,WAJZ,SAQA,kBAACiN,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAUkf,QAAM,EAACrnB,IAAK,QAAS7E,QAASiB,KAAK4oB,oBACzC,kBAACsC,GAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAAClf,GAAA,EAAD,CAAcC,QAAS,aAInC,0BAAMoC,UAAWob,YAAKtb,EAAQ2S,QAAT,eAChB3S,EAAQgd,aAAenrB,KAAKwG,MAAMjC,QAEnC,yBAAK8J,UAAWF,EAAQ0c,eACvB7qB,KAAKgpB,YAEV,kBAAC,GAAD,CAAY/G,gBAAiBjiB,KAAKiiB,gBAAiBxe,KAAMzD,KAAKwG,MAAMuhB,iBACpE,kBAAC,GAAD,CACItb,WAAYzM,KAAKsoB,0BACjB7kB,KAAMzD,KAAKwG,MAAMyhB,oBACjBrG,sBAAuB5hB,KAAK0iB,6BAEhC,kBAAC0I,GAAD,CACI3e,WAAYzM,KAAKuoB,0BACjB9kB,KAAMzD,KAAKwG,MAAMwhB,oBACjBtG,sBAAuB1hB,KAAKwjB,mC,GAhgBlC9iB,IAAMC,WAwgBTob,SA/mBG,SAACC,GAAD,MAAY,CAC1BrO,KAAM,CACF5N,QAAS,QAEb2pB,OAAQ,CACJ9nB,WAAYoa,EAAMqP,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQvP,EAAMqP,YAAYE,OAAOC,MACjCC,SAAUzP,EAAMqP,YAAYI,SAASC,iBAG7C/B,YAAa,CACT9pB,MAAM,eAAD,OAbO,IAaP,OACLqf,WAdY,IAeZtd,WAAYoa,EAAMqP,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQvP,EAAMqP,YAAYE,OAAOI,QACjCF,SAAUzP,EAAMqP,YAAYI,SAASG,kBAG7C9B,WAAY,CACR1gB,YAAa4S,EAAMpR,QAAQ,IAE/Bmf,KAAM,CACFhqB,QAAS,QAEb2qB,OAAQ,CACJ7qB,MA3BY,IA4BZqgB,WAAY,GAEhB0K,YAAa,CACT/qB,MA/BY,KAiChBgrB,aAAc,CACV9qB,QAAS,cACTid,eAAgB,iBAEpB+N,kBAAkB,yBACdhrB,QAAS,OACTob,WAAY,SACZe,QAASF,EAAMpR,QAAQ,EAAG,IAEvBoR,EAAM6P,OAAOC,SALH,IAMb9O,eAAgB,aAEpB8N,iBAAiB,aACb/qB,QAAS,OACTob,WAAY,SACZe,QAASF,EAAMpR,QAAQ,EAAG,IAEvBoR,EAAM6P,OAAOC,SAEpBjC,SAAU,CACN5oB,gBAAiB,WAErB6f,QAAS,CACLzB,SAAU,EACVnD,QAASF,EAAMpR,QAAQ,GACvBhJ,WAAYoa,EAAMqP,YAAYC,OAAO,SAAU,CAC3CC,OAAQvP,EAAMqP,YAAYE,OAAOC,MACjCC,SAAUzP,EAAMqP,YAAYI,SAASC,gBAEzCxM,YA9DY,KAgEhBiM,aAAc,CACVvpB,WAAYoa,EAAMqP,YAAYC,OAAO,SAAU,CAC3CC,OAAQvP,EAAMqP,YAAYE,OAAOI,QACjCF,SAAUzP,EAAMqP,YAAYI,SAASG,iBAEzC1M,WAAY,GAEhB2C,iBAAkB,CACdrgB,OAAO,WAAD,OAAawa,EAAMpR,QAAQ,GAA3B,OAEVsf,eAAe,aACXnqB,QAAS,QACRic,EAAM+P,YAAYC,GAAG,MAAQ,CAC1BjsB,QAAS,SAGjBoqB,cAAc,aACVpqB,QAAS,QACRic,EAAM+P,YAAYC,GAAG,MAAQ,CAC1BjsB,QAAS,SAGjBkqB,KAAM,CACF5K,SAAU,GAEdtR,MAAM,aACFhO,QAAS,QACRic,EAAM+P,YAAYC,GAAG,MAAQ,CAC1BjsB,QAAS,UAGjBsgB,SAAU,CACJ1Y,KAAM,UACNwF,KAAM,UACN8e,aAAc,UACdC,SAAU,wCA8gBLnQ,CAAsByL,I,UChqBjB1I,QACW,cAA7BjX,OAAOC,SAASqkB,UAEe,UAA7BtkB,OAAOC,SAASqkB,UAEhBtkB,OAAOC,SAASqkB,SAASC,MACvB,2DCVNC,IAASC,OAAO,kBAACC,GAAA,EAAD,KAAe,kBAAC,GAAD,OAAyBpoB,SAASC,eAAe,YD2H1E,kBAAmBooB,WACrBA,UAAUC,cAAcC,MACrBhZ,MAAK,SAAAiZ,GACJA,EAAaC,gBAEdC,OAAM,SAAAvI,GACL5O,QAAQ4O,MAAMA,EAAMwI,c","file":"js/main.66d689e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function LearnGameItems(props) {\r\n    const handleClick = () => {\r\n        props.handleClickGame(props.index)\r\n    }\r\n    if (props.selected === props.index) {\r\n        return (\r\n            <Button\r\n                variant=\"contained\" color=\"primary\"\r\n                aria-label=\"vertical outlined primary button group\"\r\n                onClick={handleClick}\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={handleClick}\r\n                aria-label=\"vertical outlined primary button group\"\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n}","export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const MOBILE_INNER_SCREEN_WIDTH = '960';\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div id=\"MainGameBoard\" style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleoutsidedraggable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var selectedColor = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        selectedColor = SELECTED_ROBOT;\r\n        borderStyle = \"solid\";\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        borderStyle: borderStyle,\r\n        borderColor: selectedColor,\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    onStopDragHandler = (e, position) => {\r\n        this.props.onStopDragHandler(position,this.props.index);\r\n    }\r\n\r\n\r\n    handleCreateMode = () => {\r\n        if (this.props.isCreateMode === 'Yes' && this.props.buildMode) {\r\n            return (\r\n            <Draggable position={{x: this.props.position.left * this.props.dimension, y:this.props.position.top*this.props.dimension}} grid={this.props.draggableGrid} onStop={this.onStopDragHandler} bounds=\"parent\">\r\n                <div onTouchStart={this.handleClick} onMouseDown={this.handleClick} style={styleoutsidedraggable(this.props)}>\r\n                    <div style={styleinside(this.props)}>\r\n                        <div style={styleinside2(this.props)}/>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <div onTouchStart={this.handleClick} onMouseDown={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            this.handleCreateMode()\r\n        );\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.isCreateMode === 'Yes'  && props.buildMode) {\r\n        const onStopDragHandler = (e, position) => {\r\n            props.onStopDragHandler(position);\r\n        }\r\n        return(\r\n        <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n            <img src={GOAL_IMAGE} style={styledragable(props)}/>\r\n        </Draggable>\r\n        )\r\n    }\r\n    else {\r\n        return(<img src={GOAL_IMAGE} style={style(props)}/>)\r\n    }\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({buildMode,show,dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension + dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension + dimension;\r\n            left = position.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        opacity: show ? '0.5' : '0.0',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default (props) => {\r\n    const handleClick = () => {\r\n        props.handleClick(props.dir)\r\n    }\r\n    if (props.buildMode === 'undefined' || !props.buildMode)\r\n    {\r\n        return (\r\n            <div onMouseDown={handleClick} style={style(props)}/>\r\n        );\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LearnGameItems from '../components/LearnGameItems';\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailySingleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Completed!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <Typography variant=\"body1\">\r\n                        You used {this.props.numMoves} Moves, for this puzzle.\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Total Moves: {this.props.totalMoves}\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Finish all puzzles to get submit your score!\r\n                    </Typography>\r\n                    <br/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailySingleModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailyFinalModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClickSubmitGame = () => {\r\n        this.props.submitAnswer(this.props.robotPosition)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Completed the Challenge!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickSubmitGame}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailyFinalModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Submit Puzzle</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField id={\"namesubmit\"} label={\"Name of Puzzle\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleModal;\r\n","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Path Indicators\"\r\n                    checked={this.props.showColoredLineDirections}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n\r\n    state = {\r\n            minutes: 5,\r\n            seconds: 0,\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.puzzleRushTimeUp();\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    timer = () => {\r\n        if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n            return (<h2>Time is up!</h2>)\r\n        }\r\n        else {\r\n            return(\r\n                <h2>Time Remaining: {this.state.minutes}:{this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds}</h2>)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            this.timer()\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ToggleSettings from \"../components/ToggleSettings\";\r\nimport Timer from \"../components/Timer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                        copyButtonText: \"Copy Puzzle Link\"\r\n                     };\r\n        this.state.uri = this.props.isDailyChallenge === 'Yes' ? 'dailychallenge' : this.props.uri;\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <div>\r\n                    <Button color=\"secondary\" variant={\"outlined\"} fullWidth={true} onClick={this.handleCreateBoardClick}>Modify Board</Button>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Switch color=\"primary\" checked={this.props.buildMode} onChange={this.props.toggleBuildMode}/>}\r\n                        label=\"Build Mode\"\r\n                            />\r\n                </div>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.state.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        document.getElementsByClassName(\"MuiSlider-thumb\")[0].blur();\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n    showPuzzleLink = () => {\r\n        if (this.props.createMode === 'Yes' || this.props.isPuzzleRush === 'Yes' || this.props.isLesson === 'Yes' || this.props.isDailyChallengeAnswers === 'Yes' || this.props.isDailyChallenge === 'Yes') {\r\n            return null;\r\n        }\r\n        else {\r\n                return(\r\n                     <div style={{paddingBottom: '10px'}}>\r\n                         <Button fullWidth={true} variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                                 onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                     </div>\r\n                    )\r\n        }\r\n    }\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                {this.showPuzzleLink()}\r\n                 <Divider />\r\n                 <Typography\r\n                     color=\"textSecondary\"\r\n                     display=\"block\"\r\n                     variant=\"caption\"\r\n                     style={{paddingBottom: '10px'}}\r\n                 >\r\n                     Board Actions\r\n                 </Typography>\r\n                 <ButtonGroup fullWidth={true} color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     <Button onClick={this.props.undoMove}>Undo</Button>\r\n                 </ButtonGroup>\r\n                 {this.isCreateMode(this.props.createMode)}\r\n                 <Divider />\r\n                 <ToggleSettings showColoredLineDirections={this.props.showColoredLineDirections} onClick={this.props.toggleLineIndicators}/>\r\n                 <div style={buttonPanel()}>\r\n                     <Typography id=\"discrete-slider-small-steps\"\r\n                                 color=\"textSecondary\"\r\n                                 display=\"inline\"\r\n                                 gutterBottom>\r\n                         Size Of Board\r\n                     </Typography>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={this.props.squareSizeValue}\r\n                         valueLabelDisplay=\"auto\"\r\n                         id=\"sliderelement\"\r\n                     />\r\n                 </div>\r\n                 <Divider/>\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n}\r\n\r\nconst paperstyle = () => {\r\n    return {\r\n        marginBottom: '15px'\r\n    }\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n                <Paper style={paperstyle()}elevation={3}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={9}>\r\n                            <Typography color={'primary'} style={{float: 'left'}}>\r\n                                {highscore.comment}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                                {highscore.userid != 1 ? <GoVerified/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'textSecondary'}>{highscore.numMoves}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.created}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Paper>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid item xs={12} style={styleouter()}>\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginTop: '30px',\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst CrownCounter = highscore => {\r\n    var crowns = []\r\n    var i;\r\n    for (i=0; i<highscore.wins;i++) {\r\n        crowns.push(<FaCrown/>);\r\n    }\r\n    return (\r\n        <div>\r\n            {crowns}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (<Grid item xs={12}>\r\n                <Paper elevation={3}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={9}>\r\n                            <Typography color={'primary'} style={{float: 'left'}}>\r\n                                {highscore.name}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                                {highscore.wins == 0 || highscore.wins == null ? null : CrownCounter(highscore) }\r\n                                {highscore.user_id != 1 ? <GoVerified/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'textSecondary'}>{highscore.score}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.submitted}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Paper>\r\n            </Grid>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid style={styleouter()} container direction={'column'} spacing={1}>\r\n        {\r\n                highscores.map(highscore =>\r\n                    highscorestyle(highscore)\r\n                )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nclass PuzzleRushWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Puzzle Rush - {this.props.difficulty}</DialogTitle>\r\n                <DialogContent dividers>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"h6\">\r\n                            Statistics\r\n                          </Typography>\r\n                          <div>\r\n                            <List dense={true}>\r\n\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Number of Puzzles Completed\"\r\n                                    secondary={this.props.numPuzzlesCompleted}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average time Per Puzzle\"\r\n                                    secondary={this.props.averageTime}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average Moves per Puzzle\"\r\n                                    secondary={this.props.averageMoves}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Difference from most optimal Solution\"\r\n                                    secondary={this.props.differenceOptimal}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Moves Per Second\"\r\n                                    secondary={this.props.movesPerSecond}\r\n                                  />\r\n                                </ListItem>\r\n                            </List>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.playPuzzleRushAgain}>Play Again!</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushWinModal;\r\n\r\n","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../../constants/constants';\r\n\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass RandomGameStatsModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answers: null,\r\n        }\r\n    }\r\n\r\n    showStatsModal = () => {\r\n        this.props.handleShowRandomAnswers()\r\n        this.setState({\r\n            answers: this.props.lowestMoveSequence\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-random\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        lowest possible moves: {this.props.lowestMoves}\r\n                    </div>\r\n                    {this.state.answers}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.showStatsModal}>Show Puzzle Answers</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomGameStatsModal;","import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nexport default function CloseIconWithOnClick(props) {\r\n    const handleClose = () => {\r\n        props.handleClose(props.index);\r\n    }\r\n    return (<CloseIcon onMouseDown={handleClose}/>\r\n    )\r\n}","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport CloseIconWithOnClick from './CloseIconWithOnClick'\r\n\r\nexport default function Descriptionlist(props) {\r\n    return(\r\n            <List>\r\n              {\r\n                  props.tipsText.map((text,index) =>\r\n                    <ListItem>\r\n                      <div>\r\n                        {text}\r\n                      </div>\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                          <CloseIconWithOnClick index={index} handleClose={props.handleCloseToolTips}/>\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  )\r\n              }\r\n            </List>\r\n    )\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinLessonModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <Typography> You completed the Lesson! Move on to the next one!\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinLessonModal;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 25,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function ShowDailyChallengeScoresCard(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {props.name}\r\n        </Typography>\r\n        <Typography style={{marginBottom: '30px'}} variant=\"h5\" component=\"h2\">\r\n          {props.bestScore}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.MovesforPuzzle}\r\n          <br/>\r\n          {props.MoveSequence}\r\n          <br />\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport MovesView from '../components/MovesView';\r\nimport ShowDailyChallengeScoreCard from '../components/ShowDailyChallengeScoresCard'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst stylebelow = () => {\r\n    return {\r\n        marginTop: '40px',\r\n        marginBottom: '20px'\r\n    }\r\n}\r\n\r\nclass DailyChallengeHistoryData extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography style={stylebelow()} variant=\"h4\"> {this.props.difficultyforPuzzle} </Typography>\r\n                <ShowDailyChallengeScoreCard\r\n                    name={\"Robot God\"}\r\n                    bestScore={this.props.bestScore}\r\n                    MovesforPuzzle={this.props.lowestMovesforPuzzle}\r\n                    MoveSequence={this.props.lowestMoveSequence}\r\n                />\r\n                <ShowDailyChallengeScoreCard\r\n                    name={this.props.nameSubmitted}\r\n                    bestScore={this.props.scoreSubmitted}\r\n                    MovesforPuzzle={null}\r\n                    MoveSequence={<MovesView\r\n                                        moveHistory={this.props.playerMovedSequence} playerState={[{colorSignifier: \"blue\"},{colorSignifier: \"green\"},{colorSignifier: \"red\"},{colorSignifier: \"yellow\"}]}\r\n                                  />}\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyChallengeHistoryData;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent,type) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    if (type === 'blank') {\r\n        var goal = {top: height-1, left: width-1};\r\n        var randompos1 = {top: 0,left: 0, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n        var randompos2 = {top: 0,left: 1, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n        var randompos3 = {top: 1,left: 0, color: ROBOT_RED, colorSignifier: 'red'};\r\n        var randompos4 = {top: 1,left: 1, color: ROBOT_YELLOW, colorSignifier:'yellow'};\r\n    }\r\n    else {\r\n        var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n        var randomPositions = [goal];\r\n        for (var i=0;i<5;i++) {\r\n            randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n        }\r\n        var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n        var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n        var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n        var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    }\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router';\r\nimport Draggable from 'react-draggable';\r\nimport LearnGameItems from '../components/LearnGameItems';\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport YouWinDailySingleModal from '../components/YouWinDailySingleModal';\r\nimport YouWinDailyFinalModal from '../components/YouWinDailyFinalModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport PuzzleRushWinModal from '../containers/Modals/PuzzleRushFinishedModal';\r\nimport RandomGameStatsModal from '../containers/Modals/RandomGameStatsModal';\r\nimport DescriptionList from '../components/DescriptionList';\r\nimport YouWinLessonModal from '../components/YouWinLessonModal';\r\nimport DailyChallengeHistoryData from '../components/DailyChallengeHistoryData';\r\nimport Timer from \"../components/Timer\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR,\r\n    MOBILE_INNER_SCREEN_WIDTH\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if(e.keyCode == 32 && e.target == document.body) {\r\n    e.preventDefault();\r\n  }\r\n    if([37, 38, 39, 40, 9,13].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n    }\r\n}\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\nconst formatGeneratedMoveSequence = (moves) => {\r\n    var images = []\r\n    moves.map(move => {\r\n        var color = move.charAt(0);\r\n        var direction = move.charAt(1);\r\n        if (color == 'B') {\r\n            color = 'blue'\r\n        }\r\n        else if (color == 'R') {\r\n            color = 'red'\r\n        }\r\n        else if (color == 'Y') {\r\n            color = 'yellow'\r\n        }\r\n        else {\r\n            color = 'green'\r\n        }\r\n        if (direction == 'N') {\r\n            direction = UP\r\n        }\r\n        else if (direction == 'S') {\r\n            direction = DOWN\r\n        }\r\n        else if (direction == 'E') {\r\n            direction = RIGHT\r\n        }\r\n        else {\r\n            direction = LEFT\r\n        }\r\n        images.push(<img src={DIRECTION_MAP_IMAGES[color][direction]}/>)\r\n    });\r\n    return images\r\n}\r\n\r\n\r\nconst setDefaultSquareSize = (boardWidth,boardHeight) => {\r\n    const drawerWidth = document.getElementById(\"MainDrawer\") == null ? 140 : parseInt(getComputedStyle(document.getElementById(\"MainDrawer\")).width);\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n    var settingstop = windowHeight - 120;\r\n\r\n    settingstop = settingstop / boardHeight\r\n    settingstop = parseInt(settingstop);\r\n    settingstop = settingstop - (settingstop % 4)\r\n\r\n    var settings = ((windowWidth < MOBILE_INNER_SCREEN_WIDTH) ? windowWidth - 20 : (windowWidth - drawerWidth) / 1.75);\r\n    settings = settings / boardWidth;\r\n    settings = parseInt(settings);\r\n    settings = settings - (settings % 4);\r\n    var squarevalue = settings > settingstop ? settingstop : settings\r\n    if (squarevalue < 16) {\r\n        squarevalue = 16;\r\n    }\r\n    else if (squarevalue > 52) {\r\n        squarevalue = 52;\r\n    }\r\n    return squarevalue;\r\n};\r\n\r\nconst ColoredLineDirections = [LEFT,RIGHT,UP,DOWN]\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.puzzleRush === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.p_id = this.props.p_id;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = []\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            this.state.moveHistoryList=[];\r\n\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[0].g_solutiondata))\r\n            this.state.lowestMovesforPuzzle = this.props.games[0].g_moves\r\n            this.state.difficultyforPuzzle = this.props.games[0].g_difficulty\r\n            this.state.playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[0]\r\n\r\n            this.state.playerStateList = [];\r\n            this.state.tipsText = [];\r\n            this.state.highscores = [];\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            if (this.props.savedMoves != null) {\r\n                this.state.moveHistoryList = this.props.savedMoves\r\n                this.state.gamesWonDaily = [true,true,true,true]\r\n                this.state.moveHistory = this.props.savedMoves[0].slice()\r\n                this.state.playerState = this.props.playerStateList[0].slice()\r\n            }\r\n            else {\r\n                this.state.moveHistoryList=[];\r\n            }\r\n            this.state.playerStateList = this.props.playerStateList != null ? this.props.playerStateList : [];\r\n            this.state.tipsText = ['Winners who are Logged in will receive a Crown','See about page for details on the daily challenge difficulty','Puzzles reset at 3PM EST, the page will refresh automatically'];\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.dc_id = this.props.dc_id;\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.game.g_puzzledata)\r\n            this.state.lowestMoves = this.props.game.g_moves\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.game.g_solutiondata))\r\n            this.state.difficulty = this.props.game.g_difficulty\r\n            this.state.createMode = 'No';\r\n            this.state.gameWon = false;\r\n            this.state.buildMode = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = ['this game was randomly generated'];\r\n            this.state.uri = this.props.game.g_uri;\r\n            window.history.pushState({id: 'Random Game'},'RobotsEvolved | Random Game','/play/' + this.props.game.g_uri)\r\n        }\r\n        else if (this.props.learnMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [this.props.games[0].description];\r\n        }\r\n        else if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.buildMode = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = []\r\n            window.history.pushState({id: 'Play Game'},'RobotsEvolved | Play Game','/play/'+ this.props.uri)\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,1,'blank');\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                buildMode: true,\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false,\r\n                tipsText: [\r\n                                        'Click on Wall spots to toggle',\r\n                                        'Click and Drag robots or goal to move robots',\r\n                                        'When you are ready, toggle build mode in order to solve the puzzle',\r\n                                        'You must solve the puzzle in order to submit.']\r\n            },board);\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n        }\r\n        this.state.showColoredLineDirections = this.props.LineDirections;\r\n    };\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                const highscoresdata = JSON.parse(res.data.highscores)\r\n                if (this.FindhighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    FindhighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.numMoves != check[index].numMoves) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n\r\n    DChighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.score != check[index].score) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n    updateDailyHighscores = () => {\r\n        axios.get('/dailychallengehighscores?dc_id=' + this.state.dc_id)\r\n            .then( res => {\r\n                if (res.data.dc_id != this.state.dc_id) {\r\n                    this.props.handleClickDailyChallenge();\r\n                    return\r\n                }\r\n                const highscoresdata = JSON.parse(res.data.highscores)//PoorMan's global redux implementation\r\n                if (this.DChighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                    window.dchighscores = JSON.parse(res.data.highscores)\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.updateHighscores();\r\n            var IntervalId = setInterval(this.updateHighscores, 8000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.updateDailyHighscores();\r\n            var IntervalId = setInterval(this.updateDailyHighscores, 6000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.tabSelector();\r\n                return;\r\n                break;\r\n            case 32:\r\n                if (!this.state.gameWon) {\r\n                    this.handleUndoMove();\r\n                }\r\n                break;\r\n                return;\r\n            case 13:\r\n                if (!this.state.gameWon) {\r\n                    this.resetPuzzle();\r\n                }\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n        }\r\n        this.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.userInfo !== null) {\r\n            username = window.userInfo.username\r\n        }\r\n        console.log(state);\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.showColoredLineDirections === true) {\r\n            this.setState({\r\n                showColoredLineDirections: false,\r\n            });\r\n            this.props.handleLineDirections(false)\r\n        }\r\n        else {\r\n            this.setState({\r\n                showColoredLineDirections: true,\r\n            });\r\n            this.props.handleLineDirections(true)\r\n        }\r\n    };\r\n\r\n    toggleBuildMode = () => {\r\n        if (this.state.buildMode) {\r\n            this.setState({\r\n                buildMode: false,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n                buildMode: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length, name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeRandomStatsModal = event => {\r\n        this.setState({\r\n            closeRandomStatsModal: false,\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    }\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushFinishedModal = event => {\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: false\r\n        });\r\n\r\n    }\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent, 'blank');\r\n        var squareSize = setDefaultSquareSize(width,height);\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n            squareSize: squareSize,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n    showStatsModal = () => {\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            showStatsModal: true,\r\n        });\r\n    }\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n\r\n    puzzleRushTimeUp = () => {\r\n        var totalMovesDiff = 0;\r\n        this.state.solutiondifference.map(numMoves => {\r\n            totalMovesDiff += numMoves;\r\n        });\r\n        var averageTime = parseInt(300 / (this.state.numPuzzleon))\r\n        var totalMoves = 0;\r\n        this.state.totalMovesList.map(numMoves => {\r\n            totalMoves += numMoves\r\n        });\r\n        var avgMoves = parseInt(totalMoves / (this.state.numPuzzleon))\r\n        var movesPerSecond = totalMoves / 300;\r\n\r\n        axios.post('/puzzlerushend', {p_id: this.state.p_id,totalMoves: totalMoves,differenceFrom: totalMovesDiff})\r\n            .then( res => {\r\n                console.log(res.data);\r\n            });\r\n\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: true,\r\n            numPuzzlesCompleted: this.state.numPuzzleon,\r\n            percentile: 'TBD%',\r\n            averageTime: averageTime + 's',\r\n            averageMoves: avgMoves,\r\n            differenceOptimal: totalMovesDiff,\r\n            movesPerSecond: movesPerSecond\r\n        });\r\n    }\r\n\r\n    submitDailyAnswer = (LastRobotPosition) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            numMoves += moveHistory.length\r\n        });\r\n        var playerStateList = this.state.playerStateList.slice()\r\n        var playerState = this.state.playerState.slice()\r\n        playerState[parseInt(this.state.robotSelected)] = LastRobotPosition;\r\n        playerStateList[this.state.numPuzzleon] = playerState\r\n        axios.post('/dailychallenge', {score: numMoves, name: document.getElementById(\"namesubmitHS\").value, solutiondata: moveHistoryList, dc_id: this.state.dc_id, playerStateList: playerStateList})\r\n            .then( res => {\r\n                this.handleUndoMove();\r\n            });\r\n        window.dc_movesList = moveHistoryList;\r\n        window.dc_playerList = playerStateList;\r\n        this.state.gameWon = false;\r\n    }\r\n\r\n    checkwin = (robotPosition) => {\r\n        if (robotPosition.top === this.state.goal.top && robotPosition.left === this.state.goal.left) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No' && this.props.puzzleRush !== 'Yes') {\r\n                var username = '';\r\n                if (window.userInfo !== null) {\r\n                    username = window.userInfo.username\r\n                }\r\n                if (this.props.randomGame === 'Yes') {\r\n                    return (\r\n                        <RandomGameStatsModal\r\n                            show={this.state.gameWon}\r\n                            lowestMoves={this.state.lowestMoves}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            numMoves={this.state.moveHistory.length}\r\n                            difficulty={this.state.difficulty}\r\n                            resetPuzzle={this.resetPuzzle}\r\n                            handleShowRandomAnswers={this.handleShowRandomAnswers}\r\n                        />\r\n                    );\r\n                }\r\n                else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n                    return null\r\n                }\r\n                else if (this.props.dailyChallengeMode === 'Yes') {\r\n                    var Won=true\r\n                    this.state.gamesWonDaily.map((gameWon,index) => {\r\n                        if (!(index == this.state.numPuzzleon) && !gameWon) {\r\n                            Won = false\r\n                        }\r\n                    });\r\n                    var moveHistoryList = this.state.moveHistoryList\r\n                    moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory\r\n                    var numMoves = 0\r\n                    moveHistoryList.map(moveHistory => {\r\n                        numMoves += moveHistory.length\r\n                    });\r\n                    return (Won ? <YouWinDailyFinalModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={numMoves}\r\n                        submitAnswer={this.submitDailyAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                        undoMove={this.handleUndoMove}\r\n                        robotPosition={robotPosition}\r\n                    /> : <YouWinDailySingleModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        totalMoves={numMoves}\r\n                        undoMove={this.handleUndoMove}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        games={this.state.games}\r\n                        handleClickGame={this.handleDailyClickGame}\r\n                        numPuzzleon={this.state.numPuzzleon}\r\n                        moveNextPuzzle={this.moveNextPuzzle}\r\n                    />);\r\n                }\r\n                else if (this.props.learnMode === 'Yes') {\r\n                    return  (<YouWinLessonModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                    />);\r\n                }\r\n                else {\r\n                    return  (<YouWinModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        submitAnswer={this.submitAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                    />);\r\n                }\r\n            }\r\n            else if (this.props.puzzleRush === 'Yes'){\r\n                axios.post('/puzzlerushsubmit', {p_id: this.state.p_id,g_id:this.state.games[this.state.numPuzzleon].g_id, moveHistory: this.state.moveHistory})\r\n                    .then( res => {\r\n                        console.log(res.data);\r\n                    });\r\n                var totalMoves = this.state.moveHistory.slice().length\r\n                var totalMovesList = this.state.totalMovesList\r\n                totalMovesList.push(totalMoves)\r\n                var solutionmoves = totalMoves - this.state.games[this.state.numPuzzleon].g_moves\r\n                var solutiondifference = this.state.solutiondifference\r\n                solutiondifference.push(solutionmoves)\r\n                var puzzledata = JSON.parse(this.state.games[this.state.numPuzzleon + 1].g_puzzledata)\r\n                if (this.state.numPuzzleon + 10 > this.state.games.length) {\r\n                    axios.get('/puzzlerushgetmore?p_id=' + this.props.p_id + '&difficulty=' + this.props.difficulty)\r\n                        .then( res => {\r\n                                var games = JSON.parse(res.data.games);\r\n                                var stategames = this.state.games\r\n                                var newarray = stategames.concat(games)\r\n                                this.setState({\r\n                                    games: newarray\r\n                                });\r\n                        });\r\n                }\r\n                this.setState(\r\n                    extend(puzzledata,{numPuzzleon: this.state.numPuzzleon + 1, playerState: puzzledata.playerStart.slice(), gameWon: false, solutiondifference: solutiondifference, totalMovesList: totalMovesList})\r\n                );\r\n\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handleShowRandomAnswers = () => {\r\n        this.setState({\r\n            tipsText: [this.state.lowestMoveSequence]\r\n        })\r\n    }\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false && !this.state.buildMode) {\r\n            var oldPositon = {left: this.state.playerState[this.state.robotSelected].left, top: this.state.playerState[this.state.robotSelected].top};\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left) && !this.state.buildMode) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier,\r\n                    prevPosition: oldPositon\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n            this.checkwin(newPosition);\r\n        }\r\n    };\r\n\r\n    handleCloseToolTips = (index) => {\r\n        this.state.tipsText.splice(index,1);\r\n        this.setState({\r\n            tipsText: this.state.tipsText,\r\n        });\r\n    }\r\n\r\n    moveNextPuzzle = () => {\r\n        this.handleDailyClickGame((this.state.numPuzzleon + 1) % 4)\r\n    }\r\n\r\n    handleLearnClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].puzzledata);\r\n        var squareSize = setDefaultSquareSize(puzzledata.width,puzzledata.height);\r\n        this.setState(\r\n            extend(puzzledata,{buildMode: false,squareSize: squareSize, numPuzzleon: index, moveHistory: [], gameWon: false, playerState: puzzledata.playerStart.slice(),tipsText: [this.props.games[index].description]})\r\n        );\r\n    }\r\n\r\n    handleDailyClickAnswersGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n        var lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[index].g_solutiondata))\r\n        var lowestMovesforPuzzle = this.props.games[index].g_moves\r\n        var difficultyforPuzzle = this.props.games[index].g_difficulty\r\n        var playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[index]\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory,\r\n                    gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily,\r\n                    lowestMoveSequence: lowestMoveSequence, lowestMovesforPuzzle: lowestMovesforPuzzle, difficultyforPuzzle: difficultyforPuzzle,\r\n                    playerMovedSequence: playerMovedSequence})\r\n        );\r\n    }\r\n\r\n    handleDailyClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily})\r\n        );\r\n    }\r\n\r\n\r\n    loadSidebar = () => {\r\n        if (this.props.learnMode == 'Yes') {\r\n            return (\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\">\r\n                        <Divider/>\r\n                        <Typography\r\n                             color=\"textSecondary\"\r\n                             display=\"block\"\r\n                             variant=\"caption\"\r\n                             style={{paddingBottom: '10px'}}\r\n                         >\r\n                             Beginner Lessons\r\n                         </Typography>\r\n                        {\r\n                            this.state.games.map((game,index) => {\r\n                                    if (index === 4) {\r\n                                        return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Intermediate Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    else if (index === 7) {\r\n                                            return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Advanced Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    return(\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={game.name} index={index} handleClickGame={this.handleLearnClickGame}/>\r\n                                    )\r\n                                }\r\n\r\n                            )\r\n                        }\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickAnswersGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeHistoryData\r\n                            lowestMovesforPuzzle={this.state.lowestMovesforPuzzle}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            difficultyforPuzzle={this.state.difficultyforPuzzle}\r\n                            nameSubmitted={this.props.nameSubmitted}\r\n                            playerMovedSequence={this.state.playerMovedSequence}\r\n                            bestScore={this.props.bestScore}\r\n                            scoreSubmitted={this.props.scoreSubmitted}\r\n                         />\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeScores highscores={this.state.highscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.state.createMode === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.puzzleRush) {\r\n            return (\r\n                     <div>\r\n                        <Timer puzzleRushTimeUp={this.puzzleRushTimeUp}>\r\n                        </Timer>\r\n                        <Typography id=\"discrete-slider-small-steps\"\r\n                                     color=\"Primary\"\r\n                                     variant=\"h3\"\r\n                                     display=\"inline\"\r\n                                     gutterBottom>\r\n                             {this.state.numPuzzleon}\r\n                         </Typography>\r\n                     </div>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n            <div style={{display: 'grid'}}>\r\n                <Typography\r\n                    color=\"secondary\"\r\n                    display=\"block\"\r\n                    variant={\"h4\"}\r\n\r\n                >\r\n                    {this.props.name}\r\n                </Typography>\r\n                <br/>\r\n                <Grid container xs={12} direction=\"column\">\r\n                <HighScores highscores={this.state.highscores}/>\r\n                </Grid>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    handlePlayerMovementFromMouse = (direction) => {\r\n        this.handlePlayerMovement({dir: direction})\r\n    };\r\n\r\n    handleUndoMove = () => {\r\n        var moveHistory = this.state.moveHistory;\r\n        var playerState = this.state.playerState;\r\n        if (moveHistory.length !== 0) {\r\n            var moveObj = moveHistory.pop();\r\n            playerState[moveObj.robot].left = moveObj.prevPosition.left;\r\n            playerState[moveObj.robot].top = moveObj.prevPosition.top;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n                gameWon: false,\r\n            });\r\n        }\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes' && this.state.buildMode) {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onStopDragHandlerGoal = (position) => {\r\n        this.setState({\r\n            goal: {top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize)},\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n        })\r\n    };\r\n\r\n\r\n    onStopDragHandler = (position,index) => {\r\n        var playerState = this.state.playerState.slice();\r\n        var lastX = position.lastX / this.state.squareSize;\r\n        var lastY = position.lastY / this.state.squareSize;\r\n        playerState[index].top = Math.round(lastY);\r\n        playerState[index].left = Math.round(lastX);\r\n        this.setState({\r\n            playerStart: playerState.slice(),\r\n            playerState: playerState,\r\n            moveHistory: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        puzzleRushTimeUp={this.puzzleRushTimeUp}\r\n                        isPuzzleRush={this.props.puzzleRush}\r\n                        numPuzzleRush={this.state.numPuzzleon}\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                        toggleLineIndicators = {this.toggleLineIndicators}\r\n                        showColoredLineDirections={this.state.showColoredLineDirections}\r\n                        toggleBuildMode = {this.toggleBuildMode}\r\n                        undoMove = {this.handleUndoMove}\r\n                        buildMode = {this.state.buildMode}\r\n                        squareSizeValue = {parseInt((this.state.squareSize/4))}\r\n                        isLesson = {this.props.learnMode}\r\n                        isDailyChallenge = {this.props.dailyChallengeMode}\r\n                        isDailyChallengeAnswers = {this.props.dailyChallengeModeAnswers}\r\n                    />\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? null : <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>}\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8} zeroMinWidth>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal\r\n                            dimension={this.state.squareSize}\r\n                            position={this.state.goal}\r\n                            onStopDragHandler={this.onStopDragHandlerGoal}\r\n                            draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                            isCreateMode={this.state.createMode}\r\n                            buildMode={this.state.buildMode}\r\n                        />\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    onStopDragHandler={this.onStopDragHandler}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={this.state.playerState[this.state.robotSelected].color}\r\n                                    show={this.state.showColoredLineDirections}\r\n                                    handleClick={this.handlePlayerMovementFromMouse}\r\n                                    buildMode={this.state.buildMode}\r\n                                />\r\n                            )\r\n                        }\r\n                    </Board>\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/> : null}\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DescriptionList\r\n                        handleCloseToolTips={this.handleCloseToolTips}\r\n                        tipsText={this.state.tipsText}\r\n                    />\r\n                    {this.loadSidebar()}\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                {\r\n                    this.state.playerState.map(position =>\r\n                        this.checkwin(position))\r\n                }\r\n                <PuzzleRushWinModal\r\n                    show={this.state.showPuzzleRushFinishedModal}\r\n                    closeModal={this.closePuzzleRushFinishedModal}\r\n                    numPuzzlesCompleted={this.state.numPuzzlesCompleted}\r\n                    percentile={this.state.puzzleRushPercentileCompleted}\r\n                    averageTime={this.state.averageTime}\r\n                    averageMoves={this.state.averageMoves}\r\n                    differenceOptimal={this.state.differenceOptimal}\r\n                    movesPerSecond={this.state.movesPerSecond}\r\n                    difficulty={this.props.difficulty}\r\n                />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        maxWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 360,\r\n        minWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 235,\r\n        height: 225,\r\n        position: 'relative',\r\n        background: 'linear-gradient(100deg, #fdcd3b 55%, #ffed4b 55%)'\r\n    },\r\n\r\n    item: {\r\n        padding: 0\r\n    },\r\n\r\n    upperPadding: {\r\n        paddingTop: 3\r\n    },\r\n    upperPaddingButton: {\r\n        paddingTop: 3,\r\n        position: 'absolute',\r\n        bottom: 15,\r\n        left: 25\r\n    },\r\n\r\n    lowerPadding: {\r\n        paddingBottom: 3\r\n    },\r\n\r\n    rightSideText: {\r\n        textAlign: \"right\",\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    },\r\n\r\n    leftSideText: {\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(ComplexGrid)\r\n\r\nfunction ComplexGrid(props) {\r\n    const { classes } = props;\r\n    const handleClick = () => {\r\n        props.handleGameClick(props.game.name, props.game.puzzledata,props.highscores,props.game.uri);\r\n    };\r\n\r\n    var numberOfHighScores = 0;\r\n\r\n    const highscorestyle = highscore => {\r\n        if (numberOfHighScores === 6) return \"\";\r\n        numberOfHighScores++;\r\n        return (\r\n            <ListItem disableGutters={true} classes={{ root: classes.item }}>\r\n                <ListItemText primary={trimNameShort(highscore.comment)} classes={{ root: classes.leftSideText }} />\r\n                <ListItemText secondary={highscore.numMoves} classes={{ root: classes.rightSideText }} />\r\n            </ListItem>\r\n        )\r\n    };\r\n\r\n    const contentDivStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        };\r\n\r\n    };\r\n\r\n    const trimName = name => {\r\n        var separated = (name + '').split(\" \")\r\n        var toreturn = '';\r\n        separated.map((word) => {\r\n            if (word.length > 17)\r\n                toreturn += word.substring(0, 17) + \"...\" + ' ';\r\n            else {\r\n                toreturn += word + ' '\r\n            }\r\n        });\r\n        return toreturn.substring(0, toreturn.length - 1);\r\n    };\r\n\r\n    const trimNameShort = name => {\r\n        if (name.length > 10)\r\n            name = name.substring(0, 10) + \"...\";\r\n        return name\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid item xs={12} md={3} sm={6}>\r\n            <Card variant=\"outlined\" className={classes.root}>\r\n                <CardContent>\r\n                    <div style={contentDivStyle()}>\r\n                        <div style={{width: '150px'}}>\r\n                            <Tooltip title={props.game.name}>\r\n                                <Typography variant=\"h6\" classes={{ root: classes.lowerPadding }}>\r\n                                    {trimName(props.game.name)}\r\n                                </Typography>\r\n                            </Tooltip>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    By: {trimName(props.game.authorname)}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    {props.game.created}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Plays: {props.game.plays}\r\n                                </Typography>\r\n                            </div>\r\n                            <br/>\r\n                            <Button onClick={handleClick} classes={{ root: classes.upperPaddingButton }} variant=\"contained\" color=\"primary\">Play</Button>\r\n                        </div>\r\n                        <div style={{width: '105px'}}>\r\n                            <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                Top Scores\r\n                            </Typography>\r\n                            <List>\r\n                                {\r\n                                    props.highscores.map(highscore =>\r\n                                        highscorestyle(highscore)\r\n                                    )\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from 'axios';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 400,\r\n    },\r\n    input: {\r\n        marginLeft: 5,\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n        marginLeft: 8,\r\n        marginRight: 8,\r\n    },\r\n});\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = this.props.gameslist;\r\n        var highscoreslist = this.props.highscoreslist;\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n            anchorEl: null\r\n        }\r\n    }\r\n\r\n    handleGameClick = (name,gamedata,highscores,uri) => {\r\n        this.props.handleGameClick(name,gamedata,highscores,uri);\r\n    };\r\n\r\n    handleFilterMenuOpen = event => {\r\n        this.setState( {\r\n          anchorEl: event.currentTarget\r\n      });\r\n    };\r\n\r\n    handleCloseFilterMenuMostPlayed = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'MostPlayed', offset: 0})\r\n            .then( res => {\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    };\r\n\r\n    handleCloseFilterMenuHighest = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'Highest', offset: 0})\r\n            .then( res => {\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    };\r\n\r\n    handleSearchSubmit = event => {\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'None', offset: 0})\r\n            .then( res => {\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    };\r\n\r\n    render () {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <div style={gamepanel()}>\r\n                <Paper component=\"form\" className={classes.root} >\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        inputRef={ref => this.searchRef = ref}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                this.handleSearchSubmit();\r\n                                event.preventDefault()\r\n                            }\r\n                        }}\r\n                    />\r\n                    <IconButton onClick={this.handleSearchSubmit} className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <Divider className={classes.divider} orientation=\"vertical\" />\r\n                    <Button\r\n                        onClick={this.handleFilterMenuOpen}\r\n                        startIcon={<FilterListIcon />}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        Sort\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(this.state.anchorEl)}\r\n                        onClose={this.handleCloseFilterMenu}\r\n                    >\r\n                        <MenuItem onClick={this.handleCloseFilterMenuMostPlayed}>Most Played</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuHighest}>Highest Scores</MenuItem>\r\n                    </Menu>\r\n                </Paper>\r\n                <br/>\r\n                <Grid container alignItems={\"stretch\"} spacing={2}>\r\n                    {\r\n                        this.state.gameslist.map((game,index)=>\r\n                            <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(FindGame);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  loadedGame={'Yes'}\r\n                  name={this.props.name}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  homepage: {\r\n    marginTop: '40px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  baseExpansion: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: '10px'\r\n  },\r\n  darkmode: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      marginTop: '150px',\r\n  },\r\n  iconcards: {\r\n    width: '250px',\r\n    display: 'inline-block',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  iconcardsDaily: {\r\n    maxWidth: 345,\r\n    minWidth: 250,\r\n    float: 'left',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  titlehome: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '30px',\r\n  },\r\n  titledailyroto: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '10px',\r\n  },\r\n  iconfonts: {\r\n    fontFamily: \"'Arvo', serif\",\r\n  },\r\n  createboardcard: {\r\n    ':hover': {\r\n        content: '/static/images/CreateBoardCardIconPlaced.png',\r\n    }\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  centeredProfile: {\r\n    marginTop: '20px',\r\n    display: 'inline-block',\r\n  },\r\n  expandedPanelDCH: {\r\n    background: 'linear-gradient(70deg, #fff810  30%, rgba(0,0,0,0) 30%), linear-gradient(30deg, #63e89e 60%, #ff7ee3 60%)'\r\n  }\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport FindGameElements from \"../containers/FindGameElements\";\r\nimport {GOAL_IMAGE} from '../constants/constants';\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n\r\n    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n        return (<div className={classes.homepage} >\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                        </Typography>\r\n                        <Typography variant=\"p1\" paragraph={true}>Puzzle Game for anyone to play! Create your own custom boards or play a random Solved game. <br/>Goal is to get ANY piece to stop on the  <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                        </Typography>\r\n                        <br/>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                        <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                        </Typography>\r\n                        <Typography> Robots Evolved New Homepage!!! <br/>Almost Done with the project expect a release date of 8/1/2020\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container item alignItems={\"stretch\"} spacing={2} alignItems=\"center\" justify=\"center\" >\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickCreateGame}>\r\n                                    <CardMedia\r\n                                        className={classes.createboardcard}\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                        title=\"Create Board\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Create Board\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickFindGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Find a Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/FindAGameCardIcon.png\"\r\n                                        title=\"Find a Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Find a Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/DailyChallengeIcon.png\"\r\n                                        title=\"Daily Challenge\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Daily Challenge\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickRandomGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Play a Random Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/puzzle.png\"\r\n                                        title=\"Play a Random Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Play a Random Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickLearnGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                        title=\"Learn\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Learn\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Contemplative Reptile\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/PuzzleRushIcon.png\"\r\n                                        title=\"Contemplative Reptile\"\r\n                                    />\r\n                                    <CardContent style={{textAlign: 'center'}}>\r\n                                        <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            Puzzle Rush\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                    <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                    </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            Medium Mondays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles only</Typography>\r\n                            Trouble Teusdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">extremly hard puzzles only</Typography>\r\n                            Wild Wednesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles only</Typography>\r\n                            Tryhard Thursdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">extremly hard puzzles + 1 god teir</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles only</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">easy puzzles only</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles only</Typography>\r\n                        </Typography>\r\n                        <Typography style={{marginTop: '30px'}} className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                        </Typography>\r\n                        <DailyChallengeScores highscores={window.dchighscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (<div className={classes.homepage}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> Controls\r\n                    </Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Movement\r\n                        </Typography>\r\n                    <img width={'20%'} height={'auto'} src={\"/static/images/keyboard.png\"}/>\r\n                    <Typography>Pieces Move until they hit a wall or another piece</Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Selecting robots\r\n                        </Typography>\r\n                        <img width={'20%'} height={'auto'} src={\"/static/images/tab.png\"}/>\r\n\r\n                    <Typography>Or click</Typography>\r\n                    <Divider/>\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            HotKeys\r\n                        </Typography>\r\n                        <img width={'20%'} height={'auto'} src={\"/static/images/spacebar.png\"}/> <Typography display={'block'}>Undo</Typography>\r\n                        <img width={'20%'} height={'auto'} src={\"/static/images/enterkey.png\"}/> <Typography>Reset</Typography>\r\n                    <Divider />\r\n                    <div style={{marginTop:'100px'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                    </Typography>\r\n                    <Typography> Robots Evolved New Homepage!!! <br/>Almost Done with the project expect a release date of 8/7/2020\r\n                    </Typography>\r\n                    </div>\r\n\r\n\r\n                </Grid>\r\n                <Grid item xs={8} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                    </Typography>\r\n                    <Typography paragraph={true} variant=\"p1\">Puzzle Game for anyone to play! Create your own custom boards or play a random Solved game.<br/>Goal is to get ANY piece to stop on the  <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                    </Typography>\r\n                    <br/>\r\n                        <img width=\"400\" height=\"225\" src='/static/videos/basic.gif'/>\r\n                    <br/>\r\n                    <Card className={classes.iconcards}>\r\n                              <CardActionArea onClick={props.handleClickCreateGame}>\r\n                                <CardMedia\r\n                                  className={classes.createboardcard}\r\n                                  component=\"img\"\r\n                                  alt=\"Create Board\"\r\n                                  height=\"140\"\r\n                                  image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                  title=\"Create Board\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Create Board\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </Card>\r\n                            <Card className={classes.iconcards}>\r\n                              <CardActionArea onClick={props.handleClickFindGame}>\r\n                                <CardMedia\r\n                                  component=\"img\"\r\n                                  alt=\"Find a Game\"\r\n                                  height=\"140\"\r\n                                  image=\"/static/images/FindAGameCardIcon.png\"\r\n                                  title=\"Find a Game\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Find a Game\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </Card>\r\n                            <Card className={classes.iconcards}>\r\n                              <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                                <CardMedia\r\n                                  component=\"img\"\r\n                                  alt=\"Create Board\"\r\n                                  height=\"140\"\r\n                                  image=\"/static/images/DailyChallengeIcon.png\"\r\n                                  title=\"Daily Challenge\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Daily Challenge\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </Card>\r\n                            <Card className={classes.iconcards}>\r\n                    <CardActionArea onClick={props.handleClickRandomGame}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\"Play a Random Game\"\r\n                            height=\"140\"\r\n                            image=\"/static/images/puzzle.png\"\r\n                            title=\"Play a Random Game\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                Play a Random Game\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickLearnGame}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Create Board\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                title=\"Learn\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Learn\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Contemplative Reptile\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/PuzzleRushIcon.png\"\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent style={{textAlign: 'center'}}>\r\n                                <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Puzzle Rush\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                            Medium Mondays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles only</Typography>\r\n                            Trouble Teusdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">extremly hard puzzles only</Typography>\r\n                            Wild Wednesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles only</Typography>\r\n                            Tryhard Thursdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">extremly hard puzzles + 1 god teir</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles only</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">easy puzzles only</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles only</Typography>\r\n                        </Typography>\r\n                <Typography className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                </Typography>\r\n                <DailyChallengeScores highscores={window.dchighscores}/>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst stylecol = () => {\r\n    return({\r\n            float: 'left',\r\n            width: '50%',\r\n            margin: 'auto',\r\n            padding: '0 50px',\r\n            marginTop: '6px',\r\n    });\r\n}\r\n\r\nconst spacing = () => {\r\n    return({\r\n            marginBottom: '10px',\r\n    });\r\n}\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeLoginModal}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>Login to RobotsEvolved</DialogTitle>\r\n                <DialogContent dividers>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                           • Gain <FaCrown/>s when winning the Daily Challenge (stacks)\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                            • Saving settings and your moves in the daily challenge\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography variant=\"body2\" display=\"inline\">\r\n                            • Profile Page to keep track of your submissions.\r\n                        </Typography>\r\n                    <div class=\"col\">\r\n                        <a href=\"#\" id={\"buttonfb\"}>\r\n                          <i class=\"fa fa-facebook fa-fw\"></i> Login with Facebook\r\n                         </a>\r\n                        <a onClick={this.loginGoogle} href=\"#\" id={\"buttongoogle\"}><i class=\"fa fa-google fa-fw\">\r\n                          </i> Login with Google\r\n                        </a>\r\n                    </div>\r\n                    <Typography variant=\"caption\" display=\"block\">\r\n                            We will NEVER distribute/sell your email or profileID.\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeLoginModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <Button color=\"black\" onClick={this.handleClick}><b>{textToShow}</b></Button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport SignInButton from './SignInButton';\r\n\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '40px',\r\n        width: '40px',\r\n        marginTop: '5px',\r\n    };\r\n};\r\n\r\nconst divStyle = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        width: '200px',\r\n    };\r\n};\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    SignInButtonPressed = () => {\r\n        this.props.handleClick('Sign in');\r\n    }\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return <SignInButton onClick={this.SignInButtonPressed}/>\r\n        }\r\n        else {\r\n            return (\r\n                <div style={divStyle()}>\r\n                    <div>{window.userInfo.username}</div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty) => {\r\n        console.log(difficulty)\r\n        axios.post('/puzzlerush', {difficulty: difficulty, action: 'start',type: this.state.value})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            isLoading: false,\r\n                        });\r\n                        this.props.handleClickPuzzleRush(difficulty,games,p_id);\r\n                });\r\n    };\r\n\r\n    handleClickEasyPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMediumPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                                {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                                                        ) : (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                         <Grid item xs={6}>\r\n                                         <ButtonGroup\r\n                                            orientation=\"vertical\"\r\n                                            color=\"primary\"\r\n                                            aria-label=\"vertical outlined primary button group\"\r\n                                          >\r\n                                            <Button onClick={this.handleClickEasyPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Easy\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickMediumPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Medium\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Hard\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickExHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Exteremely Hard\r\n                                            </Button>\r\n                                          </ButtonGroup>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                              <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                              <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                                <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                                <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                              </RadioGroup>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickRandomGameModal = (difficulty,type) => {\r\n        axios.get('/randomgame?difficulty=' + difficulty + '&type=' + type)\r\n            .then( res => {\r\n                var game = JSON.parse(res.data.game);\r\n                this.setState({\r\n                    isLoading: false,\r\n                });\r\n                this.props.handleClickRandomGame(game,difficulty);\r\n            })\r\n    }\r\n\r\n    handleClickEasy = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMedium = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHard = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHard = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickGodMode = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('GodTeir',this.state.value)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                            {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                            ) : (\r\n                            <Grid\r\n                                container xs={12}\r\n                                spacing={4}\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n                                wrap=\"nowrap\"\r\n                            >\r\n                                <Grid item xs={6}>\r\n                                    <ButtonGroup\r\n                                        orientation=\"vertical\"\r\n                                        color=\"primary\"\r\n                                        aria-label=\"vertical outlined primary button group\"\r\n                                      >\r\n                                        <Button onClick={this.handleClickEasy} variant=\"contained\" color=\"primary\">\r\n                                            Easy\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickMedium} variant=\"contained\" color=\"primary\">\r\n                                            Medium\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickHard} variant=\"contained\" color=\"primary\">\r\n                                            Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickExHard} variant=\"contained\" color=\"primary\">\r\n                                            Extremely Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickGodMode} variant=\"contained\" color=\"primary\">\r\n                                            God Tier\r\n                                        </Button>\r\n                                     </ButtonGroup>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl component=\"fieldset\">\r\n                                      <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                      <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                        <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                        <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                      </RadioGroup>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageCreatedGamesDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.game.name,props.game.puzzledata,[],props.game.uri);\r\n    }\r\n\r\n    return (<div>\r\n            <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography> Highscore Holder: </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.game.username} - {props.game.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageSolutionDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.solution.name,props.solution.puzzledata,[],props.solution.uri);\r\n    }\r\n    return (<div>\r\n              <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography color={'secondary'} variant={'body2'}> {props.solution.WinnerCreated} </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.solution.WinnerUsername} - {props.solution.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useStyles from '../Material-UI/themes';\r\nimport ProfilePageCreatedGamesDetails from '../components/ProfilePageComponents/ProfilePageCreatedGamesDetails';\r\nimport ProfilePageSolutionDetails from '../components/ProfilePageComponents/ProfilePageSolutionDetails';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\n\r\nexport default function ProfilePage(props) {\r\n    const classes = useStyles();\r\n    const submitAnswer = () => {\r\n        axios.post('/userUpdate',{newuser: document.getElementById(\"ProfileName\").value})\r\n            .then( res => {\r\n                if (res.data == 'OK') {\r\n                    window.location.href = '/';\r\n                }\r\n                else {\r\n                    setError(res.data);\r\n                }\r\n            });\r\n    };\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [expandedGame, setExpandedGame] = React.useState(false);\r\n    const [expandedHighscores, setExpandedHighscores] = React.useState(false);\r\n    const handleChangeGame = (panel) => (event, isExpandedGame) => {\r\n        setExpandedGame(isExpandedGame ? panel : false);\r\n    };\r\n    const handleChangeHighscores = (panel) => (event, isExpandedHighScores) => {\r\n        setExpandedHighscores(isExpandedHighScores ? panel : false);\r\n    };\r\n    console.log(props.puzzlerushview);\r\n    return (\r\n            <div style={gamepanel()}>\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <TextField className={classes.centeredProfile} id={\"ProfileName\"} label={\"Username\"} defaultValue={window.userInfo.username}/>\r\n                        <Button className={classes.centeredProfile} variant=\"contained\" color=\"secondary\" onClick={submitAnswer}>Change Username</Button>\r\n                        <Typography color={\"secondary\"}>{error}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Created</Typography>\r\n                        {\r\n                            props.gamesview.map((game,index) =>\r\n                                    <ExpansionPanel expanded={expandedGame === 'panelgame' + index} onChange={handleChangeGame('panelgame' + index)}>\r\n                                        <ExpansionPanelSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls={\"panel\" + index + \"-content\"}\r\n                                          id={\"panel\" + index + \"-header\"}\r\n                                        >\r\n                                          <Typography className={classes.heading}>{game.name}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Plays: {game.plays}</Typography>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                          <ProfilePageCreatedGamesDetails\r\n                                            game={game}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                          />\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Solved</Typography>\r\n                        {\r\n                            props.solutionsview.map((solution,index) =>\r\n                                <ExpansionPanel expanded={expandedHighscores === 'panelhigh' + index} onChange={handleChangeHighscores('panelhigh' + index)}>\r\n                                    <ExpansionPanelSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls={\"panel\" + index + \"-content\"}\r\n                                      id={\"panel\" + index + \"-header\"}\r\n                                    >\r\n                                      <Typography className={classes.heading}>{solution.name}</Typography>\r\n                                      <Typography className={classes.secondaryHeading}>Best: {solution.numMoves}</Typography>\r\n                                      {solution.WinnerUserId == window.userInfo.userID ? <FaCrown style={{marginLeft: '30px'}}/> : null}\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <ProfilePageSolutionDetails\r\n                                            solution={solution}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                        />\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Puzzle Rush Data:</Typography>\r\n                        <Paper>\r\n                              <Typography className={classes.heading}>Easy</Typography>\r\n                              <Typography className={classes.secondaryHeading}>Best Score: {props.puzzlerushview.maxeasy}</Typography>\r\n                              <Typography>\r\n                                Average Score: {props.puzzlerushview.averageeasy}\r\n                              </Typography>\r\n                              <Typography>\r\n                                Average Difference of Moves from Optimal Solution: {props.puzzlerushview.averagediffeasy}\r\n                              </Typography>\r\n                          </Paper>\r\n                          <br/>\r\n                          <Paper>\r\n                              <Typography className={classes.heading}>Medium</Typography>\r\n                              <Typography className={classes.secondaryHeading}>Best Score: {props.puzzlerushview.maxmedium}</Typography>\r\n                              <Typography>\r\n                                Average Score: {props.puzzlerushview.averagemedium}\r\n                              </Typography>\r\n                              <Typography>\r\n                                Average Difference of Moves from Optimal Solution: {props.puzzlerushview.averagediffmedium}\r\n                              </Typography>\r\n                            </Paper>\r\n                            <br/>\r\n                            <Paper>\r\n                              <Typography className={classes.heading}>Hard</Typography>\r\n                              <Typography className={classes.secondaryHeading}>Best Score: {props.puzzlerushview.maxhard}</Typography>\r\n                              <Typography>\r\n                                Average Score: {props.puzzlerushview.averagehard}\r\n                              </Typography>\r\n                              <Typography>\r\n                                Average Difference of Moves from Optimal Solution: {props.puzzlerushview.averagediffhard}\r\n                              </Typography>\r\n                            </Paper>\r\n                            <br/>\r\n                            <Paper>\r\n                              <Typography className={classes.heading}>Extremely Hard</Typography>\r\n                              <Typography className={classes.secondaryHeading}>Best Score: {props.puzzlerushview.maxexhard}</Typography>\r\n                              <Typography>\r\n                                Average Score: {props.puzzlerushview.averageexhard}\r\n                              </Typography>\r\n                              <Typography>\r\n                                Average Difference of Moves from Optimal Solution: {props.puzzlerushview.averagediffexhard}\r\n                              </Typography>\r\n                            </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nexport default function RandomGamePage(props) {\r\n    return (\r\n        <Game\r\n              handleLineDirections={props.handleLineDirections}\r\n              LineDirections={props.LineDirections}\r\n              randomGame={'Yes'}\r\n              game={props.game}\r\n              difficulty={props.difficulty}\r\n         />\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PuzzleRushPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  puzzleRush={'Yes'}\r\n                  p_id={this.props.p_id}\r\n                  games={this.props.games}\r\n                  difficulty={this.props.difficulty}\r\n             />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PuzzleRushPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass LessonsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                learnMode={'Yes'}\r\n                games={window.learngameslist}/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default LessonsPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game handleClickDailyChallenge={this.props.handleClickDailyChallenge} handleLineDirections={this.props.handleLineDirections} LineDirections={this.props.LineDirections} dailyChallengeMode={'Yes'} playerStateList={this.props.playerStateList} savedMoves={this.props.savedMoves} games={this.props.dailyChallengeGameslist} dc_id={this.props.dc_id} highscores={this.props.dchighscores}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengePage;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Card} from \"@material-ui/core\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function AboutUs(props) {\r\n    return (<div style={gamepanel()}>\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item spacing={4} xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Typography variant={'body1'}>\r\n                            RobotsEvolved.com is based on the board game Ricochet Robots.\r\n                            We have several game modes and variants that are inspired by the several Chess variants on the internet.\r\n                            If you use Google Login or Facebook Login we will never email or sell your information.\r\n                            Tell your friends about the site and get people on here!\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Daily Challenge Rotation\r\n                                </Typography>\r\n                                <Typography variant={\"body1\"} paragraph={true}>\r\n                                    The Daily Challenge rotates its difficulty every day as specified below with 2 x Random and 2 x Classic Type puzzles.\r\n                                    <br/>\r\n                                    Medium Mondays - 4 x Medium\r\n                                    <br/>\r\n                                    Trouble Teusdays - 4 x Extremely Hard\r\n                                    <br/>\r\n                                    Wild Wednesdays - 4 x Hard\r\n                                    <br/>\r\n                                    Tryhard Thursdays - 3 x Extremely Hard 1 x God Teir\r\n                                    <br/>\r\n                                    Flyin Fridays - 4 x Medium\r\n                                    <br/>\r\n                                    Sleepy Saturdays - 4 x Easy\r\n                                    <br/>\r\n                                    Standard Sundays - 4 x Hard\r\n                                </Typography>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Classic Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body1\"} paragraph={true}>\r\n                                    Classic puzzles are based on the original Game. These Puzzles only have walls that are L shaped and a goal is in the center of one of the L puzzles.\r\n                                </Typography>\r\n                                <Typography variant={\"h4\"} display={\"inline\"}>\r\n                                    Random Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body1\"} paragraph={true}>\r\n                                    Random Puzzles are created by having a 10% chance for a wall to spawn in Any location possible wall location, Goals and Robot placements are completely random also.\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Easy\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 5-8 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Medium\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 9-13 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 13-18 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"} >\r\n                                    Extremely Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 18-23 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    God Tier\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in over 23 Moves, Note: there are a low number of these puzzles due to the CPU required to create them\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Paper class=\"card3\">\r\n                          <img src={\"/static/images/284457_10151211078621477_839164197_n.jpg\"} alt=\"Jane\"/>\r\n                          <div class=\"container3\">\r\n                            <h2>Kyle Kwasniewski</h2>\r\n                            <p class=\"title3\">Creator &amp; FullStack Dev.</p>\r\n                            <p>I work in Software Development and Dev-Ops in New York and consider myself a Ricochet Robots enthusiast so I decided to make this application as a way to better hone my skill in web frameworks as well as pass the time during the quarantine. If you find any bugs or feature requests for RobotsEvolved please let me know by emailing me below I would love to hear some of the ideas people have. Ill get to developing the feature/fixing annoying bugs ASAP.</p>\r\n                            <p>Thanks for playing!</p>\r\n                            <p>robotsevolved@gmail.com</p>\r\n                          </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/284f909d-0d5c-4ae1-b100-76c9d46ae7d4.png\"} alt=\"Mike\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Jonah Tollefson</h2>\r\n                                <p className=\"title3\">Front-End Dev.</p>\r\n                                <p>Went to college with these other goobers in the US and now I work professionally as a\r\n                                    software engineer in Germany. For RobotsEvolved, I mainly worked on the frontend\r\n                                    using React. Cats and Ultimate Frisbee are life.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/derekschultz.jpg\"} alt=\"John\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Derek Schultz</h2>\r\n                                <p className=\"title3\">Back-End Dev.</p>\r\n                                <p>Full time Software Engineer. Graduated from University of Wisconsin Platteville\r\n                                    with a BS in Computer Science and Minor in Business Administration. Worked on\r\n                                    most of the database aspect of RobotsEvolved and some back end functionality. I\r\n                                    enjoy video games, beer, and playing darts.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n\r\n\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nexport default function ShowDailyPuzzleHistory(props) {\r\n    const handleDailyPuzzleHistoryClick = event => {\r\n        console.log(props.history)\r\n        props.handleDailyPuzzleHistoryClick(props.history)\r\n    }\r\n    return (\r\n            <Button style={window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? {marginLeft: '5px'} : {marginLeft: '60px'}} variant=\"contained\" size=\"small\" color=\"primary\" onClick={handleDailyPuzzleHistoryClick}>\r\n                 show answers\r\n            </Button>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport ShowDailyPuzzleHistory from '../components/ShowDailyPuzzleHistory';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ProfilePageCreatedGamesDetails from \"../components/ProfilePageComponents/ProfilePageCreatedGamesDetails\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function DailyChallengeHistory(props) {\r\n    const [expandedPanel, setExpandedPanel] = React.useState(false);\r\n    const handleChangePanel = (panel) => (event, isExpanded) => {\r\n        setExpandedPanel(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles();\r\n    return (<div style={gamepanel()}>\r\n                <Typography className={classes.titlehome} variant=\"h3\">Daily Challenge History</Typography>\r\n                {\r\n                    props.dailychallengehistory.map((history, index) =>\r\n                        <ExpansionPanel expanded={expandedPanel === 'panelgame' + index} onChange={handleChangePanel('panelgame' + index)}>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={\"panel\" + index + \"-content\"}\r\n                                id={\"panel\" + index + \"-header\"}\r\n                            >\r\n                                <Typography className={classes.heading}>{history.created}</Typography>\r\n                                <Typography className={classes.secondaryHeading}>Winner: {history.nameSubmitted}</Typography>\r\n                                <ShowDailyPuzzleHistory history={history} handleDailyPuzzleHistoryClick={props.handleDailyPuzzleHistoryClick}/>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        <FaCrown/> {history.nameSubmitted} - {history.scoreSubmitted} <FaCrown/>\r\n                                    </Typography>\r\n                                    <Typography className={classes.secondaryHeading}>Lowest possible solution: {history.bestScore}</Typography>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                    )\r\n                }\r\n           </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengeHistoryAnswersPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        console.log(this.props.history);\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                dailyChallengeModeAnswers={'Yes'}\r\n                nameSubmitted={this.props.history.nameSubmitted}\r\n                bestScore={this.props.history.bestScore}\r\n                created={this.props.history.created}\r\n                games={this.props.history.games}\r\n                playerStateList={this.props.history.playerStateList}\r\n                scoreSubmitted={this.props.history.scoreSubmitted}\r\n                solutionDataSubmitted={this.props.history.solutionDataSubmitted}\r\n                submitted={this.props.history.submitted}\r\n                user_id={this.props.user_id}\r\n                />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengeHistoryAnswersPage;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n  },\r\n}));\r\n\r\nexport default function LoadingPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress size={120} color=\"secondary\" />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport clsx from 'clsx';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport Home from './Pages/Home';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\nimport axios from 'axios';\r\nimport Game from './containers/Game';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"./constants/constants\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport PuzzleRushDifficultyModal from \"./containers/Modals/PuzzleRushDifficultyModal\";\r\nimport RandomGameDifficultyModal from \"./containers/Modals/RandomGameDifficultyModal\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport RandomGamePage from \"./Pages/RandomGamePage\";\r\nimport PuzzleRushPage from \"./Pages/PuzzleRushPage\";\r\nimport LessonsPage from \"./Pages/LessonsPage\";\r\nimport DailyChallengePage from \"./Pages/DailyChallenge\";\r\nimport AboutUs from \"./Pages/AboutUs\";\r\nimport DailyChallengeHistory from \"./Pages/DailyChallengeHistory\";\r\nimport DailyChallengeHistoryAnswersPage from \"./Pages/DailyChallengeHistoryAnswersPage\";\r\nimport { FaMedal } from 'react-icons/fa';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport LoadingPage from './components/LoadingPage';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    drawerHeaderRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerHeaderLeft: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    toolbar1: {\r\n        backgroundColor: '#14A76C',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    dividerFullWidth: {\r\n        margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    darkmode: {\r\n          body: '#363537',\r\n          text: '#FAFAFA',\r\n          toggleBorder: '#6B8096',\r\n          gradient: 'linear-gradient(#091236, #1E215D)',\r\n    },\r\n});\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (window.uri === '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n                dailychallengehistoryloaded: false,\r\n                profileDataloaded: false,\r\n            };\r\n        }\r\n        else {\r\n            if (window.token.g_id == undefined) {\r\n                const linedir = window.userInfo == undefined ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={linedir} name={window.token.name} gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri}/>, //when uri is entered to play specific game\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                };\r\n            }\r\n            else {\r\n                const linedir = window.userInfo == undefined ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={linedir} randomGame={'Yes'} game={window.token} difficulty={window.token.g_difficulty}/>,\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                }\r\n            }\r\n        }\r\n        this.state.open = false;\r\n        this.state.mobileAnchorEl = null;\r\n        this.state.mobileMenuOpen = false;\r\n        this.state.showLoginModal = false;\r\n        this.state.showPuzzleRushModal = false;\r\n         if (window.loggedin === 'Yes') {\r\n            this.state.LineDirections = window.userInfo.LineDirFlag === 'Y';\r\n         }\r\n         else {\r\n            this.state.LineDirections = true;\r\n         }\r\n    }\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState( {\r\n            open: false\r\n        })\r\n    };\r\n\r\n    handleLineDirections = (boolean) => {\r\n        if (window.loggedin === 'Yes') {\r\n            axios.post('/settingsChange', {LineDirections: boolean ? 'Y' : 'N'})\r\n                .then( res => {\r\n                    console.log('changed');\r\n                });\r\n        }\r\n        this.setState({\r\n            LineDirections: boolean\r\n        });\r\n    }\r\n\r\n    handleClickDailyChallenge = () => {\r\n        axios.get('/getDailyChallengeData')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    const dc_movesList = res.data.dc_movesList == null ? null : JSON.parse(res.data.dc_movesList)\r\n                    const dc_playerList = res.data.dc_playerList == null ? null : JSON.parse(res.data.dc_playerList)\r\n                    this.setState({\r\n                                    PageSelected: <DailyChallengePage\r\n                                                        handleClickDailyChallenge={this.handleClickDailyChallenge}\r\n                                                        dailyChallengeGameslist={JSON.parse(res.data.dailyChallengeGameslist)}\r\n                                                        dc_id={res.data.dc_id}\r\n                                                        dchighscores={JSON.parse(res.data.dchighscores)}\r\n                                                        handleLineDirections={this.handleLineDirections}\r\n                                                        LineDirections={this.state.LineDirections}\r\n                                                        savedMoves={dc_movesList}\r\n                                                        playerStateList={dc_playerList}\r\n                                    />,\r\n                                    open: isOpen\r\n                                });\r\n                    });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState( {\r\n            open: true\r\n        });\r\n    };\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type === 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    };\r\n\r\n    handleClickRandomGameModal = (game,difficulty) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showRandomGameModal: false,\r\n            PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} randomGame={'Yes'} game={game} difficulty={difficulty}/>,\r\n            open: isOpen\r\n        });\r\n    }\r\n\r\n    handleClickRandomGame = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: true,\r\n        });\r\n    }\r\n\r\n\r\n    handleClickPuzzleRush = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: true,\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallengeHistory = (event) => {\r\n        event.preventDefault();\r\n        axios.get('/getDailyChallengeHistory')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    var historydata = JSON.parse(res.data)\r\n                    this.setState({\r\n                        PageSelected: <DailyChallengeHistory handleDailyPuzzleHistoryClick={this.handleDailyPuzzleHistoryClick} dailychallengehistory={historydata}/>,\r\n                        challengeHistoryData: historydata,\r\n                        dailychallengehistoryloaded: true,\r\n                        open: isOpen\r\n                    });\r\n            });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    }\r\n\r\n    handleDailyPuzzleHistoryClick = history => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <DailyChallengeHistoryAnswersPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} history={history}/>,\r\n            open: isOpen\r\n        });\r\n    }\r\n\r\n    handleClickPuzzleRushModal = (difficulty,games,p_id) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showPuzzleRushModal: false,\r\n            PageSelected: <PuzzleRushPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={difficulty}/>,\r\n            open: isOpen\r\n        });\r\n    };\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: false\r\n        });\r\n    }\r\n\r\n    closeRandomGameLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: false\r\n        });\r\n    }\r\n\r\n    handleGameClick = (name, gamedata,highscores,uri) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} name={name} highscores={highscores} gamedata={gamedata} uri={uri}/>,\r\n            open: isOpen\r\n        });\r\n    };\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <CreateGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} state={\"new\"}/>,\r\n             open: isOpen\r\n        });\r\n    };\r\n\r\n\r\n    handleClickProfile = event => {\r\n        if (window.loggedin === 'Yes') {\r\n                    axios.get('/getProfileData')\r\n                        .then( res => {\r\n                            var isOpen = this.state.open;\r\n                            if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                                isOpen = false\r\n                            }\r\n                            var profileData = res.data;\r\n                            var gamesview = JSON.parse(profileData.gamesview)\r\n                            var solutionsview = JSON.parse(profileData.solutionsview)\r\n                            var puzzlerushview = JSON.parse(profileData.puzzlerushview)\r\n                            this.setState({\r\n                                PageSelected: <ProfilePage handleClickPlayGame={this.handleGameClick} gamesview={gamesview} solutionsview={solutionsview} puzzlerushview={puzzlerushview}/>,\r\n                                gamesview: gamesview,\r\n                                solutionsview: solutionsview,\r\n                                puzzlerushview: puzzlerushview,\r\n                                profileDataloaded: true,\r\n                                open: isOpen\r\n                            });\r\n                        });\r\n                    this.setState({\r\n                        PageSelected: <LoadingPage/>,\r\n                    });\r\n                }\r\n        else {\r\n            this.SignInButtonPressed('Sign in');\r\n        }\r\n    };\r\n\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        axios.get('/getFindGames')\r\n            .then( res => {\r\n                const gameslist = JSON.parse(res.data.gameslist)\r\n                const highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                var isOpen = this.state.open;\r\n                if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                    isOpen = false\r\n                }\r\n                this.setState({\r\n                    PageSelected: <FindGame gameslist={gameslist} highscoreslist={highscoreslist} handleGameClick={this.handleGameClick}/>,\r\n                    open: isOpen\r\n                });\r\n        });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleHomePageClick = () => {\r\n        this.setState({\r\n            PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n        });\r\n    }\r\n\r\n\r\n    handleClickAboutUs = event => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <AboutUs/>,\r\n            open: isOpen\r\n        });\r\n    }\r\n\r\n    handleClickLearnGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <LessonsPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections}/>,\r\n            open: isOpen\r\n        });\r\n\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileAnchorEl: null,\r\n            mobileMenuOpen: false\r\n        });\r\n    };\r\n\r\n    showPage = () => {\r\n        return(\r\n            this.state.PageSelected\r\n        )\r\n    }\r\n\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({\r\n            mobileAnchorEl: event.currentTarget,\r\n            mobileMenuOpen: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const theme = createMuiTheme({\r\n            palette: {\r\n                primary: teal,\r\n                secondary: {\r\n                    main: '#e65100',\r\n                },\r\n            }\r\n        });\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <AppBar\r\n                        position=\"fixed\"\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: this.state.open,\r\n                        })}\r\n                     >\r\n                        <Toolbar className={classes.toolbar1}>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={this.handleDrawerOpen}\r\n                                edge=\"start\"\r\n                                className={clsx(classes.menuButton, this.state.open && classes.hide)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <img onClick={this.handleHomePageClick} width={50} height={50} src=\"/static/images/logo150.png\"/>\r\n                            <Typography variant=\"h6\" className={classes.title} noWrap>\r\n                                <a href=\"/\" style={{color: 'white'}}>RobotsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </Typography>\r\n                            <div className={classes.grow} />\r\n                            <div className={classes.sectionDesktop}>\r\n                                <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.sectionMobile}>\r\n                                <IconButton\r\n                                    aria-label=\"show more\"\r\n                                    aria-controls={\"primary-search-account-menu-mobile\"}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.handleMobileMenuOpen}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <MoreIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Menu\r\n                        anchorEl={this.state.mobileAnchorEl}\r\n                        anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        id={\"primary-search-account-menu-mobile\"}\r\n                        keepMounted\r\n                        transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        open={this.state.mobileMenuOpen}\r\n                        onClose={this.handleMobileMenuClose}\r\n                    >\r\n                        <MenuItem>\r\n                            <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                    <Drawer\r\n                        id=\"MainDrawer\"\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.state.open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div className={classes.drawerHeader}>\r\n                            <div className={classes.drawerHeaderLeft}>\r\n                                <SignInButton onClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.drawerHeaderRight}>\r\n                                <IconButton onClick={this.handleDrawerClose}>\r\n                                    {useTheme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Play\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Create a Game'} onClick={this.handleClickCreateGame}>\r\n                                <ListItemIcon><PlayArrowIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Create a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Find a Game'} onClick={this.handleClickFindGame}>\r\n                                <ListItemIcon><SearchIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Find a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge'} onClick={this.handleClickDailyChallenge}>\r\n                                <ListItemIcon><TodayIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Random Game'} onClick={this.handleClickRandomGame}>\r\n                                <ListItemIcon><CasinoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Random Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Puzzle Rush'} onClick={this.handleClickPuzzleRush}>\r\n                                <ListItemIcon><TimerIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Puzzle Rush'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Learn\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Lessons'} onClick={this.handleClickLearnGame}>\r\n                                <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Lessons'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Community\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Profile'} onClick={this.handleClickProfile}>\r\n                                <ListItemIcon><AccountBoxIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Profile'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge History'} onClick={this.handleClickDailyChallengeHistory}>\r\n                                <ListItemIcon><FaMedal /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge History'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Tools\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'About'} onClick={this.handleClickAboutUs}>\r\n                                <ListItemIcon><InfoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'About'} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n                    <main className={clsx(classes.content, {\r\n                        [classes.contentShift]: this.state.open,\r\n                    })}>\r\n                        <div className={classes.drawerHeader} />\r\n                        {this.showPage()}\r\n                    </main>\r\n                    <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n                    <PuzzleRushDifficultyModal\r\n                        closeModal={this.closePuzzleRushLoginModal}\r\n                        show={this.state.showPuzzleRushModal}\r\n                        handleClickPuzzleRush={this.handleClickPuzzleRushModal}\r\n                    />\r\n                    <RandomGameDifficultyModal\r\n                        closeModal={this.closeRandomGameLoginModal}\r\n                        show={this.state.showRandomGameModal}\r\n                        handleClickRandomGame={this.handleClickRandomGameModal}\r\n                    />\r\n                </div>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}