{"version":3,"sources":["components/LearnGameItems.js","constants/constants.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinModal.jsx","components/AddPuzzleModal.jsx","components/ToggleSettings.js","components/Timer.js","containers/DisplayView.js","components/HighScores.jsx","components/DailyChallengeScores.jsx","containers/Modals/PuzzleRushFinishedModal.js","containers/Modals/RandomGameStatsModal.jsx","components/DescriptionList.jsx","components/boardgenerator.js","containers/Modals/BoardResetModal.js","containers/Game.js","Pages/CreateGame.js","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","Material-UI/themes.jsx","Pages/Home.js","containers/Modals/LoginModal.js","components/LoggedInUser.js","components/SignInButton.js","containers/Modals/PuzzleRushDifficultyModal.js","containers/Modals/RandomGameDifficultyModal.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","components/ProfilePageComponents/ProfilePageCreatedGamesDetails.js","components/ProfilePageComponents/ProfilePageSolutionDetails.js","Pages/ProfilePage.js","Pages/RandomGamePage.js","Pages/PuzzleRushPage.js","Pages/AboutUs.js","App.js","serviceWorker.js","index.js"],"names":["LearnGameItems","props","handleClick","handleClickGame","index","selected","Button","variant","color","onClick","game","name","UP","LEFT","DIRECTION_MAP_IMAGES","yellow","DOWN","RIGHT","red","green","blue","MovesView","style","width","float","display","this","moveHistory","length","map","move","src","playerState","robot","colorSignifier","dir","React","Component","styleoutside","dimension","position","dim","height","backgroundColor","top","left","styleinside","styleinside2","Square","handlePlayerMovementFromMouse","border","margin","overflow","children","id","transition","styleoutsidedraggable","selectedColor","undefined","borderStyle","borderColor","borderRadius","Robot","handleKeyDown","e","newDirection","keyCode","tabSelector","resetPuzzle","handlePlayerMovement","onStopDragHandler","handleCreateMode","isCreateMode","buildMode","x","y","grid","draggableGrid","onStop","bounds","window","onkeydown","orientation","opacity","wallThickness","wallOffset","Wall","userSelect","styledragable","Goal","endPosition","obj","key","hasOwnProperty","YouWinModal","Dialog","onClose","handleClose","aria-labelledby","open","show","maxWidth","DialogTitle","DialogContent","dividers","numMoves","TextField","label","defaultValue","username","DialogActions","submitAnswer","AddPuzzleModal","submitPuzzle","ToggleSettings","event","FormControlLabel","value","control","Switch","onChange","Timer","state","minutes","seconds","timer","myInterval","setInterval","setState","puzzleRushTimeUp","clearInterval","valuetext","DisplayView","createMode","fullWidth","handleCreateBoardClick","checked","toggleBuildMode","createBoardPressed","copyToClipboard","dummy","document","createElement","body","appendChild","location","host","uri","select","execCommand","removeChild","copiedClipboard","thisThing","copyButtonText","setTimeout","handleDimensionChange","getElementsByClassName","blur","parseInt","toString","DimensionChanged","puzzleRush","isPuzzleRush","Typography","gutterBottom","numPuzzleRush","marginRight","marginTop","marginBottom","paddingBottom","Divider","ButtonGroup","aria-label","undoMove","toggleLineIndicators","Slider","onChangeCommitted","getAriaValueText","step","marks","min","max","squareSizeValue","valueLabelDisplay","highscores","marginleft","highscore","comment","highscorestyle","score","user_id","PuzzleRushWinModal","difficulty","Grid","container","spacing","item","xs","md","List","dense","ListItem","ListItemText","primary","secondary","numPuzzlesCompleted","percentile","averageTime","averageMoves","differenceOptimal","movesPerSecond","playPuzzleRushAgain","closeModal","RandomGameStatsModal","showStatsModal","handleShowRandomAnswers","answers","lowestMoveSequence","lowestMoves","Descriptionlist","tipsText","text","ListItemAvatar","Avatar","ListItemSecondaryAction","IconButton","edge","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","type","boardState","wallVerticle","wallHorizontal","goal","randompos1","randompos2","randompos3","randompos4","randomPositions","i","push","extend","j","gameWon","playerStart","slice","BoardResetModal","createBoardHandler","preventDefault","getElementById","percent","createBoard","textAlign","paddingRight","Input","inputProps","title","placeholder","addEventListener","indexOf","setDefaultSquareSize","boardWidth","drawerWidth","getComputedStyle","windowWidth","innerWidth","settings","Game","squareSize","updateHighscores","axios","get","then","res","JSON","parse","data","copiedToClipboard","updateDailyHighscores","dc_id","componentDidMount","loadedGame","IntervalId","dailyChallengeMode","componentWillUnmount","robotSelect","robotSelected","namesubmit","userInfo","post","puzzledata","authorname","history","ColoredLineDirections","showBoardResetPanelModal","closeRandomStatsModal","closeCreateBoardModal","closePuzzleRushFinishedModal","showPuzzleRushFinishedModal","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","totalMovesDiff","solutiondifference","numPuzzleon","totalMoves","totalMovesList","avgMoves","p_id","differenceFrom","console","log","submitDailyAnswer","moveHistoryList","solutiondata","handleUndoMove","checkwin","robotPosition","randomGame","Won","gamesWonDaily","g_id","games","solutionmoves","g_moves","g_puzzledata","newarray","concat","oldPositon","prevPosition","handleLearnClickGame","description","handleDailyClickGame","playerStateList","loadSidebar","learnMode","direction","DailyChallengeScores","HighScores","posObj","moveObj","pop","createModeWallClick","indexToChange","newWallHorizontal","wallH","newWallVerticle","wallV","onStopDragHandlerGoal","round","lastY","lastX","goals","gamedata","moves","images","charAt","formatGeneratedMoveSequence","g_solutiondata","g_difficulty","settingsWidth","settingsHeight","percentWall","settingsPercent","padding","alignItems","sm","Board","square","ColoredLineDirection","ColoredLine","player","puzzleRushPercentileCompleted","withRouter","CreateGame","withStyles","theme","root","upperPadding","paddingTop","lowerPadding","rightSideText","leftSideText","classes","numberOfHighScores","trimName","substring","Card","className","CardContent","justifyContent","Tooltip","created","handleGameClick","flexItem","disableGutters","FindGame","handleFilterMenuOpen","anchorEl","currentTarget","handleCloseFilterMenu","handleSearchSubmit","searchTerm","searchRef","search","offset","highscoreslist","gameslist","Paper","component","InputBase","input","inputRef","ref","onKeyPress","iconButton","divider","startIcon","Menu","keepMounted","Boolean","MenuItem","FindGameElements","marginLeft","flex","PlayGame","useStyles","makeStyles","flexGrow","griditems","paper","Width","image","img","maxHeight","baseExpansion","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","darkmode","iconcards","minWidth","marginBotton","createboardcard","content","demo","background","ComplexGrid","justify","frameborder","allow","allowfullscreen","CardActionArea","handleClickCreateGame","CardMedia","alt","CardActions","size","handleClickFindGame","handleClickRandomGame","handleClickLearnGame","handleClickDailyChallenge","handleClickPuzzleRush","LoginModal","loginGoogle","href","closeLoginModal","LoggedInUser","loggedin","class","profilePicture","SignInButton","textToShow","PuzzleRushDifficultyModal","handleClickPuzzleRushModal","action","isLoading","handleClickEasyPuzzleRush","handleClickMediumPuzzleRush","handleClickHardPuzzleRush","handleClickExHardPuzzleRush","wrap","CircularProgress","handleClickRandomGameModal","handleClickEasy","handleClickMedium","handleClickHard","handleClickExHard","ProfilePageCreatedGamesDetails","handleClickPlayGame","ProfilePageSolutionDetails","solution","HSname","ProfilePage","panel","useState","expandedGame","setExpandedGame","expandedHighscores","setExpandedHighscores","expandedPuzzleRush","setExpandedPuzzleRush","gamesview","ExpansionPanel","expanded","isExpandedGame","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","solutionsview","isExpandedHighScores","isExpandedPuzzleRush","RandomGamePage","PuzzleRushPage","AboutUs","App","handleDrawerClose","isOpen","dailyChallengeGameslist","PageSelected","dchighscores","handleDrawerOpen","SignInButtonPressed","showLoginModal","showRandomGameModal","showPuzzleRushModal","closePuzzleRushLoginModal","closeRandomGameLoginModal","newGame","handleClickProfile","puzzlerushview","handleClickAboutUs","learngameslist","handleMobileMenuClose","mobileAnchorEl","mobileMenuOpen","handleMobileMenuOpen","token","createMuiTheme","teal","main","AppBar","clsx","appBar","appBarShift","Toolbar","menuButton","hide","noWrap","grow","sectionDesktop","Badge","badgeContent","sectionMobile","aria-haspopup","anchorOrigin","vertical","horizontal","transformOrigin","Drawer","drawer","anchor","drawerPaper","drawerHeader","drawerHeaderLeft","drawerHeaderRight","useTheme","dividerFullWidth","button","ListItemIcon","contentShift","RandomGameDifficultyModal","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","mixins","toolbar","breakpoints","up","toggleBorder","gradient","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.79c63a5b.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nexport default function LearnGameItems(props) {\r\n    const handleClick = () => {\r\n        props.handleClickGame(props.index)\r\n    }\r\n    if (props.selected === props.index) {\r\n        return (\r\n            <Button\r\n                variant=\"contained\" color=\"primary\"\r\n                onClick={handleClick}\r\n            >\r\n                {props.game.name}\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={handleClick}\r\n            >\r\n                {props.game.name}\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n}","export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const MOBILE_INNER_SCREEN_WIDTH = '960';\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.handlePlayerMovementFromMouse(this.props.position);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div id=\"MainGameBoard\" style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleoutsidedraggable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var selectedColor = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        selectedColor = SELECTED_ROBOT;\r\n        borderStyle = \"solid\";\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        borderStyle: borderStyle,\r\n        borderColor: selectedColor,\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.props.tabSelector();\r\n                return;\r\n                break;\r\n            case 32:\r\n                this.props.resetPuzzle();\r\n                return;\r\n                break;\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n\r\n\r\n        }\r\n        this.props.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    onStopDragHandler = (e, position) => {\r\n        this.props.onStopDragHandler(position,this.props.index);\r\n    }\r\n\r\n\r\n    handleCreateMode = () => {\r\n        if (this.props.isCreateMode === 'Yes' && this.props.buildMode) {\r\n            return (\r\n            <Draggable position={{x: this.props.position.left * this.props.dimension, y:this.props.position.top*this.props.dimension}} grid={this.props.draggableGrid} onStop={this.onStopDragHandler} bounds=\"parent\">\r\n                <div onClick={this.handleClick} style={styleoutsidedraggable(this.props)}>\r\n                    <div style={styleinside(this.props)}>\r\n                        <div style={styleinside2(this.props)}/>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n        this.handleCreateMode()\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onkeydown = this.handleKeyDown;\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.isCreateMode === 'Yes'  && props.buildMode) {\r\n        const onStopDragHandler = (e, position) => {\r\n            props.onStopDragHandler(position);\r\n        }\r\n        return(\r\n        <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n            <img src={GOAL_IMAGE} style={styledragable(props)}/>\r\n        </Draggable>\r\n        )\r\n    }\r\n    else {\r\n        return(<img src={GOAL_IMAGE} style={style(props)}/>)\r\n    }\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = '4px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = '4px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = '4px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension;\r\n            width = '4px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    top+=18;\r\n    left+=18;\r\n\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\nexport default (props) => (\r\n    <div style={style(props)}/>\r\n);","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Submit Puzzle</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField id={\"namesubmit\"} label={\"Name of Puzzle\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleModal;\r\n","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Line Indicators\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n\r\n    state = {\r\n            minutes: 5,\r\n            seconds: 0,\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.puzzleRushTimeUp();\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    timer = () => {\r\n        if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n            return (<h2>Time is up!</h2>)\r\n        }\r\n        else {\r\n            return(\r\n                <h2>Time Remaining: {this.state.minutes}:{this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds}</h2>)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            this.timer()\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ToggleSettings from \"../components/ToggleSettings\";\r\nimport Timer from \"../components/Timer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { copyButtonText: \"Copy Puzzle Link\" };\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <div>\r\n                    <Button color=\"secondary\" variant={\"outlined\"} fullWidth={true} onClick={this.handleCreateBoardClick}>Modify Board</Button>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Switch color=\"primary\" checked={this.props.buildMode} onChange={this.props.toggleBuildMode}/>}\r\n                        label=\"Build Mode\"\r\n                            />\r\n                </div>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.props.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        document.getElementsByClassName(\"MuiSlider-thumb\")[0].blur();\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n    puzzleRush = () => {\r\n        if (this.props.isPuzzleRush === 'Yes'){\r\n            return (\r\n                     <div>\r\n                        <Typography id=\"discrete-slider-small-steps\"\r\n                                     color=\"textSecondary\"\r\n                                     display=\"inline\"\r\n                                     gutterBottom>\r\n                             Puzzles: {this.props.numPuzzleRush}\r\n                         </Typography>\r\n                        <Timer puzzleRushTimeUp={this.props.puzzleRushTimeUp}>\r\n                        </Timer>\r\n                     </div>\r\n            )\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                 <div style={{paddingBottom: '10px'}}>\r\n                     <Button fullWidth={true} variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                             onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                 </div>\r\n                 <Divider />\r\n                 <Typography\r\n                     color=\"textSecondary\"\r\n                     display=\"block\"\r\n                     variant=\"caption\"\r\n                     style={{paddingBottom: '10px'}}\r\n                 >\r\n                     Board Actions\r\n                 </Typography>\r\n                 <ButtonGroup fullWidth={true} color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     <Button onClick={this.props.undoMove}>Undo</Button>\r\n                 </ButtonGroup>\r\n                 {this.isCreateMode(this.props.createMode)}\r\n                 <ToggleSettings onClick={this.props.toggleLineIndicators}/>\r\n                 <div style={buttonPanel()}>\r\n                     <Typography id=\"discrete-slider-small-steps\"\r\n                                 color=\"textSecondary\"\r\n                                 display=\"inline\"\r\n                                 gutterBottom>\r\n                         Size Of Board\r\n                     </Typography>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={this.props.squareSizeValue}\r\n                         valueLabelDisplay=\"auto\"\r\n                         id=\"sliderelement\"\r\n                     />\r\n                 </div>\r\n                 {this.puzzleRush()}\r\n                 <Divider/>\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n        <div style={styleelements()}>{'By: ' + highscore.comment}\r\n            <div>\r\n                {'Moves: ' + highscore.numMoves}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <div style={styleouter()}>{'All Highscores:'}\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </div>\r\n)","import React from 'react';\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n        <div style={styleelements()}>{'By: ' + highscore.name}\r\n            <div>\r\n                {'Moves: ' + highscore.score}\r\n            </div>\r\n            <div>\r\n                {highscore.user_id != 1 ? 'verified' : 'not verified'}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <div style={styleouter()}>{'All Submissions:'}\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </div>\r\n)","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\n\r\nclass PuzzleRushWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Puzzle Rush - {this.props.difficulty}</DialogTitle>\r\n                <DialogContent dividers>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"h6\">\r\n                            Statistics\r\n                          </Typography>\r\n                          <div>\r\n                            <List dense={true}>\r\n\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Number of Puzzles Completed\"\r\n                                    secondary={this.props.numPuzzlesCompleted}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Percentile\"\r\n                                    secondary={this.props.percentile}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average time Per Puzzle\"\r\n                                    secondary={this.props.averageTime}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average Moves per Puzzle\"\r\n                                    secondary={this.props.averageMoves}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Difference from most optimal Solution\"\r\n                                    secondary={this.props.differenceOptimal}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Moves Per Second\"\r\n                                    secondary={this.props.movesPerSecond}\r\n                                  />\r\n                                </ListItem>\r\n                            </List>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.playPuzzleRushAgain}>Play Again!</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushWinModal;\r\n\r\n","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../../constants/constants';\r\n\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass RandomGameStatsModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answers: null,\r\n        }\r\n    }\r\n\r\n    showStatsModal = () => {\r\n        this.props.handleShowRandomAnswers()\r\n        this.setState({\r\n            answers: this.props.lowestMoveSequence\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-random\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        lowest possible moves: {this.props.lowestMoves}\r\n                    </div>\r\n                    {this.state.answers}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.showStatsModal}>Show Puzzle Answers</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomGameStatsModal;","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nexport default function Descriptionlist(props) {\r\n    return(\r\n            <List>\r\n              {\r\n                  props.tipsText.map(text =>\r\n                    <ListItem>\r\n                      <ListItemAvatar>\r\n                        <Avatar>\r\n                          <FeedbackIcon />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <div>\r\n                        {text}\r\n                      </div>\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                          <CloseIcon />\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  )\r\n              }\r\n            </List>\r\n    )\r\n}","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent,type) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    if (type === 'blank') {\r\n        var goal = {top: height-1, left: width-1};\r\n        var randompos1 = {top: 0,left: 0, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n        var randompos2 = {top: 0,left: 1, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n        var randompos3 = {top: 1,left: 0, color: ROBOT_RED, colorSignifier: 'red'};\r\n        var randompos4 = {top: 1,left: 1, color: ROBOT_YELLOW, colorSignifier:'yellow'};\r\n    }\r\n    else {\r\n        var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n        var randomPositions = [goal];\r\n        for (var i=0;i<5;i++) {\r\n            randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n        }\r\n        var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n        var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n        var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n        var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    }\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router';\r\nimport Draggable from 'react-draggable';\r\nimport LearnGameItems from '../components/LearnGameItems';\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport PuzzleRushWinModal from '../containers/Modals/PuzzleRushFinishedModal';\r\nimport RandomGameStatsModal from '../containers/Modals/RandomGameStatsModal';\r\nimport DescriptionList from '../components/DescriptionList';\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if([37, 38, 39, 40, 9].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        padding: '40px'\r\n    };\r\n};\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\nconst formatGeneratedMoveSequence = (moves) => {\r\n    var images = []\r\n    moves.map(move => {\r\n        var color = move.charAt(0);\r\n        var direction = move.charAt(1);\r\n        if (color == 'B') {\r\n            color = 'blue'\r\n        }\r\n        else if (color == 'R') {\r\n            color = 'red'\r\n        }\r\n        else if (color == 'Y') {\r\n            color = 'yellow'\r\n        }\r\n        else {\r\n            color = 'green'\r\n        }\r\n        if (direction == 'N') {\r\n            direction = UP\r\n        }\r\n        else if (direction == 'S') {\r\n            direction = DOWN\r\n        }\r\n        else if (direction == 'E') {\r\n            direction = RIGHT\r\n        }\r\n        else {\r\n            direction = LEFT\r\n        }\r\n        images.push(<img src={DIRECTION_MAP_IMAGES[color][direction]}/>)\r\n    });\r\n    return images\r\n}\r\n\r\n\r\nconst setDefaultSquareSize = (boardWidth) => {\r\n    const drawerWidth = document.getElementById(\"MainDrawer\") == null ? 140 : parseInt(getComputedStyle(document.getElementById(\"MainDrawer\")).width);\r\n    const windowWidth = window.innerWidth;\r\n    var settings = ((windowWidth < 600) ? windowWidth : (windowWidth - drawerWidth) / 1.75);\r\n    settings = settings / boardWidth;\r\n    settings = parseInt(settings);\r\n    settings = settings - (settings % 4);\r\n    if (settings < 16) {\r\n        settings = 16;\r\n    }\r\n    else if (settings > 52) {\r\n        settings = 52;\r\n    }\r\n    return settings;\r\n};\r\n\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.puzzleRush === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.p_id = this.props.p_id;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n            this.state.tipsText = []\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n            this.state.playerStateList = [];\r\n            this.state.moveHistoryList=[];\r\n            this.state.tipsText = [];\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.dc_id = this.props.dc_id;\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.game.g_puzzledata)\r\n            this.state.lowestMoves = this.props.game.g_moves\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.game.g_solutiondata))\r\n            this.state.difficulty = this.props.game.g_difficulty\r\n            this.state.createMode = 'No';\r\n            this.state.gameWon = false;\r\n            this.state.buildMode = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n            this.state.tipsText = ['this game was randomly generated']\r\n        }\r\n        else if (this.props.learnMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n            this.state.tipsText = [this.props.games[0].description];\r\n        }\r\n        else if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.buildMode = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n            this.state.tipsText = []\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,1,'blank');\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                buildMode: true,\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false,\r\n                tipsText: [\r\n                                        'Click on Wall spots to toggle',\r\n                                        'Click and Drag robots or goal to move robots',\r\n                                        'When you are ready, toggle build mode in order to solve the puzzle',\r\n                                        'You must solve the puzzle in order to submit.']\r\n            },board);\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n        }\r\n    };\r\n\r\n    setDefaultSquareSize = (boardWidth) => {\r\n\r\n        const drawerWidth = document.getElementById(\"MainDrawer\")\r\n        const windowWidth = window.innerWidth;\r\n        var settings = windowWidth - drawerWidth;\r\n        settings = ((windowWidth < 600) ? settings : settings / 1.5);\r\n        settings = settings / boardWidth;\r\n        this.setState({\r\n            squareSize: settings,\r\n        });\r\n    };\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                this.setState({\r\n                    highscores: JSON.parse(res.data.highscores),\r\n                });\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    updateDailyHighscores = () => {\r\n        axios.get('/dailychallengehighscores?dc_id=' + this.state.dc_id)\r\n            .then( res => {\r\n                this.setState({\r\n                    highscores: JSON.parse(res.data.highscores),\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.updateHighscores();\r\n            var IntervalId = setInterval(this.updateHighscores, 4000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.updateDailyHighscores();\r\n            var IntervalId = setInterval(this.updateDailyHighscores, 4000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.userInfo !== null) {\r\n            username = window.userInfo.username\r\n        }\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.ColoredLineDirections.length === 0) {\r\n            this.setState({\r\n                ColoredLineDirections: [LEFT,RIGHT,UP,DOWN],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                ColoredLineDirections: [],\r\n            });\r\n        }\r\n    };\r\n\r\n    toggleBuildMode = () => {\r\n        if (this.state.buildMode) {\r\n            this.setState({\r\n                buildMode: false,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n                buildMode: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length, name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeRandomStatsModal = event => {\r\n        this.setState({\r\n            closeRandomStatsModal: false,\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    }\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushFinishedModal = event => {\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: false\r\n        });\r\n\r\n    }\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent, 'blank');\r\n        var squareSize = setDefaultSquareSize(width);\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n            squareSize: squareSize,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n    showStatsModal = () => {\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            showStatsModal: true,\r\n        });\r\n    }\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n\r\n    puzzleRushTimeUp = () => {\r\n        var totalMovesDiff = 0;\r\n        this.state.solutiondifference.map(numMoves => {\r\n            totalMovesDiff += numMoves;\r\n        });\r\n        var averageTime = parseInt(300 / (this.state.numPuzzleon))\r\n        var totalMoves = 0;\r\n        this.state.totalMovesList.map(numMoves => {\r\n            totalMoves += numMoves\r\n        });\r\n        var avgMoves = parseInt(totalMoves / (this.state.numPuzzleon))\r\n        var movesPerSecond = totalMoves / 300;\r\n\r\n        axios.post('/puzzlerushend', {p_id: this.state.p_id,totalMoves: totalMoves,differenceFrom: totalMovesDiff})\r\n            .then( res => {\r\n                console.log(res.data);\r\n            });\r\n\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: true,\r\n            numPuzzlesCompleted: this.state.numPuzzleon,\r\n            percentile: 'TBD%',\r\n            averageTime: averageTime + 's',\r\n            averageMoves: avgMoves,\r\n            differenceOptimal: totalMovesDiff,\r\n            movesPerSecond: movesPerSecond\r\n        });\r\n    }\r\n\r\n    submitDailyAnswer = (event) => {\r\n        event.preventDefault();\r\n        var moveHistoryList = this.state.moveHistoryList\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            numMoves += moveHistory.length\r\n        })\r\n        axios.post('/dailychallenge', {score: numMoves, name: document.getElementById(\"namesubmitHS\").value, solutiondata: moveHistoryList, dc_id: this.state.dc_id})\r\n            .then( res => {\r\n                console.log(res)\r\n            });\r\n        this.state.gameWon = false;\r\n        this.handleUndoMove();\r\n    }\r\n\r\n    checkwin = (robotPosition) => {\r\n        if (robotPosition.top === this.state.goal.top && robotPosition.left === this.state.goal.left) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No' && this.props.puzzleRush !== 'Yes') {\r\n                var username = '';\r\n                if (window.userInfo !== null) {\r\n                    username = window.userInfo.username\r\n                }\r\n                if (this.props.randomGame === 'Yes') {\r\n                    return (\r\n                        <RandomGameStatsModal\r\n                            show={this.state.gameWon}\r\n                            lowestMoves={this.state.lowestMoves}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            numMoves={this.state.moveHistory.length}\r\n                            difficulty={this.state.difficulty}\r\n                            resetPuzzle={this.resetPuzzle}\r\n                            handleShowRandomAnswers={this.handleShowRandomAnswers}\r\n                        />\r\n                    );\r\n                }\r\n                else if (this.props.dailyChallengeMode === 'Yes') {\r\n                    var Won=true\r\n                    this.state.gamesWonDaily.map((gameWon,index) => {\r\n                        if (!(index == this.state.numPuzzleon) && !gameWon) {\r\n                            Won = false\r\n                        }\r\n                    });\r\n                    var moveHistoryList = this.state.moveHistoryList\r\n                    moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory\r\n                    var numMoves = 0\r\n                    moveHistoryList.map(moveHistory => {\r\n                        numMoves += moveHistory.length\r\n                    })\r\n                    return Won ? <YouWinModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={numMoves}\r\n                        submitAnswer={this.submitDailyAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                    /> : null;\r\n                }\r\n                else {\r\n                    return  (<YouWinModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        submitAnswer={this.submitAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                    />);\r\n                }\r\n            }\r\n            else if (this.props.puzzleRush === 'Yes'){\r\n                axios.post('/puzzlerushsubmit', {p_id: this.state.p_id,g_id:this.state.games[this.state.numPuzzleon].g_id, moveHistory: this.state.moveHistory})\r\n                    .then( res => {\r\n                        console.log(res.data);\r\n                    });\r\n                var totalMoves = this.state.moveHistory.slice().length\r\n                var totalMovesList = this.state.totalMovesList\r\n                totalMovesList.push(totalMoves)\r\n                var solutionmoves = totalMoves - this.state.games[this.state.numPuzzleon].g_moves\r\n                var solutiondifference = this.state.solutiondifference\r\n                solutiondifference.push(solutionmoves)\r\n                var puzzledata = JSON.parse(this.state.games[this.state.numPuzzleon + 1].g_puzzledata)\r\n                if (this.state.numPuzzleon + 3 > this.state.games.length) {\r\n                    axios.get('/puzzlerushgetmore?p_id=' + this.props.p_id + '&difficulty=' + this.props.difficulty)\r\n                        .then( res => {\r\n                                var games = JSON.parse(res.data.games);\r\n                                var stategames = this.state.games\r\n                                var newarray = stategames.concat(games)\r\n                                this.setState({\r\n                                    games: newarray\r\n                                });\r\n                        });\r\n                }\r\n                this.setState(\r\n                    extend(puzzledata,{numPuzzleon: this.state.numPuzzleon + 1, playerState: puzzledata.playerStart.slice(), gameWon: false, solutiondifference: solutiondifference, totalMovesList: totalMovesList})\r\n                );\r\n\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handleShowRandomAnswers = () => {\r\n        this.setState({\r\n            tipsText: [this.state.lowestMoveSequence]\r\n        })\r\n    }\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false) {\r\n            var oldPositon = {left: this.state.playerState[this.state.robotSelected].left, top: this.state.playerState[this.state.robotSelected].top};\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left) && !this.state.buildMode) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier,\r\n                    prevPosition: oldPositon\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n            this.checkwin(newPosition);\r\n        }\r\n    };\r\n\r\n    handleLearnClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].puzzledata);\r\n        var squareSize = setDefaultSquareSize(puzzledata.width);\r\n        this.setState(\r\n            extend(puzzledata,{squareSize: squareSize, numPuzzleon: index, moveHistory: [], gameWon: false, playerState: puzzledata.playerStart.slice(),tipsText: [this.props.games[index].description]})\r\n        );\r\n    }\r\n\r\n    handleDailyClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        var squareSize = setDefaultSquareSize(puzzledata.width);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, squareSize: squareSize, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily})\r\n        );\r\n    }\r\n\r\n\r\n    loadSidebar = () => {\r\n        if (this.props.learnMode == 'Yes') {\r\n            return (\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\">\r\n                        {\r\n                            this.state.games.map((game,index) =>\r\n                                    <LearnGameItems selected={this.state.numPuzzleon} game={game} index={index} handleClickGame={this.handleLearnClickGame}/>\r\n                            )\r\n                        }\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={index} index={index} handleClickGame={this.handleDailyClickGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeScores highscores={this.state.highscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.state.createMode === 'Yes') {\r\n            return null\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            return null\r\n        }\r\n        else {\r\n            return(\r\n            <div style={{display: 'grid'}}>\r\n                <Typography\r\n                    color=\"secondary\"\r\n                    display=\"block\"\r\n                    variant={\"h4\"}\r\n\r\n                >\r\n                    {this.props.name}\r\n                </Typography>\r\n                <br/>\r\n                <HighScores highscores={this.state.highscores}/>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    handlePlayerMovementFromMouse = (posObj) => {\r\n        var newDirection;\r\n        var robot = this.state.playerState[this.state.robotSelected];\r\n        if (posObj.top === robot.top && posObj.left < robot.left)\r\n            newDirection = { top: 0, left: -(this.state.squareSize), dir: LEFT};\r\n        else if (posObj.top === robot.top && posObj.left > robot.left)\r\n            newDirection = { top: 0, left: this.state.squareSize, dir: RIGHT};\r\n        else if (posObj.top < robot.top && posObj.left === robot.left)\r\n            newDirection = { top: -(this.state.squareSize), left: 0, dir: UP};\r\n        else if (posObj.top > robot.top && posObj.left === robot.left)\r\n            newDirection = { top: this.state.squareSize, left: 0, dir: DOWN};\r\n        else newDirection = { top: 0, left: 0, dir: undefined};\r\n        this.handlePlayerMovement(newDirection)\r\n    };\r\n\r\n    handleUndoMove = () => {\r\n        var moveHistory = this.state.moveHistory;\r\n        var playerState = this.state.playerState;\r\n        if (this.state.gameWon === false && moveHistory.length !== 0) {\r\n            var moveObj = moveHistory.pop();\r\n            playerState[moveObj.robot].left = moveObj.prevPosition.left;\r\n            playerState[moveObj.robot].top = moveObj.prevPosition.top;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory\r\n            });\r\n        }\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes' && this.state.buildMode) {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                console.log('clicking horizontal wall');\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onStopDragHandlerGoal = (position) => {\r\n        this.setState({\r\n            goal: {top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize)},\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n        })\r\n    };\r\n\r\n\r\n    onStopDragHandler = (position,index) => {\r\n        var playerState = this.state.playerState.slice();\r\n        var lastX = position.lastX / this.state.squareSize;\r\n        var lastY = position.lastY / this.state.squareSize;\r\n        playerState[index].top = Math.round(lastY);\r\n        playerState[index].left = Math.round(lastX);\r\n        this.setState({\r\n            playerStart: playerState.slice(),\r\n            playerState: playerState,\r\n            moveHistory: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        puzzleRushTimeUp={this.puzzleRushTimeUp}\r\n                        isPuzzleRush={this.props.puzzleRush}\r\n                        numPuzzleRush={this.state.numPuzzleon}\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                        toggleLineIndicators = {this.toggleLineIndicators}\r\n                        toggleBuildMode = {this.toggleBuildMode}\r\n                        undoMove = {this.handleUndoMove}\r\n                        buildMode = {this.state.buildMode}\r\n                        squareSizeValue = {parseInt((this.state.squareSize/4))}\r\n                    />\r\n                    <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8}>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                        handlePlayerMovementFromMouse={this.handlePlayerMovementFromMouse}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal\r\n                            dimension={this.state.squareSize}\r\n                            position={this.state.goal}\r\n                            onStopDragHandler={this.onStopDragHandlerGoal}\r\n                            draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                            isCreateMode={this.state.createMode}\r\n                            buildMode={this.state.buildMode}\r\n                        />\r\n                        {\r\n                            this.state.ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={LINE_INDICATOR_COLOR}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    onStopDragHandler={this.onStopDragHandler}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                />\r\n                            )\r\n                        }\r\n\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n\r\n                        }\r\n                    </Board>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DescriptionList\r\n                        tipsText={this.state.tipsText}\r\n                    />\r\n                    {this.loadSidebar()}\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                {\r\n                    this.state.playerState.map(position =>\r\n                        this.checkwin(position))\r\n                }\r\n                <PuzzleRushWinModal\r\n                    show={this.state.showPuzzleRushFinishedModal}\r\n                    closeModal={this.closePuzzleRushFinishedModal}\r\n                    numPuzzlesCompleted={this.state.numPuzzlesCompleted}\r\n                    percentile={this.state.puzzleRushPercentileCompleted}\r\n                    averageTime={this.state.averageTime}\r\n                    averageMoves={this.state.averageMoves}\r\n                    differenceOptimal={this.state.differenceOptimal}\r\n                    movesPerSecond={this.state.movesPerSecond}\r\n                    difficulty={this.props.difficulty}\r\n                />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\"\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        maxWidth: 360,\r\n        height: 175\r\n    },\r\n\r\n    item: {\r\n        padding: 0\r\n    },\r\n\r\n    upperPadding: {\r\n        paddingTop: 3\r\n    },\r\n\r\n    lowerPadding: {\r\n        paddingBottom: 3\r\n    },\r\n\r\n    rightSideText: {\r\n        textAlign: \"right\",\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    },\r\n\r\n    leftSideText: {\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(ComplexGrid)\r\n\r\nfunction ComplexGrid(props) {\r\n    const { classes } = props;\r\n    const handleClick = () => {\r\n        props.handleGameClick(props.game.name, props.game.puzzledata,props.highscores,props.game.uri);\r\n    };\r\n\r\n    var numberOfHighScores = 0;\r\n\r\n    const highscorestyle = highscore => {\r\n        if (numberOfHighScores === 5) return \"\";\r\n        numberOfHighScores++;\r\n        return (\r\n            <ListItem disableGutters={true} classes={{ root: classes.item }}>\r\n                <ListItemText primary={trimName(highscore.comment)} classes={{ root: classes.leftSideText }} />\r\n                <ListItemText secondary={highscore.numMoves} classes={{ root: classes.rightSideText }} />\r\n            </ListItem>\r\n        )\r\n    };\r\n\r\n    const contentDivStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        };\r\n\r\n    };\r\n\r\n    const trimName = name => {\r\n        if (name.length > 10)\r\n            name = name.substring(0, 10) + \"...\";\r\n        return name\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid item xs={12} sm={3}>\r\n            <Card variant=\"outlined\" className={classes.root}>\r\n                <CardContent>\r\n                    <div style={contentDivStyle()}>\r\n                        <div style={{width: '125px'}}>\r\n                            <Tooltip title={props.game.name}>\r\n                                <Typography variant=\"h6\" classes={{ root: classes.lowerPadding }}>\r\n                                    {trimName(props.game.name)}\r\n                                </Typography>\r\n                            </Tooltip>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    By: {trimName(props.game.authorname)}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    {props.game.created}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Plays: {props.highscores.length}\r\n                                </Typography>\r\n                            </div>\r\n                            <br/>\r\n                            <Button onClick={handleClick} classes={{ root: classes.upperPadding }} variant=\"contained\" color=\"primary\">Play</Button>\r\n                        </div>\r\n                        <Divider orientation=\"vertical\" flexItem />\r\n                        <div style={{width: '125px'}}>\r\n                            <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                Top Scores\r\n                            </Typography>\r\n                            <List>\r\n                                {\r\n                                    props.highscores.map(highscore =>\r\n                                        highscorestyle(highscore)\r\n                                    )\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from 'axios';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 400,\r\n    },\r\n    input: {\r\n        marginLeft: 5,\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n        marginLeft: 8,\r\n        marginRight: 8,\r\n    },\r\n});\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = window.gameslist;\r\n        var highscoreslist = window.highscoreslist;\r\n        console.log(gameslist);\r\n        console.log(highscoreslist);\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n            anchorEl: null\r\n        }\r\n    }\r\n\r\n    handleGameClick = (name,gamedata,highscores,uri) => {\r\n        this.props.handleGameClick(name,gamedata,highscores,uri);\r\n    };\r\n\r\n    handleFilterMenuOpen = event => {\r\n        this.setState( {\r\n          anchorEl: event.currentTarget\r\n      });\r\n    };\r\n\r\n    handleCloseFilterMenu = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n    };\r\n\r\n    handleSearchSubmit = event => {\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, offset: 0})\r\n            .then( res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    };\r\n\r\n    render () {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <div id={'GameMain'}>\r\n                <Paper component=\"form\" className={classes.root} >\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        inputRef={ref => this.searchRef = ref}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                this.handleSearchSubmit();\r\n                                event.preventDefault()\r\n                            }\r\n                        }}\r\n                    />\r\n                    <IconButton onClick={this.handleSearchSubmit} className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <Divider className={classes.divider} orientation=\"vertical\" />\r\n                    <Button\r\n                        onClick={this.handleFilterMenuOpen}\r\n                        startIcon={<FilterListIcon />}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        Sort\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(this.state.anchorEl)}\r\n                        onClose={this.handleCloseFilterMenu}\r\n                    >\r\n                        <MenuItem onClick={this.handleCloseFilterMenu}>Most Popular</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenu}>Hottest</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenu}>Newest</MenuItem>\r\n                    </Menu>\r\n                </Paper>\r\n                <br/>\r\n                <Grid container alignItems={\"stretch\"} spacing={2}>\r\n                    {\r\n                        this.state.gameslist.map((game,index)=>\r\n                            <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(FindGame);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame={'Yes'}\r\n                  name={this.props.name}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  baseExpansion: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  darkmode: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      marginTop: '150px',\r\n  },\r\n  iconcards: {\r\n    maxWidth: 345,\r\n    minWidth: 250,\r\n    float: 'left',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px'\r\n  },\r\n  createboardcard: {\r\n    ':hover': {\r\n        content: '/static/images/CreateBoardCardIconPlaced.png',\r\n    }\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n\r\n    return (<div className={classes.grid}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={6} spacing={3} alignItems=\"center\" justify=\"center\">\r\n                    <Typography variant=\"h3\"> Welcome To RobotsEvolved\r\n                    </Typography>\r\n                    <Typography> Create your own Robots Boards and challenge others to solve them, or play puzzle rush and get better.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={6} spacing={3}>\r\n                    <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/5VSS4pDfEUk?controls=0\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                </Grid>\r\n                    <Grid item xs={12} alignItems=\"center\" justify=\"center\">\r\n                        <Card className={classes.iconcards}>\r\n                          <CardActionArea onClick={props.handleClickCreateGame}>\r\n                            <CardMedia\r\n                              className={classes.createboardcard}\r\n                              component=\"img\"\r\n                              alt=\"Create Board\"\r\n                              height=\"140\"\r\n                              image=\"/static/images/CreateBoardCardIcon.png\"\r\n                              title=\"Create Board\"\r\n                            />\r\n                            <CardContent>\r\n                              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                Create Board\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Create a Board to have others to solve, its easy! Try it out!\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                          <CardActions>\r\n                            <Button size=\"small\" color=\"primary\">\r\n                              Learn More\r\n                            </Button>\r\n                          </CardActions>\r\n                        </Card>\r\n                        <Card className={classes.iconcards}>\r\n                          <CardActionArea onClick={props.handleClickFindGame}>\r\n                            <CardMedia\r\n                              component=\"img\"\r\n                              alt=\"Find a Game\"\r\n                              height=\"140\"\r\n                              image=\"/static/images/FindAGameCardIcon.png\"\r\n                              title=\"Find a Game\"\r\n                            />\r\n                            <CardContent>\r\n                              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                Find a Game\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Find a Game that has been created by another person!\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                        </Card>\r\n                        <Card className={classes.iconcards}>\r\n                          <CardActionArea onClick={props.handleClickRandomGame}>\r\n                            <CardMedia\r\n                              component=\"img\"\r\n                              alt=\"Play a Random Game\"\r\n                              height=\"140\"\r\n                              image=\"/static/images/puzzle.png\"\r\n                              title=\"Play a Random Game\"\r\n                            />\r\n                            <CardContent>\r\n                              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                Play a Random Game\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Play a Random Game that was generated and see if you can get the lowest possible solution\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                          <CardActions>\r\n                            <Button size=\"small\" color=\"primary\">\r\n                              Learn More\r\n                            </Button>\r\n                          </CardActions>\r\n                        </Card>\r\n                        <Card className={classes.iconcards}>\r\n                          <CardActionArea onClick={props.handleClickLearnGame}>\r\n                            <CardMedia\r\n                              component=\"img\"\r\n                              alt=\"Create Board\"\r\n                              height=\"140\"\r\n                              image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                              title=\"Learn\"\r\n                            />\r\n                            <CardContent>\r\n                              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                Learn\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Get the basics all the way to advanced tutorials.\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                          <CardActions>\r\n                          </CardActions>\r\n                        </Card>\r\n                        <Card className={classes.iconcards}>\r\n                          <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                            <CardMedia\r\n                              component=\"img\"\r\n                              alt=\"Create Board\"\r\n                              height=\"140\"\r\n                              image=\"/static/images/DailyChallengeIcon.png\"\r\n                              title=\"Daily Challenge\"\r\n                            />\r\n                            <CardContent>\r\n                              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                Daily Challenge\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Complete The Daily Challenge\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                          <CardActions>\r\n                          </CardActions>\r\n                        </Card>\r\n                        <Card className={classes.iconcards}>\r\n                          <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                            <CardMedia\r\n                              component=\"img\"\r\n                              alt=\"Contemplative Reptile\"\r\n                              height=\"140\"\r\n                              image=\"/static/images/PuzzleRushIcon.png\"\r\n                              title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent>\r\n                              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                Puzzle Rush\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Puzzle Rush is a variant where you are given 5 minutes to solve as many random puzzles as you can.\r\n                                You are scored based on the number of puzzles completed as well as the difference from the lowest possible solution, Click Learn More for scoring details\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                          <CardActions>\r\n                            <Button size=\"small\" color=\"primary\">\r\n                              Learn More\r\n                            </Button>\r\n                          </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeLoginModal}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>Login to Robits</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <img onClick={this.loginGoogle} src={\"/static/images/btn_google_signin_light_normal_web@2x.png\"}></img>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeLoginModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '40px',\r\n        width: '40px',\r\n        marginTop: '5px',\r\n    };\r\n};\r\n\r\nconst divStyle = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        width: '200px',\r\n    };\r\n};\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return null\r\n        }\r\n        else {\r\n            return (\r\n                <div style={divStyle()}>\r\n                    <div>{window.userInfo.username}</div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <Button color=\"primary\" onClick={this.handleClick}>{textToShow}</Button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\n\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty) => {\r\n        console.log(difficulty)\r\n        axios.post('/puzzlerush', {difficulty: difficulty, action: 'start'})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            isLoading: false,\r\n                        });\r\n                        this.props.handleClickPuzzleRush(difficulty,games,p_id);\r\n                });\r\n    };\r\n\r\n    handleClickEasyPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('easy')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMediumPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('medium')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('hard')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('Exteremly Hard')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                                {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                                                        ) : (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                         <Grid item xs={12}>\r\n                                            <Button onClick={this.handleClickEasyPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Easy\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Button onClick={this.handleClickMediumPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Medium\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Button onClick={this.handleClickHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Hard\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Button onClick={this.handleClickExHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Exteremely Hard\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickRandomGameModal = (difficulty) => {\r\n        axios.get('/randomgame?difficulty=' + difficulty)\r\n            .then( res => {\r\n                var game = JSON.parse(res.data.game);\r\n                this.setState({\r\n                    isLoading: false,\r\n                });\r\n                this.props.handleClickRandomGame(game,difficulty);\r\n            })\r\n    }\r\n\r\n\r\n    handleClickEasy = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('easy')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMedium = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('medium')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHard = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('hard')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHard = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('Exteremly Hard')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                            {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                            ) : (\r\n                            <Grid\r\n                                container xs={12}\r\n                                spacing={4}\r\n                                direction=\"column\"\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n                                wrap=\"nowrap\"\r\n                            >\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.handleClickEasy} variant=\"contained\" color=\"primary\">\r\n                                        Easy\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.handleClickMedium} variant=\"contained\" color=\"primary\">\r\n                                        Medium\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.handleClickHard} variant=\"contained\" color=\"primary\">\r\n                                        Hard\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.handleClickExHard} variant=\"contained\" color=\"primary\">\r\n                                        Exteremely Hard\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageCreatedGamesDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.game.name,props.game.puzzledata,[],props.game.uri);\r\n    }\r\n\r\n    return (<div>\r\n              <Typography>\r\n                {props.game.name}\r\n              </Typography>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageSolutionDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.solution.name,props.solution.puzzledata,[],props.solution.uri);\r\n    }\r\n    return (<div>\r\n              <Typography>\r\n                {props.solution.HSname}\r\n              </Typography>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport Button from '@material-ui/core/Button';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useStyles from '../Material-UI/themes';\r\nimport ProfilePageCreatedGamesDetails from '../components/ProfilePageComponents/ProfilePageCreatedGamesDetails';\r\nimport ProfilePageSolutionDetails from '../components/ProfilePageComponents/ProfilePageSolutionDetails';\r\n\r\n\r\n\r\nexport default function ProfilePage(props) {\r\n    const classes = useStyles();\r\n    const [expandedGame, setExpandedGame] = React.useState(false);\r\n    const [expandedHighscores, setExpandedHighscores] = React.useState(false);\r\n    const [expandedPuzzleRush, setExpandedPuzzleRush] = React.useState(false);\r\n    const handleChangeGame = (panel) => (event, isExpandedGame) => {\r\n        setExpandedGame(isExpandedGame ? panel : false);\r\n    };\r\n    const handleChangeHighscores = (panel) => (event, isExpandedHighScores) => {\r\n        setExpandedHighscores(isExpandedHighScores ? panel : false);\r\n    };\r\n    const handleChangePuzzleRush = (panel) => (event, isExpandedPuzzleRush) => {\r\n        setExpandedPuzzleRush(isExpandedPuzzleRush ? panel : false);\r\n    };\r\n    return (\r\n            <div id={'GameMain'} className={classes.root}>\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item xs={4}>\r\n                        <Typography variant=\"h3\">Games Created</Typography>\r\n                        {\r\n                            props.gamesview.map((game,index) =>\r\n                                    <ExpansionPanel expanded={expandedGame === 'panelgame' + index} onChange={handleChangeGame('panelgame' + index)}>\r\n                                        <ExpansionPanelSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls={\"panel\" + index + \"-content\"}\r\n                                          id={\"panel\" + index + \"-header\"}\r\n                                        >\r\n                                          <Typography className={classes.heading}>{game.name}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>SomeStuffHere</Typography>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                          <ProfilePageCreatedGamesDetails\r\n                                            game={game}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                          />\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography variant=\"h3\">Games Solved</Typography>\r\n                        {\r\n                            props.solutionsview.map((solution,index) =>\r\n                                <ExpansionPanel expanded={expandedHighscores === 'panelhigh' + index} onChange={handleChangeHighscores('panelhigh' + index)}>\r\n                                    <ExpansionPanelSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls={\"panel\" + index + \"-content\"}\r\n                                      id={\"panel\" + index + \"-header\"}\r\n                                    >\r\n                                      <Typography className={classes.heading}>{solution.HSname}</Typography>\r\n                                      <Typography className={classes.secondaryHeading}>Score: {solution.highscore}</Typography>\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <ProfilePageSolutionDetails\r\n                                            solution={solution}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                        />\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography variant=\"h3\">Puzzle Rush Data:</Typography>\r\n                        <ExpansionPanel expanded={expandedPuzzleRush === 'panel9'} onChange={handleChangePuzzleRush('panel9')}>\r\n                            <ExpansionPanelSummary\r\n                              expandIcon={<ExpandMoreIcon />}\r\n                              aria-controls=\"panel9bh-content\"\r\n                              id=\"panel9bh-header\"\r\n                            >\r\n                              <Typography className={classes.heading}>COMING SOON</Typography>\r\n                              <Typography className={classes.secondaryHeading}>COMING SOON</Typography>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                              <Typography>\r\n                                Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget\r\n                                maximus est, id dignissim quam.\r\n                              </Typography>\r\n                            </ExpansionPanelDetails>\r\n                          </ExpansionPanel>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass RandomGamePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game randomGame={'Yes'}\r\n                  game={this.props.game}\r\n                  difficulty={this.props.difficulty}\r\n             />\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomGamePage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PuzzleRushPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game puzzleRush={'Yes'}\r\n                  p_id={this.props.p_id}\r\n                  games={this.props.games}\r\n                  difficulty={this.props.difficulty}\r\n             />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PuzzleRushPage;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nexport default function AboutUs(props) {\r\n\r\n    var image = '/static/images/284f909d-0d5c-4ae1-b100-76c9d46ae7d4.png'\r\n    return (<div id=\"GameMain\">\r\n                <div class=\"row3\">\r\n                  <div class=\"column3\">\r\n                    <div class=\"card3\">\r\n                      <img src={\"/static/images/284457_10151211078621477_839164197_n.jpg\"} alt=\"Jane\"/>\r\n                      <div class=\"container3\">\r\n                        <h2>Kyle Kwasniewski</h2>\r\n                        <p class=\"title3\">Creator &amp; FullStack Dev.</p>\r\n                        <p>This Project was made in order to learn React as a web-framework. If there are any features that you would like to see then feel free to email my personal email below.</p>\r\n                        <p>kwasiky at gmail dot com</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"column3\">\r\n                    <div class=\"card3\">\r\n                      <img src={image} alt=\"Mike\"/>\r\n                      <div class=\"container3\">\r\n                        <h2>Jonah Tollefson</h2>\r\n                        <p class=\"title3\">Front-End Dev.</p>\r\n                        <p>Went to college with these other goobers in the US and now I work professionally as a software engineer in Germany. For RobotsEvolved, I mainly worked on the frontend using React. Cats and Ultimate Frisbee are life.</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"column3\">\r\n                    <div class=\"card3\">\r\n                      <img src={image} alt=\"John\"/>\r\n                      <div class=\"container3\">\r\n                        <h2>Derek Shultz</h2>\r\n                        <p class=\"title3\">Back-End Dev.</p>\r\n                        <p>Hi my name is derek XD</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport clsx from 'clsx';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport Home from './Pages/Home';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\nimport axios from 'axios';\r\nimport Game from './containers/Game';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"./constants/constants\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport PuzzleRushDifficultyModal from \"./containers/Modals/PuzzleRushDifficultyModal\";\r\nimport RandomGameDifficultyModal from \"./containers/Modals/RandomGameDifficultyModal\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport RandomGamePage from \"./Pages/RandomGamePage\";\r\nimport PuzzleRushPage from \"./Pages/PuzzleRushPage\";\r\nimport AboutUs from \"./Pages/AboutUs\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    drawerHeaderRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerHeaderLeft: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    dividerFullWidth: {\r\n        margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    darkmode: {\r\n          body: '#363537',\r\n          text: '#FAFAFA',\r\n          toggleBorder: '#6B8096',\r\n          gradient: 'linear-gradient(#091236, #1E215D)',\r\n    },\r\n});\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (window.uri === '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>, //default page for website\r\n            };\r\n        }\r\n        else {\r\n            this.state = {\r\n                PageSelected: <PlayGame name={window.token.name} gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri}/>, //when uri is entered to play specific game\r\n            };\r\n        }\r\n        this.state.open = true;\r\n        this.state.mobileAnchorEl = null;\r\n        this.state.mobileMenuOpen = false;\r\n        this.state.showLoginModal = false;\r\n        this.state.showPuzzleRushModal = false;\r\n\r\n        if (window.loggedin === 'Yes') {\r\n            this.state.gamesview = window.gamesview;\r\n            this.state.solutionsview = window.solutionsview;\r\n            this.state.puzzlerushview = window.puzzlerushview;\r\n        }\r\n    }\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState( {\r\n            open: false\r\n        })\r\n    };\r\n\r\n    handleClickDailyChallenge = (event) => {\r\n        event.preventDefault();\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        console.log(window.dailyChallengeGameslist);\r\n        this.setState({\r\n            PageSelected: <Game dailyChallengeMode={'Yes'} games={window.dailyChallengeGameslist} dc_id={window.dc_id} highscores={window.dchighscores}/>,\r\n            open: isOpen\r\n        });\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState( {\r\n            open: true\r\n        })\r\n    };\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type === 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    };\r\n\r\n    handleClickRandomGameModal = (game,difficulty) => {\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            showRandomGameModal: false,\r\n            PageSelected: <RandomGamePage randomGame={'Yes'} game={game} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n        });\r\n    }\r\n\r\n    handleClickRandomGame = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: true,\r\n        });\r\n    }\r\n\r\n\r\n    handleClickPuzzleRush = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: true,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickPuzzleRushModal = (difficulty,games,p_id) => {\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            showPuzzleRushModal: false,\r\n            PageSelected: <PuzzleRushPage puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={difficulty}/>,\r\n            open: isOpen\r\n        });\r\n    };\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: false\r\n        });\r\n    }\r\n\r\n    closeRandomGameLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: false\r\n        });\r\n    }\r\n\r\n    handleGameClick = (name, gamedata,highscores,uri) => {\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <PlayGame name={name} highscores={highscores} gamedata={gamedata} uri={uri}/>,\r\n            open: isOpen\r\n        });\r\n    };\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var newGame = <CreateGame state={\"new\"}/>; //KNOWN bug where if you create a game you have to refresh the page to cause a re-render of <CreateGame/>\r\n\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: newGame, //if selected page is already CreateGame it wont refresh known problem\r\n            open: isOpen\r\n        });\r\n    };\r\n\r\n\r\n    handleClickProfile = event => {\r\n        event.preventDefault();\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        if (window.loggedin === 'Yes') {\r\n            this.setState({\r\n                PageSelected: <ProfilePage handleClickPlayGame={this.handleGameClick} gamesview={this.state.gamesview} solutionsview={this.state.solutionsview} puzzlerushview={this.state.puzzlerushview}/>,\r\n                open: isOpen\r\n            });\r\n        }\r\n        else {\r\n            this.SignInButtonPressed('Sign in');\r\n        }\r\n    };\r\n\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <FindGame handleGameClick={this.handleGameClick}/>,\r\n            open: isOpen\r\n        });\r\n    };\r\n\r\n\r\n    handleClickAboutUs = event => {\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <AboutUs/>,\r\n            open: isOpen\r\n        });\r\n    }\r\n\r\n    handleClickLearnGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        console.log(window.learngameslist);\r\n        this.setState({\r\n            PageSelected: <Game learnMode={'Yes'} games={window.learngameslist}/>,\r\n            open: isOpen\r\n        });\r\n\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileAnchorEl: null,\r\n            mobileMenuOpen: false\r\n        });\r\n    };\r\n\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({\r\n            mobileAnchorEl: event.currentTarget,\r\n            mobileMenuOpen: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const theme = createMuiTheme({\r\n            palette: {\r\n                primary: teal,\r\n                secondary: {\r\n                    main: '#e65100',\r\n                },\r\n            }\r\n        });\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <AppBar\r\n                        position=\"fixed\"\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: this.state.open,\r\n                        })}\r\n                     >\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={this.handleDrawerOpen}\r\n                                edge=\"start\"\r\n                                className={clsx(classes.menuButton, this.state.open && classes.hide)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" className={classes.title} noWrap>\r\n                                <a href=\"/\" style={{color: 'white'}}>RobotsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </Typography>\r\n                            <div className={classes.grow} />\r\n                            <div className={classes.sectionDesktop}>\r\n                                <LoggedInUser/>\r\n                                <IconButton aria-label=\"show 2 new notifications\" color=\"inherit\">\r\n                                    <Badge badgeContent={2} color=\"secondary\">\r\n                                        <NotificationsIcon />\r\n                                    </Badge>\r\n                                </IconButton>\r\n                            </div>\r\n                            <div className={classes.sectionMobile}>\r\n                                <IconButton\r\n                                    aria-label=\"show more\"\r\n                                    aria-controls={\"primary-search-account-menu-mobile\"}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.handleMobileMenuOpen}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <MoreIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Menu\r\n                        anchorEl={this.state.mobileAnchorEl}\r\n                        anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        id={\"primary-search-account-menu-mobile\"}\r\n                        keepMounted\r\n                        transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        open={this.state.mobileMenuOpen}\r\n                        onClose={this.handleMobileMenuClose}\r\n                    >\r\n                        <MenuItem>\r\n                            <LoggedInUser/>\r\n                        </MenuItem>\r\n                        <MenuItem>\r\n                            <p>Notifications</p>\r\n                            <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                                <Badge badgeContent={11} color=\"secondary\">\r\n                                    <NotificationsIcon/>\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                    <Drawer\r\n                        id=\"MainDrawer\"\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.state.open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div className={classes.drawerHeader}>\r\n                            <div className={classes.drawerHeaderLeft}>\r\n                                <SignInButton onClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.drawerHeaderRight}>\r\n                                <IconButton onClick={this.handleDrawerClose}>\r\n                                    {useTheme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Play\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Create a Game'} onClick={this.handleClickCreateGame}>\r\n                                <ListItemIcon><PlayArrowIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Create a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Find a Game'} onClick={this.handleClickFindGame}>\r\n                                <ListItemIcon><SearchIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Find a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge'} onClick={this.handleClickDailyChallenge}>\r\n                                <ListItemIcon><TodayIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Random Game'} onClick={this.handleClickRandomGame}>\r\n                                <ListItemIcon><CasinoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Random Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Puzzle Rush'} onClick={this.handleClickPuzzleRush}>\r\n                                <ListItemIcon><ExtensionIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Puzzle Rush'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Learn\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Lessons'} onClick={this.handleClickLearnGame}>\r\n                                <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Lessons'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Starter Puzzles'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Starter Puzzles'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Community\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Profile'} onClick={this.handleClickProfile}>\r\n                                <ListItemIcon><AccountBoxIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Profile'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Teams'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Teams'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Forum'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Forum'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Tools\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'About Us'} onClick={this.handleClickAboutUs}>\r\n                                <ListItemIcon><InfoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'About Us'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Settings'}>\r\n                                <ListItemIcon><SettingsIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Settings'} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n                    <main className={clsx(classes.content, {\r\n                        [classes.contentShift]: this.state.open,\r\n                    })}>\r\n                        <div className={classes.drawerHeader} />\r\n                        {this.state.PageSelected}\r\n                    </main>\r\n                    <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n                    <PuzzleRushDifficultyModal\r\n                        closeModal={this.closePuzzleRushLoginModal}\r\n                        show={this.state.showPuzzleRushModal}\r\n                        handleClickPuzzleRush={this.handleClickPuzzleRushModal}\r\n                    />\r\n                    <RandomGameDifficultyModal\r\n                        closeModal={this.closeRandomGameLoginModal}\r\n                        show={this.state.showRandomGameModal}\r\n                        handleClickRandomGame={this.handleClickRandomGameModal}\r\n                    />\r\n                </div>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}