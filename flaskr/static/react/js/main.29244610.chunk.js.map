{"version":3,"sources":["components/CreateBoardGoalSelector.jsx","components/LearnGameItems.js","constants/constants.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinModal.jsx","components/YouWinDailySingleModal.js","components/YouWinDailyFinalModal.js","components/AddPuzzleModal.jsx","components/ToggleSettings.js","components/Timer.js","containers/DisplayView.js","components/HighScores.jsx","components/DailyChallengeScores.jsx","containers/Modals/PuzzleRushFinishedModal.js","containers/Modals/RandomGameStatsModal.jsx","components/CloseIconWithOnClick.jsx","components/DescriptionList.jsx","components/YouWinLessonModal.js","components/ShowDailyChallengeScoresCard.jsx","components/DailyChallengeHistoryData.js","components/boardgenerator.js","containers/Modals/BoardResetModal.js","containers/Game.js","Pages/CreateGame.js","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","Material-UI/themes.jsx","Pages/Home.js","containers/Modals/LoginModal.js","components/SignInButton.js","components/LoggedInUser.js","containers/Modals/PuzzleRushDifficultyModal.js","containers/Modals/RandomGameDifficultyModal.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","components/ProfilePageComponents/ProfilePageCreatedGamesDetails.js","components/ProfilePageComponents/ProfilePageSolutionDetails.js","Pages/ProfilePage.js","Pages/RandomGamePage.js","Pages/PuzzleRushPage.js","Pages/LessonsPage.js","Pages/DailyChallenge.js","Pages/AboutUs.js","components/ShowDailyPuzzleHistory.js","Pages/DailyChallengeHistory.js","Pages/DailyChallengeHistoryAnswersPage.js","components/LoadingPage.jsx","App.js","serviceWorker.js","index.js"],"names":["CreateBoardGoalSelector","props","React","useState","wildchecked","setWildChecked","Paper","FormControl","style","backgroundColor","textAlign","component","FormLabel","FormGroup","aria-label","row","FormControlLabel","value","control","Checkbox","onClick","handleWildCardClick","checked","color","label","labelPlacement","handleColoredClick","LearnGameItems","handleClick","handleClickGame","index","selected","Button","variant","name","UP","GOAL_IMAGE","DIRECTION_MAP_IMAGES","yellow","DOWN","LEFT","RIGHT","red","green","blue","MovesView","width","float","display","this","moveHistory","length","map","move","src","playerState","robot","colorSignifier","dir","Component","styleoutside","dimension","position","dim","height","top","left","styleinside","styleinside2","Square","border","margin","overflow","children","id","transition","styleoutsidedraggable","boxShadow","undefined","backgroundSize","backgroundImage","borderRadius","Robot","onStopDragHandler","e","handleCreateMode","isCreateMode","buildMode","x","y","grid","draggableGrid","onStop","bounds","orientation","opacity","wallThickness","wallOffset","Wall","userSelect","styledragable","Goal","show","endPosition","obj","key","hasOwnProperty","YouWinModal","Dialog","disableAutoFocus","disableEnforceFocus","onClose","handleClose","container","document","getElementById","BackdropProps","aria-labelledby","open","maxWidth","DialogTitle","DialogContent","dividers","numMoves","TextField","defaultValue","username","DialogActions","submitAnswer","resetPuzzle","YouWinDailySingleModal","Typography","totalMoves","undoMove","moveNextPuzzle","YouWinDailyFinalModal","handleClickSubmitGame","setState","error","Alert","severity","newPlayerState","state","submitted","AddPuzzleModal","submitPuzzle","ToggleSettings","event","Switch","onChange","showColoredLineDirections","Timer","minutes","seconds","timer","myInterval","setInterval","puzzleRushTimeUp","clearInterval","valuetext","DisplayView","createMode","fullWidth","handleCreateBoardClick","toggleBuildMode","createBoardPressed","copyToClipboard","dummy","createElement","body","appendChild","window","location","host","uri","select","execCommand","removeChild","copiedClipboard","thisThing","copyButtonText","setTimeout","handleDimensionChange","getElementsByClassName","blur","parseInt","toString","DimensionChanged","showPuzzleLink","isPuzzleRush","isLesson","isDailyChallengeAnswers","isDailyChallenge","paddingBottom","marginRight","marginTop","marginBottom","Divider","ButtonGroup","toggleLineIndicators","gutterBottom","Slider","onChangeCommitted","getAriaValueText","step","marks","min","max","squareSizeValue","valueLabelDisplay","highscores","Grid","item","xs","marginleft","highscore","elevation","spacing","comment","userid","created","highscorestyle","wins","i","crowns","push","CrownCounter","user_id","score","direction","PuzzleRushWinModal","closeModal","onBackdropClick","difficulty","md","List","dense","ListItem","ListItemText","primary","secondary","numPuzzlesCompleted","averageTime","averageMoves","differenceOptimal","movesPerSecond","handleClickPlayAgain","RandomGameStatsModal","showStatsModal","handleShowRandomAnswers","answers","lowestMoveSequence","lowestMoves","CloseIconWithOnClick","onMouseDown","Descriptionlist","tipsText","text","ListItemSecondaryAction","IconButton","edge","handleCloseToolTips","YouWinLessonModal","useStyles","makeStyles","root","bullet","transform","title","fontSize","pos","ShowDailyChallengeScoresCard","classes","Card","className","CardContent","bestScore","MovesforPuzzle","MoveSequence","DailyChallengeHistoryData","difficultyforPuzzle","lowestMovesforPuzzle","nameSubmitted","scoreSubmitted","playerMovedSequence","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","type","boardState","wallVerticle","wallHorizontal","goal","randompos1","randompos2","randompos3","randompos4","randomPositions","extend","j","gameWon","playerStart","slice","BoardResetModal","createBoardHandler","preventDefault","percent","createBoard","paddingRight","Input","inputProps","placeholder","addEventListener","keyCode","target","indexOf","formatGeneratedMoveSequence","moves","images","charAt","setDefaultSquareSize","boardWidth","boardHeight","drawerWidth","getComputedStyle","windowWidth","innerWidth","settingstop","innerHeight","settings","squarevalue","ColoredLineDirections","Game","updateHighscores","axios","get","then","res","highscoresdata","JSON","parse","data","FindhighscoreIsDiff","squareSize","copiedToClipboard","check","tocheck","toreturn","DChighscoreIsDiff","updateDailyHighscores","dc_id","dchighscores","handleClickDailyChallenge","componentDidMount","onkeydown","handleKeyDown","loadedGame","IntervalId","dailyChallengeMode","componentWillUnmount","newDirection","tabSelector","handleUndoMove","handlePlayerMovement","robotSelect","robotSelected","namesubmit","themoveHistory","userInfo","post","puzzledata","authorname","history","handleLineDirections","solutiondata","dailySubmittedSucessfully","showBoardResetPanelModal","closeRandomStatsModal","closeCreateBoardModal","closePuzzleRushFinishedModal","showPuzzleRushFinishedModal","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","nextLessonPuzzle","puzzle","numPuzzleon","handleLearnClickGame","totalMovesDiff","solutiondifference","totalMovesList","avgMoves","p_id","differenceFrom","console","log","percentile","submitDailyAnswer","LastRobotPosition","moveHistoryList","playerStateList","dc_movesList","dc_playerList","checkwin","coloredGoals","Won","player","found","colorfound","puzzleRush","randomGame","dailyChallengeModeAnswers","gamesWonDaily","games","handleDailyClickGame","learnMode","g_id","solutionmoves","g_moves","g_puzzledata","newarray","concat","oldPositon","prevPosition","splice","description","handleDailyClickAnswersGame","g_solutiondata","g_difficulty","solutionDataSubmitted","goalItem","newgoal","newColoredGoals","filter","loadSidebar","game","paddingTop","DailyChallengeScores","HighScores","handlePlayerMovementFromMouse","moveObj","pop","createModeWallClick","indexToChange","newWallHorizontal","wallH","newWallVerticle","wallV","onStopDragHandlerGoal","round","lastY","lastX","newGoals","goals","gamedata","savedMoves","g_uri","pushState","settingsWidth","settingsHeight","percentWall","settingsPercent","LineDirections","paddingLeft","alignItems","sm","numPuzzleRush","zeroMinWidth","Board","square","ColoredLineDirection","ColoredLine","puzzleRushPercentileCompleted","withRouter","CreateGame","withStyles","theme","minWidth","background","padding","upperPadding","upperPaddingButton","bottom","lowerPadding","rightSideText","leftSideText","numberOfHighScores","trimName","separated","split","word","substring","trimNameShort","justifyContent","Tooltip","plays","handleGameClick","disableGutters","FindGame","handleFilterMenuOpen","anchorEl","currentTarget","keycode","handleSearchSubmit","scrollTo","findWindowHeight","setFindWindow","scrollY","handleCloseFilterMenuMostPlayed","searchTerm","searchRef","search","offset","gameslist","highscoreslist","setNumFindGames","lastSearch","hasMore","handleCloseFilterMenuHighest","justify","loadMoreItems","handleCloseFilterMenu","align","InputBase","input","inputRef","ref","onKeyPress","iconButton","divider","startIcon","Menu","keepMounted","Boolean","MenuItem","FindGameElements","pageStart","loadMore","bind","loader","CircularProgress","marginLeft","size","threshold","flex","PlayGame","flexGrow","homepage","griditems","paper","Width","image","img","maxHeight","baseExpansion","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","darkmode","iconcards","marginBotton","iconcardsDaily","titlehome","fontFamily","titledailyroto","iconfonts","createboardcard","content","demo","centeredProfile","expandedPanelDCH","table","ComplexGrid","paragraph","CardActionArea","handleClickFindGame","CardMedia","alt","handleClickCreateGame","handleClickRandomGame","handleClickLearnGame","handleClickPuzzleRush","dividerFullWidth","LoginModal","loginGoogle","href","loginFacebook","closeLoginModal","class","SignInButton","loggedin","textToShow","LoggedInUser","SignInButtonPressed","profilePicture","PuzzleRushDifficultyModal","handleClickPuzzleRushModal","action","isLoading","handleClickEasyPuzzleRush","handleClickMediumPuzzleRush","handleClickHardPuzzleRush","handleClickExHardPuzzleRush","handleChange","wrap","RadioGroup","Radio","handleClickRandomGameModal","handleClickEasy","handleClickMedium","handleClickHard","handleClickExHard","handleClickGodMode","ProfilePageCreatedGamesDetails","handleClickPlayGame","ProfilePageSolutionDetails","solution","WinnerCreated","WinnerUsername","ProfilePage","createData","col1","col2","columns","rows","puzzlerushview","maxeasyc","maxeasyp","maxmediumc","maxmediump","maxhardc","maxhardp","maxexhardc","maxexhardp","rowseff","maxeffec","maxeffep","maxeffmc","maxeffmp","maxeffhc","maxeffhp","maxeffexc","maxeffexp","setError","expandedGame","setExpandedGame","expandedHighscores","setExpandedHighscores","newuser","gamesview","ExpansionPanel","expanded","panel","isExpandedGame","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","solutionsview","isExpandedHighScores","WinnerUserId","userID","TableContainer","Table","TableHead","TableRow","column","TableCell","TableBody","RandomGamePage","PuzzleRushPage","LessonsPage","learngameslist","DailyChallengePage","dailyChallengeGameslist","AboutUs","CardActions","Avatar","ShowDailyPuzzleHistory","handleDailyPuzzleHistoryClick","DailyChallengeHistory","expandedPanel","setExpandedPanel","dailychallengehistory","isExpanded","DailyChallengeHistoryAnswersPage","LoadingPage","App","handleChatOpen","openChat","chatAnchor","handleChatClose","handleDrawerClose","boolean","loadingPage","isOpen","PageSelected","DailyChallenge","handleDrawerOpen","showLoginModal","showRandomGameModal","showPuzzleRushModal","handleClickDailyChallengeHistory","historydata","challengeHistoryData","dailychallengehistoryloaded","closePuzzleRushLoginModal","closeRandomGameLoginModal","handleClickProfile","profileData","profileDataloaded","num","filterTerm","numFindGames","numGames","handleHomePageClick","handleClickAboutUs","handleMobileMenuClose","mobileAnchorEl","mobileMenuOpen","showPage","handleMobileMenuOpen","token","linedir","LineDirFlag","createMuiTheme","teal","main","AppBar","clsx","appBar","appBarShift","Toolbar","toolbar1","menuButton","hide","noWrap","grow","sectionDesktop","sectionMobile","aria-haspopup","anchorOrigin","vertical","horizontal","transformOrigin","Drawer","drawer","anchor","drawerPaper","drawerHeader","drawerHeaderLeft","drawerHeaderRight","useTheme","button","ListItemIcon","contentShift","RandomGameDifficultyModal","right","Popover","frameBorder","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","mixins","toolbar","breakpoints","up","toggleBorder","gradient","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"js/main.29244610.chunk.js","sourcesContent":["import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function CreateBoardGoalSelector(props) {\r\n  const [wildchecked, setWildChecked] = React.useState(true);\r\n  const handleWildCardClick = () => {\r\n    props.handleWildCardClick();\r\n    setWildChecked(wildchecked ? false : true);\r\n  }\r\n\r\n  const handleBlueClick = () => {\r\n    props.handleColoredClick('blue');\r\n  }\r\n  const handleGreenClick = () => {\r\n    props.handleColoredClick('green');\r\n  }\r\n  const handleRedClick = () => {\r\n    props.handleColoredClick('red');\r\n  }\r\n  const handleYellowClick = () => {\r\n    props.handleColoredClick('yellow');\r\n  }\r\n  return (\r\n  <Paper>\r\n    <FormControl style={{backgroundColor: 'white', textAlign: 'center'}} component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Goal Selector</FormLabel>\r\n      <FormGroup aria-label=\"position\" row>\r\n        <FormControlLabel\r\n          value=\"Wildcard\"\r\n          control={<Checkbox onClick={handleWildCardClick} checked={wildchecked} color=\"primary\" />}\r\n          label=\"wildcard\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Blue\"\r\n          control={<Checkbox onClick={handleBlueClick} color=\"primary\" />}\r\n          label=\"blue\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Green\"\r\n          control={<Checkbox onClick={handleGreenClick} color=\"primary\" />}\r\n          label=\"green\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Red\"\r\n          control={<Checkbox onClick={handleRedClick} color=\"primary\" />}\r\n          label=\"red\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Yellow\"\r\n          control={<Checkbox onClick={handleYellowClick} color=\"primary\" />}\r\n          label=\"yellow\"\r\n          labelPlacement=\"top\"\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n    </Paper>\r\n  );\r\n}","import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function LearnGameItems(props) {\r\n    const handleClick = () => {\r\n        props.handleClickGame(props.index)\r\n    }\r\n    if (props.selected === props.index) {\r\n        return (\r\n            <Button\r\n                variant=\"contained\" color=\"primary\"\r\n                aria-label=\"vertical outlined primary button group\"\r\n                onClick={handleClick}\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={handleClick}\r\n                aria-label=\"vertical outlined primary button group\"\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n}","export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const MOBILE_INNER_SCREEN_WIDTH = '960';\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const COLORED_GOAL_IMAGE = '/static/images/targetbullseye.png';\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div id=\"MainGameBoard\" style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleoutsidedraggable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var boxShadow = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        boxShadow = '0 0 0 3pt ' + SELECTED_ROBOT;\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        boxShadow: boxShadow,\r\n        backgroundSize: dim,\r\n        backgroundImage: \"url(\" + \"/static/images/astronaut.png\" + \")\",\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    onStopDragHandler = (e, position) => {\r\n        this.props.onStopDragHandler(position,this.props.index);\r\n    }\r\n\r\n\r\n    handleCreateMode = () => {\r\n        if (this.props.isCreateMode === 'Yes' && this.props.buildMode) {\r\n            return (\r\n            <Draggable position={{x: this.props.position.left * this.props.dimension, y:this.props.position.top*this.props.dimension}} grid={this.props.draggableGrid} onStop={this.onStopDragHandler} bounds=\"parent\">\r\n                <div onClick={this.handleClick} style={styleoutsidedraggable(this.props)}>\r\n                    <div style={styleinside(this.props)}>\r\n                        <div style={styleinside2(this.props)}/>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            this.handleCreateMode()\r\n        );\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE,ROBOT_GREEN,ROBOT_BLUE,ROBOT_RED,ROBOT_YELLOW,COLORED_GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none',\r\n        backgroundColor: color,\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none',\r\n        backgroundColor: color\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.position == null) {\r\n        return null\r\n    }\r\n    if (props.isCreateMode === 'Yes'  && props.buildMode) {\r\n        const onStopDragHandler = (e, position) => {\r\n            props.onStopDragHandler(position,props.color);\r\n        }\r\n        if (props.color == undefined) {\r\n            return(\r\n            <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n                <img src={GOAL_IMAGE} style={styledragable(props)}/>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n                <img src={COLORED_GOAL_IMAGE} style={styledragable(props)}/>\r\n            </Draggable>\r\n            )\r\n        }\r\n    }\r\n    else {\r\n        if (props.color == undefined) {\r\n            return(<img src={GOAL_IMAGE} style={style(props)}/>)\r\n        }\r\n        else {\r\n            return(<img src={COLORED_GOAL_IMAGE} style={style(props)}/>)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({buildMode,show,dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension + dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension + dimension;\r\n            left = position.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        opacity: show ? '0.5' : '0.0',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default (props) => {\r\n    const handleClick = () => {\r\n        props.handleClick(props.dir)\r\n    }\r\n    if (props.buildMode === 'undefined' || !props.buildMode)\r\n    {\r\n        return (\r\n            <div onClick={handleClick} style={style(props)}/>\r\n        );\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LearnGameItems from '../components/LearnGameItems';\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailySingleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Completed!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <Typography variant=\"body1\">\r\n                        You used {this.props.numMoves} Moves, for this puzzle.\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Total Moves: {this.props.totalMoves}\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Finish all puzzles to get submit your score!\r\n                    </Typography>\r\n                    <br/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailySingleModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailyFinalModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null\r\n        }\r\n    }\r\n\r\n    handleClickSubmitGame = () => {\r\n        if (document.getElementById(\"namesubmitHS\").value == '') {\r\n            this.setState({\r\n                error: <Alert severity=\"error\">You must choose a submit name</Alert>\r\n            })\r\n        }\r\n        else {\r\n            this.props.submitAnswer(this.props.newPlayerState);\r\n            this.setState({\r\n                error: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Completed the Challenge!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                    {this.state.error}\r\n                    {this.props.submitted}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    {this.props.submitted == null ? <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickSubmitGame}>Submit Highscore</Button> : null}\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailyFinalModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Submit Puzzle</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField id={\"namesubmit\"} label={\"Name of Puzzle\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleModal;\r\n","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Path Indicators\"\r\n                    checked={this.props.showColoredLineDirections}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n\r\n    state = {\r\n            minutes: 5,\r\n            seconds: 0,\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.puzzleRushTimeUp();\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    timer = () => {\r\n        if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n            return (<h2>Time is up!</h2>)\r\n        }\r\n        else {\r\n            return(\r\n                <h2>Time Remaining: {this.state.minutes}:{this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds}</h2>)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            this.timer()\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ToggleSettings from \"../components/ToggleSettings\";\r\nimport Timer from \"../components/Timer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                        copyButtonText: \"Copy Puzzle Link\"\r\n                     };\r\n        this.state.uri = this.props.isDailyChallenge === 'Yes' ? 'dailychallenge' : this.props.uri;\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <div>\r\n                    <Button color=\"secondary\" variant={\"outlined\"} fullWidth={true} onClick={this.handleCreateBoardClick}>Modify Board</Button>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Switch color=\"primary\" checked={this.props.buildMode} onChange={this.props.toggleBuildMode}/>}\r\n                        label=\"Build Mode\"\r\n                            />\r\n                </div>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.state.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        document.getElementsByClassName(\"MuiSlider-thumb\")[0].blur();\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n    showPuzzleLink = () => {\r\n        if (this.props.createMode === 'Yes' || this.props.isPuzzleRush === 'Yes' || this.props.isLesson === 'Yes' || this.props.isDailyChallengeAnswers === 'Yes' || this.props.isDailyChallenge === 'Yes') {\r\n            return null;\r\n        }\r\n        else {\r\n                return(\r\n                     <div style={{paddingBottom: '10px'}}>\r\n                         <Button fullWidth={true} variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                                 onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                     </div>\r\n                    )\r\n        }\r\n    }\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                {this.showPuzzleLink()}\r\n                 <Divider />\r\n                 <Typography\r\n                     color=\"textSecondary\"\r\n                     display=\"block\"\r\n                     variant=\"caption\"\r\n                     style={{paddingBottom: '10px'}}\r\n                 >\r\n                     Board Actions\r\n                 </Typography>\r\n                 <ButtonGroup fullWidth={true} color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     <Button onClick={this.props.undoMove}>Undo</Button>\r\n                 </ButtonGroup>\r\n                 {this.isCreateMode(this.props.createMode)}\r\n                 <Divider />\r\n                 <ToggleSettings showColoredLineDirections={this.props.showColoredLineDirections} onClick={this.props.toggleLineIndicators}/>\r\n                 <div style={buttonPanel()}>\r\n                     <Typography id=\"discrete-slider-small-steps\"\r\n                                 color=\"textSecondary\"\r\n                                 display=\"inline\"\r\n                                 gutterBottom>\r\n                         Size Of Board\r\n                     </Typography>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={this.props.squareSizeValue}\r\n                         valueLabelDisplay=\"auto\"\r\n                         id=\"sliderelement\"\r\n                     />\r\n                 </div>\r\n                 <Divider/>\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n}\r\n\r\nconst paperstyle = () => {\r\n    return {\r\n        marginBottom: '15px'\r\n    }\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n                <Paper style={paperstyle()}elevation={3}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={9}>\r\n                            <Typography color={'primary'} style={{float: 'left'}}>\r\n                                {highscore.comment}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                                {highscore.userid != 1 ? <GoVerified/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'textSecondary'}>{highscore.numMoves}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.created}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Paper>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid item xs={12} style={styleouter()}>\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginTop: '30px',\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst CrownCounter = highscore => {\r\n    var crowns = []\r\n    var i;\r\n    for (i=0; i<highscore.wins;i++) {\r\n        crowns.push(<FaCrown/>);\r\n    }\r\n    return (\r\n        <div>\r\n            {crowns}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (<Grid item xs={12}>\r\n                <Paper elevation={3}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={9}>\r\n                            <Typography color={'primary'} style={{float: 'left'}}>\r\n                                {highscore.name}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                                {highscore.wins == 0 || highscore.wins == null ? null : CrownCounter(highscore) }\r\n                                {highscore.user_id != 1 ? <GoVerified/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'textSecondary'}>{highscore.score}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.submitted}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Paper>\r\n            </Grid>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid style={styleouter()} container direction={'column'} spacing={1}>\r\n        {\r\n                highscores.map(highscore =>\r\n                    highscorestyle(highscore)\r\n                )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nclass PuzzleRushWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Puzzle Rush - {this.props.difficulty}</DialogTitle>\r\n                <DialogContent dividers>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"h6\">\r\n                            Statistics\r\n                          </Typography>\r\n                          <div>\r\n                            <List dense={true}>\r\n\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Number of Puzzles Completed\"\r\n                                    secondary={this.props.numPuzzlesCompleted}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average time Per Puzzle\"\r\n                                    secondary={this.props.averageTime}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average Moves per Puzzle\"\r\n                                    secondary={this.props.averageMoves}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Efficiency Score: puzzles * 7 - redundant moves from best\"\r\n                                    secondary={(this.props.numPuzzlesCompleted * 7) - this.props.differenceOptimal}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Moves Per Second\"\r\n                                    secondary={this.props.movesPerSecond}\r\n                                  />\r\n                                </ListItem>\r\n                            </List>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.handleClickPlayAgain}>Play Again!</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushWinModal;\r\n\r\n","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../../constants/constants';\r\n\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass RandomGameStatsModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answers: null,\r\n        }\r\n    }\r\n\r\n    showStatsModal = () => {\r\n        this.props.handleShowRandomAnswers()\r\n        this.setState({\r\n            answers: this.props.lowestMoveSequence\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-random\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        lowest possible moves: {this.props.lowestMoves}\r\n                    </div>\r\n                    {this.state.answers}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.showStatsModal}>Show Puzzle Answers</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomGameStatsModal;","import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nexport default function CloseIconWithOnClick(props) {\r\n    const handleClose = () => {\r\n        props.handleClose(props.index);\r\n    }\r\n    return (<CloseIcon onMouseDown={handleClose}/>\r\n    )\r\n}","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport CloseIconWithOnClick from './CloseIconWithOnClick'\r\n\r\nexport default function Descriptionlist(props) {\r\n    return(\r\n            <List>\r\n              {\r\n                  props.tipsText.map((text,index) =>\r\n                    <ListItem>\r\n                      <div>\r\n                        {text}\r\n                      </div>\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                          <CloseIconWithOnClick index={index} handleClose={props.handleCloseToolTips}/>\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  )\r\n              }\r\n            </List>\r\n    )\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinLessonModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <Typography> You completed the Lesson! Move on to the next one!\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinLessonModal;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: '0 10px'\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 25,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function ShowDailyChallengeScoresCard(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {props.name}\r\n        </Typography>\r\n        <Typography style={{marginBottom: '30px'}} variant=\"h5\" component=\"h2\">\r\n          {props.bestScore}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.MovesforPuzzle}\r\n          <br/>\r\n          {props.MoveSequence}\r\n          <br />\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport MovesView from '../components/MovesView';\r\nimport ShowDailyChallengeScoreCard from '../components/ShowDailyChallengeScoresCard'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst stylebelow = () => {\r\n    return {\r\n        marginTop: '40px',\r\n        marginBottom: '20px'\r\n    }\r\n}\r\n\r\nclass DailyChallengeHistoryData extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography style={stylebelow()} variant=\"h4\"> {this.props.difficultyforPuzzle} </Typography>\r\n                <ShowDailyChallengeScoreCard\r\n                    name={\"Robot God\"}\r\n                    bestScore={this.props.bestScore}\r\n                    MovesforPuzzle={this.props.lowestMovesforPuzzle}\r\n                    MoveSequence={this.props.lowestMoveSequence}\r\n                />\r\n                <ShowDailyChallengeScoreCard\r\n                    name={this.props.nameSubmitted}\r\n                    bestScore={this.props.scoreSubmitted}\r\n                    MovesforPuzzle={null}\r\n                    MoveSequence={<MovesView\r\n                                        moveHistory={this.props.playerMovedSequence} playerState={[{colorSignifier: \"blue\"},{colorSignifier: \"green\"},{colorSignifier: \"red\"},{colorSignifier: \"yellow\"}]}\r\n                                  />}\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyChallengeHistoryData;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent,type) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    if (type === 'blank') {\r\n        var goal = {top: height-1, left: width-1};\r\n        var randompos1 = {top: 0,left: 0, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n        var randompos2 = {top: 0,left: 1, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n        var randompos3 = {top: 1,left: 0, color: ROBOT_RED, colorSignifier: 'red'};\r\n        var randompos4 = {top: 1,left: 1, color: ROBOT_YELLOW, colorSignifier:'yellow'};\r\n    }\r\n    else {\r\n        var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n        var randomPositions = [goal];\r\n        for (var i=0;i<5;i++) {\r\n            randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n        }\r\n        var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n        var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n        var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n        var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    }\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport CreateBoardGoalSelector from '../components/CreateBoardGoalSelector';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {withRouter} from 'react-router';\r\nimport Draggable from 'react-draggable';\r\nimport LearnGameItems from '../components/LearnGameItems';\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport YouWinDailySingleModal from '../components/YouWinDailySingleModal';\r\nimport YouWinDailyFinalModal from '../components/YouWinDailyFinalModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport PuzzleRushWinModal from '../containers/Modals/PuzzleRushFinishedModal';\r\nimport RandomGameStatsModal from '../containers/Modals/RandomGameStatsModal';\r\nimport DescriptionList from '../components/DescriptionList';\r\nimport YouWinLessonModal from '../components/YouWinLessonModal';\r\nimport DailyChallengeHistoryData from '../components/DailyChallengeHistoryData';\r\nimport Timer from \"../components/Timer\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR,\r\n    MOBILE_INNER_SCREEN_WIDTH\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if(e.keyCode == 32 && e.target == document.body) {\r\n    e.preventDefault();\r\n  }\r\n    if([37, 38, 39, 40, 9,13].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n    }\r\n}\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\nconst formatGeneratedMoveSequence = (moves) => {\r\n    var images = []\r\n    moves.map(move => {\r\n        var color = move.charAt(0);\r\n        var direction = move.charAt(1);\r\n        if (color == 'B') {\r\n            color = 'blue'\r\n        }\r\n        else if (color == 'R') {\r\n            color = 'red'\r\n        }\r\n        else if (color == 'Y') {\r\n            color = 'yellow'\r\n        }\r\n        else {\r\n            color = 'green'\r\n        }\r\n        if (direction == 'N') {\r\n            direction = UP\r\n        }\r\n        else if (direction == 'S') {\r\n            direction = DOWN\r\n        }\r\n        else if (direction == 'E') {\r\n            direction = RIGHT\r\n        }\r\n        else {\r\n            direction = LEFT\r\n        }\r\n        images.push(<img src={DIRECTION_MAP_IMAGES[color][direction]}/>)\r\n    });\r\n    return images\r\n}\r\n\r\n\r\nconst setDefaultSquareSize = (boardWidth,boardHeight) => {\r\n    const drawerWidth = document.getElementById(\"MainDrawer\") == null ? 140 : parseInt(getComputedStyle(document.getElementById(\"MainDrawer\")).width);\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n    var settingstop = windowHeight - 120;\r\n\r\n    settingstop = settingstop / boardHeight\r\n    settingstop = parseInt(settingstop);\r\n    settingstop = settingstop - (settingstop % 4)\r\n\r\n    var settings = ((windowWidth < MOBILE_INNER_SCREEN_WIDTH) ? windowWidth - 20 : (windowWidth - drawerWidth) / 1.75);\r\n    settings = settings / boardWidth;\r\n    settings = parseInt(settings);\r\n    settings = settings - (settings % 4);\r\n    var squarevalue = settings > settingstop ? settingstop : settings\r\n    if (squarevalue < 16) {\r\n        squarevalue = 16;\r\n    }\r\n    else if (squarevalue > 52) {\r\n        squarevalue = 52;\r\n    }\r\n    return squarevalue;\r\n};\r\n\r\nconst ColoredLineDirections = [LEFT,RIGHT,UP,DOWN]\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.puzzleRush === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.p_id = this.props.p_id;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = []\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            this.state.moveHistoryList=[];\r\n\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[0].g_solutiondata))\r\n            this.state.lowestMovesforPuzzle = this.props.games[0].g_moves\r\n            this.state.difficultyforPuzzle = this.props.games[0].g_difficulty\r\n            this.state.playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[0]\r\n\r\n            this.state.playerStateList = [];\r\n            this.state.tipsText = [];\r\n            this.state.highscores = [];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            if (this.props.savedMoves != null) {\r\n                this.state.moveHistoryList = this.props.savedMoves\r\n                this.state.gamesWonDaily = [true,true,true,true]\r\n                this.state.moveHistory = this.props.savedMoves[0].slice()\r\n                this.state.playerState = this.props.playerStateList[0].slice()\r\n            }\r\n            else {\r\n                this.state.moveHistoryList=[];\r\n            }\r\n            this.state.playerStateList = this.props.playerStateList != null ? this.props.playerStateList : [];\r\n            this.state.tipsText = ['Winners who are Logged in will receive a Crown','See about page for details on the daily challenge difficulty','Puzzles reset at 3PM EST, the page will refresh automatically'];\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.dc_id = this.props.dc_id;\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.game.g_puzzledata)\r\n            this.state.lowestMoves = this.props.game.g_moves\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.game.g_solutiondata))\r\n            this.state.difficulty = this.props.game.g_difficulty\r\n            this.state.createMode = 'No';\r\n            this.state.gameWon = false;\r\n            this.state.buildMode = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = ['this game was randomly generated'];\r\n            this.state.uri = this.props.game.g_uri;\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n            window.history.pushState({id: 'Random Game'},'RobotsEvolved | Random Game','/play/' + this.props.game.g_uri)\r\n        }\r\n        else if (this.props.learnMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [this.props.games[0].description];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.buildMode = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n            window.history.pushState({id: 'Play Game'},'RobotsEvolved | Play Game','/play/'+ this.props.uri)\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,1,'blank');\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                buildMode: true,\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false,\r\n                tipsText: [\r\n                                        'Click on Wall spots to toggle',\r\n                                        'Click and Drag robots or goal to move robots',\r\n                                        'When you are ready, toggle build mode in order to solve the puzzle',\r\n                                        'You must solve the puzzle in order to submit.']\r\n            },board);\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.coloredGoals = [];\r\n        }\r\n        this.state.showColoredLineDirections = this.props.LineDirections;\r\n        if (this.state.coloredGoals == undefined) {\r\n            this.state.coloredGoals = [];\r\n        }\r\n    };\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                const highscoresdata = JSON.parse(res.data.highscores)\r\n                if (this.FindhighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    FindhighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.numMoves != check[index].numMoves) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n\r\n    DChighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.score != check[index].score) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n    updateDailyHighscores = () => {\r\n        axios.get('/dailychallengehighscores?dc_id=' + this.state.dc_id)\r\n            .then( res => {\r\n                if (res.data.dc_id != this.state.dc_id) {\r\n                    this.props.handleClickDailyChallenge();\r\n                    return\r\n                }\r\n                const highscoresdata = JSON.parse(res.data.highscores)//PoorMan's global redux implementation\r\n                if (this.DChighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                    window.dchighscores = JSON.parse(res.data.highscores)\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.updateHighscores();\r\n            var IntervalId = setInterval(this.updateHighscores, 8000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.updateDailyHighscores();\r\n            var IntervalId = setInterval(this.updateDailyHighscores, 6000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.tabSelector();\r\n                return;\r\n                break;\r\n            case 81:\r\n                if (!this.state.gameWon) {\r\n                    this.handleUndoMove();\r\n                }\r\n                break;\r\n                return;\r\n            case 87:\r\n                if (!this.state.gameWon) {\r\n                    this.resetPuzzle();\r\n                }\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n        }\r\n        this.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        var themoveHistory = this.state.moveHistory.slice()\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.userInfo !== null) {\r\n            username = window.userInfo.username\r\n        }\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username,moveHistory: themoveHistory}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.showColoredLineDirections === true) {\r\n            this.setState({\r\n                showColoredLineDirections: false,\r\n            });\r\n            this.props.handleLineDirections(false)\r\n        }\r\n        else {\r\n            this.setState({\r\n                showColoredLineDirections: true,\r\n            });\r\n            this.props.handleLineDirections(true)\r\n        }\r\n    };\r\n\r\n    toggleBuildMode = () => {\r\n        if (this.state.buildMode) {\r\n            this.setState({\r\n                buildMode: false,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n                buildMode: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length,solutiondata: this.state.moveHistory,name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            dailySubmittedSucessfully: null\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeRandomStatsModal = event => {\r\n        this.setState({\r\n            closeRandomStatsModal: false,\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    }\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushFinishedModal = event => {\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: false\r\n        });\r\n\r\n    }\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent, 'blank');\r\n        var squareSize = setDefaultSquareSize(width,height);\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n            squareSize: squareSize,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n    showStatsModal = () => {\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            showStatsModal: true,\r\n        });\r\n    }\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n    nextLessonPuzzle  = () => {\r\n        var puzzle = this.state.numPuzzleon;\r\n        puzzle += 1;\r\n        puzzle = puzzle == 4 ? 5 : puzzle;\r\n        puzzle = puzzle == 7 ? 8 : puzzle;\r\n        this.handleLearnClickGame(puzzle % 12);\r\n    }\r\n\r\n    puzzleRushTimeUp = () => {\r\n        var totalMovesDiff = 0;\r\n        this.state.solutiondifference.map(numMoves => {\r\n            totalMovesDiff += numMoves;\r\n        });\r\n        var averageTime = parseInt(300 / (this.state.numPuzzleon))\r\n        var totalMoves = 0;\r\n        this.state.totalMovesList.map(numMoves => {\r\n            totalMoves += numMoves\r\n        });\r\n        var avgMoves = parseInt(totalMoves / (this.state.numPuzzleon))\r\n        var movesPerSecond = totalMoves / 300;\r\n\r\n        axios.post('/puzzlerushend', {p_id: this.state.p_id,totalMoves: totalMoves,differenceFrom: totalMovesDiff})\r\n            .then( res => {\r\n                console.log(res.data);\r\n            });\r\n\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: true,\r\n            numPuzzlesCompleted: this.state.numPuzzleon,\r\n            percentile: 'TBD%',\r\n            averageTime: averageTime + 's',\r\n            averageMoves: avgMoves,\r\n            differenceOptimal: totalMovesDiff,\r\n            movesPerSecond: movesPerSecond\r\n        });\r\n    }\r\n\r\n    submitDailyAnswer = (LastRobotPosition) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            numMoves += moveHistory.length\r\n        });\r\n        var playerStateList = this.state.playerStateList.slice()\r\n        playerStateList[this.state.numPuzzleon] = LastRobotPosition.slice()\r\n        console.log(playerStateList);\r\n        axios.post('/dailychallenge', {score: numMoves, name: document.getElementById(\"namesubmitHS\").value, solutiondata: moveHistoryList, dc_id: this.state.dc_id, playerStateList: playerStateList})\r\n            .then( res => {\r\n                this.setState({\r\n                    dailySubmittedSucessfully: <Alert severity=\"success\">Submitted!</Alert>\r\n                });\r\n            });\r\n        window.dc_movesList = moveHistoryList;\r\n        window.dc_playerList = playerStateList;\r\n        this.state.gameWon = false;\r\n    }\r\n\r\n    checkwin = (newPlayerState) => {\r\n        if (this.state.goal != null && this.state.coloredGoals == null) {\r\n            var Won = false;\r\n            newPlayerState.map((player) => {\r\n                if (player.top === this.state.goal.top && player.left === this.state.goal.left) {\r\n                    Won = true;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            if (this.state.goal != null) {\r\n                var Won = false;\r\n                newPlayerState.map((player) => {\r\n                    if (player.top === this.state.goal.top && player.left === this.state.goal.left) {\r\n                        Won = true;\r\n                    }\r\n                });\r\n            }\r\n            else if (this.state.coloredGoals.length == 0) {\r\n                var Won = false;\r\n            }\r\n            else {\r\n                var Won = true;\r\n            }\r\n            var found = false;\r\n            var colorfound = false;\r\n            newPlayerState.map((player) => {\r\n                found = false\r\n                colorfound = false\r\n                this.state.coloredGoals.map(goal => {\r\n                    if (goal.colorSignifier == player.colorSignifier && goal.top === player.top && goal.left === player.left) {\r\n                        found = true;\r\n                    }\r\n                    if (goal.colorSignifier == player.colorSignifier) {\r\n                        colorfound = true;\r\n                    }\r\n                });\r\n                if (!found && colorfound) {\r\n                    Won = false;\r\n                }\r\n            });\r\n        }\r\n        if (Won) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No' && this.props.puzzleRush !== 'Yes') {\r\n                var username = '';\r\n                if (window.userInfo !== null) {\r\n                    username = window.userInfo.username\r\n                }\r\n                if (this.props.randomGame === 'Yes') {\r\n                    return (\r\n                        <RandomGameStatsModal\r\n                            show={this.state.gameWon}\r\n                            lowestMoves={this.state.lowestMoves}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            numMoves={this.state.moveHistory.length}\r\n                            difficulty={this.state.difficulty}\r\n                            resetPuzzle={this.resetPuzzle}\r\n                            handleShowRandomAnswers={this.handleShowRandomAnswers}\r\n                        />\r\n                    );\r\n                }\r\n                else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n                    return null\r\n                }\r\n                else if (this.props.dailyChallengeMode === 'Yes') {\r\n                    var Won=true\r\n                    this.state.gamesWonDaily.map((gameWon,index) => {\r\n                        if (!(index == this.state.numPuzzleon) && !gameWon) {\r\n                            Won = false\r\n                        }\r\n                    });\r\n                    var moveHistoryList = this.state.moveHistoryList\r\n                    moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory\r\n                    var numMoves = 0\r\n                    moveHistoryList.map(moveHistory => {\r\n                        numMoves += moveHistory.length\r\n                    });\r\n                    return (Won ? <YouWinDailyFinalModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={numMoves}\r\n                        submitAnswer={this.submitDailyAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                        undoMove={this.handleUndoMove}\r\n                        newPlayerState={newPlayerState}\r\n                        submitted={this.state.dailySubmittedSucessfully}\r\n                    /> : <YouWinDailySingleModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        totalMoves={numMoves}\r\n                        undoMove={this.handleUndoMove}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        games={this.state.games}\r\n                        handleClickGame={this.handleDailyClickGame}\r\n                        numPuzzleon={this.state.numPuzzleon}\r\n                        moveNextPuzzle={this.moveNextPuzzle}\r\n                    />);\r\n                }\r\n                else if (this.props.learnMode === 'Yes') {\r\n                    return  (<YouWinLessonModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        moveNextPuzzle={this.nextLessonPuzzle}\r\n                    />);\r\n                }\r\n                else {\r\n                    return  (<YouWinModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        submitAnswer={this.submitAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                    />);\r\n                }\r\n            }\r\n            else if (this.props.puzzleRush === 'Yes'){\r\n                axios.post('/puzzlerushsubmit', {p_id: this.state.p_id,g_id:this.state.games[this.state.numPuzzleon].g_id, moveHistory: this.state.moveHistory})\r\n                    .then( res => {\r\n                        console.log(res.data);\r\n                    });\r\n                var totalMoves = this.state.moveHistory.slice().length\r\n                var totalMovesList = this.state.totalMovesList\r\n                totalMovesList.push(totalMoves)\r\n                var solutionmoves = totalMoves - this.state.games[this.state.numPuzzleon].g_moves\r\n                var solutiondifference = this.state.solutiondifference\r\n                solutiondifference.push(solutionmoves)\r\n                var puzzledata = JSON.parse(this.state.games[this.state.numPuzzleon + 1].g_puzzledata)\r\n                if (this.state.numPuzzleon + 10 > this.state.games.length) {\r\n                    axios.get('/puzzlerushgetmore?p_id=' + this.props.p_id + '&difficulty=' + this.props.difficulty)\r\n                        .then( res => {\r\n                                var games = JSON.parse(res.data.games);\r\n                                var stategames = this.state.games\r\n                                var newarray = stategames.concat(games)\r\n                                this.setState({\r\n                                    games: newarray\r\n                                });\r\n                        });\r\n                }\r\n                this.setState(\r\n                    extend(puzzledata,{numPuzzleon: this.state.numPuzzleon + 1, playerState: puzzledata.playerStart.slice(), gameWon: false, solutiondifference: solutiondifference, totalMovesList: totalMovesList})\r\n                );\r\n\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handleShowRandomAnswers = () => {\r\n        this.setState({\r\n            tipsText: [this.state.lowestMoveSequence]\r\n        })\r\n    }\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false && !this.state.buildMode) {\r\n            var oldPositon = {left: this.state.playerState[this.state.robotSelected].left, top: this.state.playerState[this.state.robotSelected].top};\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left) && !this.state.buildMode) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier,\r\n                    prevPosition: oldPositon\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseToolTips = (index) => {\r\n        this.state.tipsText.splice(index,1);\r\n        this.setState({\r\n            tipsText: this.state.tipsText,\r\n        });\r\n    }\r\n\r\n    moveNextPuzzle = () => {\r\n        this.handleDailyClickGame((this.state.numPuzzleon + 1) % 4)\r\n    }\r\n\r\n    handleLearnClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].puzzledata);\r\n        var squareSize = setDefaultSquareSize(puzzledata.width,puzzledata.height);\r\n        this.setState(\r\n            extend(puzzledata,{buildMode: false,squareSize: squareSize, numPuzzleon: index, moveHistory: [], gameWon: false, playerState: puzzledata.playerStart.slice(),tipsText: [this.props.games[index].description]})\r\n        );\r\n    }\r\n\r\n    handleDailyClickAnswersGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n        var lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[index].g_solutiondata))\r\n        var lowestMovesforPuzzle = this.props.games[index].g_moves\r\n        var difficultyforPuzzle = this.props.games[index].g_difficulty\r\n        var playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[index]\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory,\r\n                    gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily,\r\n                    lowestMoveSequence: lowestMoveSequence, lowestMovesforPuzzle: lowestMovesforPuzzle, difficultyforPuzzle: difficultyforPuzzle,\r\n                    playerMovedSequence: playerMovedSequence})\r\n        );\r\n    }\r\n\r\n    handleDailyClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily})\r\n        );\r\n    }\r\n\r\n\r\n    handleWildCardClick = () => {\r\n        if (this.state.goal == null) {\r\n            this.setState({\r\n                goal: {top: this.state.height - 1, left: this.state.width - 1}\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                goal: null\r\n            });\r\n        }\r\n        this.resetPuzzle();\r\n    }\r\n\r\n    handleColoredClick = (colorSignifier) => {\r\n        var goal = null;\r\n        this.state.coloredGoals.map(goalItem => {\r\n            if (colorSignifier == goalItem.colorSignifier) {\r\n                goal = goalItem;\r\n            }\r\n        })\r\n        if (goal == null) {\r\n            var newColoredGoals = this.state.coloredGoals;\r\n            var newgoal\r\n            switch (colorSignifier) {\r\n                case 'blue':\r\n                    newgoal = {top: this.state.height - 2, left: this.state.width - 2, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n                    break;\r\n                case 'green':\r\n                    newgoal = {top: this.state.height - 1, left: this.state.width - 2, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n                    break;\r\n                case 'red':\r\n                    newgoal = {top: this.state.height - 2, left: this.state.width - 1, color: ROBOT_RED, colorSignifier: 'red'};\r\n                    break;\r\n                case 'yellow':\r\n                    newgoal = {top: this.state.height - 3, left: this.state.width - 3, color: ROBOT_YELLOW, colorSignifier: 'yellow'};\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            newColoredGoals.push(newgoal);\r\n            this.setState({\r\n                coloredGoals: newColoredGoals\r\n            });\r\n        }\r\n        else {\r\n            var newColoredGoals = this.state.coloredGoals.filter(goalItem =>\r\n                colorSignifier != goalItem.colorSignifier\r\n            );\r\n            console.log(newColoredGoals);\r\n            this.setState({\r\n                coloredGoals: newColoredGoals\r\n            });\r\n        }\r\n        this.resetPuzzle();\r\n    }\r\n\r\n\r\n\r\n    loadSidebar = () => {\r\n        if (this.props.learnMode == 'Yes') {\r\n            return (\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\">\r\n                        <Divider/>\r\n                        <Typography\r\n                             color=\"textSecondary\"\r\n                             display=\"block\"\r\n                             variant=\"caption\"\r\n                             style={{paddingBottom: '10px'}}\r\n                         >\r\n                             Beginner Lessons\r\n                         </Typography>\r\n                        {\r\n                            this.state.games.map((game,index) => {\r\n                                    if (index === 4) {\r\n                                        return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Intermediate Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    else if (index === 7) {\r\n                                            return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Advanced Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    return(\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={game.name} index={index} handleClickGame={this.handleLearnClickGame}/>\r\n                                    )\r\n                                }\r\n\r\n                            )\r\n                        }\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickAnswersGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeHistoryData\r\n                            lowestMovesforPuzzle={this.state.lowestMovesforPuzzle}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            difficultyforPuzzle={this.state.difficultyforPuzzle}\r\n                            nameSubmitted={this.props.nameSubmitted}\r\n                            playerMovedSequence={this.state.playerMovedSequence}\r\n                            bestScore={this.props.bestScore}\r\n                            scoreSubmitted={this.props.scoreSubmitted}\r\n                         />\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeScores highscores={this.state.highscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.state.createMode === 'Yes') {\r\n            return (\r\n                <CreateBoardGoalSelector\r\n                    handleWildCardClick={this.handleWildCardClick}\r\n                    handleColoredClick={this.handleColoredClick}\r\n                />\r\n            );\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.puzzleRush) {\r\n            return (\r\n                     <div>\r\n                        <Timer puzzleRushTimeUp={this.puzzleRushTimeUp}>\r\n                        </Timer>\r\n                        <Typography id=\"discrete-slider-small-steps\"\r\n                                     color=\"Primary\"\r\n                                     variant=\"h3\"\r\n                                     display=\"inline\"\r\n                                     gutterBottom>\r\n                             {this.state.numPuzzleon}\r\n                         </Typography>\r\n                     </div>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n            <div style={{display: 'grid'}}>\r\n                <Typography\r\n                    color=\"secondary\"\r\n                    display=\"block\"\r\n                    variant={\"h4\"}\r\n\r\n                >\r\n                    {this.props.name}\r\n                </Typography>\r\n                <br/>\r\n                <Grid container xs={12} direction=\"column\">\r\n                <HighScores highscores={this.state.highscores}/>\r\n                </Grid>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    handlePlayerMovementFromMouse = (direction) => {\r\n        this.handlePlayerMovement({dir: direction})\r\n    };\r\n\r\n    handleUndoMove = () => {\r\n        var moveHistory = this.state.moveHistory;\r\n        var playerState = this.state.playerState;\r\n        if (moveHistory.length !== 0) {\r\n            var moveObj = moveHistory.pop();\r\n            playerState[moveObj.robot].left = moveObj.prevPosition.left;\r\n            playerState[moveObj.robot].top = moveObj.prevPosition.top;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n                gameWon: false,\r\n                dailySubmittedSucessfully: null\r\n            });\r\n        }\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes' && this.state.buildMode) {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onStopDragHandlerGoal = (position,color) => {\r\n        if (color == undefined) {\r\n            this.setState({\r\n                goal: {top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize)},\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            })\r\n        }\r\n        else {\r\n            var coloredGoals = this.state.coloredGoals;\r\n            var newGoals = [];\r\n            coloredGoals.map(goal => {\r\n                if (goal.color == color) {\r\n                    newGoals.push({top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize), color: color, colorSignifier: goal.colorSignifier});\r\n                }\r\n                else {\r\n                    newGoals.push(goal);\r\n                }\r\n            });\r\n            this.setState({\r\n                coloredGoals: newGoals,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    onStopDragHandler = (position,index) => {\r\n        var playerState = this.state.playerState.slice();\r\n        var lastX = position.lastX / this.state.squareSize;\r\n        var lastY = position.lastY / this.state.squareSize;\r\n        playerState[index].top = Math.round(lastY);\r\n        playerState[index].left = Math.round(lastX);\r\n        this.setState({\r\n            playerStart: playerState.slice(),\r\n            playerState: playerState,\r\n            moveHistory: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        puzzleRushTimeUp={this.puzzleRushTimeUp}\r\n                        isPuzzleRush={this.props.puzzleRush}\r\n                        numPuzzleRush={this.state.numPuzzleon}\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                        toggleLineIndicators = {this.toggleLineIndicators}\r\n                        showColoredLineDirections={this.state.showColoredLineDirections}\r\n                        toggleBuildMode = {this.toggleBuildMode}\r\n                        undoMove = {this.handleUndoMove}\r\n                        buildMode = {this.state.buildMode}\r\n                        squareSizeValue = {parseInt((this.state.squareSize/4))}\r\n                        isLesson = {this.props.learnMode}\r\n                        isDailyChallenge = {this.props.dailyChallengeMode}\r\n                        isDailyChallengeAnswers = {this.props.dailyChallengeModeAnswers}\r\n                    />\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? null : <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>}\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8} zeroMinWidth>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal\r\n                            dimension={this.state.squareSize}\r\n                            position={this.state.goal}\r\n                            onStopDragHandler={this.onStopDragHandlerGoal}\r\n                            draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                            isCreateMode={this.state.createMode}\r\n                            buildMode={this.state.buildMode}\r\n                        />\r\n                        {\r\n                            this.state.coloredGoals.map(goal =>\r\n                                <Goal\r\n                                    dimension={this.state.squareSize}\r\n                                    position={goal}\r\n                                    onStopDragHandler={this.onStopDragHandlerGoal}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    color={goal.color}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    onStopDragHandler={this.onStopDragHandler}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={this.state.playerState[this.state.robotSelected].color}\r\n                                    show={this.state.showColoredLineDirections}\r\n                                    handleClick={this.handlePlayerMovementFromMouse}\r\n                                    buildMode={this.state.buildMode}\r\n                                />\r\n                            )\r\n                        }\r\n                    </Board>\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/> : null}\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DescriptionList\r\n                        handleCloseToolTips={this.handleCloseToolTips}\r\n                        tipsText={this.state.tipsText}\r\n                    />\r\n                    {this.loadSidebar()}\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                {\r\n                    this.checkwin(this.state.playerState)\r\n                }\r\n                <PuzzleRushWinModal\r\n                    show={this.state.showPuzzleRushFinishedModal}\r\n                    closeModal={this.closePuzzleRushFinishedModal}\r\n                    numPuzzlesCompleted={this.state.numPuzzlesCompleted}\r\n                    percentile={this.state.puzzleRushPercentileCompleted}\r\n                    averageTime={this.state.averageTime}\r\n                    averageMoves={this.state.averageMoves}\r\n                    differenceOptimal={this.state.differenceOptimal}\r\n                    movesPerSecond={this.state.movesPerSecond}\r\n                    difficulty={this.props.difficulty}\r\n                    handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        maxWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 360,\r\n        minWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 235,\r\n        height: 225,\r\n        position: 'relative',\r\n        background: 'linear-gradient(100deg, #ffd34d 55%, #fff178 55%)'\r\n    },\r\n\r\n    item: {\r\n        padding: 0\r\n    },\r\n\r\n    upperPadding: {\r\n        paddingTop: 3\r\n    },\r\n    upperPaddingButton: {\r\n        paddingTop: 3,\r\n        position: 'absolute',\r\n        bottom: 15,\r\n        left: 25\r\n    },\r\n\r\n    lowerPadding: {\r\n        paddingBottom: 3\r\n    },\r\n\r\n    rightSideText: {\r\n        textAlign: \"right\",\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    },\r\n\r\n    leftSideText: {\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(ComplexGrid)\r\n\r\nfunction ComplexGrid(props) {\r\n    const { classes } = props;\r\n    const handleClick = () => {\r\n        props.handleGameClick(props.game.name, props.game.puzzledata,props.highscores,props.game.uri);\r\n    };\r\n\r\n    var numberOfHighScores = 0;\r\n\r\n    const highscorestyle = highscore => {\r\n        if (numberOfHighScores === 6) return \"\";\r\n        numberOfHighScores++;\r\n        return (\r\n            <ListItem disableGutters={true} classes={{ root: classes.item }}>\r\n                <ListItemText primary={trimNameShort(highscore.comment)} classes={{ root: classes.leftSideText }} />\r\n                <ListItemText secondary={highscore.numMoves} classes={{ root: classes.rightSideText }} />\r\n            </ListItem>\r\n        )\r\n    };\r\n\r\n    const contentDivStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        };\r\n\r\n    };\r\n\r\n    const trimName = name => {\r\n        var separated = (name + '').split(\" \")\r\n        var toreturn = '';\r\n        separated.map((word) => {\r\n            if (word.length > 17)\r\n                toreturn += word.substring(0, 17) + \"...\" + ' ';\r\n            else {\r\n                toreturn += word + ' '\r\n            }\r\n        });\r\n        return toreturn.substring(0, toreturn.length - 1);\r\n    };\r\n\r\n    const trimNameShort = name => {\r\n        if (name.length > 10)\r\n            name = name.substring(0, 10) + \"...\";\r\n        return name\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid item xs={12} md={3} sm={6}>\r\n            <Card variant=\"outlined\" className={classes.root}>\r\n                <CardContent>\r\n                    <div style={contentDivStyle()}>\r\n                        <div style={{width: '150px'}}>\r\n                            <Tooltip title={props.game.name}>\r\n                                <Typography variant=\"h6\" classes={{ root: classes.lowerPadding }}>\r\n                                    {trimName(props.game.name)}\r\n                                </Typography>\r\n                            </Tooltip>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    By: {trimName(props.game.authorname)}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    {props.game.created}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Plays: {props.game.plays}\r\n                                </Typography>\r\n                            </div>\r\n                            <br/>\r\n                            <Button onClick={handleClick} classes={{ root: classes.upperPaddingButton }} variant=\"contained\" color=\"primary\">Play</Button>\r\n                        </div>\r\n                        <div style={{width: '105px'}}>\r\n                            <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                Top Scores\r\n                            </Typography>\r\n                            <List>\r\n                                {\r\n                                    props.highscores.map(highscore =>\r\n                                        highscorestyle(highscore)\r\n                                    )\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from 'axios';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport extend from '../constants/extend';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center'\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 400,\r\n    },\r\n    input: {\r\n        marginLeft: 5,\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n        marginLeft: 8,\r\n        marginRight: 8,\r\n    },\r\n});\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = this.props.gameslist;\r\n        var highscoreslist = this.props.highscoreslist;\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n            anchorEl: null,\r\n            hasMore: true,\r\n            lastSearch: 'None'\r\n        }\r\n    }\r\n\r\n    handleGameClick = (name,gamedata,highscores,uri) => {\r\n        this.props.handleGameClick(name,gamedata,highscores,uri);\r\n    };\r\n\r\n    handleFilterMenuOpen = event => {\r\n        this.setState( {\r\n          anchorEl: event.currentTarget\r\n      });\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.keycode == 13) {\r\n            this.handleSearchSubmit(e);\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        window.scrollTo(0,this.props.findWindowHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.props.setFindWindow(window.scrollY)\r\n    }\r\n\r\n    handleCloseFilterMenuMostPlayed = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'MostPlayed', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'MostPlayed', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'MostPlayed',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleCloseFilterMenuHighest = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'Highest', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'Highest', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'Highest',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleSearchSubmit = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n\r\n        axios.post('/search', {search: searchTerm, filter: 'None', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'None', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'None',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    hasMore = () => {\r\n        return ( this.state.hasMore ? null : <Grid item alignItems=\"center\" justify=\"center\" xs={12}><Typography style={{textAlign: 'center', display: 'block'}} variant=\"caption\">No More Puzzles</Typography></Grid>)\r\n    }\r\n\r\n    loadMoreItems = () => {\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'None', offset: this.state.gameslist.length})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist);\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist);\r\n                this.props.setNumFindGames(gameslist.length + this.state.gameslist.length, this.state.lastSearch, searchTerm);\r\n                this.setState({\r\n                    highscoreslist: this.state.highscoreslist.concat(highscoreslist),\r\n                    gameslist: this.state.gameslist.concat(gameslist),\r\n                    hasMore: gameslist.length == 0 ? false : true,\r\n                });\r\n            });\r\n    }\r\n\r\n    handleCloseFilterMenu = () => {\r\n        this.setState({\r\n            anchorEl: null\r\n        });\r\n    };\r\n\r\n    render () {\r\n        const  { classes } = this.props;\r\n        console.log(this.state.highscoreslist)\r\n        console.log(this.state.gameslist)\r\n        return (\r\n            <div id='MainFindPage' style={gamepanel()}>\r\n                <Paper component=\"form\" className={classes.root} >\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        inputRef={ref => this.searchRef = ref}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                this.handleSearchSubmit();\r\n                                event.preventDefault()\r\n                            }\r\n                        }}\r\n                    />\r\n                    <IconButton onClick={this.handleSearchSubmit} className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <Divider className={classes.divider} orientation=\"vertical\" />\r\n                    <Button\r\n                        onClick={this.handleFilterMenuOpen}\r\n                        startIcon={<FilterListIcon />}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        Sort\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(this.state.anchorEl)}\r\n                        onClose={this.handleCloseFilterMenu}\r\n                    >\r\n                        <MenuItem onClick={this.handleSearchSubmit}>Recently Created</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuMostPlayed}>Most Played</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuHighest}>Highest Scores</MenuItem>\r\n                    </Menu>\r\n                </Paper>\r\n                <br/>\r\n                <Grid container alignItems={\"stretch\"} spacing={2}>\r\n                    {\r\n                        this.state.gameslist.map((game,index)=>\r\n                            <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                        )\r\n                    }\r\n                    <InfiniteScroll\r\n                        pageStart={1}\r\n                        loadMore={this.loadMoreItems.bind(this)}\r\n                        hasMore={this.state.hasMore}\r\n                        loader={<Grid item alignItems=\"center\" justify=\"center\" xs={12}><CircularProgress style={{textAlign: 'center',alignItems: 'center', marginLeft: 'auto', marginRight: 'auto'}} size={40} color=\"secondary\" /></Grid>}\r\n                        threshold={200}\r\n                        >\r\n                    </InfiniteScroll>\r\n                    {this.hasMore()}\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(FindGame);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  loadedGame={'Yes'}\r\n                  name={this.props.name}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  homepage: {\r\n    marginTop: '40px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  baseExpansion: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: '10px'\r\n  },\r\n  darkmode: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      marginTop: '150px',\r\n  },\r\n  iconcards: {\r\n    width: '250px',\r\n    display: 'inline-block',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  iconcardsDaily: {\r\n    maxWidth: 345,\r\n    minWidth: 250,\r\n    float: 'left',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  titlehome: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '30px',\r\n  },\r\n  titledailyroto: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '10px',\r\n  },\r\n  iconfonts: {\r\n    fontFamily: \"'Arvo', serif\",\r\n  },\r\n  createboardcard: {\r\n    ':hover': {\r\n        content: '/static/images/CreateBoardCardIconPlaced.png',\r\n    }\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  centeredProfile: {\r\n    marginTop: '20px',\r\n    display: 'inline-block',\r\n  },\r\n  expandedPanelDCH: {\r\n    background: 'linear-gradient(70deg, #fff810  30%, rgba(0,0,0,0) 30%), linear-gradient(30deg, #63e89e 60%, #ff7ee3 60%)'\r\n  },\r\n  table: {\r\n    width: '33%'\r\n  }\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport FindGameElements from \"../containers/FindGameElements\";\r\nimport {GOAL_IMAGE} from '../constants/constants';\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n\r\n    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n        return (<div className={classes.homepage} >\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                        </Typography>\r\n                        <Typography variant=\"p1\" paragraph={true}>Puzzle game for anyone to play! Create your own custom boards or play a random Solved game. <br/>Goal is to get ANY piece to stop on the  <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                        </Typography>\r\n                        <br/>\r\n                        <img width=\"300\" height=\"300\" src='/static/videos/basic2.gif'/>\r\n                        <br/>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                        <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                        </Typography>\r\n                        <Typography> 8/5/2020 Scaled down the Difficulty for the Daily Challenge rotations, also modified the classic algorithm to be less cluttered\r\n                        </Typography>\r\n                        <Typography> 8/18/2020 New textures, Soon to be released: Color Specific Goals!\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container item alignItems={\"stretch\"} spacing={2} alignItems=\"center\" justify=\"center\" >\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickFindGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Find a Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/FindAGameCardIcon.png\"\r\n                                        title=\"Find a Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Find a Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/DailyChallengeIcon.png\"\r\n                                        title=\"Daily Challenge\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Daily Challenge\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickCreateGame}>\r\n                                    <CardMedia\r\n                                        className={classes.createboardcard}\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                        title=\"Create Board\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Create Board\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickRandomGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Play a Random Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/puzzle.png\"\r\n                                        title=\"Play a Random Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Play a Random Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickLearnGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                        title=\"Learn\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Learn\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Contemplative Reptile\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/PuzzleRushIcon.png\"\r\n                                        title=\"Contemplative Reptile\"\r\n                                    />\r\n                                    <CardContent style={{textAlign: 'center'}}>\r\n                                        <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            Puzzle Rush\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                    <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                    </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            Medium Mondays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Trouble Tuesday <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Wild Wednesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Tryhard Thursdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">easy puzzles</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                        </Typography>\r\n                        <Typography style={{marginTop: '30px'}} className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                        </Typography>\r\n                        <DailyChallengeScores highscores={window.dchighscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (<div className={classes.homepage}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> Controls\r\n                    </Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Movement\r\n                        </Typography>\r\n                    <img width={'20%'} height={'auto'} src={\"/static/images/keyboard.png\"}/>\r\n                    <Typography>Pieces Move until they hit a wall or another piece</Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Selecting robots\r\n                        </Typography>\r\n                        <img width={'20%'} height={'auto'} src={\"/static/images/tab.png\"}/>\r\n\r\n                    <Typography>Or click</Typography>\r\n                    <Divider/>\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            HotKeys\r\n                        </Typography>\r\n                        <Typography variant=\"h6\">Undo</Typography> <img width={'20%'} height={'auto'} src={\"/static/images/Qkey.png\"}/>\r\n                        <Typography variant=\"h6\">Reset</Typography> <img width={'20%'} height={'auto'} src={\"/static/images/Wkey.png\"}/>\r\n                    <Divider />\r\n                    <div style={{marginTop:'100px'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                    </Typography>\r\n                    <Typography> 8/5/2020 Scaled down the Difficulty for the Daily Challenges, also modified the classic algorithm to be less cluttered\r\n                    </Typography>\r\n                    <Typography> 8/18/2020 New textures, Soon to be released: Color Specific Goals!\r\n                    </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={8} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                    </Typography>\r\n                    <Typography paragraph={true} variant=\"p1\">Puzzle game for anyone to play! Create your own custom boards or play a random Solved game.<br/>Goal is to get ANY piece to stop on the  <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                    </Typography>\r\n                    <br/>\r\n                        <img width=\"300\" height=\"300\" src='/static/videos/basic2.gif'/>\r\n                    <br/>\r\n                    <Card className={classes.iconcards}>\r\n                      <CardActionArea onClick={props.handleClickFindGame}>\r\n                        <CardMedia\r\n                          component=\"img\"\r\n                          alt=\"Find a Game\"\r\n                          height=\"140\"\r\n                          image=\"/static/images/FindAGameCardIcon.png\"\r\n                          title=\"Find a Game\"\r\n                        />\r\n                        <CardContent>\r\n                          <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                            Find a Game\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                      <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                        <CardMedia\r\n                          component=\"img\"\r\n                          alt=\"Create Board\"\r\n                          height=\"140\"\r\n                          image=\"/static/images/DailyChallengeIcon.png\"\r\n                          title=\"Daily Challenge\"\r\n                        />\r\n                        <CardContent>\r\n                          <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                            Daily Challenge\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickCreateGame}>\r\n                            <CardMedia\r\n                                className={classes.createboardcard}\r\n                                component=\"img\"\r\n                                alt=\"Create Board\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                title=\"Create Board\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Create Board\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickRandomGame}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Play a Random Game\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/puzzle.png\"\r\n                                title=\"Play a Random Game\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Play a Random Game\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickLearnGame}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Create Board\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                title=\"Learn\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Learn\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Contemplative Reptile\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/PuzzleRushIcon.png\"\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent style={{textAlign: 'center'}}>\r\n                                <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Puzzle Rush\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                            Medium Mondays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Trouble Tuesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Wild Wednesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Tryhard Thursdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">easy puzzles</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                        </Typography>\r\n                <Typography className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                </Typography>\r\n                <DailyChallengeScores highscores={window.dchighscores}/>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst stylecol = () => {\r\n    return({\r\n            float: 'left',\r\n            width: '50%',\r\n            margin: 'auto',\r\n            padding: '0 50px',\r\n            marginTop: '6px',\r\n    });\r\n}\r\n\r\nconst spacing = () => {\r\n    return({\r\n            marginBottom: '10px',\r\n    });\r\n}\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    };\r\n\r\n    loginFacebook = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/facebook\";\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeLoginModal}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>Login to RobotsEvolved</DialogTitle>\r\n                <DialogContent dividers>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                           • Gain <FaCrown/>s when winning the Daily Challenge (stacks)\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                            • Saving settings and your moves in the daily challenge\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography variant=\"body2\" display=\"inline\">\r\n                            • Profile Page to keep track of your submissions.\r\n                        </Typography>\r\n                    <div class=\"col\">\r\n                        <a href=\"#\" onClick={this.loginFacebook} id={\"buttonfb\"}>\r\n                          <i class=\"fa fa-facebook fa-fw\"></i> Login with Facebook\r\n                         </a>\r\n                        <a onClick={this.loginGoogle} href=\"#\" id={\"buttongoogle\"}><i class=\"fa fa-google fa-fw\">\r\n                          </i> Login with Google\r\n                        </a>\r\n                    </div>\r\n                    <Typography variant=\"caption\" display=\"block\">\r\n                            We will NEVER distribute/sell your email or profileID.\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeLoginModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <Button color=\"black\" onClick={this.handleClick}><b>{textToShow}</b></Button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport SignInButton from './SignInButton';\r\n\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '40px',\r\n        width: '40px',\r\n        marginTop: '5px',\r\n    };\r\n};\r\n\r\nconst divStyle = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        width: '200px',\r\n    };\r\n};\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    SignInButtonPressed = () => {\r\n        this.props.handleClick('Sign in');\r\n    }\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return <SignInButton onClick={this.SignInButtonPressed}/>\r\n        }\r\n        else {\r\n            return (\r\n                <div style={divStyle()}>\r\n                    <div>{window.userInfo.username}</div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic v2',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty) => {\r\n        console.log(difficulty)\r\n        axios.post('/puzzlerush', {difficulty: difficulty, action: 'start',type: this.state.value})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            isLoading: false,\r\n                        });\r\n                        this.props.handleClickPuzzleRush(difficulty,games,p_id);\r\n                });\r\n    };\r\n\r\n    handleClickEasyPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMediumPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                                {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                                                        ) : (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                         <Grid item xs={6}>\r\n                                         <ButtonGroup\r\n                                            orientation=\"vertical\"\r\n                                            color=\"primary\"\r\n                                            aria-label=\"vertical outlined primary button group\"\r\n                                          >\r\n                                            <Button onClick={this.handleClickEasyPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Easy\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickMediumPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Medium\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Hard\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickExHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Exteremely Hard\r\n                                            </Button>\r\n                                          </ButtonGroup>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                              <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                              <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                                <FormControlLabel value=\"classic v2\" control={<Radio />} label=\"Classic V2\" />\r\n                                                <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                                <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                              </RadioGroup>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic v2',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickRandomGameModal = (difficulty,type) => {\r\n        axios.get('/randomgame?difficulty=' + difficulty + '&type=' + type)\r\n            .then( res => {\r\n                var game = JSON.parse(res.data.game);\r\n                this.setState({\r\n                    isLoading: false,\r\n                });\r\n                this.props.handleClickRandomGame(game,difficulty);\r\n            })\r\n    }\r\n\r\n    handleClickEasy = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMedium = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHard = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHard = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickGodMode = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('GodTeir',this.state.value)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                            {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                            ) : (\r\n                            <Grid\r\n                                container xs={12}\r\n                                spacing={4}\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n                                wrap=\"nowrap\"\r\n                            >\r\n                                <Grid item xs={6}>\r\n                                    <ButtonGroup\r\n                                        orientation=\"vertical\"\r\n                                        color=\"primary\"\r\n                                        aria-label=\"vertical outlined primary button group\"\r\n                                      >\r\n                                        <Button onClick={this.handleClickEasy} variant=\"contained\" color=\"primary\">\r\n                                            Easy\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickMedium} variant=\"contained\" color=\"primary\">\r\n                                            Medium\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickHard} variant=\"contained\" color=\"primary\">\r\n                                            Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickExHard} variant=\"contained\" color=\"primary\">\r\n                                            Extremely Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickGodMode} variant=\"contained\" color=\"primary\">\r\n                                            God Tier\r\n                                        </Button>\r\n                                     </ButtonGroup>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl component=\"fieldset\">\r\n                                      <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                      <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                        <FormControlLabel value=\"classic v2\" control={<Radio />} label=\"Classic V2\" />\r\n                                        <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                        <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                      </RadioGroup>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageCreatedGamesDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.game.name,props.game.puzzledata,[],props.game.uri);\r\n    }\r\n\r\n    return (<div>\r\n            <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography> Highscore Holder: </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.game.username} - {props.game.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageSolutionDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.solution.name,props.solution.puzzledata,[],props.solution.uri);\r\n    }\r\n    return (<div>\r\n              <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography color={'secondary'} variant={'body2'}> {props.solution.WinnerCreated} </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.solution.WinnerUsername} - {props.solution.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Table,TableContainer,TableHead,TableRow,TableCell,TableBody} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useStyles from '../Material-UI/themes';\r\nimport ProfilePageCreatedGamesDetails from '../components/ProfilePageComponents/ProfilePageCreatedGamesDetails';\r\nimport ProfilePageSolutionDetails from '../components/ProfilePageComponents/ProfilePageSolutionDetails';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\n\r\nexport default function ProfilePage(props) {\r\n    const classes = useStyles();\r\n    const submitAnswer = () => {\r\n        axios.post('/userUpdate',{newuser: document.getElementById(\"ProfileName\").value})\r\n            .then( res => {\r\n                if (res.data == 'OK') {\r\n                    window.location.href = '/';\r\n                }\r\n                else {\r\n                    setError(res.data);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const createData = (name,col1,col2) => {\r\n        return {name,col1,col2}\r\n    }\r\n\r\n    const columns = [\r\n          { id: 'difficulty', label: 'Difficulty', maxWidth: 75 },\r\n          { id: 'classic', label: 'Classic', maxWidth: 75 },\r\n          { id: 'random', label: 'Random', maxWidth: 75 },\r\n        ];\r\n\r\n    const rows = [\r\n        createData('Easy', props.puzzlerushview.maxeasyc,props.puzzlerushview.maxeasyp),\r\n        createData('Medium', props.puzzlerushview.maxmediumc,props.puzzlerushview.maxmediump),\r\n        createData('Hard', props.puzzlerushview.maxhardc,props.puzzlerushview.maxhardp),\r\n        createData('Extremely Hard', props.puzzlerushview.maxexhardc,props.puzzlerushview.maxexhardp)\r\n    ]\r\n\r\n    const rowseff = [\r\n        createData('Easy', props.puzzlerushview.maxeffec,props.puzzlerushview.maxeffep),\r\n        createData('Medium', props.puzzlerushview.maxeffmc,props.puzzlerushview.maxeffmp),\r\n        createData('Hard', props.puzzlerushview.maxeffhc,props.puzzlerushview.maxeffhp),\r\n        createData('Extremely Hard', props.puzzlerushview.maxeffexc,props.puzzlerushview.maxeffexp)\r\n    ]\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [expandedGame, setExpandedGame] = React.useState(false);\r\n    const [expandedHighscores, setExpandedHighscores] = React.useState(false);\r\n    const handleChangeGame = (panel) => (event, isExpandedGame) => {\r\n        setExpandedGame(isExpandedGame ? panel : false);\r\n    };\r\n    const handleChangeHighscores = (panel) => (event, isExpandedHighScores) => {\r\n        setExpandedHighscores(isExpandedHighScores ? panel : false);\r\n    };\r\n    console.log(props.puzzlerushview);\r\n    return (\r\n            <div style={gamepanel()}>\r\n                <Grid container spacing={4}>\r\n                    <Grid item xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <TextField className={classes.centeredProfile} id={\"ProfileName\"} label={\"Username\"} defaultValue={window.userInfo.username}/>\r\n                        <Button className={classes.centeredProfile} variant=\"contained\" color=\"secondary\" onClick={submitAnswer}>Change Username</Button>\r\n                        <Typography color={\"secondary\"}>{error}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Created</Typography>\r\n                        {\r\n                            props.gamesview.map((game,index) =>\r\n                                    <ExpansionPanel expanded={expandedGame === 'panelgame' + index} onChange={handleChangeGame('panelgame' + index)}>\r\n                                        <ExpansionPanelSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls={\"panel\" + index + \"-content\"}\r\n                                          id={\"panel\" + index + \"-header\"}\r\n                                        >\r\n                                          <Typography className={classes.heading}>{game.name}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Plays: {game.plays}</Typography>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                          <ProfilePageCreatedGamesDetails\r\n                                            game={game}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                          />\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Solved</Typography>\r\n                        {\r\n                            props.solutionsview.map((solution,index) =>\r\n                                <ExpansionPanel expanded={expandedHighscores === 'panelhigh' + index} onChange={handleChangeHighscores('panelhigh' + index)}>\r\n                                    <ExpansionPanelSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls={\"panel\" + index + \"-content\"}\r\n                                      id={\"panel\" + index + \"-header\"}\r\n                                    >\r\n                                      <Typography className={classes.heading}>{solution.name}</Typography>\r\n                                      <Typography className={classes.secondaryHeading}>Best: {solution.numMoves}</Typography>\r\n                                      {solution.WinnerUserId == window.userInfo.userID ? <FaCrown style={{marginLeft: '30px'}}/> : null}\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <ProfilePageSolutionDetails\r\n                                            solution={solution}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                        />\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Puzzle Rush Records</Typography>\r\n                        <Typography variant=\"body1\">Most Puzzles Solved</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ maxWidth: column.maxWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rows.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                        <Typography style={{marginTop: '40px'}} variant=\"body1\">Highest Efficiency Scores</Typography>\r\n                        <Typography variant=\"caption\">Calculated by (total puzzles completed) * 7 - (total redundany moves from best score)</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ maxWidth: column.maxWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rowseff.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nexport default function RandomGamePage(props) {\r\n    return (\r\n        <Game\r\n              handleLineDirections={props.handleLineDirections}\r\n              LineDirections={props.LineDirections}\r\n              randomGame={'Yes'}\r\n              game={props.game}\r\n              difficulty={props.difficulty}\r\n         />\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PuzzleRushPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  puzzleRush={'Yes'}\r\n                  p_id={this.props.p_id}\r\n                  games={this.props.games}\r\n                  difficulty={this.props.difficulty}\r\n             />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PuzzleRushPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass LessonsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                learnMode={'Yes'}\r\n                games={window.learngameslist}/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default LessonsPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game handleClickDailyChallenge={this.props.handleClickDailyChallenge} handleLineDirections={this.props.handleLineDirections} LineDirections={this.props.LineDirections} dailyChallengeMode={'Yes'} playerStateList={this.props.playerStateList} savedMoves={this.props.savedMoves} games={this.props.dailyChallengeGameslist} dc_id={this.props.dc_id} highscores={this.props.dchighscores}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengePage;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Card,CardActions,Button,Avatar} from \"@material-ui/core\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function AboutUs(props) {\r\n    const facebookclick = () => {\r\n        window.open('https://www.facebook.com/RobotsEvolved-105278561284154')\r\n    }\r\n    const discordclick = () => {\r\n        window.open('https://discord.gg/VKMRQuE')\r\n    }\r\n    return (<div style={gamepanel()}>\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item spacing={4} xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card style={{display: 'inline-block', width: '100%'}}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    About\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    RobotsEvolved.com is based on the board game Ricochet Robots by Alex Randolph.\r\n                                    We have several game modes and variants that are inspired by the several Chess variants on the internet.\r\n                                    If you find any bugs or have any feature requests for RobotsEvolved please let me know by emailing robotsevolved@gmail.com or contacting me on FB from our FB page, I would love to hear some of the ideas people have. Ill get to developing the feature/fixing annoying bugs ASAP\r\n                                    If you use Google Login or Facebook Login I will NEVER email you or sell your information, it is strictly for user-identification.\r\n                                    Tell your friends about the site and get people on here!\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button onClick={facebookclick}>\r\n                                    <Avatar alt=\"Facebook\" src=\"https://facebookbrand.com/wp-content/uploads/2019/04/f_logo_RGB-Hex-Blue_512.png?w=512&h=512\" />\r\n                                </Button>\r\n                                <Button onClick={discordclick}>\r\n                                    <Avatar alt=\"Discord\" src=\"https://cdn.discordapp.com/attachments/675768013731135518/740251382862577694/icons8-discord-new-logo-48.png\" />\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Daily Challenge Rotation\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    The Daily Challenge rotates its difficulty every day as specified below with 2 x Random and 2 x Classic Type puzzles.\r\n                                    <br/>\r\n                                    Medium Mondays - 4 x Medium\r\n                                    <br/>\r\n                                    Trouble Tuesdays - 4 x Hard\r\n                                    <br/>\r\n                                    Wild Wednesdays - 4 x Medium\r\n                                    <br/>\r\n                                    Tryhard Thursdays -4 x Hard\r\n                                    <br/>\r\n                                    Flyin Fridays - 4 x Medium\r\n                                    <br/>\r\n                                    Sleepy Saturdays - 4 x Easy\r\n                                    <br/>\r\n                                    Standard Sundays - 4 x Hard\r\n                                </Typography>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Classic Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Classic puzzles are based on the original Game. These Puzzles only have walls that are L shaped and a goal is in the center of one of the L puzzles.\r\n                                </Typography>\r\n                                <Typography variant={\"h4\"} display={\"inline\"}>\r\n                                    Random Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Random Puzzles are created by having a 10% chance for a wall to spawn in location possible, Goals and Robot placements are completely random also.\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Easy\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 5-8 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Medium\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 9-13 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 14-17 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"} >\r\n                                    Extremely Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 18-22 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    God Tier\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 23+ Moves, Note: there are a low number of these puzzles due to the CPU required to create them\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Paper class=\"card3\">\r\n                          <img src={\"/static/images/284457_10151211078621477_839164197_n.jpg\"} alt=\"Jane\"/>\r\n                          <div class=\"container3\">\r\n                            <h2>Kyle Kwasniewski</h2>\r\n                            <p class=\"title3\">Creator &amp; FullStack Dev.</p>\r\n                            <p>I work in Software Development and Dev-Ops in New York and consider myself a Ricochet Robots enthusiast so I decided to make this application as a way to better hone my skill in web frameworks as well as pass the time during the quarantine. I play Frisbee and Ski alot as well as play my fair share of Steam games.</p>\r\n                            <p>Thanks for playing!</p>\r\n                            <p>robotsevolved@gmail.com</p>\r\n                          </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/284f909d-0d5c-4ae1-b100-76c9d46ae7d4.png\"} alt=\"Mike\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Jonah Tollefson</h2>\r\n                                <p className=\"title3\">Front-End Dev.</p>\r\n                                <p>Went to college with these other goobers in the US and now I work professionally as a\r\n                                    software engineer in Germany. For RobotsEvolved, I mainly worked on the frontend\r\n                                    using React. Cats and Ultimate Frisbee are life.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/derekschultz.jpg\"} alt=\"John\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Derek Schultz</h2>\r\n                                <p className=\"title3\">Back-End Dev.</p>\r\n                                <p>Full time Software Engineer. Graduated from University of Wisconsin Platteville\r\n                                    with a BS in Computer Science and Minor in Business Administration. Worked on\r\n                                    most of the database aspect of RobotsEvolved and some back end functionality. I\r\n                                    enjoy video games, beer, and playing darts.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n\r\n\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nexport default function ShowDailyPuzzleHistory(props) {\r\n    const handleDailyPuzzleHistoryClick = event => {\r\n        console.log(props.history)\r\n        props.handleDailyPuzzleHistoryClick(props.history)\r\n    }\r\n    return (\r\n            <Button style={window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? {marginLeft: '5px'} : {marginLeft: '60px'}} variant=\"contained\" size=\"small\" color=\"primary\" onClick={handleDailyPuzzleHistoryClick}>\r\n                 show answers\r\n            </Button>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport ShowDailyPuzzleHistory from '../components/ShowDailyPuzzleHistory';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ProfilePageCreatedGamesDetails from \"../components/ProfilePageComponents/ProfilePageCreatedGamesDetails\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function DailyChallengeHistory(props) {\r\n    const [expandedPanel, setExpandedPanel] = React.useState(false);\r\n    const handleChangePanel = (panel) => (event, isExpanded) => {\r\n        setExpandedPanel(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles();\r\n    return (<div style={gamepanel()}>\r\n                <Typography className={classes.titlehome} variant=\"h3\">Daily Challenge History</Typography>\r\n                {\r\n                    props.dailychallengehistory.map((history, index) =>\r\n                        <ExpansionPanel expanded={expandedPanel === 'panelgame' + index} onChange={handleChangePanel('panelgame' + index)}>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={\"panel\" + index + \"-content\"}\r\n                                id={\"panel\" + index + \"-header\"}\r\n                            >\r\n                                <Typography className={classes.heading}>{history.created}</Typography>\r\n                                <Typography style={{width: '15%'}} className={classes.secondaryHeading}>Winner: {history.nameSubmitted}</Typography>\r\n                                <ShowDailyPuzzleHistory history={history} handleDailyPuzzleHistoryClick={props.handleDailyPuzzleHistoryClick}/>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        <FaCrown/> {history.nameSubmitted} - {history.scoreSubmitted} <FaCrown/>\r\n                                    </Typography>\r\n                                    <Typography className={classes.secondaryHeading}>Lowest possible solution: {history.bestScore}</Typography>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                    )\r\n                }\r\n           </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengeHistoryAnswersPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        console.log(this.props.history);\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                dailyChallengeModeAnswers={'Yes'}\r\n                nameSubmitted={this.props.history.nameSubmitted}\r\n                bestScore={this.props.history.bestScore}\r\n                created={this.props.history.created}\r\n                games={this.props.history.games}\r\n                playerStateList={this.props.history.playerStateList}\r\n                scoreSubmitted={this.props.history.scoreSubmitted}\r\n                solutionDataSubmitted={this.props.history.solutionDataSubmitted}\r\n                submitted={this.props.history.submitted}\r\n                user_id={this.props.user_id}\r\n                />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengeHistoryAnswersPage;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n  },\r\n}));\r\n\r\nexport default function LoadingPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress size={120} color=\"secondary\" />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport clsx from 'clsx';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport Home from './Pages/Home';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\nimport axios from 'axios';\r\nimport Game from './containers/Game';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport BrushIcon from '@material-ui/icons/Brush';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"./constants/constants\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport PuzzleRushDifficultyModal from \"./containers/Modals/PuzzleRushDifficultyModal\";\r\nimport RandomGameDifficultyModal from \"./containers/Modals/RandomGameDifficultyModal\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport RandomGamePage from \"./Pages/RandomGamePage\";\r\nimport PuzzleRushPage from \"./Pages/PuzzleRushPage\";\r\nimport LessonsPage from \"./Pages/LessonsPage\";\r\nimport DailyChallengePage from \"./Pages/DailyChallenge\";\r\nimport AboutUs from \"./Pages/AboutUs\";\r\nimport DailyChallengeHistory from \"./Pages/DailyChallengeHistory\";\r\nimport DailyChallengeHistoryAnswersPage from \"./Pages/DailyChallengeHistoryAnswersPage\";\r\nimport { FaMedal } from 'react-icons/fa';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport Popover from \"@material-ui/core/Popover\";\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    drawerHeaderRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerHeaderLeft: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    toolbar1: {\r\n        backgroundColor: '#14A76C',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    dividerFullWidth: {\r\n        margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    darkmode: {\r\n          body: '#363537',\r\n          text: '#FAFAFA',\r\n          toggleBorder: '#6B8096',\r\n          gradient: 'linear-gradient(#091236, #1E215D)',\r\n    },\r\n});\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (window.uri === '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n                dailychallengehistoryloaded: false,\r\n                profileDataloaded: false,\r\n            };\r\n        }\r\n        else {\r\n            if (window.token.g_id == undefined) {\r\n                const linedir = window.userInfo == undefined ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={linedir} name={window.token.name} gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri}/>, //when uri is entered to play specific game\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                };\r\n            }\r\n            else {\r\n                const linedir = window.userInfo == undefined ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={linedir} randomGame={'Yes'} game={window.token} difficulty={window.token.g_difficulty}/>,\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                }\r\n            }\r\n        }\r\n        this.state.openChat = false;\r\n        this.state.chatAnchor = null;\r\n        this.state.open = window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? false : true;\r\n        this.state.mobileAnchorEl = null;\r\n        this.state.mobileMenuOpen = false;\r\n        this.state.showLoginModal = false;\r\n        this.state.showPuzzleRushModal = false;\r\n        this.state.loadingPage = false;\r\n        this.state.filterTerm = 'None'\r\n        this.state.searchTerm = ''\r\n        this.state.findWindowHeight = 0;\r\n        this.state.numFindGames = window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? 8 : 20;\r\n         if (window.loggedin === 'Yes') {\r\n            this.state.LineDirections = window.userInfo.LineDirFlag === 'Y';\r\n         }\r\n         else {\r\n            this.state.LineDirections = true;\r\n         }\r\n    }\r\n\r\n    handleChatOpen = (event) => {\r\n        this.setState({\r\n            openChat: true,\r\n            chatAnchor: event.currentTarget\r\n        })\r\n    };\r\n\r\n    handleChatClose = () => {\r\n      this.setState({\r\n          openChat: false\r\n      })\r\n    };\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState( {\r\n            open: false\r\n        })\r\n    };\r\n\r\n    handleLineDirections = (boolean) => {\r\n        if (window.loggedin === 'Yes') {\r\n            axios.post('/settingsChange', {LineDirections: boolean ? 'Y' : 'N'})\r\n                .then( res => {\r\n                    console.log('changed');\r\n                });\r\n        }\r\n        this.setState({\r\n            LineDirections: boolean\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallenge = () => {\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeData')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    const dc_movesList = res.data.dc_movesList == null ? null : JSON.parse(res.data.dc_movesList)\r\n                    const dc_playerList = res.data.dc_playerList == null ? null : JSON.parse(res.data.dc_playerList)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                                        PageSelected: <DailyChallengePage\r\n                                                            handleClickDailyChallenge={this.handleClickDailyChallenge}\r\n                                                            dailyChallengeGameslist={JSON.parse(res.data.dailyChallengeGameslist)}\r\n                                                            dc_id={res.data.dc_id}\r\n                                                            dchighscores={JSON.parse(res.data.dchighscores)}\r\n                                                            handleLineDirections={this.handleLineDirections}\r\n                                                            LineDirections={this.state.LineDirections}\r\n                                                            savedMoves={dc_movesList}\r\n                                                            playerStateList={dc_playerList}\r\n                                        />,\r\n                                        open: isOpen,\r\n                                        loadingPage: false,\r\n                                    });\r\n                        }\r\n                    });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState( {\r\n            open: true\r\n        });\r\n    };\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type === 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    };\r\n\r\n    handleClickRandomGameModal = (game,difficulty) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showRandomGameModal: false,\r\n            PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} randomGame={'Yes'} game={game} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickRandomGame = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: true,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickPuzzleRush = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: true,\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallengeHistory = (event) => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeHistory')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    var historydata = JSON.parse(res.data)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                            PageSelected: <DailyChallengeHistory handleDailyPuzzleHistoryClick={this.handleDailyPuzzleHistoryClick} dailychallengehistory={historydata}/>,\r\n                            challengeHistoryData: historydata,\r\n                            dailychallengehistoryloaded: true,\r\n                            open: isOpen,\r\n                            loadingPage: false,\r\n                        });\r\n                    }\r\n            });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleDailyPuzzleHistoryClick = history => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <DailyChallengeHistoryAnswersPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} history={history}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty,games,p_id) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showPuzzleRushModal: false,\r\n            PageSelected: <PuzzleRushPage handleClickPlayAgain={this.handleClickPuzzleRush} handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: false\r\n        });\r\n    };\r\n\r\n    closeRandomGameLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: false\r\n        });\r\n    };\r\n\r\n    handleGameClick = (name, gamedata,highscores,uri) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} name={name} highscores={highscores} gamedata={gamedata} uri={uri}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <CreateGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} state={\"new\"}/>,\r\n             open: isOpen,\r\n             loadingPage: false,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickProfile = event => {\r\n        if (window.loggedin === 'Yes') {\r\n            this.state.loadingPage = true;\r\n                    axios.get('/getProfileData')\r\n                        .then( res => {\r\n                            var isOpen = this.state.open;\r\n                            if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                                isOpen = false\r\n                            }\r\n                            var profileData = res.data;\r\n                            var gamesview = JSON.parse(profileData.gamesview)\r\n                            var solutionsview = JSON.parse(profileData.solutionsview)\r\n                            var puzzlerushview = JSON.parse(profileData.puzzlerushview)\r\n                            if (this.state.loadingPage) {\r\n                                this.setState({\r\n                                    PageSelected: <ProfilePage handleClickPlayGame={this.handleGameClick} gamesview={gamesview} solutionsview={solutionsview} puzzlerushview={puzzlerushview}/>,\r\n                                    gamesview: gamesview,\r\n                                    solutionsview: solutionsview,\r\n                                    puzzlerushview: puzzlerushview,\r\n                                    profileDataloaded: true,\r\n                                    open: isOpen,\r\n                                    loadingPage: false,\r\n                                });\r\n                            }\r\n                        });\r\n                    this.setState({\r\n                        PageSelected: <LoadingPage/>,\r\n                    });\r\n                }\r\n        else {\r\n            this.SignInButtonPressed('Sign in');\r\n        }\r\n    };\r\n\r\n    setNumFindGames = (num,filterTerm,searchTerm) => {\r\n        this.setState({\r\n            numFindGames: num,\r\n            searchTerm: searchTerm,\r\n            filterTerm: filterTerm,\r\n        })\r\n    }\r\n\r\n    setFindWindow = height => {\r\n        this.setState({\r\n            findWindowHeight: height\r\n        })\r\n    }\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.post('/search', {search: this.state.searchTerm, filter: this.state.filterTerm, offset: 0, numGames: this.state.numFindGames})\r\n            .then( res => {\r\n                const gameslist = JSON.parse(res.data.gameslist);\r\n                const highscoreslist = JSON.parse(res.data.highscoreslist);\r\n                var isOpen = this.state.open;\r\n                if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                    isOpen = false\r\n                }\r\n                if (this.state.loadingPage) {\r\n                    this.setState({\r\n                        PageSelected: <FindGame findWindowHeight={this.state.findWindowHeight} setFindWindow={this.setFindWindow} setNumFindGames={this.setNumFindGames} gameslist={gameslist} highscoreslist={highscoreslist} handleGameClick={this.handleGameClick}/>,\r\n                        open: isOpen,\r\n                        loadingPage: false,\r\n                    });\r\n                }\r\n        });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleHomePageClick = () => {\r\n        this.setState({\r\n            PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickAboutUs = event => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <AboutUs/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickLearnGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <LessonsPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileAnchorEl: null,\r\n            mobileMenuOpen: false\r\n        });\r\n    };\r\n\r\n    showPage = () => {\r\n        return(\r\n            this.state.PageSelected\r\n        )\r\n    };\r\n\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({\r\n            mobileAnchorEl: event.currentTarget,\r\n            mobileMenuOpen: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const theme = createMuiTheme({\r\n            palette: {\r\n                primary: teal,\r\n                secondary: {\r\n                    main: '#e65100',\r\n                },\r\n            }\r\n        });\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <AppBar\r\n                        position=\"fixed\"\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: this.state.open,\r\n                        })}\r\n                     >\r\n                        <Toolbar className={classes.toolbar1}>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={this.handleDrawerOpen}\r\n                                edge=\"start\"\r\n                                className={clsx(classes.menuButton, this.state.open && classes.hide)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <img onClick={this.handleHomePageClick} width={50} height={50} src=\"/static/images/logo150.png\"/>\r\n                            <Typography variant=\"h6\" className={classes.title} noWrap>\r\n                                <a href=\"/\" style={{color: 'white'}}>RobotsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </Typography>\r\n                            <div className={classes.grow} />\r\n                            <div className={classes.sectionDesktop}>\r\n                                <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.sectionMobile}>\r\n                                <IconButton\r\n                                    aria-label=\"show more\"\r\n                                    aria-controls={\"primary-search-account-menu-mobile\"}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.handleMobileMenuOpen}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <MoreIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Menu\r\n                        anchorEl={this.state.mobileAnchorEl}\r\n                        anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        id={\"primary-search-account-menu-mobile\"}\r\n                        keepMounted\r\n                        transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        open={this.state.mobileMenuOpen}\r\n                        onClose={this.handleMobileMenuClose}\r\n                    >\r\n                        <MenuItem>\r\n                            <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                    <Drawer\r\n                        id=\"MainDrawer\"\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.state.open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div className={classes.drawerHeader}>\r\n                            <div className={classes.drawerHeaderLeft}>\r\n                                <SignInButton onClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.drawerHeaderRight}>\r\n                                <IconButton onClick={this.handleDrawerClose}>\r\n                                    {useTheme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Play\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Find a Game'} onClick={this.handleClickFindGame}>\r\n                                <ListItemIcon><SearchIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Find a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge'} onClick={this.handleClickDailyChallenge}>\r\n                                <ListItemIcon><TodayIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Create a Game'} onClick={this.handleClickCreateGame}>\r\n                                <ListItemIcon><BrushIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Create a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Random Game'} onClick={this.handleClickRandomGame}>\r\n                                <ListItemIcon><CasinoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Random Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Puzzle Rush'} onClick={this.handleClickPuzzleRush}>\r\n                                <ListItemIcon><TimerIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Puzzle Rush'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Learn\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Lessons'} onClick={this.handleClickLearnGame}>\r\n                                <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Lessons'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Community\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Profile'} onClick={this.handleClickProfile}>\r\n                                <ListItemIcon><AccountBoxIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Profile'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge History'} onClick={this.handleClickDailyChallengeHistory}>\r\n                                <ListItemIcon><FaMedal /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge History'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Tools\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'About'} onClick={this.handleClickAboutUs}>\r\n                                <ListItemIcon><InfoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'About'} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n                    <main className={clsx(classes.content, {\r\n                        [classes.contentShift]: this.state.open,\r\n                    })}>\r\n                        <div className={classes.drawerHeader} />\r\n                        {this.showPage()}\r\n                    </main>\r\n                    <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n                    <PuzzleRushDifficultyModal\r\n                        closeModal={this.closePuzzleRushLoginModal}\r\n                        show={this.state.showPuzzleRushModal}\r\n                        handleClickPuzzleRush={this.handleClickPuzzleRushModal}\r\n                    />\r\n                    <RandomGameDifficultyModal\r\n                        closeModal={this.closeRandomGameLoginModal}\r\n                        show={this.state.showRandomGameModal}\r\n                        handleClickRandomGame={this.handleClickRandomGameModal}\r\n                    />\r\n                </div>\r\n                <div style={{position: \"fixed\", bottom: \"10px\", right: \"10px\"}}>\r\n                    <IconButton\r\n                        style = {{backgroundColor: \"#14a76c\"}}\r\n                        onClick={this.handleChatOpen}\r\n                    >\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n                    <Popover\r\n                        open={this.state.openChat}\r\n                        anchorEl={this.state.chatAnchor}\r\n                        onClose={this.handleChatClose}\r\n                        anchorOrigin={{\r\n                            vertical: \"top\",\r\n                            horizontal: \"left\"\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"right\"\r\n                        }}\r\n                    >\r\n                        <iframe\r\n                            src=\"https://titanembeds.com/embed/740127738345554021?css=140&username=guest&defaultchannel=740270339900178583\"\r\n                            height= {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? (parseInt(window.innerHeight/2)) + '': \"600\"}\r\n                            width= {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? (window.innerWidth - 40) + '': \"400\"}\r\n                            frameBorder=\"0\"\r\n                        />\r\n                    </Popover>\r\n                </div>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}