{"version":3,"sources":["constants/constants.js","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/HighScores.jsx","containers/Game.js","serviceWorker.js","index.js"],"names":["DIRECTION_MAP_IMAGES","yellow","UP","DOWN","LEFT","RIGHT","red","green","blue","styleoutside","dimension","position","dim","width","height","backgroundColor","top","left","transition","styleinside","styleinside2","props","style","border","margin","overflow","float","marginRight","children","color","borderRadius","Robot","handleKeyDown","e","newDirection","keyCode","dir","handlePlayerMovement","handleClick","onClick","index","this","window","onkeydown","React","Component","orientation","src","highscores","marginBottom","clear","map","highscore","marginTop","comment","numMoves","highscorestyle","addEventListener","indexOf","preventDefault","extend","obj","key","hasOwnProperty","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","MAX_HEIGHT","MAX_WIDTH","Game","robotSelect","i","setState","robotSelected","submitPuzzle","event","namesubmit","document","getElementById","value","state","playerState","playerStart","slice","moveHistory","createMode","axios","post","puzzledata","name","then","res","console","log","data","uri","isCreateMode","onSubmit","type","id","placeholder","submitAnswer","length","resetPuzzle","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","wallHorizontal","wall","checkRobot","wallVerticle","checkwin","robotPosition","goal","colorSignifier","push","robot","token","boardSize","playerSize","boardState","randomPositions","randompos1","randompos2","randompos3","randompos4","j","JSON","parse","move","Board","square","Square","Goal","player","wallH","Wall","wallV","location","host","HighScores","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.bd965e15.chunk.js","sourcesContent":["export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const SQUARE_CORE_COLOR = '#ebd5c7';\r\nexport const SQUARE_INNER_COLOR = '#c2aea1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#59544f';\r\n\r\nexport const ROBOT_GREEN = '#15eb00';\r\nexport const ROBOT_BLUE = '#0015eb';\r\nexport const ROBOT_YELLOW = '#ebeb00';\r\nexport const ROBOT_RED = '#eb0000';\r\nexport const ROBOT_PURPLE = '#B600eb';\r\nexport const ROBOT_ORANGE = '#ffa533';\r\nexport const ROBOT_BROWN = '#736e3e';\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_up.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top + 'px',\r\n        left: position.left + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nexport default (props) =>\r\n    <div style={styleoutside(props)}>\r\n        <div style={styleinside(props)}>\r\n            <div style={styleinside2(props)}/>\r\n        </div>\r\n    </div>\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '25px auto',\r\n        overflow: 'hidden',\r\n        float: 'left',\r\n        marginRight: '30px',\r\n    };\r\n\r\n\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\nconst styleoutside = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top + 'px',\r\n        left: position.left + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position,color}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position,color}) => {\r\n    const dim = (dimension-4)-8 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: 4 + 'px',\r\n        left: 4 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            default:\r\n                return;\r\n\r\n\r\n        }\r\n        this.props.handlePlayerMovement(newDirection);\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onkeydown = this.handleKeyDown;\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position}) => {\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = '8px';\r\n    }\r\n    else {\r\n        var width = '8px';\r\n        var height = dimension + 'px'\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: position.top + 'px',\r\n        left: position.left + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nexport default (props) =>\r\n    <div style={style(props)}/>\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE} from '../constants/constants';\r\n\r\n\r\nconst style = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top + 'px',\r\n        left: position.left + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nexport default (props) =>\r\n    <img src={GOAL_IMAGE} style={style(props)}/>\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginBottom: '10px',\r\n        clear: 'left'\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n        <div style={styleelements()}>{'By: ' + highscore.comment}\r\n            <div>\r\n                {'Moves: ' + highscore.numMoves}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <div style={styleouter()}>{'All Highscores:'}\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </div>\r\n)","\r\nimport React from 'react';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport axios from 'axios';\r\nimport ControlPanel from './ControlPanel';\r\nimport HighScores from '../components/HighScores';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\nconst extend = (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(MAX_HEIGHT/40));\r\n        X = Math.floor(Math.random() * Math.floor(MAX_WIDTH/40));\r\n        dontPlacePositions.map(position => {\r\n            if (Y*40 == position.top && X*40 == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y*40,left: X*40};\r\n}\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nconst movespanel = () => {\r\n    return {\r\n        height: ''\r\n    };\r\n}\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n    };\r\n}\r\n\r\nconst inputname = () => {\r\n    return {\r\n        type: '',\r\n        id: 'namesubmit',\r\n        value: 'Name of Puzzle?',\r\n    };\r\n\r\n}\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(window.token);\r\n        if (window.token.uri == '') {\r\n            const {boardSize, playerSize } = props;\r\n            var boardState = [];\r\n            const width = MAX_WIDTH;\r\n            const height = MAX_HEIGHT;\r\n            var wallVerticle = [];\r\n            var wallHorizontal = [];\r\n            var playerState = [];\r\n            var goal = {top:Math.floor(Math.random() * Math.floor(MAX_HEIGHT/40))*40, left:Math.floor(Math.random() * Math.floor(MAX_HEIGHT/40))*40};\r\n            var randomPositions = [goal];\r\n            for (var i=0;i<5;i++) {\r\n                randomPositions.push(randomBoardPosition(randomPositions));\r\n            }\r\n            var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n            var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n            var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n            var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n            playerState.push(randompos1);\r\n            playerState.push(randompos2);\r\n            playerState.push(randompos3);\r\n            playerState.push(randompos4);\r\n            for (var i=0;i<width;i+=40) {\r\n                for (var j=0;j<height;j+=40) {\r\n                    boardState.push({top: j,left: i});\r\n                }\r\n            }\r\n\r\n            for (var i=0;i<width;i+=40) {\r\n                for (var j=0;j<height;j+=40) {\r\n                    if (Math.random() > .90) {\r\n                        wallVerticle.push({top: j,left: i-4});\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (var i=0;i<width;i+=40) {\r\n                for (var j=0;j<height;j+=40) {\r\n                    if (Math.random() > .90) {\r\n                        wallHorizontal.push({top: j-4,left: i});\r\n                    }\r\n                }\r\n            }\r\n            this.state = {\r\n                playerState: playerState,\r\n                boardSize: boardSize,\r\n                playerSize: playerSize,\r\n                boardState: boardState,\r\n                wallHorizontal: wallHorizontal,\r\n                wallVerticle: wallVerticle,\r\n                robotSelected: 0,\r\n                goal: goal,\r\n                moveHistory: [],\r\n                playerStart: playerState.slice(),\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                highscores: [],\r\n            };\r\n        }\r\n        else {\r\n            console.log(window.uri)\r\n            this.state = extend(JSON.parse(window.token.puzzledata),{createMode: 'No', uri: window.uri, highscores: window.highscores})\r\n        }\r\n    }\r\n\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    }\r\n\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit}))\r\n            .then( res => {\r\n                console.log(res);\r\n                console.log(res.data);\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                });\r\n                //window.location.href = window.location.host + '/play/' + res.data.uri;\r\n            });\r\n    }\r\n    isCreateMode = () => {\r\n        if (this.state.createMode == 'Yes') {\r\n            return (\r\n                <div>\r\n                    <form onSubmit={this.submitPuzzle} style={buttonpanel()}>\r\n                        <button type=\"submit\">Add Puzzle to Database</button>\r\n                    </form>\r\n                    <input style={buttonpanel()} id={\"namesubmit\"} type={\"text\"} placeholder={\"Name Of Puzzle?\"}>\r\n\r\n                    </input>\r\n                </div>\r\n                    )\r\n        }\r\n        else {\r\n            return\r\n        }\r\n\r\n    }\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        console.log(this.state.uri);\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length, name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                console.log(res);\r\n                console.log(res.data);\r\n            });\r\n    }\r\n\r\n    resetPuzzle = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n        });\r\n    }\r\n\r\n\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var robotX = this.state.playerState[robotSelected].left;\r\n                var robotY = this.state.playerState[robotSelected].top;\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left == robotX && wall.top < robotY && wall.top > minimumWall) {\r\n                        minimumWall = wall.top + 4;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left == robotX && checkRobot.top < robotY && checkRobot.top > minimumWall - 4) {\r\n                        minimumWall = checkRobot.top + 40;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var robotX = this.state.playerState[robotSelected].left;\r\n                var robotY = this.state.playerState[robotSelected].top;\r\n                var minimumWall = MAX_WIDTH - 40;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top == robotY && wall.left > robotX && wall.left < minimumWall) {\r\n                        minimumWall = wall.left - 36;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top == robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 36) {\r\n                        minimumWall = checkRobot.left - 40;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var robotX = this.state.playerState[robotSelected].left;\r\n                var robotY = this.state.playerState[robotSelected].top;\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top == robotY && wall.left < robotX && wall.left > minimumWall) {\r\n                        minimumWall = wall.left + 4;\r\n\r\n                    }\r\n\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top == robotY && checkRobot.left < robotX && checkRobot.left > minimumWall - 4) {\r\n                        minimumWall = checkRobot.left + 40;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var robotX = this.state.playerState[robotSelected].left;\r\n                var robotY = this.state.playerState[robotSelected].top;\r\n                var minimumWall = MAX_HEIGHT - 40;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left == robotX && wall.top > robotY && wall.top < minimumWall)\r\n                        minimumWall = wall.top - 36;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left == robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 36) {\r\n                        minimumWall = checkRobot.top - 40;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    }\r\n\r\n    checkwin = (robotPosition) => {\r\n        if (robotPosition.top == this.state.goal.top && robotPosition.left == this.state.goal.left) {\r\n\r\n            if (this.state.createMode == 'No') {\r\n                return  (   <div><div>You Win! with {this.state.moveHistory.length} Moves! </div>\r\n                        <input style={buttonpanel()} id={\"namesubmitHS\"} type={\"text\"} placeholder={\"Username\"}>\r\n\r\n                        </input>\r\n                        <form onSubmit={this.submitAnswer} style={buttonpanel()}>\r\n                            <button type=\"submit\">Submit Highscore </button>\r\n                        </form>\r\n                        </div>\r\n                    );\r\n            }\r\n            else {\r\n                return (\r\n                <div>\r\n                    <form onSubmit={this.submitPuzzle} style={buttonpanel()}>\r\n                        <button type=\"submit\">Add Puzzle to Database</button>\r\n                    </form>\r\n                    <input style={buttonpanel()} id={\"namesubmit\"} type={\"text\"} placeholder={\"Name Of Puzzle?\"}>\r\n\r\n                    </input>\r\n                </div>\r\n\r\n                );\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        var newPosition = this.handleCollision(dirObj,this.state.robotSelected,this.state.playerState[this.state.robotSelected].color);\r\n        var playerState = this.state.playerState;\r\n        var moveHistory = this.state.moveHistory;\r\n        newPosition = extend(newPosition,{colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n        if (!(newPosition.top == playerState[this.state.robotSelected].top && newPosition.left == playerState[this.state.robotSelected].left)) {\r\n            moveHistory.push({dir: dirObj.dir, robot: this.state.robotSelected, colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n        }\r\n        playerState[this.state.robotSelected] = newPosition;\r\n        this.setState({\r\n            playerState: playerState,\r\n            moveHistory: moveHistory,\r\n        });\r\n        this.checkwin(newPosition);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>Moves:\r\n            <div style={movespanel()}>\r\n                {\r\n                    this.state.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.state.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n            <Board width={MAX_WIDTH} height={MAX_HEIGHT}>\r\n                {\r\n                    this.state.boardState.map(square =>\r\n                        <Square dimension={40} position={{top:square.top,left: square.left}}/>\r\n                    )\r\n                }\r\n                <Goal dimension={40} position={this.state.goal}/>\r\n                {\r\n                    this.state.playerState.map((player, index) =>\r\n                        <Robot\r\n                            dimension={40}\r\n                            position={{top:player.top,left:player.left}}\r\n                            color={player.color}\r\n                            index={index}\r\n                            onClick={this.robotSelect}\r\n                            handlePlayerMovement={this.handlePlayerMovement}\r\n                        />\r\n                    )\r\n\r\n\r\n                }\r\n                {\r\n                    this.state.wallHorizontal.map(wallH =>\r\n                        <Wall orientation={'horizontal'} dimension={40} position={{top:wallH.top,left:wallH.left}}/>\r\n                    )\r\n                }\r\n                {\r\n                    this.state.wallVerticle.map(wallV =>\r\n                        <Wall orientation={'verticle'} dimension={40} position={{top:wallV.top,left:wallV.left}}/>\r\n                    )\r\n\r\n                }\r\n            </Board>\r\n            <div id={'controlPanel'} style={controlpanel()} >\r\n                    {<div>{window.location.host + '/play/' + this.state.uri}</div>}\r\n                    {\r\n                        this.state.playerState.map(position =>\r\n                            this.checkwin(position)\r\n                        )\r\n                    }\r\n                    <form onSubmit={this.resetPuzzle} style={buttonpanel()}>\r\n                        <button type=\"submit\">Reset</button>\r\n                    </form>\r\n            </div>\r\n            <HighScores highscores={this.state.highscores}/>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Game from './containers/Game';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<Game boardSize={640} playerSize={40}/>, document.getElementById('postscontainer'));\r\n//ReactDOM.render(<ChartZ type={'bar'}/>, document.getElementById('row2'));\r\n//ReactDOM.render(<ChartZ type={'line'}/>, document.getElementById('row3'));\r\n\r\n//ReactDOM.render(<Graph width={400} height={240}/>, document.getElementById('row3'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}