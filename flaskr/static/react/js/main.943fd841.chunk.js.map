{"version":3,"sources":["components/LearnGameItems.js","constants/constants.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinModal.jsx","components/YouWinDailySingleModal.js","components/YouWinDailyFinalModal.js","components/AddPuzzleModal.jsx","components/ToggleSettings.js","components/Timer.js","containers/DisplayView.js","components/HighScores.jsx","components/DailyChallengeScores.jsx","containers/Modals/PuzzleRushFinishedModal.js","containers/Modals/RandomGameStatsModal.jsx","components/CloseIconWithOnClick.jsx","components/DescriptionList.jsx","components/YouWinLessonModal.js","components/ShowDailyChallengeScoresCard.jsx","components/DailyChallengeHistoryData.js","components/boardgenerator.js","containers/Modals/BoardResetModal.js","containers/Game.js","Pages/CreateGame.js","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","Material-UI/themes.jsx","Pages/Home.js","containers/Modals/LoginModal.js","components/SignInButton.js","components/LoggedInUser.js","containers/Modals/PuzzleRushDifficultyModal.js","containers/Modals/RandomGameDifficultyModal.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","components/ProfilePageComponents/ProfilePageCreatedGamesDetails.js","components/ProfilePageComponents/ProfilePageSolutionDetails.js","Pages/ProfilePage.js","Pages/RandomGamePage.js","Pages/PuzzleRushPage.js","Pages/LessonsPage.js","Pages/DailyChallenge.js","Pages/AboutUs.js","components/ShowDailyPuzzleHistory.js","Pages/DailyChallengeHistory.js","Pages/DailyChallengeHistoryAnswersPage.js","components/LoadingPage.jsx","App.js","serviceWorker.js","index.js"],"names":["LearnGameItems","props","handleClick","handleClickGame","index","selected","Button","variant","color","aria-label","onClick","name","UP","GOAL_IMAGE","DIRECTION_MAP_IMAGES","yellow","DOWN","LEFT","RIGHT","red","green","blue","MovesView","style","width","float","display","this","moveHistory","length","map","move","src","playerState","robot","colorSignifier","dir","React","Component","styleoutside","dimension","position","dim","height","backgroundColor","top","left","styleinside","styleinside2","Square","border","margin","overflow","children","id","transition","styleoutsidedraggable","selectedColor","undefined","borderStyle","borderColor","borderRadius","Robot","onStopDragHandler","e","handleCreateMode","isCreateMode","buildMode","x","y","grid","draggableGrid","onStop","bounds","orientation","opacity","wallThickness","wallOffset","Wall","userSelect","styledragable","Goal","show","endPosition","obj","key","hasOwnProperty","YouWinModal","Dialog","disableAutoFocus","disableEnforceFocus","onClose","handleClose","container","document","getElementById","BackdropProps","aria-labelledby","open","maxWidth","DialogTitle","DialogContent","dividers","numMoves","TextField","label","defaultValue","username","DialogActions","submitAnswer","resetPuzzle","YouWinDailySingleModal","Typography","totalMoves","undoMove","moveNextPuzzle","YouWinDailyFinalModal","handleClickSubmitGame","value","setState","error","Alert","severity","newPlayerState","state","submitted","AddPuzzleModal","submitPuzzle","ToggleSettings","event","FormControlLabel","control","Switch","onChange","checked","showColoredLineDirections","Timer","minutes","seconds","timer","myInterval","setInterval","puzzleRushTimeUp","clearInterval","valuetext","DisplayView","createMode","fullWidth","handleCreateBoardClick","toggleBuildMode","createBoardPressed","copyToClipboard","dummy","createElement","body","appendChild","window","location","host","uri","select","execCommand","removeChild","copiedClipboard","thisThing","copyButtonText","setTimeout","handleDimensionChange","getElementsByClassName","blur","parseInt","toString","DimensionChanged","showPuzzleLink","isPuzzleRush","isLesson","isDailyChallengeAnswers","isDailyChallenge","paddingBottom","marginRight","marginTop","marginBottom","Divider","ButtonGroup","toggleLineIndicators","gutterBottom","Slider","onChangeCommitted","getAriaValueText","step","marks","min","max","squareSizeValue","valueLabelDisplay","highscores","Grid","item","xs","marginleft","highscore","Paper","elevation","spacing","comment","userid","created","highscorestyle","wins","i","crowns","push","CrownCounter","user_id","score","direction","PuzzleRushWinModal","closeModal","onBackdropClick","difficulty","md","List","dense","ListItem","ListItemText","primary","secondary","numPuzzlesCompleted","averageTime","averageMoves","differenceOptimal","movesPerSecond","handleClickPlayAgain","RandomGameStatsModal","showStatsModal","handleShowRandomAnswers","answers","lowestMoveSequence","lowestMoves","CloseIconWithOnClick","onMouseDown","Descriptionlist","tipsText","text","ListItemSecondaryAction","IconButton","edge","handleCloseToolTips","YouWinLessonModal","useStyles","makeStyles","root","bullet","transform","title","fontSize","pos","ShowDailyChallengeScoresCard","classes","Card","className","CardContent","component","bestScore","MovesforPuzzle","MoveSequence","DailyChallengeHistoryData","difficultyforPuzzle","lowestMovesforPuzzle","nameSubmitted","scoreSubmitted","playerMovedSequence","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","type","boardState","wallVerticle","wallHorizontal","goal","randompos1","randompos2","randompos3","randompos4","randomPositions","extend","j","gameWon","playerStart","slice","BoardResetModal","createBoardHandler","preventDefault","percent","createBoard","textAlign","paddingRight","Input","inputProps","placeholder","addEventListener","keyCode","target","indexOf","formatGeneratedMoveSequence","moves","images","charAt","setDefaultSquareSize","boardWidth","boardHeight","drawerWidth","getComputedStyle","windowWidth","innerWidth","settingstop","innerHeight","settings","squarevalue","ColoredLineDirections","Game","updateHighscores","axios","get","then","res","highscoresdata","JSON","parse","data","FindhighscoreIsDiff","squareSize","copiedToClipboard","check","tocheck","toreturn","DChighscoreIsDiff","updateDailyHighscores","dc_id","dchighscores","handleClickDailyChallenge","componentDidMount","onkeydown","handleKeyDown","loadedGame","IntervalId","dailyChallengeMode","componentWillUnmount","newDirection","tabSelector","handleUndoMove","handlePlayerMovement","robotSelect","robotSelected","namesubmit","themoveHistory","userInfo","console","log","post","puzzledata","authorname","history","handleLineDirections","solutiondata","dailySubmittedSucessfully","showBoardResetPanelModal","closeRandomStatsModal","closeCreateBoardModal","closePuzzleRushFinishedModal","showPuzzleRushFinishedModal","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","nextLessonPuzzle","puzzle","numPuzzleon","handleLearnClickGame","totalMovesDiff","solutiondifference","totalMovesList","avgMoves","p_id","differenceFrom","percentile","submitDailyAnswer","LastRobotPosition","moveHistoryList","playerStateList","dc_movesList","dc_playerList","checkwin","Won","player","puzzleRush","randomGame","dailyChallengeModeAnswers","gamesWonDaily","games","handleDailyClickGame","learnMode","g_id","solutionmoves","g_moves","g_puzzledata","newarray","concat","oldPositon","prevPosition","splice","description","handleDailyClickAnswersGame","g_solutiondata","g_difficulty","solutionDataSubmitted","loadSidebar","game","paddingTop","DailyChallengeScores","HighScores","handlePlayerMovementFromMouse","moveObj","pop","createModeWallClick","indexToChange","newWallHorizontal","wallH","newWallVerticle","wallV","onStopDragHandlerGoal","round","lastY","lastX","goals","gamedata","savedMoves","g_uri","pushState","settingsWidth","settingsHeight","percentWall","settingsPercent","LineDirections","paddingLeft","alignItems","sm","numPuzzleRush","zeroMinWidth","Board","square","ColoredLineDirection","ColoredLine","puzzleRushPercentileCompleted","withRouter","CreateGame","withStyles","theme","minWidth","background","padding","upperPadding","upperPaddingButton","bottom","lowerPadding","rightSideText","leftSideText","numberOfHighScores","trimName","separated","split","word","substring","trimNameShort","justifyContent","Tooltip","plays","handleGameClick","disableGutters","FindGame","handleFilterMenuOpen","anchorEl","currentTarget","keycode","handleSearchSubmit","handleCloseFilterMenuMostPlayed","searchTerm","searchRef","search","filter","offset","highscoreslist","gameslist","handleCloseFilterMenuHighest","align","InputBase","input","inputRef","ref","onKeyPress","iconButton","divider","startIcon","Menu","keepMounted","Boolean","handleCloseFilterMenu","MenuItem","FindGameElements","marginLeft","flex","PlayGame","flexGrow","homepage","griditems","paper","Width","image","img","maxHeight","baseExpansion","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","darkmode","iconcards","marginBotton","iconcardsDaily","titlehome","fontFamily","titledailyroto","iconfonts","createboardcard","content","demo","centeredProfile","expandedPanelDCH","table","ComplexGrid","justify","paragraph","CardActionArea","handleClickCreateGame","CardMedia","alt","handleClickFindGame","handleClickRandomGame","handleClickLearnGame","handleClickPuzzleRush","dividerFullWidth","LoginModal","loginGoogle","href","loginFacebook","closeLoginModal","class","SignInButton","loggedin","textToShow","LoggedInUser","SignInButtonPressed","profilePicture","PuzzleRushDifficultyModal","handleClickPuzzleRushModal","action","isLoading","handleClickEasyPuzzleRush","handleClickMediumPuzzleRush","handleClickHardPuzzleRush","handleClickExHardPuzzleRush","handleChange","wrap","CircularProgress","FormControl","FormLabel","RadioGroup","Radio","handleClickRandomGameModal","handleClickEasy","handleClickMedium","handleClickHard","handleClickExHard","handleClickGodMode","ProfilePageCreatedGamesDetails","handleClickPlayGame","ProfilePageSolutionDetails","solution","WinnerCreated","WinnerUsername","ProfilePage","createData","col1","col2","columns","rows","puzzlerushview","maxeasyc","maxeasyp","maxmediumc","maxmediump","maxhardc","maxhardp","maxexhardc","maxexhardp","rowseff","maxeffec","maxeffep","maxeffmc","maxeffmp","maxeffhc","maxeffhp","maxeffexc","maxeffexp","useState","setError","expandedGame","setExpandedGame","expandedHighscores","setExpandedHighscores","newuser","gamesview","ExpansionPanel","expanded","panel","isExpandedGame","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","solutionsview","isExpandedHighScores","WinnerUserId","userID","TableContainer","Table","size","TableHead","TableRow","column","TableCell","TableBody","row","RandomGamePage","PuzzleRushPage","LessonsPage","learngameslist","DailyChallengePage","dailyChallengeGameslist","AboutUs","CardActions","Avatar","ShowDailyPuzzleHistory","handleDailyPuzzleHistoryClick","DailyChallengeHistory","expandedPanel","setExpandedPanel","dailychallengehistory","isExpanded","DailyChallengeHistoryAnswersPage","LoadingPage","App","handleDrawerClose","boolean","loadingPage","isOpen","PageSelected","DailyChallenge","handleDrawerOpen","showLoginModal","showRandomGameModal","showPuzzleRushModal","handleClickDailyChallengeHistory","historydata","challengeHistoryData","dailychallengehistoryloaded","closePuzzleRushLoginModal","closeRandomGameLoginModal","handleClickProfile","profileData","profileDataloaded","handleHomePageClick","handleClickAboutUs","handleMobileMenuClose","mobileAnchorEl","mobileMenuOpen","showPage","handleMobileMenuOpen","token","linedir","LineDirFlag","createMuiTheme","teal","main","AppBar","clsx","appBar","appBarShift","Toolbar","toolbar1","menuButton","hide","noWrap","grow","sectionDesktop","sectionMobile","aria-haspopup","anchorOrigin","vertical","horizontal","transformOrigin","Drawer","drawer","anchor","drawerPaper","drawerHeader","drawerHeaderLeft","drawerHeaderRight","useTheme","button","ListItemIcon","contentShift","RandomGameDifficultyModal","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","mixins","toolbar","breakpoints","up","toggleBorder","gradient","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"js/main.943fd841.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function LearnGameItems(props) {\r\n    const handleClick = () => {\r\n        props.handleClickGame(props.index)\r\n    }\r\n    if (props.selected === props.index) {\r\n        return (\r\n            <Button\r\n                variant=\"contained\" color=\"primary\"\r\n                aria-label=\"vertical outlined primary button group\"\r\n                onClick={handleClick}\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={handleClick}\r\n                aria-label=\"vertical outlined primary button group\"\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n}","export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const MOBILE_INNER_SCREEN_WIDTH = '960';\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div id=\"MainGameBoard\" style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleoutsidedraggable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var selectedColor = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        selectedColor = SELECTED_ROBOT;\r\n        borderStyle = \"solid\";\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        borderStyle: borderStyle,\r\n        borderColor: selectedColor,\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    onStopDragHandler = (e, position) => {\r\n        this.props.onStopDragHandler(position,this.props.index);\r\n    }\r\n\r\n\r\n    handleCreateMode = () => {\r\n        if (this.props.isCreateMode === 'Yes' && this.props.buildMode) {\r\n            return (\r\n            <Draggable position={{x: this.props.position.left * this.props.dimension, y:this.props.position.top*this.props.dimension}} grid={this.props.draggableGrid} onStop={this.onStopDragHandler} bounds=\"parent\">\r\n                <div onClick={this.handleClick} style={styleoutsidedraggable(this.props)}>\r\n                    <div style={styleinside(this.props)}>\r\n                        <div style={styleinside2(this.props)}/>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            this.handleCreateMode()\r\n        );\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.isCreateMode === 'Yes'  && props.buildMode) {\r\n        const onStopDragHandler = (e, position) => {\r\n            props.onStopDragHandler(position);\r\n        }\r\n        return(\r\n        <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n            <img src={GOAL_IMAGE} style={styledragable(props)}/>\r\n        </Draggable>\r\n        )\r\n    }\r\n    else {\r\n        return(<img src={GOAL_IMAGE} style={style(props)}/>)\r\n    }\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({buildMode,show,dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension + dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension + dimension;\r\n            left = position.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        opacity: show ? '0.5' : '0.0',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default (props) => {\r\n    const handleClick = () => {\r\n        props.handleClick(props.dir)\r\n    }\r\n    if (props.buildMode === 'undefined' || !props.buildMode)\r\n    {\r\n        return (\r\n            <div onClick={handleClick} style={style(props)}/>\r\n        );\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LearnGameItems from '../components/LearnGameItems';\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailySingleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Completed!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <Typography variant=\"body1\">\r\n                        You used {this.props.numMoves} Moves, for this puzzle.\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Total Moves: {this.props.totalMoves}\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Finish all puzzles to get submit your score!\r\n                    </Typography>\r\n                    <br/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailySingleModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailyFinalModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null\r\n        }\r\n    }\r\n\r\n    handleClickSubmitGame = () => {\r\n        if (document.getElementById(\"namesubmitHS\").value == '') {\r\n            this.setState({\r\n                error: <Alert severity=\"error\">You must choose a submit name</Alert>\r\n            })\r\n        }\r\n        else {\r\n            this.props.submitAnswer(this.props.newPlayerState);\r\n            this.setState({\r\n                error: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Completed the Challenge!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                    {this.state.error}\r\n                    {this.props.submitted}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickSubmitGame}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailyFinalModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Submit Puzzle</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField id={\"namesubmit\"} label={\"Name of Puzzle\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleModal;\r\n","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Path Indicators\"\r\n                    checked={this.props.showColoredLineDirections}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n\r\n    state = {\r\n            minutes: 5,\r\n            seconds: 0,\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.puzzleRushTimeUp();\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    timer = () => {\r\n        if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n            return (<h2>Time is up!</h2>)\r\n        }\r\n        else {\r\n            return(\r\n                <h2>Time Remaining: {this.state.minutes}:{this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds}</h2>)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            this.timer()\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ToggleSettings from \"../components/ToggleSettings\";\r\nimport Timer from \"../components/Timer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                        copyButtonText: \"Copy Puzzle Link\"\r\n                     };\r\n        this.state.uri = this.props.isDailyChallenge === 'Yes' ? 'dailychallenge' : this.props.uri;\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <div>\r\n                    <Button color=\"secondary\" variant={\"outlined\"} fullWidth={true} onClick={this.handleCreateBoardClick}>Modify Board</Button>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Switch color=\"primary\" checked={this.props.buildMode} onChange={this.props.toggleBuildMode}/>}\r\n                        label=\"Build Mode\"\r\n                            />\r\n                </div>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.state.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        document.getElementsByClassName(\"MuiSlider-thumb\")[0].blur();\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n    showPuzzleLink = () => {\r\n        if (this.props.createMode === 'Yes' || this.props.isPuzzleRush === 'Yes' || this.props.isLesson === 'Yes' || this.props.isDailyChallengeAnswers === 'Yes' || this.props.isDailyChallenge === 'Yes') {\r\n            return null;\r\n        }\r\n        else {\r\n                return(\r\n                     <div style={{paddingBottom: '10px'}}>\r\n                         <Button fullWidth={true} variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                                 onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                     </div>\r\n                    )\r\n        }\r\n    }\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                {this.showPuzzleLink()}\r\n                 <Divider />\r\n                 <Typography\r\n                     color=\"textSecondary\"\r\n                     display=\"block\"\r\n                     variant=\"caption\"\r\n                     style={{paddingBottom: '10px'}}\r\n                 >\r\n                     Board Actions\r\n                 </Typography>\r\n                 <ButtonGroup fullWidth={true} color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     <Button onClick={this.props.undoMove}>Undo</Button>\r\n                 </ButtonGroup>\r\n                 {this.isCreateMode(this.props.createMode)}\r\n                 <Divider />\r\n                 <ToggleSettings showColoredLineDirections={this.props.showColoredLineDirections} onClick={this.props.toggleLineIndicators}/>\r\n                 <div style={buttonPanel()}>\r\n                     <Typography id=\"discrete-slider-small-steps\"\r\n                                 color=\"textSecondary\"\r\n                                 display=\"inline\"\r\n                                 gutterBottom>\r\n                         Size Of Board\r\n                     </Typography>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={this.props.squareSizeValue}\r\n                         valueLabelDisplay=\"auto\"\r\n                         id=\"sliderelement\"\r\n                     />\r\n                 </div>\r\n                 <Divider/>\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n}\r\n\r\nconst paperstyle = () => {\r\n    return {\r\n        marginBottom: '15px'\r\n    }\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n                <Paper style={paperstyle()}elevation={3}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={9}>\r\n                            <Typography color={'primary'} style={{float: 'left'}}>\r\n                                {highscore.comment}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                                {highscore.userid != 1 ? <GoVerified/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'textSecondary'}>{highscore.numMoves}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.created}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Paper>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid item xs={12} style={styleouter()}>\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginTop: '30px',\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst CrownCounter = highscore => {\r\n    var crowns = []\r\n    var i;\r\n    for (i=0; i<highscore.wins;i++) {\r\n        crowns.push(<FaCrown/>);\r\n    }\r\n    return (\r\n        <div>\r\n            {crowns}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (<Grid item xs={12}>\r\n                <Paper elevation={3}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={9}>\r\n                            <Typography color={'primary'} style={{float: 'left'}}>\r\n                                {highscore.name}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                                {highscore.wins == 0 || highscore.wins == null ? null : CrownCounter(highscore) }\r\n                                {highscore.user_id != 1 ? <GoVerified/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'textSecondary'}>{highscore.score}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.submitted}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Paper>\r\n            </Grid>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid style={styleouter()} container direction={'column'} spacing={1}>\r\n        {\r\n                highscores.map(highscore =>\r\n                    highscorestyle(highscore)\r\n                )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nclass PuzzleRushWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Puzzle Rush - {this.props.difficulty}</DialogTitle>\r\n                <DialogContent dividers>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"h6\">\r\n                            Statistics\r\n                          </Typography>\r\n                          <div>\r\n                            <List dense={true}>\r\n\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Number of Puzzles Completed\"\r\n                                    secondary={this.props.numPuzzlesCompleted}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average time Per Puzzle\"\r\n                                    secondary={this.props.averageTime}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average Moves per Puzzle\"\r\n                                    secondary={this.props.averageMoves}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Efficiency Score: puzzles * 7 - redundant moves from best\"\r\n                                    secondary={(this.props.numPuzzlesCompleted * 7) - this.props.differenceOptimal}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Moves Per Second\"\r\n                                    secondary={this.props.movesPerSecond}\r\n                                  />\r\n                                </ListItem>\r\n                            </List>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.handleClickPlayAgain}>Play Again!</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushWinModal;\r\n\r\n","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../../constants/constants';\r\n\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass RandomGameStatsModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answers: null,\r\n        }\r\n    }\r\n\r\n    showStatsModal = () => {\r\n        this.props.handleShowRandomAnswers()\r\n        this.setState({\r\n            answers: this.props.lowestMoveSequence\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-random\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        lowest possible moves: {this.props.lowestMoves}\r\n                    </div>\r\n                    {this.state.answers}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.showStatsModal}>Show Puzzle Answers</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomGameStatsModal;","import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nexport default function CloseIconWithOnClick(props) {\r\n    const handleClose = () => {\r\n        props.handleClose(props.index);\r\n    }\r\n    return (<CloseIcon onMouseDown={handleClose}/>\r\n    )\r\n}","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport CloseIconWithOnClick from './CloseIconWithOnClick'\r\n\r\nexport default function Descriptionlist(props) {\r\n    return(\r\n            <List>\r\n              {\r\n                  props.tipsText.map((text,index) =>\r\n                    <ListItem>\r\n                      <div>\r\n                        {text}\r\n                      </div>\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                          <CloseIconWithOnClick index={index} handleClose={props.handleCloseToolTips}/>\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  )\r\n              }\r\n            </List>\r\n    )\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinLessonModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <Typography> You completed the Lesson! Move on to the next one!\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinLessonModal;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: '0 10px'\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 25,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function ShowDailyChallengeScoresCard(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {props.name}\r\n        </Typography>\r\n        <Typography style={{marginBottom: '30px'}} variant=\"h5\" component=\"h2\">\r\n          {props.bestScore}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.MovesforPuzzle}\r\n          <br/>\r\n          {props.MoveSequence}\r\n          <br />\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport MovesView from '../components/MovesView';\r\nimport ShowDailyChallengeScoreCard from '../components/ShowDailyChallengeScoresCard'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst stylebelow = () => {\r\n    return {\r\n        marginTop: '40px',\r\n        marginBottom: '20px'\r\n    }\r\n}\r\n\r\nclass DailyChallengeHistoryData extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography style={stylebelow()} variant=\"h4\"> {this.props.difficultyforPuzzle} </Typography>\r\n                <ShowDailyChallengeScoreCard\r\n                    name={\"Robot God\"}\r\n                    bestScore={this.props.bestScore}\r\n                    MovesforPuzzle={this.props.lowestMovesforPuzzle}\r\n                    MoveSequence={this.props.lowestMoveSequence}\r\n                />\r\n                <ShowDailyChallengeScoreCard\r\n                    name={this.props.nameSubmitted}\r\n                    bestScore={this.props.scoreSubmitted}\r\n                    MovesforPuzzle={null}\r\n                    MoveSequence={<MovesView\r\n                                        moveHistory={this.props.playerMovedSequence} playerState={[{colorSignifier: \"blue\"},{colorSignifier: \"green\"},{colorSignifier: \"red\"},{colorSignifier: \"yellow\"}]}\r\n                                  />}\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyChallengeHistoryData;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent,type) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    if (type === 'blank') {\r\n        var goal = {top: height-1, left: width-1};\r\n        var randompos1 = {top: 0,left: 0, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n        var randompos2 = {top: 0,left: 1, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n        var randompos3 = {top: 1,left: 0, color: ROBOT_RED, colorSignifier: 'red'};\r\n        var randompos4 = {top: 1,left: 1, color: ROBOT_YELLOW, colorSignifier:'yellow'};\r\n    }\r\n    else {\r\n        var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n        var randomPositions = [goal];\r\n        for (var i=0;i<5;i++) {\r\n            randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n        }\r\n        var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n        var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n        var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n        var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    }\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {withRouter} from 'react-router';\r\nimport Draggable from 'react-draggable';\r\nimport LearnGameItems from '../components/LearnGameItems';\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport YouWinDailySingleModal from '../components/YouWinDailySingleModal';\r\nimport YouWinDailyFinalModal from '../components/YouWinDailyFinalModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport PuzzleRushWinModal from '../containers/Modals/PuzzleRushFinishedModal';\r\nimport RandomGameStatsModal from '../containers/Modals/RandomGameStatsModal';\r\nimport DescriptionList from '../components/DescriptionList';\r\nimport YouWinLessonModal from '../components/YouWinLessonModal';\r\nimport DailyChallengeHistoryData from '../components/DailyChallengeHistoryData';\r\nimport Timer from \"../components/Timer\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR,\r\n    MOBILE_INNER_SCREEN_WIDTH\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if(e.keyCode == 32 && e.target == document.body) {\r\n    e.preventDefault();\r\n  }\r\n    if([37, 38, 39, 40, 9,13].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n    }\r\n}\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\nconst formatGeneratedMoveSequence = (moves) => {\r\n    var images = []\r\n    moves.map(move => {\r\n        var color = move.charAt(0);\r\n        var direction = move.charAt(1);\r\n        if (color == 'B') {\r\n            color = 'blue'\r\n        }\r\n        else if (color == 'R') {\r\n            color = 'red'\r\n        }\r\n        else if (color == 'Y') {\r\n            color = 'yellow'\r\n        }\r\n        else {\r\n            color = 'green'\r\n        }\r\n        if (direction == 'N') {\r\n            direction = UP\r\n        }\r\n        else if (direction == 'S') {\r\n            direction = DOWN\r\n        }\r\n        else if (direction == 'E') {\r\n            direction = RIGHT\r\n        }\r\n        else {\r\n            direction = LEFT\r\n        }\r\n        images.push(<img src={DIRECTION_MAP_IMAGES[color][direction]}/>)\r\n    });\r\n    return images\r\n}\r\n\r\n\r\nconst setDefaultSquareSize = (boardWidth,boardHeight) => {\r\n    const drawerWidth = document.getElementById(\"MainDrawer\") == null ? 140 : parseInt(getComputedStyle(document.getElementById(\"MainDrawer\")).width);\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n    var settingstop = windowHeight - 120;\r\n\r\n    settingstop = settingstop / boardHeight\r\n    settingstop = parseInt(settingstop);\r\n    settingstop = settingstop - (settingstop % 4)\r\n\r\n    var settings = ((windowWidth < MOBILE_INNER_SCREEN_WIDTH) ? windowWidth - 20 : (windowWidth - drawerWidth) / 1.75);\r\n    settings = settings / boardWidth;\r\n    settings = parseInt(settings);\r\n    settings = settings - (settings % 4);\r\n    var squarevalue = settings > settingstop ? settingstop : settings\r\n    if (squarevalue < 16) {\r\n        squarevalue = 16;\r\n    }\r\n    else if (squarevalue > 52) {\r\n        squarevalue = 52;\r\n    }\r\n    return squarevalue;\r\n};\r\n\r\nconst ColoredLineDirections = [LEFT,RIGHT,UP,DOWN]\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.puzzleRush === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.p_id = this.props.p_id;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = []\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            this.state.moveHistoryList=[];\r\n\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[0].g_solutiondata))\r\n            this.state.lowestMovesforPuzzle = this.props.games[0].g_moves\r\n            this.state.difficultyforPuzzle = this.props.games[0].g_difficulty\r\n            this.state.playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[0]\r\n\r\n            this.state.playerStateList = [];\r\n            this.state.tipsText = [];\r\n            this.state.highscores = [];\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            if (this.props.savedMoves != null) {\r\n                this.state.moveHistoryList = this.props.savedMoves\r\n                this.state.gamesWonDaily = [true,true,true,true]\r\n                this.state.moveHistory = this.props.savedMoves[0].slice()\r\n                this.state.playerState = this.props.playerStateList[0].slice()\r\n            }\r\n            else {\r\n                this.state.moveHistoryList=[];\r\n            }\r\n            this.state.playerStateList = this.props.playerStateList != null ? this.props.playerStateList : [];\r\n            this.state.tipsText = ['Winners who are Logged in will receive a Crown','See about page for details on the daily challenge difficulty','Puzzles reset at 3PM EST, the page will refresh automatically'];\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.dc_id = this.props.dc_id;\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.game.g_puzzledata)\r\n            this.state.lowestMoves = this.props.game.g_moves\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.game.g_solutiondata))\r\n            this.state.difficulty = this.props.game.g_difficulty\r\n            this.state.createMode = 'No';\r\n            this.state.gameWon = false;\r\n            this.state.buildMode = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = ['this game was randomly generated'];\r\n            this.state.uri = this.props.game.g_uri;\r\n            window.history.pushState({id: 'Random Game'},'RobotsEvolved | Random Game','/play/' + this.props.game.g_uri)\r\n        }\r\n        else if (this.props.learnMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [this.props.games[0].description];\r\n        }\r\n        else if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.buildMode = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = []\r\n            window.history.pushState({id: 'Play Game'},'RobotsEvolved | Play Game','/play/'+ this.props.uri)\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,1,'blank');\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                buildMode: true,\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false,\r\n                tipsText: [\r\n                                        'Click on Wall spots to toggle',\r\n                                        'Click and Drag robots or goal to move robots',\r\n                                        'When you are ready, toggle build mode in order to solve the puzzle',\r\n                                        'You must solve the puzzle in order to submit.']\r\n            },board);\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n        }\r\n        this.state.showColoredLineDirections = this.props.LineDirections;\r\n    };\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                const highscoresdata = JSON.parse(res.data.highscores)\r\n                if (this.FindhighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    FindhighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.numMoves != check[index].numMoves) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n\r\n    DChighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.score != check[index].score) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n    updateDailyHighscores = () => {\r\n        axios.get('/dailychallengehighscores?dc_id=' + this.state.dc_id)\r\n            .then( res => {\r\n                if (res.data.dc_id != this.state.dc_id) {\r\n                    this.props.handleClickDailyChallenge();\r\n                    return\r\n                }\r\n                const highscoresdata = JSON.parse(res.data.highscores)//PoorMan's global redux implementation\r\n                if (this.DChighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                    window.dchighscores = JSON.parse(res.data.highscores)\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.updateHighscores();\r\n            var IntervalId = setInterval(this.updateHighscores, 8000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.updateDailyHighscores();\r\n            var IntervalId = setInterval(this.updateDailyHighscores, 6000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.tabSelector();\r\n                return;\r\n                break;\r\n            case 81:\r\n                if (!this.state.gameWon) {\r\n                    this.handleUndoMove();\r\n                }\r\n                break;\r\n                return;\r\n            case 87:\r\n                if (!this.state.gameWon) {\r\n                    this.resetPuzzle();\r\n                }\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n        }\r\n        this.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        var themoveHistory = this.state.moveHistory.slice()\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.userInfo !== null) {\r\n            username = window.userInfo.username\r\n        }\r\n        console.log(state);\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username,moveHistory: themoveHistory}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.showColoredLineDirections === true) {\r\n            this.setState({\r\n                showColoredLineDirections: false,\r\n            });\r\n            this.props.handleLineDirections(false)\r\n        }\r\n        else {\r\n            this.setState({\r\n                showColoredLineDirections: true,\r\n            });\r\n            this.props.handleLineDirections(true)\r\n        }\r\n    };\r\n\r\n    toggleBuildMode = () => {\r\n        if (this.state.buildMode) {\r\n            this.setState({\r\n                buildMode: false,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n                buildMode: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length,solutiondata: this.state.moveHistory,name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            dailySubmittedSucessfully: null\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeRandomStatsModal = event => {\r\n        this.setState({\r\n            closeRandomStatsModal: false,\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    }\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushFinishedModal = event => {\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: false\r\n        });\r\n\r\n    }\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent, 'blank');\r\n        var squareSize = setDefaultSquareSize(width,height);\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n            squareSize: squareSize,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n    showStatsModal = () => {\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            showStatsModal: true,\r\n        });\r\n    }\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n    nextLessonPuzzle  = () => {\r\n        var puzzle = this.state.numPuzzleon;\r\n        puzzle += 1;\r\n        puzzle = puzzle == 4 ? 5 : puzzle;\r\n        puzzle = puzzle == 7 ? 8 : puzzle;\r\n        this.handleLearnClickGame(puzzle % 12);\r\n    }\r\n\r\n    puzzleRushTimeUp = () => {\r\n        var totalMovesDiff = 0;\r\n        this.state.solutiondifference.map(numMoves => {\r\n            totalMovesDiff += numMoves;\r\n        });\r\n        var averageTime = parseInt(300 / (this.state.numPuzzleon))\r\n        var totalMoves = 0;\r\n        this.state.totalMovesList.map(numMoves => {\r\n            totalMoves += numMoves\r\n        });\r\n        var avgMoves = parseInt(totalMoves / (this.state.numPuzzleon))\r\n        var movesPerSecond = totalMoves / 300;\r\n\r\n        axios.post('/puzzlerushend', {p_id: this.state.p_id,totalMoves: totalMoves,differenceFrom: totalMovesDiff})\r\n            .then( res => {\r\n                console.log(res.data);\r\n            });\r\n\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: true,\r\n            numPuzzlesCompleted: this.state.numPuzzleon,\r\n            percentile: 'TBD%',\r\n            averageTime: averageTime + 's',\r\n            averageMoves: avgMoves,\r\n            differenceOptimal: totalMovesDiff,\r\n            movesPerSecond: movesPerSecond\r\n        });\r\n    }\r\n\r\n    submitDailyAnswer = (LastRobotPosition) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            numMoves += moveHistory.length\r\n        });\r\n        var playerStateList = this.state.playerStateList.slice()\r\n        playerStateList[this.state.numPuzzleon] = LastRobotPosition.slice()\r\n        console.log(playerStateList);\r\n        axios.post('/dailychallenge', {score: numMoves, name: document.getElementById(\"namesubmitHS\").value, solutiondata: moveHistoryList, dc_id: this.state.dc_id, playerStateList: playerStateList})\r\n            .then( res => {\r\n                this.setState({\r\n                    dailySubmittedSucessfully: <Alert severity=\"success\">Submitted!</Alert>\r\n                });\r\n            });\r\n        window.dc_movesList = moveHistoryList;\r\n        window.dc_playerList = playerStateList;\r\n        this.state.gameWon = false;\r\n    }\r\n\r\n    checkwin = (newPlayerState) => {\r\n        var Won = false;\r\n        newPlayerState.map((player) => {\r\n            if (player.top === this.state.goal.top && player.left === this.state.goal.left) {\r\n                Won = true;\r\n            }\r\n        });\r\n        if (Won) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No' && this.props.puzzleRush !== 'Yes') {\r\n                var username = '';\r\n                if (window.userInfo !== null) {\r\n                    username = window.userInfo.username\r\n                }\r\n                if (this.props.randomGame === 'Yes') {\r\n                    return (\r\n                        <RandomGameStatsModal\r\n                            show={this.state.gameWon}\r\n                            lowestMoves={this.state.lowestMoves}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            numMoves={this.state.moveHistory.length}\r\n                            difficulty={this.state.difficulty}\r\n                            resetPuzzle={this.resetPuzzle}\r\n                            handleShowRandomAnswers={this.handleShowRandomAnswers}\r\n                        />\r\n                    );\r\n                }\r\n                else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n                    return null\r\n                }\r\n                else if (this.props.dailyChallengeMode === 'Yes') {\r\n                    var Won=true\r\n                    this.state.gamesWonDaily.map((gameWon,index) => {\r\n                        if (!(index == this.state.numPuzzleon) && !gameWon) {\r\n                            Won = false\r\n                        }\r\n                    });\r\n                    var moveHistoryList = this.state.moveHistoryList\r\n                    moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory\r\n                    var numMoves = 0\r\n                    moveHistoryList.map(moveHistory => {\r\n                        numMoves += moveHistory.length\r\n                    });\r\n                    return (Won ? <YouWinDailyFinalModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={numMoves}\r\n                        submitAnswer={this.submitDailyAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                        undoMove={this.handleUndoMove}\r\n                        newPlayerState={newPlayerState}\r\n                        submitted={this.state.dailySubmittedSucessfully}\r\n                    /> : <YouWinDailySingleModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        totalMoves={numMoves}\r\n                        undoMove={this.handleUndoMove}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        games={this.state.games}\r\n                        handleClickGame={this.handleDailyClickGame}\r\n                        numPuzzleon={this.state.numPuzzleon}\r\n                        moveNextPuzzle={this.moveNextPuzzle}\r\n                    />);\r\n                }\r\n                else if (this.props.learnMode === 'Yes') {\r\n                    return  (<YouWinLessonModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        moveNextPuzzle={this.nextLessonPuzzle}\r\n                    />);\r\n                }\r\n                else {\r\n                    return  (<YouWinModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        submitAnswer={this.submitAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                    />);\r\n                }\r\n            }\r\n            else if (this.props.puzzleRush === 'Yes'){\r\n                axios.post('/puzzlerushsubmit', {p_id: this.state.p_id,g_id:this.state.games[this.state.numPuzzleon].g_id, moveHistory: this.state.moveHistory})\r\n                    .then( res => {\r\n                        console.log(res.data);\r\n                    });\r\n                var totalMoves = this.state.moveHistory.slice().length\r\n                var totalMovesList = this.state.totalMovesList\r\n                totalMovesList.push(totalMoves)\r\n                var solutionmoves = totalMoves - this.state.games[this.state.numPuzzleon].g_moves\r\n                var solutiondifference = this.state.solutiondifference\r\n                solutiondifference.push(solutionmoves)\r\n                var puzzledata = JSON.parse(this.state.games[this.state.numPuzzleon + 1].g_puzzledata)\r\n                if (this.state.numPuzzleon + 10 > this.state.games.length) {\r\n                    axios.get('/puzzlerushgetmore?p_id=' + this.props.p_id + '&difficulty=' + this.props.difficulty)\r\n                        .then( res => {\r\n                                var games = JSON.parse(res.data.games);\r\n                                var stategames = this.state.games\r\n                                var newarray = stategames.concat(games)\r\n                                this.setState({\r\n                                    games: newarray\r\n                                });\r\n                        });\r\n                }\r\n                this.setState(\r\n                    extend(puzzledata,{numPuzzleon: this.state.numPuzzleon + 1, playerState: puzzledata.playerStart.slice(), gameWon: false, solutiondifference: solutiondifference, totalMovesList: totalMovesList})\r\n                );\r\n\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handleShowRandomAnswers = () => {\r\n        this.setState({\r\n            tipsText: [this.state.lowestMoveSequence]\r\n        })\r\n    }\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false && !this.state.buildMode) {\r\n            var oldPositon = {left: this.state.playerState[this.state.robotSelected].left, top: this.state.playerState[this.state.robotSelected].top};\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left) && !this.state.buildMode) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier,\r\n                    prevPosition: oldPositon\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseToolTips = (index) => {\r\n        this.state.tipsText.splice(index,1);\r\n        this.setState({\r\n            tipsText: this.state.tipsText,\r\n        });\r\n    }\r\n\r\n    moveNextPuzzle = () => {\r\n        this.handleDailyClickGame((this.state.numPuzzleon + 1) % 4)\r\n    }\r\n\r\n    handleLearnClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].puzzledata);\r\n        var squareSize = setDefaultSquareSize(puzzledata.width,puzzledata.height);\r\n        this.setState(\r\n            extend(puzzledata,{buildMode: false,squareSize: squareSize, numPuzzleon: index, moveHistory: [], gameWon: false, playerState: puzzledata.playerStart.slice(),tipsText: [this.props.games[index].description]})\r\n        );\r\n    }\r\n\r\n    handleDailyClickAnswersGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n        var lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[index].g_solutiondata))\r\n        var lowestMovesforPuzzle = this.props.games[index].g_moves\r\n        var difficultyforPuzzle = this.props.games[index].g_difficulty\r\n        var playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[index]\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory,\r\n                    gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily,\r\n                    lowestMoveSequence: lowestMoveSequence, lowestMovesforPuzzle: lowestMovesforPuzzle, difficultyforPuzzle: difficultyforPuzzle,\r\n                    playerMovedSequence: playerMovedSequence})\r\n        );\r\n    }\r\n\r\n    handleDailyClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily})\r\n        );\r\n    }\r\n\r\n\r\n    loadSidebar = () => {\r\n        if (this.props.learnMode == 'Yes') {\r\n            return (\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\">\r\n                        <Divider/>\r\n                        <Typography\r\n                             color=\"textSecondary\"\r\n                             display=\"block\"\r\n                             variant=\"caption\"\r\n                             style={{paddingBottom: '10px'}}\r\n                         >\r\n                             Beginner Lessons\r\n                         </Typography>\r\n                        {\r\n                            this.state.games.map((game,index) => {\r\n                                    if (index === 4) {\r\n                                        return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Intermediate Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    else if (index === 7) {\r\n                                            return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Advanced Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    return(\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={game.name} index={index} handleClickGame={this.handleLearnClickGame}/>\r\n                                    )\r\n                                }\r\n\r\n                            )\r\n                        }\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickAnswersGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeHistoryData\r\n                            lowestMovesforPuzzle={this.state.lowestMovesforPuzzle}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            difficultyforPuzzle={this.state.difficultyforPuzzle}\r\n                            nameSubmitted={this.props.nameSubmitted}\r\n                            playerMovedSequence={this.state.playerMovedSequence}\r\n                            bestScore={this.props.bestScore}\r\n                            scoreSubmitted={this.props.scoreSubmitted}\r\n                         />\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeScores highscores={this.state.highscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.state.createMode === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.puzzleRush) {\r\n            return (\r\n                     <div>\r\n                        <Timer puzzleRushTimeUp={this.puzzleRushTimeUp}>\r\n                        </Timer>\r\n                        <Typography id=\"discrete-slider-small-steps\"\r\n                                     color=\"Primary\"\r\n                                     variant=\"h3\"\r\n                                     display=\"inline\"\r\n                                     gutterBottom>\r\n                             {this.state.numPuzzleon}\r\n                         </Typography>\r\n                     </div>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n            <div style={{display: 'grid'}}>\r\n                <Typography\r\n                    color=\"secondary\"\r\n                    display=\"block\"\r\n                    variant={\"h4\"}\r\n\r\n                >\r\n                    {this.props.name}\r\n                </Typography>\r\n                <br/>\r\n                <Grid container xs={12} direction=\"column\">\r\n                <HighScores highscores={this.state.highscores}/>\r\n                </Grid>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    handlePlayerMovementFromMouse = (direction) => {\r\n        this.handlePlayerMovement({dir: direction})\r\n    };\r\n\r\n    handleUndoMove = () => {\r\n        var moveHistory = this.state.moveHistory;\r\n        var playerState = this.state.playerState;\r\n        if (moveHistory.length !== 0) {\r\n            var moveObj = moveHistory.pop();\r\n            playerState[moveObj.robot].left = moveObj.prevPosition.left;\r\n            playerState[moveObj.robot].top = moveObj.prevPosition.top;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n                gameWon: false,\r\n                dailySubmittedSucessfully: null\r\n            });\r\n        }\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes' && this.state.buildMode) {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onStopDragHandlerGoal = (position) => {\r\n        this.setState({\r\n            goal: {top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize)},\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n        })\r\n    };\r\n\r\n\r\n    onStopDragHandler = (position,index) => {\r\n        var playerState = this.state.playerState.slice();\r\n        var lastX = position.lastX / this.state.squareSize;\r\n        var lastY = position.lastY / this.state.squareSize;\r\n        playerState[index].top = Math.round(lastY);\r\n        playerState[index].left = Math.round(lastX);\r\n        this.setState({\r\n            playerStart: playerState.slice(),\r\n            playerState: playerState,\r\n            moveHistory: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        puzzleRushTimeUp={this.puzzleRushTimeUp}\r\n                        isPuzzleRush={this.props.puzzleRush}\r\n                        numPuzzleRush={this.state.numPuzzleon}\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                        toggleLineIndicators = {this.toggleLineIndicators}\r\n                        showColoredLineDirections={this.state.showColoredLineDirections}\r\n                        toggleBuildMode = {this.toggleBuildMode}\r\n                        undoMove = {this.handleUndoMove}\r\n                        buildMode = {this.state.buildMode}\r\n                        squareSizeValue = {parseInt((this.state.squareSize/4))}\r\n                        isLesson = {this.props.learnMode}\r\n                        isDailyChallenge = {this.props.dailyChallengeMode}\r\n                        isDailyChallengeAnswers = {this.props.dailyChallengeModeAnswers}\r\n                    />\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? null : <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>}\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8} zeroMinWidth>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal\r\n                            dimension={this.state.squareSize}\r\n                            position={this.state.goal}\r\n                            onStopDragHandler={this.onStopDragHandlerGoal}\r\n                            draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                            isCreateMode={this.state.createMode}\r\n                            buildMode={this.state.buildMode}\r\n                        />\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    onStopDragHandler={this.onStopDragHandler}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={this.state.playerState[this.state.robotSelected].color}\r\n                                    show={this.state.showColoredLineDirections}\r\n                                    handleClick={this.handlePlayerMovementFromMouse}\r\n                                    buildMode={this.state.buildMode}\r\n                                />\r\n                            )\r\n                        }\r\n                    </Board>\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/> : null}\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DescriptionList\r\n                        handleCloseToolTips={this.handleCloseToolTips}\r\n                        tipsText={this.state.tipsText}\r\n                    />\r\n                    {this.loadSidebar()}\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                {\r\n                    this.checkwin(this.state.playerState)\r\n                }\r\n                <PuzzleRushWinModal\r\n                    show={this.state.showPuzzleRushFinishedModal}\r\n                    closeModal={this.closePuzzleRushFinishedModal}\r\n                    numPuzzlesCompleted={this.state.numPuzzlesCompleted}\r\n                    percentile={this.state.puzzleRushPercentileCompleted}\r\n                    averageTime={this.state.averageTime}\r\n                    averageMoves={this.state.averageMoves}\r\n                    differenceOptimal={this.state.differenceOptimal}\r\n                    movesPerSecond={this.state.movesPerSecond}\r\n                    difficulty={this.props.difficulty}\r\n                    handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        maxWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 360,\r\n        minWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 235,\r\n        height: 225,\r\n        position: 'relative',\r\n        background: 'linear-gradient(100deg, #ffd34d 55%, #fff178 55%)'\r\n    },\r\n\r\n    item: {\r\n        padding: 0\r\n    },\r\n\r\n    upperPadding: {\r\n        paddingTop: 3\r\n    },\r\n    upperPaddingButton: {\r\n        paddingTop: 3,\r\n        position: 'absolute',\r\n        bottom: 15,\r\n        left: 25\r\n    },\r\n\r\n    lowerPadding: {\r\n        paddingBottom: 3\r\n    },\r\n\r\n    rightSideText: {\r\n        textAlign: \"right\",\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    },\r\n\r\n    leftSideText: {\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(ComplexGrid)\r\n\r\nfunction ComplexGrid(props) {\r\n    const { classes } = props;\r\n    const handleClick = () => {\r\n        props.handleGameClick(props.game.name, props.game.puzzledata,props.highscores,props.game.uri);\r\n    };\r\n\r\n    var numberOfHighScores = 0;\r\n\r\n    const highscorestyle = highscore => {\r\n        if (numberOfHighScores === 6) return \"\";\r\n        numberOfHighScores++;\r\n        return (\r\n            <ListItem disableGutters={true} classes={{ root: classes.item }}>\r\n                <ListItemText primary={trimNameShort(highscore.comment)} classes={{ root: classes.leftSideText }} />\r\n                <ListItemText secondary={highscore.numMoves} classes={{ root: classes.rightSideText }} />\r\n            </ListItem>\r\n        )\r\n    };\r\n\r\n    const contentDivStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        };\r\n\r\n    };\r\n\r\n    const trimName = name => {\r\n        var separated = (name + '').split(\" \")\r\n        var toreturn = '';\r\n        separated.map((word) => {\r\n            if (word.length > 17)\r\n                toreturn += word.substring(0, 17) + \"...\" + ' ';\r\n            else {\r\n                toreturn += word + ' '\r\n            }\r\n        });\r\n        return toreturn.substring(0, toreturn.length - 1);\r\n    };\r\n\r\n    const trimNameShort = name => {\r\n        if (name.length > 10)\r\n            name = name.substring(0, 10) + \"...\";\r\n        return name\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid item xs={12} md={3} sm={6}>\r\n            <Card variant=\"outlined\" className={classes.root}>\r\n                <CardContent>\r\n                    <div style={contentDivStyle()}>\r\n                        <div style={{width: '150px'}}>\r\n                            <Tooltip title={props.game.name}>\r\n                                <Typography variant=\"h6\" classes={{ root: classes.lowerPadding }}>\r\n                                    {trimName(props.game.name)}\r\n                                </Typography>\r\n                            </Tooltip>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    By: {trimName(props.game.authorname)}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    {props.game.created}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Plays: {props.game.plays}\r\n                                </Typography>\r\n                            </div>\r\n                            <br/>\r\n                            <Button onClick={handleClick} classes={{ root: classes.upperPaddingButton }} variant=\"contained\" color=\"primary\">Play</Button>\r\n                        </div>\r\n                        <div style={{width: '105px'}}>\r\n                            <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                Top Scores\r\n                            </Typography>\r\n                            <List>\r\n                                {\r\n                                    props.highscores.map(highscore =>\r\n                                        highscorestyle(highscore)\r\n                                    )\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from 'axios';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 400,\r\n    },\r\n    input: {\r\n        marginLeft: 5,\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n        marginLeft: 8,\r\n        marginRight: 8,\r\n    },\r\n});\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = this.props.gameslist;\r\n        var highscoreslist = this.props.highscoreslist;\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n            anchorEl: null\r\n        }\r\n    }\r\n\r\n    handleGameClick = (name,gamedata,highscores,uri) => {\r\n        this.props.handleGameClick(name,gamedata,highscores,uri);\r\n    };\r\n\r\n    handleFilterMenuOpen = event => {\r\n        this.setState( {\r\n          anchorEl: event.currentTarget\r\n      });\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.keycode == 13) {\r\n            this.handleSearchSubmit(e);\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n    }\r\n\r\n\r\n    handleCloseFilterMenuMostPlayed = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'MostPlayed', offset: 0})\r\n            .then( res => {\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    };\r\n\r\n    handleCloseFilterMenuHighest = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'Highest', offset: 0})\r\n            .then( res => {\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    };\r\n\r\n    handleSearchSubmit = event => {\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'None', offset: 0})\r\n            .then( res => {\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    };\r\n\r\n    render () {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <div style={gamepanel()}>\r\n                <Paper component=\"form\" className={classes.root} >\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        inputRef={ref => this.searchRef = ref}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                this.handleSearchSubmit();\r\n                                event.preventDefault()\r\n                            }\r\n                        }}\r\n                    />\r\n                    <IconButton onClick={this.handleSearchSubmit} className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <Divider className={classes.divider} orientation=\"vertical\" />\r\n                    <Button\r\n                        onClick={this.handleFilterMenuOpen}\r\n                        startIcon={<FilterListIcon />}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        Sort\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(this.state.anchorEl)}\r\n                        onClose={this.handleCloseFilterMenu}\r\n                    >\r\n                        <MenuItem onClick={this.handleCloseFilterMenuMostPlayed}>Most Played</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuHighest}>Highest Scores</MenuItem>\r\n                    </Menu>\r\n                </Paper>\r\n                <br/>\r\n                <Grid container alignItems={\"stretch\"} spacing={2}>\r\n                    {\r\n                        this.state.gameslist.map((game,index)=>\r\n                            <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(FindGame);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  loadedGame={'Yes'}\r\n                  name={this.props.name}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  homepage: {\r\n    marginTop: '40px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  baseExpansion: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: '10px'\r\n  },\r\n  darkmode: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      marginTop: '150px',\r\n  },\r\n  iconcards: {\r\n    width: '250px',\r\n    display: 'inline-block',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  iconcardsDaily: {\r\n    maxWidth: 345,\r\n    minWidth: 250,\r\n    float: 'left',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  titlehome: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '30px',\r\n  },\r\n  titledailyroto: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '10px',\r\n  },\r\n  iconfonts: {\r\n    fontFamily: \"'Arvo', serif\",\r\n  },\r\n  createboardcard: {\r\n    ':hover': {\r\n        content: '/static/images/CreateBoardCardIconPlaced.png',\r\n    }\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  centeredProfile: {\r\n    marginTop: '20px',\r\n    display: 'inline-block',\r\n  },\r\n  expandedPanelDCH: {\r\n    background: 'linear-gradient(70deg, #fff810  30%, rgba(0,0,0,0) 30%), linear-gradient(30deg, #63e89e 60%, #ff7ee3 60%)'\r\n  },\r\n  table: {\r\n    width: '33%'\r\n  }\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport FindGameElements from \"../containers/FindGameElements\";\r\nimport {GOAL_IMAGE} from '../constants/constants';\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n\r\n    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n        return (<div className={classes.homepage} >\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                        </Typography>\r\n                        <Typography variant=\"p1\" paragraph={true}>Puzzle Game for anyone to play! Create your own custom boards or play a random Solved game. <br/>Goal is to get ANY piece to stop on the  <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                        </Typography>\r\n                        <br/>\r\n                        <img width=\"300\" height=\"300\" src='/static/videos/basic2.gif'/>\r\n                        <br/>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                        <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                        </Typography>\r\n                        <Typography> 8/3/2020 Launched Site! Thanks for joining! Im currently the top scorer on all my puzzles, can you beat me?\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container item alignItems={\"stretch\"} spacing={2} alignItems=\"center\" justify=\"center\" >\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickCreateGame}>\r\n                                    <CardMedia\r\n                                        className={classes.createboardcard}\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                        title=\"Create Board\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Create Board\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickFindGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Find a Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/FindAGameCardIcon.png\"\r\n                                        title=\"Find a Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Find a Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/DailyChallengeIcon.png\"\r\n                                        title=\"Daily Challenge\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Daily Challenge\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickRandomGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Play a Random Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/puzzle.png\"\r\n                                        title=\"Play a Random Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Play a Random Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickLearnGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                        title=\"Learn\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Learn\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Contemplative Reptile\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/PuzzleRushIcon.png\"\r\n                                        title=\"Contemplative Reptile\"\r\n                                    />\r\n                                    <CardContent style={{textAlign: 'center'}}>\r\n                                        <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            Puzzle Rush\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                    <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                    </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            Medium Mondays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles only</Typography>\r\n                            Trouble Teusdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">extremly hard puzzles only</Typography>\r\n                            Wild Wednesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles only</Typography>\r\n                            Tryhard Thursdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">extremly hard puzzles + 1 god teir</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles only</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">easy puzzles only</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles only</Typography>\r\n                        </Typography>\r\n                        <Typography style={{marginTop: '30px'}} className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                        </Typography>\r\n                        <DailyChallengeScores highscores={window.dchighscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (<div className={classes.homepage}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> Controls\r\n                    </Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Movement\r\n                        </Typography>\r\n                    <img width={'20%'} height={'auto'} src={\"/static/images/keyboard.png\"}/>\r\n                    <Typography>Pieces Move until they hit a wall or another piece</Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Selecting robots\r\n                        </Typography>\r\n                        <img width={'20%'} height={'auto'} src={\"/static/images/tab.png\"}/>\r\n\r\n                    <Typography>Or click</Typography>\r\n                    <Divider/>\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            HotKeys\r\n                        </Typography>\r\n                        <Typography variant=\"h6\">Undo</Typography> <img width={'20%'} height={'auto'} src={\"/static/images/Qkey.png\"}/>\r\n                        <Typography variant=\"h6\">Reset</Typography> <img width={'20%'} height={'auto'} src={\"/static/images/Wkey.png\"}/>\r\n                    <Divider />\r\n                    <div style={{marginTop:'100px'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                    </Typography>\r\n                    <Typography> 8/3/2020 Launched Site! Thanks for joining! Im currently the top scorer on all my puzzles, can you beat me?\r\n                    </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={8} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                    </Typography>\r\n                    <Typography paragraph={true} variant=\"p1\">Puzzle Game for anyone to play! Create your own custom boards or play a random Solved game.<br/>Goal is to get ANY piece to stop on the  <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                    </Typography>\r\n                    <br/>\r\n                        <img width=\"300\" height=\"300\" src='/static/videos/basic2.gif'/>\r\n                    <br/>\r\n                    <Card className={classes.iconcards}>\r\n                              <CardActionArea onClick={props.handleClickCreateGame}>\r\n                                <CardMedia\r\n                                  className={classes.createboardcard}\r\n                                  component=\"img\"\r\n                                  alt=\"Create Board\"\r\n                                  height=\"140\"\r\n                                  image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                  title=\"Create Board\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Create Board\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </Card>\r\n                            <Card className={classes.iconcards}>\r\n                              <CardActionArea onClick={props.handleClickFindGame}>\r\n                                <CardMedia\r\n                                  component=\"img\"\r\n                                  alt=\"Find a Game\"\r\n                                  height=\"140\"\r\n                                  image=\"/static/images/FindAGameCardIcon.png\"\r\n                                  title=\"Find a Game\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Find a Game\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </Card>\r\n                            <Card className={classes.iconcards}>\r\n                              <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                                <CardMedia\r\n                                  component=\"img\"\r\n                                  alt=\"Create Board\"\r\n                                  height=\"140\"\r\n                                  image=\"/static/images/DailyChallengeIcon.png\"\r\n                                  title=\"Daily Challenge\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Daily Challenge\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </Card>\r\n                            <Card className={classes.iconcards}>\r\n                    <CardActionArea onClick={props.handleClickRandomGame}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\"Play a Random Game\"\r\n                            height=\"140\"\r\n                            image=\"/static/images/puzzle.png\"\r\n                            title=\"Play a Random Game\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                Play a Random Game\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickLearnGame}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Create Board\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                title=\"Learn\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Learn\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Contemplative Reptile\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/PuzzleRushIcon.png\"\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent style={{textAlign: 'center'}}>\r\n                                <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Puzzle Rush\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                            Medium Mondays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles only</Typography>\r\n                            Trouble Teusdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">extremly hard puzzles only</Typography>\r\n                            Wild Wednesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles only</Typography>\r\n                            Tryhard Thursdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">extremly hard puzzles + 1 god teir</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles only</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">easy puzzles only</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles only</Typography>\r\n                        </Typography>\r\n                <Typography className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                </Typography>\r\n                <DailyChallengeScores highscores={window.dchighscores}/>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst stylecol = () => {\r\n    return({\r\n            float: 'left',\r\n            width: '50%',\r\n            margin: 'auto',\r\n            padding: '0 50px',\r\n            marginTop: '6px',\r\n    });\r\n}\r\n\r\nconst spacing = () => {\r\n    return({\r\n            marginBottom: '10px',\r\n    });\r\n}\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    };\r\n\r\n    loginFacebook = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/facebook\";\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeLoginModal}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>Login to RobotsEvolved</DialogTitle>\r\n                <DialogContent dividers>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                           • Gain <FaCrown/>s when winning the Daily Challenge (stacks)\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                            • Saving settings and your moves in the daily challenge\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography variant=\"body2\" display=\"inline\">\r\n                            • Profile Page to keep track of your submissions.\r\n                        </Typography>\r\n                    <div class=\"col\">\r\n                        <a href=\"#\" onClick={this.loginFacebook} id={\"buttonfb\"}>\r\n                          <i class=\"fa fa-facebook fa-fw\"></i> Login with Facebook\r\n                         </a>\r\n                        <a onClick={this.loginGoogle} href=\"#\" id={\"buttongoogle\"}><i class=\"fa fa-google fa-fw\">\r\n                          </i> Login with Google\r\n                        </a>\r\n                    </div>\r\n                    <Typography variant=\"caption\" display=\"block\">\r\n                            We will NEVER distribute/sell your email or profileID.\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeLoginModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <Button color=\"black\" onClick={this.handleClick}><b>{textToShow}</b></Button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport SignInButton from './SignInButton';\r\n\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '40px',\r\n        width: '40px',\r\n        marginTop: '5px',\r\n    };\r\n};\r\n\r\nconst divStyle = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        width: '200px',\r\n    };\r\n};\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    SignInButtonPressed = () => {\r\n        this.props.handleClick('Sign in');\r\n    }\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return <SignInButton onClick={this.SignInButtonPressed}/>\r\n        }\r\n        else {\r\n            return (\r\n                <div style={divStyle()}>\r\n                    <div>{window.userInfo.username}</div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty) => {\r\n        console.log(difficulty)\r\n        axios.post('/puzzlerush', {difficulty: difficulty, action: 'start',type: this.state.value})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            isLoading: false,\r\n                        });\r\n                        this.props.handleClickPuzzleRush(difficulty,games,p_id);\r\n                });\r\n    };\r\n\r\n    handleClickEasyPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMediumPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                                {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                                                        ) : (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                         <Grid item xs={6}>\r\n                                         <ButtonGroup\r\n                                            orientation=\"vertical\"\r\n                                            color=\"primary\"\r\n                                            aria-label=\"vertical outlined primary button group\"\r\n                                          >\r\n                                            <Button onClick={this.handleClickEasyPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Easy\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickMediumPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Medium\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Hard\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickExHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Exteremely Hard\r\n                                            </Button>\r\n                                          </ButtonGroup>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                              <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                              <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                                <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                                <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                              </RadioGroup>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickRandomGameModal = (difficulty,type) => {\r\n        axios.get('/randomgame?difficulty=' + difficulty + '&type=' + type)\r\n            .then( res => {\r\n                var game = JSON.parse(res.data.game);\r\n                this.setState({\r\n                    isLoading: false,\r\n                });\r\n                this.props.handleClickRandomGame(game,difficulty);\r\n            })\r\n    }\r\n\r\n    handleClickEasy = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMedium = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHard = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHard = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickGodMode = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('GodTeir',this.state.value)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                            {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                            ) : (\r\n                            <Grid\r\n                                container xs={12}\r\n                                spacing={4}\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n                                wrap=\"nowrap\"\r\n                            >\r\n                                <Grid item xs={6}>\r\n                                    <ButtonGroup\r\n                                        orientation=\"vertical\"\r\n                                        color=\"primary\"\r\n                                        aria-label=\"vertical outlined primary button group\"\r\n                                      >\r\n                                        <Button onClick={this.handleClickEasy} variant=\"contained\" color=\"primary\">\r\n                                            Easy\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickMedium} variant=\"contained\" color=\"primary\">\r\n                                            Medium\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickHard} variant=\"contained\" color=\"primary\">\r\n                                            Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickExHard} variant=\"contained\" color=\"primary\">\r\n                                            Extremely Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickGodMode} variant=\"contained\" color=\"primary\">\r\n                                            God Tier\r\n                                        </Button>\r\n                                     </ButtonGroup>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl component=\"fieldset\">\r\n                                      <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                      <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                        <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                        <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                      </RadioGroup>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageCreatedGamesDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.game.name,props.game.puzzledata,[],props.game.uri);\r\n    }\r\n\r\n    return (<div>\r\n            <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography> Highscore Holder: </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.game.username} - {props.game.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageSolutionDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.solution.name,props.solution.puzzledata,[],props.solution.uri);\r\n    }\r\n    return (<div>\r\n              <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography color={'secondary'} variant={'body2'}> {props.solution.WinnerCreated} </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.solution.WinnerUsername} - {props.solution.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Table,TableContainer,TableHead,TableRow,TableCell,TableBody} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useStyles from '../Material-UI/themes';\r\nimport ProfilePageCreatedGamesDetails from '../components/ProfilePageComponents/ProfilePageCreatedGamesDetails';\r\nimport ProfilePageSolutionDetails from '../components/ProfilePageComponents/ProfilePageSolutionDetails';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\n\r\nexport default function ProfilePage(props) {\r\n    const classes = useStyles();\r\n    const submitAnswer = () => {\r\n        axios.post('/userUpdate',{newuser: document.getElementById(\"ProfileName\").value})\r\n            .then( res => {\r\n                if (res.data == 'OK') {\r\n                    window.location.href = '/';\r\n                }\r\n                else {\r\n                    setError(res.data);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const createData = (name,col1,col2) => {\r\n        return {name,col1,col2}\r\n    }\r\n\r\n    const columns = [\r\n          { id: 'difficulty', label: 'Difficulty', maxWidth: 75 },\r\n          { id: 'classic', label: 'Classic', maxWidth: 75 },\r\n          { id: 'random', label: 'Random', maxWidth: 75 },\r\n        ];\r\n\r\n    const rows = [\r\n        createData('Easy', props.puzzlerushview.maxeasyc,props.puzzlerushview.maxeasyp),\r\n        createData('Medium', props.puzzlerushview.maxmediumc,props.puzzlerushview.maxmediump),\r\n        createData('Hard', props.puzzlerushview.maxhardc,props.puzzlerushview.maxhardp),\r\n        createData('Extremely Hard', props.puzzlerushview.maxexhardc,props.puzzlerushview.maxexhardp)\r\n    ]\r\n\r\n    const rowseff = [\r\n        createData('Easy', props.puzzlerushview.maxeffec,props.puzzlerushview.maxeffep),\r\n        createData('Medium', props.puzzlerushview.maxeffmc,props.puzzlerushview.maxeffmp),\r\n        createData('Hard', props.puzzlerushview.maxeffhc,props.puzzlerushview.maxeffhp),\r\n        createData('Extremely Hard', props.puzzlerushview.maxeffexc,props.puzzlerushview.maxeffexp)\r\n    ]\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [expandedGame, setExpandedGame] = React.useState(false);\r\n    const [expandedHighscores, setExpandedHighscores] = React.useState(false);\r\n    const handleChangeGame = (panel) => (event, isExpandedGame) => {\r\n        setExpandedGame(isExpandedGame ? panel : false);\r\n    };\r\n    const handleChangeHighscores = (panel) => (event, isExpandedHighScores) => {\r\n        setExpandedHighscores(isExpandedHighScores ? panel : false);\r\n    };\r\n    console.log(props.puzzlerushview);\r\n    return (\r\n            <div style={gamepanel()}>\r\n                <Grid container spacing={4}>\r\n                    <Grid item xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <TextField className={classes.centeredProfile} id={\"ProfileName\"} label={\"Username\"} defaultValue={window.userInfo.username}/>\r\n                        <Button className={classes.centeredProfile} variant=\"contained\" color=\"secondary\" onClick={submitAnswer}>Change Username</Button>\r\n                        <Typography color={\"secondary\"}>{error}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Created</Typography>\r\n                        {\r\n                            props.gamesview.map((game,index) =>\r\n                                    <ExpansionPanel expanded={expandedGame === 'panelgame' + index} onChange={handleChangeGame('panelgame' + index)}>\r\n                                        <ExpansionPanelSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls={\"panel\" + index + \"-content\"}\r\n                                          id={\"panel\" + index + \"-header\"}\r\n                                        >\r\n                                          <Typography className={classes.heading}>{game.name}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Plays: {game.plays}</Typography>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                          <ProfilePageCreatedGamesDetails\r\n                                            game={game}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                          />\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Solved</Typography>\r\n                        {\r\n                            props.solutionsview.map((solution,index) =>\r\n                                <ExpansionPanel expanded={expandedHighscores === 'panelhigh' + index} onChange={handleChangeHighscores('panelhigh' + index)}>\r\n                                    <ExpansionPanelSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls={\"panel\" + index + \"-content\"}\r\n                                      id={\"panel\" + index + \"-header\"}\r\n                                    >\r\n                                      <Typography className={classes.heading}>{solution.name}</Typography>\r\n                                      <Typography className={classes.secondaryHeading}>Best: {solution.numMoves}</Typography>\r\n                                      {solution.WinnerUserId == window.userInfo.userID ? <FaCrown style={{marginLeft: '30px'}}/> : null}\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <ProfilePageSolutionDetails\r\n                                            solution={solution}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                        />\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Puzzle Rush Records</Typography>\r\n                        <Typography variant=\"body1\">Most Puzzles Solved</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ maxWidth: column.maxWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rows.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                        <Typography style={{marginTop: '40px'}} variant=\"body1\">Highest Efficiency Scores</Typography>\r\n                        <Typography variant=\"caption\">Calculated by (total puzzles completed) * 7 - (total redundany moves from best score)</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ maxWidth: column.maxWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rowseff.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nexport default function RandomGamePage(props) {\r\n    return (\r\n        <Game\r\n              handleLineDirections={props.handleLineDirections}\r\n              LineDirections={props.LineDirections}\r\n              randomGame={'Yes'}\r\n              game={props.game}\r\n              difficulty={props.difficulty}\r\n         />\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PuzzleRushPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  puzzleRush={'Yes'}\r\n                  p_id={this.props.p_id}\r\n                  games={this.props.games}\r\n                  difficulty={this.props.difficulty}\r\n             />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PuzzleRushPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass LessonsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                learnMode={'Yes'}\r\n                games={window.learngameslist}/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default LessonsPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game handleClickDailyChallenge={this.props.handleClickDailyChallenge} handleLineDirections={this.props.handleLineDirections} LineDirections={this.props.LineDirections} dailyChallengeMode={'Yes'} playerStateList={this.props.playerStateList} savedMoves={this.props.savedMoves} games={this.props.dailyChallengeGameslist} dc_id={this.props.dc_id} highscores={this.props.dchighscores}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengePage;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Card,CardActions,Button,Avatar} from \"@material-ui/core\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function AboutUs(props) {\r\n    const facebookclick = () => {\r\n        window.open('https://www.facebook.com/RobotsEvolved-105278561284154')\r\n    }\r\n    return (<div style={gamepanel()}>\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item spacing={4} xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card style={{display: 'inline-block', width: '100%'}}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    About\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    RobotsEvolved.com is based on the board game Ricochet Robots by Alex Randolph.\r\n                                    We have several game modes and variants that are inspired by the several Chess variants on the internet.\r\n                                    If you find any bugs or have any feature requests for RobotsEvolved please let me know by emailing robotsevolved@gmail.com or contacting me on FB from our FB page, I would love to hear some of the ideas people have. Ill get to developing the feature/fixing annoying bugs ASAP\r\n                                    If you use Google Login or Facebook Login I will NEVER email you or sell your information, it is strictly for user-identification.\r\n                                    Tell your friends about the site and get people on here!\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button onClick={facebookclick}>\r\n                                    <Avatar alt=\"Facebook\" src=\"https://facebookbrand.com/wp-content/uploads/2019/04/f_logo_RGB-Hex-Blue_512.png?w=512&h=512\" />\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Daily Challenge Rotation\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    The Daily Challenge rotates its difficulty every day as specified below with 2 x Random and 2 x Classic Type puzzles.\r\n                                    <br/>\r\n                                    Medium Mondays - 4 x Medium\r\n                                    <br/>\r\n                                    Trouble Teusdays - 4 x Extremely Hard\r\n                                    <br/>\r\n                                    Wild Wednesdays - 4 x Hard\r\n                                    <br/>\r\n                                    Tryhard Thursdays - 3 x Extremely Hard 1 x God Teir\r\n                                    <br/>\r\n                                    Flyin Fridays - 4 x Medium\r\n                                    <br/>\r\n                                    Sleepy Saturdays - 4 x Easy\r\n                                    <br/>\r\n                                    Standard Sundays - 4 x Hard\r\n                                </Typography>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Classic Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Classic puzzles are based on the original Game. These Puzzles only have walls that are L shaped and a goal is in the center of one of the L puzzles.\r\n                                </Typography>\r\n                                <Typography variant={\"h4\"} display={\"inline\"}>\r\n                                    Random Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Random Puzzles are created by having a 10% chance for a wall to spawn in location possible, Goals and Robot placements are completely random also.\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Easy\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 5-8 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Medium\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 9-13 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 14-17 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"} >\r\n                                    Extremely Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 18-22 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    God Tier\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 23+ Moves, Note: there are a low number of these puzzles due to the CPU required to create them\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Paper class=\"card3\">\r\n                          <img src={\"/static/images/284457_10151211078621477_839164197_n.jpg\"} alt=\"Jane\"/>\r\n                          <div class=\"container3\">\r\n                            <h2>Kyle Kwasniewski</h2>\r\n                            <p class=\"title3\">Creator &amp; FullStack Dev.</p>\r\n                            <p>I work in Software Development and Dev-Ops in New York and consider myself a Ricochet Robots enthusiast so I decided to make this application as a way to better hone my skill in web frameworks as well as pass the time during the quarantine. I play Frisbee and Ski alot as well as play my fair share of Steam games.</p>\r\n                            <p>Thanks for playing!</p>\r\n                            <p>robotsevolved@gmail.com</p>\r\n                          </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/284f909d-0d5c-4ae1-b100-76c9d46ae7d4.png\"} alt=\"Mike\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Jonah Tollefson</h2>\r\n                                <p className=\"title3\">Front-End Dev.</p>\r\n                                <p>Went to college with these other goobers in the US and now I work professionally as a\r\n                                    software engineer in Germany. For RobotsEvolved, I mainly worked on the frontend\r\n                                    using React. Cats and Ultimate Frisbee are life.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/derekschultz.jpg\"} alt=\"John\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Derek Schultz</h2>\r\n                                <p className=\"title3\">Back-End Dev.</p>\r\n                                <p>Full time Software Engineer. Graduated from University of Wisconsin Platteville\r\n                                    with a BS in Computer Science and Minor in Business Administration. Worked on\r\n                                    most of the database aspect of RobotsEvolved and some back end functionality. I\r\n                                    enjoy video games, beer, and playing darts.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n\r\n\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nexport default function ShowDailyPuzzleHistory(props) {\r\n    const handleDailyPuzzleHistoryClick = event => {\r\n        console.log(props.history)\r\n        props.handleDailyPuzzleHistoryClick(props.history)\r\n    }\r\n    return (\r\n            <Button style={window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? {marginLeft: '5px'} : {marginLeft: '60px'}} variant=\"contained\" size=\"small\" color=\"primary\" onClick={handleDailyPuzzleHistoryClick}>\r\n                 show answers\r\n            </Button>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport ShowDailyPuzzleHistory from '../components/ShowDailyPuzzleHistory';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ProfilePageCreatedGamesDetails from \"../components/ProfilePageComponents/ProfilePageCreatedGamesDetails\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function DailyChallengeHistory(props) {\r\n    const [expandedPanel, setExpandedPanel] = React.useState(false);\r\n    const handleChangePanel = (panel) => (event, isExpanded) => {\r\n        setExpandedPanel(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles();\r\n    return (<div style={gamepanel()}>\r\n                <Typography className={classes.titlehome} variant=\"h3\">Daily Challenge History</Typography>\r\n                {\r\n                    props.dailychallengehistory.map((history, index) =>\r\n                        <ExpansionPanel expanded={expandedPanel === 'panelgame' + index} onChange={handleChangePanel('panelgame' + index)}>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={\"panel\" + index + \"-content\"}\r\n                                id={\"panel\" + index + \"-header\"}\r\n                            >\r\n                                <Typography className={classes.heading}>{history.created}</Typography>\r\n                                <Typography className={classes.secondaryHeading}>Winner: {history.nameSubmitted}</Typography>\r\n                                <ShowDailyPuzzleHistory history={history} handleDailyPuzzleHistoryClick={props.handleDailyPuzzleHistoryClick}/>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        <FaCrown/> {history.nameSubmitted} - {history.scoreSubmitted} <FaCrown/>\r\n                                    </Typography>\r\n                                    <Typography className={classes.secondaryHeading}>Lowest possible solution: {history.bestScore}</Typography>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                    )\r\n                }\r\n           </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengeHistoryAnswersPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        console.log(this.props.history);\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                dailyChallengeModeAnswers={'Yes'}\r\n                nameSubmitted={this.props.history.nameSubmitted}\r\n                bestScore={this.props.history.bestScore}\r\n                created={this.props.history.created}\r\n                games={this.props.history.games}\r\n                playerStateList={this.props.history.playerStateList}\r\n                scoreSubmitted={this.props.history.scoreSubmitted}\r\n                solutionDataSubmitted={this.props.history.solutionDataSubmitted}\r\n                submitted={this.props.history.submitted}\r\n                user_id={this.props.user_id}\r\n                />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengeHistoryAnswersPage;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n  },\r\n}));\r\n\r\nexport default function LoadingPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress size={120} color=\"secondary\" />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport clsx from 'clsx';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport Home from './Pages/Home';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\nimport axios from 'axios';\r\nimport Game from './containers/Game';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"./constants/constants\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport PuzzleRushDifficultyModal from \"./containers/Modals/PuzzleRushDifficultyModal\";\r\nimport RandomGameDifficultyModal from \"./containers/Modals/RandomGameDifficultyModal\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport RandomGamePage from \"./Pages/RandomGamePage\";\r\nimport PuzzleRushPage from \"./Pages/PuzzleRushPage\";\r\nimport LessonsPage from \"./Pages/LessonsPage\";\r\nimport DailyChallengePage from \"./Pages/DailyChallenge\";\r\nimport AboutUs from \"./Pages/AboutUs\";\r\nimport DailyChallengeHistory from \"./Pages/DailyChallengeHistory\";\r\nimport DailyChallengeHistoryAnswersPage from \"./Pages/DailyChallengeHistoryAnswersPage\";\r\nimport { FaMedal } from 'react-icons/fa';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport LoadingPage from './components/LoadingPage';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    drawerHeaderRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerHeaderLeft: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    toolbar1: {\r\n        backgroundColor: '#14A76C',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    dividerFullWidth: {\r\n        margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    darkmode: {\r\n          body: '#363537',\r\n          text: '#FAFAFA',\r\n          toggleBorder: '#6B8096',\r\n          gradient: 'linear-gradient(#091236, #1E215D)',\r\n    },\r\n});\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (window.uri === '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n                dailychallengehistoryloaded: false,\r\n                profileDataloaded: false,\r\n            };\r\n        }\r\n        else {\r\n            if (window.token.g_id == undefined) {\r\n                const linedir = window.userInfo == undefined ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={linedir} name={window.token.name} gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri}/>, //when uri is entered to play specific game\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                };\r\n            }\r\n            else {\r\n                const linedir = window.userInfo == undefined ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={linedir} randomGame={'Yes'} game={window.token} difficulty={window.token.g_difficulty}/>,\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                }\r\n            }\r\n        }\r\n        this.state.open = false;\r\n        this.state.mobileAnchorEl = null;\r\n        this.state.mobileMenuOpen = false;\r\n        this.state.showLoginModal = false;\r\n        this.state.showPuzzleRushModal = false;\r\n        this.state.loadingPage = false;\r\n         if (window.loggedin === 'Yes') {\r\n            this.state.LineDirections = window.userInfo.LineDirFlag === 'Y';\r\n         }\r\n         else {\r\n            this.state.LineDirections = true;\r\n         }\r\n    }\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState( {\r\n            open: false\r\n        })\r\n    };\r\n\r\n    handleLineDirections = (boolean) => {\r\n        if (window.loggedin === 'Yes') {\r\n            axios.post('/settingsChange', {LineDirections: boolean ? 'Y' : 'N'})\r\n                .then( res => {\r\n                    console.log('changed');\r\n                });\r\n        }\r\n        this.setState({\r\n            LineDirections: boolean\r\n        });\r\n    }\r\n\r\n    handleClickDailyChallenge = () => {\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeData')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    const dc_movesList = res.data.dc_movesList == null ? null : JSON.parse(res.data.dc_movesList)\r\n                    const dc_playerList = res.data.dc_playerList == null ? null : JSON.parse(res.data.dc_playerList)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                                        PageSelected: <DailyChallengePage\r\n                                                            handleClickDailyChallenge={this.handleClickDailyChallenge}\r\n                                                            dailyChallengeGameslist={JSON.parse(res.data.dailyChallengeGameslist)}\r\n                                                            dc_id={res.data.dc_id}\r\n                                                            dchighscores={JSON.parse(res.data.dchighscores)}\r\n                                                            handleLineDirections={this.handleLineDirections}\r\n                                                            LineDirections={this.state.LineDirections}\r\n                                                            savedMoves={dc_movesList}\r\n                                                            playerStateList={dc_playerList}\r\n                                        />,\r\n                                        open: isOpen,\r\n                                        loadingPage: false,\r\n                                    });\r\n                        }\r\n                    });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState( {\r\n            open: true\r\n        });\r\n    };\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type === 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    };\r\n\r\n    handleClickRandomGameModal = (game,difficulty) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showRandomGameModal: false,\r\n            PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} randomGame={'Yes'} game={game} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    }\r\n\r\n    handleClickRandomGame = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: true,\r\n        });\r\n    }\r\n\r\n\r\n    handleClickPuzzleRush = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: true,\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallengeHistory = (event) => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeHistory')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    var historydata = JSON.parse(res.data)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                            PageSelected: <DailyChallengeHistory handleDailyPuzzleHistoryClick={this.handleDailyPuzzleHistoryClick} dailychallengehistory={historydata}/>,\r\n                            challengeHistoryData: historydata,\r\n                            dailychallengehistoryloaded: true,\r\n                            open: isOpen,\r\n                            loadingPage: false,\r\n                        });\r\n                    }\r\n            });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    }\r\n\r\n    handleDailyPuzzleHistoryClick = history => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <DailyChallengeHistoryAnswersPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} history={history}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    }\r\n\r\n    handleClickPuzzleRushModal = (difficulty,games,p_id) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showPuzzleRushModal: false,\r\n            PageSelected: <PuzzleRushPage handleClickPlayAgain={this.handleClickPuzzleRush} handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: false\r\n        });\r\n    }\r\n\r\n    closeRandomGameLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: false\r\n        });\r\n    }\r\n\r\n    handleGameClick = (name, gamedata,highscores,uri) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} name={name} highscores={highscores} gamedata={gamedata} uri={uri}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <CreateGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} state={\"new\"}/>,\r\n             open: isOpen,\r\n             loadingPage: false,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickProfile = event => {\r\n        if (window.loggedin === 'Yes') {\r\n            this.state.loadingPage = true;\r\n                    axios.get('/getProfileData')\r\n                        .then( res => {\r\n                            var isOpen = this.state.open;\r\n                            if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                                isOpen = false\r\n                            }\r\n                            var profileData = res.data;\r\n                            var gamesview = JSON.parse(profileData.gamesview)\r\n                            var solutionsview = JSON.parse(profileData.solutionsview)\r\n                            var puzzlerushview = JSON.parse(profileData.puzzlerushview)\r\n                            if (this.state.loadingPage) {\r\n                                this.setState({\r\n                                    PageSelected: <ProfilePage handleClickPlayGame={this.handleGameClick} gamesview={gamesview} solutionsview={solutionsview} puzzlerushview={puzzlerushview}/>,\r\n                                    gamesview: gamesview,\r\n                                    solutionsview: solutionsview,\r\n                                    puzzlerushview: puzzlerushview,\r\n                                    profileDataloaded: true,\r\n                                    open: isOpen,\r\n                                    loadingPage: false,\r\n                                });\r\n                            }\r\n                        });\r\n                    this.setState({\r\n                        PageSelected: <LoadingPage/>,\r\n                    });\r\n                }\r\n        else {\r\n            this.SignInButtonPressed('Sign in');\r\n        }\r\n    };\r\n\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.get('/getFindGames')\r\n            .then( res => {\r\n                const gameslist = JSON.parse(res.data.gameslist)\r\n                const highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                var isOpen = this.state.open;\r\n                if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                    isOpen = false\r\n                }\r\n                if (this.state.loadingPage) {\r\n                    this.setState({\r\n                        PageSelected: <FindGame gameslist={gameslist} highscoreslist={highscoreslist} handleGameClick={this.handleGameClick}/>,\r\n                        open: isOpen,\r\n                        loadingPage: false,\r\n                    });\r\n                }\r\n        });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleHomePageClick = () => {\r\n        this.setState({\r\n            PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n            loadingPage: false,\r\n        });\r\n    }\r\n\r\n\r\n    handleClickAboutUs = event => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <AboutUs/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    }\r\n\r\n    handleClickLearnGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <LessonsPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileAnchorEl: null,\r\n            mobileMenuOpen: false\r\n        });\r\n    };\r\n\r\n    showPage = () => {\r\n        return(\r\n            this.state.PageSelected\r\n        )\r\n    }\r\n\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({\r\n            mobileAnchorEl: event.currentTarget,\r\n            mobileMenuOpen: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const theme = createMuiTheme({\r\n            palette: {\r\n                primary: teal,\r\n                secondary: {\r\n                    main: '#e65100',\r\n                },\r\n            }\r\n        });\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <AppBar\r\n                        position=\"fixed\"\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: this.state.open,\r\n                        })}\r\n                     >\r\n                        <Toolbar className={classes.toolbar1}>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={this.handleDrawerOpen}\r\n                                edge=\"start\"\r\n                                className={clsx(classes.menuButton, this.state.open && classes.hide)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <img onClick={this.handleHomePageClick} width={50} height={50} src=\"/static/images/logo150.png\"/>\r\n                            <Typography variant=\"h6\" className={classes.title} noWrap>\r\n                                <a href=\"/\" style={{color: 'white'}}>RobotsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </Typography>\r\n                            <div className={classes.grow} />\r\n                            <div className={classes.sectionDesktop}>\r\n                                <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.sectionMobile}>\r\n                                <IconButton\r\n                                    aria-label=\"show more\"\r\n                                    aria-controls={\"primary-search-account-menu-mobile\"}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.handleMobileMenuOpen}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <MoreIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Menu\r\n                        anchorEl={this.state.mobileAnchorEl}\r\n                        anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        id={\"primary-search-account-menu-mobile\"}\r\n                        keepMounted\r\n                        transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        open={this.state.mobileMenuOpen}\r\n                        onClose={this.handleMobileMenuClose}\r\n                    >\r\n                        <MenuItem>\r\n                            <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                    <Drawer\r\n                        id=\"MainDrawer\"\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.state.open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div className={classes.drawerHeader}>\r\n                            <div className={classes.drawerHeaderLeft}>\r\n                                <SignInButton onClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.drawerHeaderRight}>\r\n                                <IconButton onClick={this.handleDrawerClose}>\r\n                                    {useTheme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Play\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Create a Game'} onClick={this.handleClickCreateGame}>\r\n                                <ListItemIcon><PlayArrowIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Create a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Find a Game'} onClick={this.handleClickFindGame}>\r\n                                <ListItemIcon><SearchIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Find a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge'} onClick={this.handleClickDailyChallenge}>\r\n                                <ListItemIcon><TodayIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Random Game'} onClick={this.handleClickRandomGame}>\r\n                                <ListItemIcon><CasinoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Random Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Puzzle Rush'} onClick={this.handleClickPuzzleRush}>\r\n                                <ListItemIcon><TimerIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Puzzle Rush'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Learn\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Lessons'} onClick={this.handleClickLearnGame}>\r\n                                <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Lessons'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Community\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Profile'} onClick={this.handleClickProfile}>\r\n                                <ListItemIcon><AccountBoxIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Profile'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge History'} onClick={this.handleClickDailyChallengeHistory}>\r\n                                <ListItemIcon><FaMedal /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge History'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Tools\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'About'} onClick={this.handleClickAboutUs}>\r\n                                <ListItemIcon><InfoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'About'} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n                    <main className={clsx(classes.content, {\r\n                        [classes.contentShift]: this.state.open,\r\n                    })}>\r\n                        <div className={classes.drawerHeader} />\r\n                        {this.showPage()}\r\n                    </main>\r\n                    <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n                    <PuzzleRushDifficultyModal\r\n                        closeModal={this.closePuzzleRushLoginModal}\r\n                        show={this.state.showPuzzleRushModal}\r\n                        handleClickPuzzleRush={this.handleClickPuzzleRushModal}\r\n                    />\r\n                    <RandomGameDifficultyModal\r\n                        closeModal={this.closeRandomGameLoginModal}\r\n                        show={this.state.showRandomGameModal}\r\n                        handleClickRandomGame={this.handleClickRandomGameModal}\r\n                    />\r\n                </div>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}