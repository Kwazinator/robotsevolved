{"version":3,"sources":["components/LearnGameItems.js","constants/constants.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinModal.jsx","components/YouWinDailySingleModal.js","components/YouWinDailyFinalModal.js","components/AddPuzzleModal.jsx","components/ToggleSettings.js","components/Timer.js","containers/DisplayView.js","components/HighScores.jsx","components/DailyChallengeScores.jsx","containers/Modals/PuzzleRushFinishedModal.js","containers/Modals/RandomGameStatsModal.jsx","components/CloseIconWithOnClick.jsx","components/DescriptionList.jsx","components/YouWinLessonModal.js","components/ShowDailyChallengeScoresCard.jsx","components/DailyChallengeHistoryData.js","components/boardgenerator.js","containers/Modals/BoardResetModal.js","containers/Game.js","Pages/CreateGame.js","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","Material-UI/themes.jsx","Pages/Home.js","containers/Modals/LoginModal.js","components/LoggedInUser.js","components/SignInButton.js","containers/Modals/PuzzleRushDifficultyModal.js","containers/Modals/RandomGameDifficultyModal.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","components/ProfilePageComponents/ProfilePageCreatedGamesDetails.js","components/ProfilePageComponents/ProfilePageSolutionDetails.js","Pages/ProfilePage.js","Pages/RandomGamePage.js","Pages/PuzzleRushPage.js","Pages/LessonsPage.js","Pages/DailyChallenge.js","Pages/AboutUs.js","components/ShowDailyPuzzleHistory.js","Pages/DailyChallengeHistory.js","Pages/DailyChallengeHistoryAnswersPage.js","components/LoadingPage.jsx","App.js","serviceWorker.js","index.js"],"names":["LearnGameItems","props","handleClick","handleClickGame","index","selected","Button","variant","color","onClick","name","UP","LEFT","DIRECTION_MAP_IMAGES","yellow","DOWN","RIGHT","red","green","blue","MovesView","style","width","float","display","this","moveHistory","length","map","move","src","playerState","robot","colorSignifier","dir","React","Component","styleoutside","dimension","position","dim","height","backgroundColor","top","left","styleinside","styleinside2","Square","handlePlayerMovementFromMouse","border","margin","overflow","children","id","transition","styleoutsidedraggable","selectedColor","undefined","borderStyle","borderColor","borderRadius","Robot","handleKeyDown","e","newDirection","keyCode","tabSelector","resetPuzzle","handlePlayerMovement","onStopDragHandler","handleCreateMode","isCreateMode","buildMode","x","y","grid","draggableGrid","onStop","bounds","window","onkeydown","orientation","opacity","wallThickness","wallOffset","Wall","userSelect","styledragable","Goal","endPosition","obj","key","hasOwnProperty","YouWinModal","Dialog","onClose","handleClose","container","document","getElementById","BackdropProps","aria-labelledby","open","show","maxWidth","DialogTitle","DialogContent","dividers","numMoves","TextField","label","defaultValue","username","DialogActions","submitAnswer","YouWinDailySingleModal","undoMove","moveNextPuzzle","YouWinDailyFinalModal","handleClickSubmitGame","robotPosition","AddPuzzleModal","submitPuzzle","ToggleSettings","event","FormControlLabel","value","control","Switch","onChange","Timer","state","minutes","seconds","timer","myInterval","setInterval","setState","puzzleRushTimeUp","clearInterval","valuetext","DisplayView","createMode","fullWidth","handleCreateBoardClick","checked","toggleBuildMode","createBoardPressed","copyToClipboard","dummy","createElement","body","appendChild","location","host","uri","select","execCommand","removeChild","copiedClipboard","thisThing","copyButtonText","setTimeout","handleDimensionChange","getElementsByClassName","blur","parseInt","toString","DimensionChanged","showPuzzleLink","isPuzzleRush","isLesson","isDailyChallengeAnswers","isDailyChallenge","paddingBottom","marginRight","marginTop","marginBottom","Divider","Typography","ButtonGroup","aria-label","toggleLineIndicators","gutterBottom","Slider","onChangeCommitted","getAriaValueText","step","marks","min","max","squareSizeValue","valueLabelDisplay","highscores","marginleft","highscore","comment","highscorestyle","Grid","item","xs","Paper","elevation","spacing","wins","i","crowns","push","CrownCounter","user_id","score","submitted","direction","PuzzleRushWinModal","difficulty","md","List","dense","ListItem","ListItemText","primary","secondary","numPuzzlesCompleted","percentile","averageTime","averageMoves","differenceOptimal","movesPerSecond","playPuzzleRushAgain","closeModal","RandomGameStatsModal","showStatsModal","handleShowRandomAnswers","answers","lowestMoveSequence","lowestMoves","CloseIconWithOnClick","onMouseDown","Descriptionlist","tipsText","text","ListItemSecondaryAction","IconButton","edge","handleCloseToolTips","YouWinLessonModal","useStyles","makeStyles","root","minWidth","bullet","transform","title","fontSize","pos","ShowDailyChallengeScoresCard","classes","Card","className","CardContent","component","bestScore","MovesforPuzzle","MoveSequence","DailyChallengeHistoryData","difficultyforPuzzle","lowestMovesforPuzzle","nameSubmitted","scoreSubmitted","playerMovedSequence","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","type","boardState","wallVerticle","wallHorizontal","goal","randompos1","randompos2","randompos3","randompos4","randomPositions","extend","j","gameWon","playerStart","slice","BoardResetModal","createBoardHandler","preventDefault","percent","createBoard","textAlign","paddingRight","Input","inputProps","placeholder","addEventListener","indexOf","formatGeneratedMoveSequence","moves","images","charAt","setDefaultSquareSize","boardWidth","drawerWidth","getComputedStyle","windowWidth","innerWidth","settings","Game","squareSize","updateHighscores","axios","get","then","res","JSON","parse","data","copiedToClipboard","updateDailyHighscores","dc_id","componentDidMount","loadedGame","IntervalId","dailyChallengeMode","componentWillUnmount","robotSelect","robotSelected","namesubmit","userInfo","post","puzzledata","authorname","history","ColoredLineDirections","showBoardResetPanelModal","closeRandomStatsModal","closeCreateBoardModal","closePuzzleRushFinishedModal","showPuzzleRushFinishedModal","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","totalMovesDiff","solutiondifference","numPuzzleon","totalMoves","totalMovesList","avgMoves","p_id","differenceFrom","console","log","submitDailyAnswer","LastRobotPosition","moveHistoryList","playerStateList","solutiondata","handleUndoMove","checkwin","puzzleRush","randomGame","dailyChallengeModeAnswers","Won","gamesWonDaily","games","handleDailyClickGame","learnMode","g_id","solutionmoves","g_moves","g_puzzledata","newarray","concat","oldPositon","prevPosition","splice","handleLearnClickGame","description","handleDailyClickAnswersGame","g_solutiondata","g_difficulty","solutionDataSubmitted","loadSidebar","game","DailyChallengeScores","HighScores","posObj","moveObj","pop","createModeWallClick","indexToChange","newWallHorizontal","wallH","newWallVerticle","wallV","onStopDragHandlerGoal","round","lastY","lastX","goals","gamedata","savedMoves","g_uri","pushState","settingsWidth","settingsHeight","percentWall","settingsPercent","padding","alignItems","sm","numPuzzleRush","zeroMinWidth","Board","square","ColoredLineDirection","ColoredLine","player","puzzleRushPercentileCompleted","withRouter","CreateGame","withStyles","theme","upperPadding","paddingTop","lowerPadding","rightSideText","leftSideText","numberOfHighScores","trimName","substring","justifyContent","Tooltip","created","handleGameClick","flexItem","disableGutters","FindGame","handleFilterMenuOpen","anchorEl","currentTarget","handleCloseFilterMenu","handleSearchSubmit","searchTerm","searchRef","search","offset","highscoreslist","gameslist","InputBase","input","inputRef","ref","onKeyPress","iconButton","divider","startIcon","Menu","keepMounted","Boolean","MenuItem","FindGameElements","marginLeft","flex","PlayGame","flexGrow","homepage","griditems","paper","Width","image","img","maxHeight","baseExpansion","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","darkmode","iconcards","marginBotton","iconcardsDaily","titlehome","fontFamily","iconfonts","createboardcard","content","demo","background","ComplexGrid","justify","paragraph","CardActionArea","handleClickCreateGame","CardMedia","alt","handleClickFindGame","handleClickDailyChallenge","handleClickRandomGame","handleClickLearnGame","handleClickPuzzleRush","dchighscores","dividerFullWidth","LoginModal","loginGoogle","href","closeLoginModal","LoggedInUser","loggedin","class","profilePicture","SignInButton","textToShow","PuzzleRushDifficultyModal","handleClickPuzzleRushModal","action","isLoading","handleClickEasyPuzzleRush","handleClickMediumPuzzleRush","handleClickHardPuzzleRush","handleClickExHardPuzzleRush","wrap","CircularProgress","handleClickRandomGameModal","handleClickEasy","handleClickMedium","handleClickHard","handleClickExHard","ProfilePageCreatedGamesDetails","handleClickPlayGame","ProfilePageSolutionDetails","solution","ProfilePage","useState","expandedGame","setExpandedGame","expandedHighscores","setExpandedHighscores","puzzlerushview","gamesview","ExpansionPanel","expanded","panel","isExpandedGame","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","solutionsview","isExpandedHighScores","maxeasy","averageeasy","averagediffeasy","maxmedium","averagemedium","averagediffmedium","maxhard","averagehard","averagediffhard","maxexhard","averageexhard","averagediffexhard","RandomGamePage","PuzzleRushPage","LessonsPage","learngameslist","DailyChallengePage","dailyChallengeGameslist","AboutUs","ShowDailyPuzzleHistory","size","handleDailyPuzzleHistoryClick","DailyChallengeHistory","expandedPanel","setExpandedPanel","dailychallengehistory","isExpanded","DailyChallengeHistoryAnswersPage","LoadingPage","App","handleDrawerClose","dc_movesList","stringify","dc_playerList","PageSelected","DailyChallenge","handleDrawerOpen","SignInButtonPressed","showLoginModal","showRandomGameModal","showPuzzleRushModal","handleClickDailyChallengeHistory","dailychallengehistoryloaded","challengeHistoryData","historydata","closePuzzleRushLoginModal","closeRandomGameLoginModal","newGame","handleClickProfile","profileDataloaded","profileData","handleHomePageClick","handleClickAboutUs","handleMobileMenuClose","mobileAnchorEl","mobileMenuOpen","showPage","handleMobileMenuOpen","token","createMuiTheme","teal","main","AppBar","clsx","appBar","appBarShift","Toolbar","menuButton","hide","noWrap","grow","sectionDesktop","sectionMobile","aria-haspopup","anchorOrigin","vertical","horizontal","transformOrigin","Badge","badgeContent","Drawer","drawer","anchor","drawerPaper","drawerHeader","drawerHeaderLeft","drawerHeaderRight","useTheme","button","ListItemIcon","contentShift","RandomGameDifficultyModal","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","mixins","toolbar","breakpoints","up","toggleBorder","gradient","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.47b874dc.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nexport default function LearnGameItems(props) {\r\n    const handleClick = () => {\r\n        props.handleClickGame(props.index)\r\n    }\r\n    if (props.selected === props.index) {\r\n        return (\r\n            <Button\r\n                variant=\"contained\" color=\"primary\"\r\n                onClick={handleClick}\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={handleClick}\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n}","export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const MOBILE_INNER_SCREEN_WIDTH = '960';\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.handlePlayerMovementFromMouse(this.props.position);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div id=\"MainGameBoard\" style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleoutsidedraggable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var selectedColor = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        selectedColor = SELECTED_ROBOT;\r\n        borderStyle = \"solid\";\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        borderStyle: borderStyle,\r\n        borderColor: selectedColor,\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.props.tabSelector();\r\n                return;\r\n                break;\r\n            case 32:\r\n                this.props.resetPuzzle();\r\n                return;\r\n                break;\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n\r\n\r\n        }\r\n        this.props.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    onStopDragHandler = (e, position) => {\r\n        this.props.onStopDragHandler(position,this.props.index);\r\n    }\r\n\r\n\r\n    handleCreateMode = () => {\r\n        if (this.props.isCreateMode === 'Yes' && this.props.buildMode) {\r\n            return (\r\n            <Draggable position={{x: this.props.position.left * this.props.dimension, y:this.props.position.top*this.props.dimension}} grid={this.props.draggableGrid} onStop={this.onStopDragHandler} bounds=\"parent\">\r\n                <div onClick={this.handleClick} style={styleoutsidedraggable(this.props)}>\r\n                    <div style={styleinside(this.props)}>\r\n                        <div style={styleinside2(this.props)}/>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n        this.handleCreateMode()\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onkeydown = this.handleKeyDown;\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.isCreateMode === 'Yes'  && props.buildMode) {\r\n        const onStopDragHandler = (e, position) => {\r\n            props.onStopDragHandler(position);\r\n        }\r\n        return(\r\n        <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n            <img src={GOAL_IMAGE} style={styledragable(props)}/>\r\n        </Draggable>\r\n        )\r\n    }\r\n    else {\r\n        return(<img src={GOAL_IMAGE} style={style(props)}/>)\r\n    }\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = '4px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = '4px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = '4px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension;\r\n            width = '4px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    top+=18;\r\n    left+=18;\r\n\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\nexport default (props) => (\r\n    <div style={style(props)}/>\r\n);","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LearnGameItems from '../components/LearnGameItems';\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailySingleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Completed!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves, for this puzzle. Complete all for your final score.\r\n                    </div>\r\n                    <br/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailySingleModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailyFinalModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClickSubmitGame = () => {\r\n        this.props.submitAnswer(this.props.robotPosition)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Completed the Challenge!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickSubmitGame}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailyFinalModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Submit Puzzle</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField id={\"namesubmit\"} label={\"Name of Puzzle\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleModal;\r\n","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Line Indicators\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n\r\n    state = {\r\n            minutes: 5,\r\n            seconds: 0,\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.puzzleRushTimeUp();\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    timer = () => {\r\n        if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n            return (<h2>Time is up!</h2>)\r\n        }\r\n        else {\r\n            return(\r\n                <h2>Time Remaining: {this.state.minutes}:{this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds}</h2>)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            this.timer()\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ToggleSettings from \"../components/ToggleSettings\";\r\nimport Timer from \"../components/Timer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                        copyButtonText: \"Copy Puzzle Link\"\r\n                     };\r\n        this.state.uri = this.props.isDailyChallenge === 'Yes' ? 'dailychallenge' : this.props.uri;\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <div>\r\n                    <Button color=\"secondary\" variant={\"outlined\"} fullWidth={true} onClick={this.handleCreateBoardClick}>Modify Board</Button>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Switch color=\"primary\" checked={this.props.buildMode} onChange={this.props.toggleBuildMode}/>}\r\n                        label=\"Build Mode\"\r\n                            />\r\n                </div>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.state.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        document.getElementsByClassName(\"MuiSlider-thumb\")[0].blur();\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n    showPuzzleLink = () => {\r\n        if (this.props.createMode === 'Yes' || this.props.isPuzzleRush === 'Yes' || this.props.isLesson === 'Yes' || this.props.isDailyChallengeAnswers === 'Yes' || this.props.isDailyChallenge === 'Yes') {\r\n            return null;\r\n        }\r\n        else {\r\n                return(\r\n                     <div style={{paddingBottom: '10px'}}>\r\n                         <Button fullWidth={true} variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                                 onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                     </div>\r\n                    )\r\n        }\r\n    }\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                {this.showPuzzleLink()}\r\n                 <Divider />\r\n                 <Typography\r\n                     color=\"textSecondary\"\r\n                     display=\"block\"\r\n                     variant=\"caption\"\r\n                     style={{paddingBottom: '10px'}}\r\n                 >\r\n                     Board Actions\r\n                 </Typography>\r\n                 <ButtonGroup fullWidth={true} color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     <Button onClick={this.props.undoMove}>Undo</Button>\r\n                 </ButtonGroup>\r\n                 {this.isCreateMode(this.props.createMode)}\r\n                 <ToggleSettings onClick={this.props.toggleLineIndicators}/>\r\n                 <div style={buttonPanel()}>\r\n                     <Typography id=\"discrete-slider-small-steps\"\r\n                                 color=\"textSecondary\"\r\n                                 display=\"inline\"\r\n                                 gutterBottom>\r\n                         Size Of Board\r\n                     </Typography>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={this.props.squareSizeValue}\r\n                         valueLabelDisplay=\"auto\"\r\n                         id=\"sliderelement\"\r\n                     />\r\n                 </div>\r\n                 <Divider/>\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n        <div style={styleelements()}>{'By: ' + highscore.comment}\r\n            <div>\r\n                {'Moves: ' + highscore.numMoves}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <div style={styleouter()}>{'All Highscores:'}\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </div>\r\n)","import React from 'react';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginTop: '30px',\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst CrownCounter = highscore => {\r\n    var crowns = []\r\n    var i;\r\n    for (i=0; i<highscore.wins;i++) {\r\n        crowns.push(<FaCrown/>);\r\n    }\r\n    return (\r\n        <div>\r\n            {crowns}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (<Grid item xs={12}>\r\n                <Paper elevation={3}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={9}>\r\n                            <Typography color={'primary'} style={{float: 'left'}}>\r\n                                {highscore.name}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                                {highscore.wins == 0 || highscore.wins == null ? null : CrownCounter(highscore) }\r\n                                {highscore.user_id != 1 ? <GoVerified/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'textSecondary'}>{highscore.score}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.submitted}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Paper>\r\n            </Grid>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid style={styleouter()} container direction={'column'} spacing={1}>\r\n        {\r\n                highscores.map(highscore =>\r\n                    highscorestyle(highscore)\r\n                )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\n\r\nclass PuzzleRushWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Puzzle Rush - {this.props.difficulty}</DialogTitle>\r\n                <DialogContent dividers>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"h6\">\r\n                            Statistics\r\n                          </Typography>\r\n                          <div>\r\n                            <List dense={true}>\r\n\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Number of Puzzles Completed\"\r\n                                    secondary={this.props.numPuzzlesCompleted}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Percentile\"\r\n                                    secondary={this.props.percentile}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average time Per Puzzle\"\r\n                                    secondary={this.props.averageTime}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average Moves per Puzzle\"\r\n                                    secondary={this.props.averageMoves}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Difference from most optimal Solution\"\r\n                                    secondary={this.props.differenceOptimal}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Moves Per Second\"\r\n                                    secondary={this.props.movesPerSecond}\r\n                                  />\r\n                                </ListItem>\r\n                            </List>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.playPuzzleRushAgain}>Play Again!</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushWinModal;\r\n\r\n","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../../constants/constants';\r\n\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass RandomGameStatsModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answers: null,\r\n        }\r\n    }\r\n\r\n    showStatsModal = () => {\r\n        this.props.handleShowRandomAnswers()\r\n        this.setState({\r\n            answers: this.props.lowestMoveSequence\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-random\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        lowest possible moves: {this.props.lowestMoves}\r\n                    </div>\r\n                    {this.state.answers}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.showStatsModal}>Show Puzzle Answers</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomGameStatsModal;","import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nexport default function CloseIconWithOnClick(props) {\r\n    const handleClose = () => {\r\n        props.handleClose(props.index);\r\n    }\r\n    return (<CloseIcon onMouseDown={handleClose}/>\r\n    )\r\n}","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport CloseIconWithOnClick from './CloseIconWithOnClick'\r\n\r\nexport default function Descriptionlist(props) {\r\n    return(\r\n            <List>\r\n              {\r\n                  props.tipsText.map((text,index) =>\r\n                    <ListItem>\r\n                      <div>\r\n                        {text}\r\n                      </div>\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                          <CloseIconWithOnClick index={index} handleClose={props.handleCloseToolTips}/>\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  )\r\n              }\r\n            </List>\r\n    )\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinLessonModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <Typography> You completed the Lesson! Move on to the next one!\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinLessonModal;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function ShowDailyChallengeScoresCard(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {props.name}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {props.bestScore}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          This Puzzle Moves\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.MovesforPuzzle}\r\n          <br/>\r\n          {props.MoveSequence}\r\n          <br />\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport MovesView from '../components/MovesView';\r\nimport ShowDailyChallengeScoreCard from '../components/ShowDailyChallengeScoresCard'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst stylebelow = () => {\r\n    return {\r\n        marginTop: '40px'\r\n    }\r\n}\r\n\r\nclass DailyChallengeHistoryData extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography style={stylebelow()} variant=\"h4\"> {this.props.difficultyforPuzzle} </Typography>\r\n                <ShowDailyChallengeScoreCard\r\n                    name={\"Robit God\"}\r\n                    bestScore={this.props.bestScore}\r\n                    MovesforPuzzle={this.props.lowestMovesforPuzzle}\r\n                    MoveSequence={this.props.lowestMoveSequence}\r\n                />\r\n                <ShowDailyChallengeScoreCard\r\n                    name={this.props.nameSubmitted}\r\n                    bestScore={this.props.scoreSubmitted}\r\n                    MovesforPuzzle={this.props.playerMovedSequence.length}\r\n                    MoveSequence={<MovesView\r\n                                        moveHistory={this.props.playerMovedSequence} playerState={[{colorSignifier: \"blue\"},{colorSignifier: \"green\"},{colorSignifier: \"red\"},{colorSignifier: \"yellow\"}]}\r\n                                  />}\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyChallengeHistoryData;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent,type) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    if (type === 'blank') {\r\n        var goal = {top: height-1, left: width-1};\r\n        var randompos1 = {top: 0,left: 0, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n        var randompos2 = {top: 0,left: 1, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n        var randompos3 = {top: 1,left: 0, color: ROBOT_RED, colorSignifier: 'red'};\r\n        var randompos4 = {top: 1,left: 1, color: ROBOT_YELLOW, colorSignifier:'yellow'};\r\n    }\r\n    else {\r\n        var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n        var randomPositions = [goal];\r\n        for (var i=0;i<5;i++) {\r\n            randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n        }\r\n        var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n        var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n        var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n        var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    }\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router';\r\nimport Draggable from 'react-draggable';\r\nimport LearnGameItems from '../components/LearnGameItems';\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport YouWinDailySingleModal from '../components/YouWinDailySingleModal';\r\nimport YouWinDailyFinalModal from '../components/YouWinDailyFinalModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport PuzzleRushWinModal from '../containers/Modals/PuzzleRushFinishedModal';\r\nimport RandomGameStatsModal from '../containers/Modals/RandomGameStatsModal';\r\nimport DescriptionList from '../components/DescriptionList';\r\nimport YouWinLessonModal from '../components/YouWinLessonModal';\r\nimport DailyChallengeHistoryData from '../components/DailyChallengeHistoryData';\r\nimport Timer from \"../components/Timer\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if([37, 38, 39, 40, 9].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        padding: '40px'\r\n    };\r\n};\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\nconst formatGeneratedMoveSequence = (moves) => {\r\n    var images = []\r\n    moves.map(move => {\r\n        var color = move.charAt(0);\r\n        var direction = move.charAt(1);\r\n        if (color == 'B') {\r\n            color = 'blue'\r\n        }\r\n        else if (color == 'R') {\r\n            color = 'red'\r\n        }\r\n        else if (color == 'Y') {\r\n            color = 'yellow'\r\n        }\r\n        else {\r\n            color = 'green'\r\n        }\r\n        if (direction == 'N') {\r\n            direction = UP\r\n        }\r\n        else if (direction == 'S') {\r\n            direction = DOWN\r\n        }\r\n        else if (direction == 'E') {\r\n            direction = RIGHT\r\n        }\r\n        else {\r\n            direction = LEFT\r\n        }\r\n        images.push(<img src={DIRECTION_MAP_IMAGES[color][direction]}/>)\r\n    });\r\n    return images\r\n}\r\n\r\n\r\nconst setDefaultSquareSize = (boardWidth) => {\r\n    const drawerWidth = document.getElementById(\"MainDrawer\") == null ? 140 : parseInt(getComputedStyle(document.getElementById(\"MainDrawer\")).width);\r\n    const windowWidth = window.innerWidth;\r\n    var settings = ((windowWidth < 600) ? windowWidth : (windowWidth - drawerWidth) / 1.75);\r\n    settings = settings / boardWidth;\r\n    settings = parseInt(settings);\r\n    settings = settings - (settings % 4);\r\n    if (settings < 16) {\r\n        settings = 16;\r\n    }\r\n    else if (settings > 52) {\r\n        settings = 52;\r\n    }\r\n    return settings;\r\n};\r\n\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.puzzleRush === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.p_id = this.props.p_id;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n            this.state.tipsText = []\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            this.state.moveHistoryList=[];\r\n\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[0].g_solutiondata))\r\n            this.state.lowestMovesforPuzzle = this.props.games[0].g_moves\r\n            this.state.difficultyforPuzzle = this.props.games[0].g_difficulty\r\n            this.state.playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[0]\r\n\r\n            this.state.playerStateList = [];\r\n            this.state.tipsText = [];\r\n            this.state.highscores = [];\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n            console.log(this.props.playerStateList)\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            if (this.props.savedMoves != null) {\r\n                this.state.moveHistoryList = this.props.savedMoves\r\n                this.state.gamesWonDaily = [true,true,true,true]\r\n                this.state.moveHistory = this.props.savedMoves[0].slice()\r\n                this.state.playerState = this.props.playerStateList[0].slice()\r\n            }\r\n            else {\r\n                this.state.moveHistoryList=[];\r\n            }\r\n            this.state.playerStateList = this.props.playerStateList != null ? this.props.playerStateList : [];\r\n            this.state.tipsText = ['Complete All puzzles to complete','Puzzles Reset at 3PM EST'];\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.dc_id = this.props.dc_id;\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.game.g_puzzledata)\r\n            this.state.lowestMoves = this.props.game.g_moves\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.game.g_solutiondata))\r\n            this.state.difficulty = this.props.game.g_difficulty\r\n            this.state.createMode = 'No';\r\n            this.state.gameWon = false;\r\n            this.state.buildMode = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n            this.state.tipsText = ['this game was randomly generated'];\r\n            this.state.uri = this.props.game.g_uri;\r\n            window.history.pushState({id: 'Random Game'},'RobotsEvolved | Random Game','/play/' + this.props.game.g_uri)\r\n        }\r\n        else if (this.props.learnMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n            this.state.tipsText = [this.props.games[0].description];\r\n        }\r\n        else if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.buildMode = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n            this.state.tipsText = []\r\n            window.history.pushState({id: 'Play Game'},'RobotsEvolved | Play Game','/play/'+ this.props.uri)\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,1,'blank');\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                buildMode: true,\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false,\r\n                tipsText: [\r\n                                        'Click on Wall spots to toggle',\r\n                                        'Click and Drag robots or goal to move robots',\r\n                                        'When you are ready, toggle build mode in order to solve the puzzle',\r\n                                        'You must solve the puzzle in order to submit.']\r\n            },board);\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n        }\r\n    };\r\n\r\n    setDefaultSquareSize = (boardWidth) => {\r\n\r\n        const drawerWidth = document.getElementById(\"MainDrawer\")\r\n        const windowWidth = window.innerWidth;\r\n        var settings = windowWidth - drawerWidth;\r\n        settings = ((windowWidth < 600) ? settings : settings / 1.5);\r\n        settings = settings / boardWidth;\r\n        this.setState({\r\n            squareSize: settings,\r\n        });\r\n    };\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                this.setState({\r\n                    highscores: JSON.parse(res.data.highscores),\r\n                });\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    updateDailyHighscores = () => {\r\n        axios.get('/dailychallengehighscores?dc_id=' + this.state.dc_id)\r\n            .then( res => {\r\n                this.setState({\r\n                    highscores: JSON.parse(res.data.highscores),\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.updateHighscores();\r\n            var IntervalId = setInterval(this.updateHighscores, 4000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.updateDailyHighscores();\r\n            var IntervalId = setInterval(this.updateDailyHighscores, 4000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.userInfo !== null) {\r\n            username = window.userInfo.username\r\n        }\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.ColoredLineDirections.length === 0) {\r\n            this.setState({\r\n                ColoredLineDirections: [LEFT,RIGHT,UP,DOWN],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                ColoredLineDirections: [],\r\n            });\r\n        }\r\n    };\r\n\r\n    toggleBuildMode = () => {\r\n        if (this.state.buildMode) {\r\n            this.setState({\r\n                buildMode: false,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n                buildMode: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length, name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeRandomStatsModal = event => {\r\n        this.setState({\r\n            closeRandomStatsModal: false,\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    }\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushFinishedModal = event => {\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: false\r\n        });\r\n\r\n    }\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent, 'blank');\r\n        var squareSize = setDefaultSquareSize(width);\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n            squareSize: squareSize,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n    showStatsModal = () => {\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            showStatsModal: true,\r\n        });\r\n    }\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n\r\n    puzzleRushTimeUp = () => {\r\n        var totalMovesDiff = 0;\r\n        this.state.solutiondifference.map(numMoves => {\r\n            totalMovesDiff += numMoves;\r\n        });\r\n        var averageTime = parseInt(300 / (this.state.numPuzzleon))\r\n        var totalMoves = 0;\r\n        this.state.totalMovesList.map(numMoves => {\r\n            totalMoves += numMoves\r\n        });\r\n        var avgMoves = parseInt(totalMoves / (this.state.numPuzzleon))\r\n        var movesPerSecond = totalMoves / 300;\r\n\r\n        axios.post('/puzzlerushend', {p_id: this.state.p_id,totalMoves: totalMoves,differenceFrom: totalMovesDiff})\r\n            .then( res => {\r\n                console.log(res.data);\r\n            });\r\n\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: true,\r\n            numPuzzlesCompleted: this.state.numPuzzleon,\r\n            percentile: 'TBD%',\r\n            averageTime: averageTime + 's',\r\n            averageMoves: avgMoves,\r\n            differenceOptimal: totalMovesDiff,\r\n            movesPerSecond: movesPerSecond\r\n        });\r\n    }\r\n\r\n    submitDailyAnswer = (LastRobotPosition) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            numMoves += moveHistory.length\r\n        });\r\n        var playerStateList = this.state.playerStateList.slice()\r\n        var playerState = this.state.playerState.slice()\r\n        console.log(this.state.robotSelected)\r\n        playerState[parseInt(this.state.robotSelected)] = LastRobotPosition;\r\n        console.log(playerState[parseInt(this.state.robotSelected)])\r\n        console.log(playerState);\r\n\r\n        playerStateList[this.state.numPuzzleon] = playerState\r\n        console.log(LastRobotPosition);\r\n        console.log(playerState);\r\n        axios.post('/dailychallenge', {score: numMoves, name: document.getElementById(\"namesubmitHS\").value, solutiondata: moveHistoryList, dc_id: this.state.dc_id, playerStateList: playerStateList})\r\n            .then( res => {\r\n                console.log(res)\r\n                this.handleUndoMove();\r\n            });\r\n        this.state.gameWon = false;\r\n    }\r\n\r\n    checkwin = (robotPosition) => {\r\n        if (robotPosition.top === this.state.goal.top && robotPosition.left === this.state.goal.left) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No' && this.props.puzzleRush !== 'Yes') {\r\n                var username = '';\r\n                if (window.userInfo !== null) {\r\n                    username = window.userInfo.username\r\n                }\r\n                if (this.props.randomGame === 'Yes') {\r\n                    return (\r\n                        <RandomGameStatsModal\r\n                            show={this.state.gameWon}\r\n                            lowestMoves={this.state.lowestMoves}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            numMoves={this.state.moveHistory.length}\r\n                            difficulty={this.state.difficulty}\r\n                            resetPuzzle={this.resetPuzzle}\r\n                            handleShowRandomAnswers={this.handleShowRandomAnswers}\r\n                        />\r\n                    );\r\n                }\r\n                else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n                    return null\r\n                }\r\n                else if (this.props.dailyChallengeMode === 'Yes') {\r\n                    var Won=true\r\n                    this.state.gamesWonDaily.map((gameWon,index) => {\r\n                        if (!(index == this.state.numPuzzleon) && !gameWon) {\r\n                            Won = false\r\n                        }\r\n                    });\r\n                    var moveHistoryList = this.state.moveHistoryList\r\n                    moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory\r\n                    var numMoves = 0\r\n                    moveHistoryList.map(moveHistory => {\r\n                        numMoves += moveHistory.length\r\n                    });\r\n                    return (Won ? <YouWinDailyFinalModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={numMoves}\r\n                        submitAnswer={this.submitDailyAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                        undoMove={this.handleUndoMove}\r\n                        robotPosition={robotPosition}\r\n                    /> : <YouWinDailySingleModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        undoMove={this.handleUndoMove}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        games={this.state.games}\r\n                        handleClickGame={this.handleDailyClickGame}\r\n                        numPuzzleon={this.state.numPuzzleon}\r\n                        moveNextPuzzle={this.moveNextPuzzle}\r\n                    />);\r\n                }\r\n                else if (this.props.learnMode === 'Yes') {\r\n                    return  (<YouWinLessonModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                    />);\r\n                }\r\n                else {\r\n                    return  (<YouWinModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        submitAnswer={this.submitAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                    />);\r\n                }\r\n            }\r\n            else if (this.props.puzzleRush === 'Yes'){\r\n                axios.post('/puzzlerushsubmit', {p_id: this.state.p_id,g_id:this.state.games[this.state.numPuzzleon].g_id, moveHistory: this.state.moveHistory})\r\n                    .then( res => {\r\n                        console.log(res.data);\r\n                    });\r\n                var totalMoves = this.state.moveHistory.slice().length\r\n                var totalMovesList = this.state.totalMovesList\r\n                totalMovesList.push(totalMoves)\r\n                var solutionmoves = totalMoves - this.state.games[this.state.numPuzzleon].g_moves\r\n                var solutiondifference = this.state.solutiondifference\r\n                solutiondifference.push(solutionmoves)\r\n                var puzzledata = JSON.parse(this.state.games[this.state.numPuzzleon + 1].g_puzzledata)\r\n                if (this.state.numPuzzleon + 10 > this.state.games.length) {\r\n                    axios.get('/puzzlerushgetmore?p_id=' + this.props.p_id + '&difficulty=' + this.props.difficulty)\r\n                        .then( res => {\r\n                                var games = JSON.parse(res.data.games);\r\n                                var stategames = this.state.games\r\n                                var newarray = stategames.concat(games)\r\n                                this.setState({\r\n                                    games: newarray\r\n                                });\r\n                        });\r\n                }\r\n                this.setState(\r\n                    extend(puzzledata,{numPuzzleon: this.state.numPuzzleon + 1, playerState: puzzledata.playerStart.slice(), gameWon: false, solutiondifference: solutiondifference, totalMovesList: totalMovesList})\r\n                );\r\n\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handleShowRandomAnswers = () => {\r\n        this.setState({\r\n            tipsText: [this.state.lowestMoveSequence]\r\n        })\r\n    }\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false && !this.state.buildMode) {\r\n            var oldPositon = {left: this.state.playerState[this.state.robotSelected].left, top: this.state.playerState[this.state.robotSelected].top};\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left) && !this.state.buildMode) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier,\r\n                    prevPosition: oldPositon\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n            this.checkwin(newPosition);\r\n        }\r\n    };\r\n\r\n    handleCloseToolTips = (index) => {\r\n        this.state.tipsText.splice(index,1);\r\n        this.setState({\r\n            tipsText: this.state.tipsText,\r\n        });\r\n    }\r\n\r\n    moveNextPuzzle = () => {\r\n        this.handleDailyClickGame((this.state.numPuzzleon + 1) % 4)\r\n    }\r\n\r\n    handleLearnClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].puzzledata);\r\n        var squareSize = setDefaultSquareSize(puzzledata.width);\r\n        this.setState(\r\n            extend(puzzledata,{buildMode: false,squareSize: squareSize, numPuzzleon: index, moveHistory: [], gameWon: false, playerState: puzzledata.playerStart.slice(),tipsText: [this.props.games[index].description]})\r\n        );\r\n    }\r\n\r\n    handleDailyClickAnswersGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n        var lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[index].g_solutiondata))\r\n        var lowestMovesforPuzzle = this.props.games[index].g_moves\r\n        var difficultyforPuzzle = this.props.games[index].g_difficulty\r\n        var playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[index]\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory,\r\n                    gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily,\r\n                    lowestMoveSequence: lowestMoveSequence, lowestMovesforPuzzle: lowestMovesforPuzzle, difficultyforPuzzle: difficultyforPuzzle,\r\n                    playerMovedSequence: playerMovedSequence})\r\n        );\r\n    }\r\n\r\n    handleDailyClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily})\r\n        );\r\n    }\r\n\r\n\r\n    loadSidebar = () => {\r\n        if (this.props.learnMode == 'Yes') {\r\n            return (\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\">\r\n                        {\r\n                            this.state.games.map((game,index) =>\r\n                                    <LearnGameItems selected={this.state.numPuzzleon} game={game} name={game.name} index={index} handleClickGame={this.handleLearnClickGame}/>\r\n                            )\r\n                        }\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickAnswersGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeHistoryData\r\n                            lowestMovesforPuzzle={this.state.lowestMovesforPuzzle}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            difficultyforPuzzle={this.state.difficultyforPuzzle}\r\n                            nameSubmitted={this.props.nameSubmitted}\r\n                            playerMovedSequence={this.state.playerMovedSequence}\r\n                            bestScore={this.props.bestScore}\r\n                            scoreSubmitted={this.props.scoreSubmitted}\r\n                         />\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeScores highscores={this.state.highscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.state.createMode === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.puzzleRush) {\r\n            return (\r\n                     <div>\r\n                        <Timer puzzleRushTimeUp={this.puzzleRushTimeUp}>\r\n                        </Timer>\r\n                        <Typography id=\"discrete-slider-small-steps\"\r\n                                     color=\"Primary\"\r\n                                     variant=\"h3\"\r\n                                     display=\"inline\"\r\n                                     gutterBottom>\r\n                             {this.state.numPuzzleon}\r\n                         </Typography>\r\n                     </div>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n            <div style={{display: 'grid'}}>\r\n                <Typography\r\n                    color=\"secondary\"\r\n                    display=\"block\"\r\n                    variant={\"h4\"}\r\n\r\n                >\r\n                    {this.props.name}\r\n                </Typography>\r\n                <br/>\r\n                <HighScores highscores={this.state.highscores}/>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    handlePlayerMovementFromMouse = (posObj) => {\r\n        var newDirection;\r\n        var robot = this.state.playerState[this.state.robotSelected];\r\n        if (posObj.top === robot.top && posObj.left < robot.left)\r\n            newDirection = { top: 0, left: -(this.state.squareSize), dir: LEFT};\r\n        else if (posObj.top === robot.top && posObj.left > robot.left)\r\n            newDirection = { top: 0, left: this.state.squareSize, dir: RIGHT};\r\n        else if (posObj.top < robot.top && posObj.left === robot.left)\r\n            newDirection = { top: -(this.state.squareSize), left: 0, dir: UP};\r\n        else if (posObj.top > robot.top && posObj.left === robot.left)\r\n            newDirection = { top: this.state.squareSize, left: 0, dir: DOWN};\r\n        else newDirection = { top: 0, left: 0, dir: undefined};\r\n        this.handlePlayerMovement(newDirection)\r\n    };\r\n\r\n    handleUndoMove = () => {\r\n        var moveHistory = this.state.moveHistory;\r\n        var playerState = this.state.playerState;\r\n        if (moveHistory.length !== 0) {\r\n            var moveObj = moveHistory.pop();\r\n            playerState[moveObj.robot].left = moveObj.prevPosition.left;\r\n            playerState[moveObj.robot].top = moveObj.prevPosition.top;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n                gameWon: false,\r\n            });\r\n        }\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes' && this.state.buildMode) {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                console.log('clicking horizontal wall');\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onStopDragHandlerGoal = (position) => {\r\n        this.setState({\r\n            goal: {top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize)},\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n        })\r\n    };\r\n\r\n\r\n    onStopDragHandler = (position,index) => {\r\n        var playerState = this.state.playerState.slice();\r\n        var lastX = position.lastX / this.state.squareSize;\r\n        var lastY = position.lastY / this.state.squareSize;\r\n        playerState[index].top = Math.round(lastY);\r\n        playerState[index].left = Math.round(lastX);\r\n        this.setState({\r\n            playerStart: playerState.slice(),\r\n            playerState: playerState,\r\n            moveHistory: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        puzzleRushTimeUp={this.puzzleRushTimeUp}\r\n                        isPuzzleRush={this.props.puzzleRush}\r\n                        numPuzzleRush={this.state.numPuzzleon}\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                        toggleLineIndicators = {this.toggleLineIndicators}\r\n                        toggleBuildMode = {this.toggleBuildMode}\r\n                        undoMove = {this.handleUndoMove}\r\n                        buildMode = {this.state.buildMode}\r\n                        squareSizeValue = {parseInt((this.state.squareSize/4))}\r\n                        isLesson = {this.props.learnMode}\r\n                        isDailyChallenge = {this.props.dailyChallengeMode}\r\n                        isDailyChallengeAnswers = {this.props.dailyChallengeModeAnswers}\r\n                    />\r\n                    <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8} zeroMinWidth>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                        handlePlayerMovementFromMouse={this.handlePlayerMovementFromMouse}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal\r\n                            dimension={this.state.squareSize}\r\n                            position={this.state.goal}\r\n                            onStopDragHandler={this.onStopDragHandlerGoal}\r\n                            draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                            isCreateMode={this.state.createMode}\r\n                            buildMode={this.state.buildMode}\r\n                        />\r\n                        {\r\n                            this.state.ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={LINE_INDICATOR_COLOR}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    onStopDragHandler={this.onStopDragHandler}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                />\r\n                            )\r\n                        }\r\n\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n\r\n                        }\r\n                    </Board>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DescriptionList\r\n                        handleCloseToolTips={this.handleCloseToolTips}\r\n                        tipsText={this.state.tipsText}\r\n                    />\r\n                    {this.loadSidebar()}\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                {\r\n                    this.state.playerState.map(position =>\r\n                        this.checkwin(position))\r\n                }\r\n                <PuzzleRushWinModal\r\n                    show={this.state.showPuzzleRushFinishedModal}\r\n                    closeModal={this.closePuzzleRushFinishedModal}\r\n                    numPuzzlesCompleted={this.state.numPuzzlesCompleted}\r\n                    percentile={this.state.puzzleRushPercentileCompleted}\r\n                    averageTime={this.state.averageTime}\r\n                    averageMoves={this.state.averageMoves}\r\n                    differenceOptimal={this.state.differenceOptimal}\r\n                    movesPerSecond={this.state.movesPerSecond}\r\n                    difficulty={this.props.difficulty}\r\n                />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\"\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        maxWidth: 360,\r\n        height: 175\r\n    },\r\n\r\n    item: {\r\n        padding: 0\r\n    },\r\n\r\n    upperPadding: {\r\n        paddingTop: 3\r\n    },\r\n\r\n    lowerPadding: {\r\n        paddingBottom: 3\r\n    },\r\n\r\n    rightSideText: {\r\n        textAlign: \"right\",\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    },\r\n\r\n    leftSideText: {\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(ComplexGrid)\r\n\r\nfunction ComplexGrid(props) {\r\n    const { classes } = props;\r\n    const handleClick = () => {\r\n        props.handleGameClick(props.game.name, props.game.puzzledata,props.highscores,props.game.uri);\r\n    };\r\n\r\n    var numberOfHighScores = 0;\r\n\r\n    const highscorestyle = highscore => {\r\n        if (numberOfHighScores === 5) return \"\";\r\n        numberOfHighScores++;\r\n        return (\r\n            <ListItem disableGutters={true} classes={{ root: classes.item }}>\r\n                <ListItemText primary={trimName(highscore.comment)} classes={{ root: classes.leftSideText }} />\r\n                <ListItemText secondary={highscore.numMoves} classes={{ root: classes.rightSideText }} />\r\n            </ListItem>\r\n        )\r\n    };\r\n\r\n    const contentDivStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        };\r\n\r\n    };\r\n\r\n    const trimName = name => {\r\n        if (name.length > 10)\r\n            name = name.substring(0, 10) + \"...\";\r\n        return name\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid item xs={12} sm={3}>\r\n            <Card variant=\"outlined\" className={classes.root}>\r\n                <CardContent>\r\n                    <div style={contentDivStyle()}>\r\n                        <div style={{width: '125px'}}>\r\n                            <Tooltip title={props.game.name}>\r\n                                <Typography variant=\"h6\" classes={{ root: classes.lowerPadding }}>\r\n                                    {trimName(props.game.name)}\r\n                                </Typography>\r\n                            </Tooltip>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    By: {trimName(props.game.authorname)}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    {props.game.created}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Plays: {props.highscores.length}\r\n                                </Typography>\r\n                            </div>\r\n                            <br/>\r\n                            <Button onClick={handleClick} classes={{ root: classes.upperPadding }} variant=\"contained\" color=\"primary\">Play</Button>\r\n                        </div>\r\n                        <Divider orientation=\"vertical\" flexItem />\r\n                        <div style={{width: '125px'}}>\r\n                            <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                Top Scores\r\n                            </Typography>\r\n                            <List>\r\n                                {\r\n                                    props.highscores.map(highscore =>\r\n                                        highscorestyle(highscore)\r\n                                    )\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from 'axios';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 400,\r\n    },\r\n    input: {\r\n        marginLeft: 5,\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n        marginLeft: 8,\r\n        marginRight: 8,\r\n    },\r\n});\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = window.gameslist;\r\n        var highscoreslist = window.highscoreslist;\r\n        console.log(gameslist);\r\n        console.log(highscoreslist);\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n            anchorEl: null\r\n        }\r\n    }\r\n\r\n    handleGameClick = (name,gamedata,highscores,uri) => {\r\n        this.props.handleGameClick(name,gamedata,highscores,uri);\r\n    };\r\n\r\n    handleFilterMenuOpen = event => {\r\n        this.setState( {\r\n          anchorEl: event.currentTarget\r\n      });\r\n    };\r\n\r\n    handleCloseFilterMenu = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n    };\r\n\r\n    handleSearchSubmit = event => {\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, offset: 0})\r\n            .then( res => {\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    };\r\n\r\n    render () {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <div id={'GameMain'}>\r\n                <Paper component=\"form\" className={classes.root} >\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        inputRef={ref => this.searchRef = ref}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                this.handleSearchSubmit();\r\n                                event.preventDefault()\r\n                            }\r\n                        }}\r\n                    />\r\n                    <IconButton onClick={this.handleSearchSubmit} className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <Divider className={classes.divider} orientation=\"vertical\" />\r\n                    <Button\r\n                        onClick={this.handleFilterMenuOpen}\r\n                        startIcon={<FilterListIcon />}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        Sort\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(this.state.anchorEl)}\r\n                        onClose={this.handleCloseFilterMenu}\r\n                    >\r\n                        <MenuItem onClick={this.handleCloseFilterMenu}>Most Popular</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenu}>Hottest</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenu}>Newest</MenuItem>\r\n                    </Menu>\r\n                </Paper>\r\n                <br/>\r\n                <Grid container alignItems={\"stretch\"} spacing={2}>\r\n                    {\r\n                        this.state.gameslist.map((game,index)=>\r\n                            <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(FindGame);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame={'Yes'}\r\n                  name={this.props.name}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  homepage: {\r\n    marginTop: '40px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  baseExpansion: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: '10px'\r\n  },\r\n  darkmode: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      marginTop: '150px',\r\n  },\r\n  iconcards: {\r\n    width: '250px',\r\n    display: 'inline-block',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  iconcardsDaily: {\r\n    maxWidth: 345,\r\n    minWidth: 250,\r\n    float: 'left',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  titlehome: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '30px',\r\n  },\r\n  iconfonts: {\r\n    fontFamily: \"'Arvo', serif\",\r\n  },\r\n  createboardcard: {\r\n    ':hover': {\r\n        content: '/static/images/CreateBoardCardIconPlaced.png',\r\n    }\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport FindGameElements from \"../containers/FindGameElements\";\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n\r\n    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n        return (<div className={classes.homepage} >\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                        </Typography>\r\n                        <Typography variant=\"p2\" paragraph={true}> Create your own Robots Boards and challenge others to solve them, or play puzzle rush and get better.\r\n                        </Typography>\r\n                        <br/>\r\n                        <img width=\"400\" height=\"225\" src='/static/videos/basic.gif'/>\r\n                        <br/>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                        <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                        </Typography>\r\n                        <Typography> Robots Evolved New Homepage!!! <br/>Almost Done with the project expect a release date of 8/1/2020\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container item alignItems={\"stretch\"} spacing={2} alignItems=\"center\" justify=\"center\" >\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickCreateGame}>\r\n                                    <CardMedia\r\n                                        className={classes.createboardcard}\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                        title=\"Create Board\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Create Board\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickFindGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Find a Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/FindAGameCardIcon.png\"\r\n                                        title=\"Find a Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Find a Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/DailyChallengeIcon.png\"\r\n                                        title=\"Daily Challenge\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Daily Challenge\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickRandomGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Play a Random Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/puzzle.png\"\r\n                                        title=\"Play a Random Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Play a Random Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickLearnGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                        title=\"Learn\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Learn\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Contemplative Reptile\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/PuzzleRushIcon.png\"\r\n                                        title=\"Contemplative Reptile\"\r\n                                    />\r\n                                    <CardContent style={{textAlign: 'center'}}>\r\n                                        <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            Puzzle Rush\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                        <Typography className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                        </Typography>\r\n                        <DailyChallengeScores highscores={window.dchighscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (<div className={classes.homepage}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> Controls\r\n                    </Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Movement\r\n                        </Typography>\r\n                    <img width={'20%'} height={'auto'} src={\"/static/images/keyboard.png\"}/>\r\n                    <Typography>Or use mouse button to click on the Robot you want to move</Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Selecting robots\r\n                        </Typography>\r\n                        <img width={'20%'} height={'auto'} src={\"/static/images/tab.png\"}/>\r\n\r\n                    <Typography>Or use mouse button to click</Typography>\r\n                    <Divider/>\r\n                    <div style={{marginTop:'100px'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                    </Typography>\r\n                    <Typography> Robots Evolved New Homepage!!! <br/>Almost Done with the project expect a release date of 8/1/2020\r\n                    </Typography>\r\n                    </div>\r\n\r\n                </Grid>\r\n                <Grid item xs={8} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                    </Typography>\r\n                    <Typography variant=\"p2\"> Create your own Robots Boards and challenge others to solve them, or play puzzle rush and get better.\r\n                    </Typography>\r\n                    <br/>\r\n                        <img width=\"400\" height=\"225\" src='/static/videos/basic.gif'/>\r\n                    <br/>\r\n                    <Card className={classes.iconcards}>\r\n                              <CardActionArea onClick={props.handleClickCreateGame}>\r\n                                <CardMedia\r\n                                  className={classes.createboardcard}\r\n                                  component=\"img\"\r\n                                  alt=\"Create Board\"\r\n                                  height=\"140\"\r\n                                  image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                  title=\"Create Board\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Create Board\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </Card>\r\n                            <Card className={classes.iconcards}>\r\n                              <CardActionArea onClick={props.handleClickFindGame}>\r\n                                <CardMedia\r\n                                  component=\"img\"\r\n                                  alt=\"Find a Game\"\r\n                                  height=\"140\"\r\n                                  image=\"/static/images/FindAGameCardIcon.png\"\r\n                                  title=\"Find a Game\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Find a Game\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </Card>\r\n                            <Card className={classes.iconcards}>\r\n                              <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                                <CardMedia\r\n                                  component=\"img\"\r\n                                  alt=\"Create Board\"\r\n                                  height=\"140\"\r\n                                  image=\"/static/images/DailyChallengeIcon.png\"\r\n                                  title=\"Daily Challenge\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Daily Challenge\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </Card>\r\n                            <Card className={classes.iconcards}>\r\n                    <CardActionArea onClick={props.handleClickRandomGame}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\"Play a Random Game\"\r\n                            height=\"140\"\r\n                            image=\"/static/images/puzzle.png\"\r\n                            title=\"Play a Random Game\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                Play a Random Game\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickLearnGame}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Create Board\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                title=\"Learn\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Learn\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Contemplative Reptile\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/PuzzleRushIcon.png\"\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent style={{textAlign: 'center'}}>\r\n                                <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Puzzle Rush\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                <Typography className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                </Typography>\r\n                <DailyChallengeScores highscores={window.dchighscores}/>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeLoginModal}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>Login to Robits</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <img onClick={this.loginGoogle} src={\"/static/images/btn_google_signin_light_normal_web@2x.png\"}></img>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeLoginModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '40px',\r\n        width: '40px',\r\n        marginTop: '5px',\r\n    };\r\n};\r\n\r\nconst divStyle = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        width: '200px',\r\n    };\r\n};\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return null\r\n        }\r\n        else {\r\n            return (\r\n                <div style={divStyle()}>\r\n                    <div>{window.userInfo.username}</div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <Button color=\"primary\" onClick={this.handleClick}>{textToShow}</Button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\n\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty) => {\r\n        console.log(difficulty)\r\n        axios.post('/puzzlerush', {difficulty: difficulty, action: 'start'})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            isLoading: false,\r\n                        });\r\n                        this.props.handleClickPuzzleRush(difficulty,games,p_id);\r\n                });\r\n    };\r\n\r\n    handleClickEasyPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('easy')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMediumPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('medium')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('hard')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('Exteremly Hard')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                                {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                                                        ) : (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                         <Grid item xs={12}>\r\n                                            <Button onClick={this.handleClickEasyPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Easy\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Button onClick={this.handleClickMediumPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Medium\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Button onClick={this.handleClickHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Hard\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Button onClick={this.handleClickExHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Exteremely Hard\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickRandomGameModal = (difficulty) => {\r\n        axios.get('/randomgame?difficulty=' + difficulty)\r\n            .then( res => {\r\n                var game = JSON.parse(res.data.game);\r\n                this.setState({\r\n                    isLoading: false,\r\n                });\r\n                this.props.handleClickRandomGame(game,difficulty);\r\n            })\r\n    }\r\n\r\n\r\n    handleClickEasy = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('easy')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMedium = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('medium')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHard = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('hard')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHard = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('Exteremly Hard')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                            {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                            ) : (\r\n                            <Grid\r\n                                container xs={12}\r\n                                spacing={4}\r\n                                direction=\"column\"\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n                                wrap=\"nowrap\"\r\n                            >\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.handleClickEasy} variant=\"contained\" color=\"primary\">\r\n                                        Easy\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.handleClickMedium} variant=\"contained\" color=\"primary\">\r\n                                        Medium\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.handleClickHard} variant=\"contained\" color=\"primary\">\r\n                                        Hard\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.handleClickExHard} variant=\"contained\" color=\"primary\">\r\n                                        Exteremely Hard\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageCreatedGamesDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.game.name,props.game.puzzledata,[],props.game.uri);\r\n    }\r\n\r\n    return (<div>\r\n            <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography> Highscore Holder: </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.game.username} - {props.game.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageSolutionDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.solution.name,props.solution.puzzledata,[],props.solution.uri);\r\n    }\r\n    return (<div>\r\n              <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography> Highscore Holder: </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.solution.name} - {props.solution.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useStyles from '../Material-UI/themes';\r\nimport ProfilePageCreatedGamesDetails from '../components/ProfilePageComponents/ProfilePageCreatedGamesDetails';\r\nimport ProfilePageSolutionDetails from '../components/ProfilePageComponents/ProfilePageSolutionDetails';\r\n\r\n\r\n\r\nexport default function ProfilePage(props) {\r\n    const classes = useStyles();\r\n    const [expandedGame, setExpandedGame] = React.useState(false);\r\n    const [expandedHighscores, setExpandedHighscores] = React.useState(false);\r\n    const handleChangeGame = (panel) => (event, isExpandedGame) => {\r\n        setExpandedGame(isExpandedGame ? panel : false);\r\n    };\r\n    const handleChangeHighscores = (panel) => (event, isExpandedHighScores) => {\r\n        setExpandedHighscores(isExpandedHighScores ? panel : false);\r\n    };\r\n    console.log(props.puzzlerushview);\r\n    return (\r\n            <div id={'GameMain'} className={classes.root}>\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item xs={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Created</Typography>\r\n                        {\r\n                            props.gamesview.map((game,index) =>\r\n                                    <ExpansionPanel expanded={expandedGame === 'panelgame' + index} onChange={handleChangeGame('panelgame' + index)}>\r\n                                        <ExpansionPanelSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls={\"panel\" + index + \"-content\"}\r\n                                          id={\"panel\" + index + \"-header\"}\r\n                                        >\r\n                                          <Typography className={classes.heading}>{game.name}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Plays: </Typography>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                          <ProfilePageCreatedGamesDetails\r\n                                            game={game}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                          />\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Solved</Typography>\r\n                        {\r\n                            props.solutionsview.map((solution,index) =>\r\n                                <ExpansionPanel expanded={expandedHighscores === 'panelhigh' + index} onChange={handleChangeHighscores('panelhigh' + index)}>\r\n                                    <ExpansionPanelSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls={\"panel\" + index + \"-content\"}\r\n                                      id={\"panel\" + index + \"-header\"}\r\n                                    >\r\n                                      <Typography className={classes.heading}>{solution.name}</Typography>\r\n                                      <Typography className={classes.secondaryHeading}>Score: {solution.numMoves}</Typography>\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <ProfilePageSolutionDetails\r\n                                            solution={solution}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                        />\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Puzzle Rush Data:</Typography>\r\n                        <Paper>\r\n                              <Typography className={classes.heading}>Easy</Typography>\r\n                              <Typography className={classes.secondaryHeading}>Best Score: {props.puzzlerushview.maxeasy}</Typography>\r\n                              <Typography>\r\n                                Average Score: {props.puzzlerushview.averageeasy}\r\n                              </Typography>\r\n                              <Typography>\r\n                                Average Difference of Moves from Optimal Solution: {props.puzzlerushview.averagediffeasy}\r\n                              </Typography>\r\n                          </Paper>\r\n                          <br/>\r\n                          <Paper>\r\n                              <Typography className={classes.heading}>Medium</Typography>\r\n                              <Typography className={classes.secondaryHeading}>Best Score: {props.puzzlerushview.maxmedium}</Typography>\r\n                              <Typography>\r\n                                Average Score: {props.puzzlerushview.averagemedium}\r\n                              </Typography>\r\n                              <Typography>\r\n                                Average Difference of Moves from Optimal Solution: {props.puzzlerushview.averagediffmedium}\r\n                              </Typography>\r\n                            </Paper>\r\n                            <br/>\r\n                            <Paper>\r\n                              <Typography className={classes.heading}>Hard</Typography>\r\n                              <Typography className={classes.secondaryHeading}>Best Score: {props.puzzlerushview.maxhard}</Typography>\r\n                              <Typography>\r\n                                Average Score: {props.puzzlerushview.averagehard}\r\n                              </Typography>\r\n                              <Typography>\r\n                                Average Difference of Moves from Optimal Solution: {props.puzzlerushview.averagediffhard}\r\n                              </Typography>\r\n                            </Paper>\r\n                            <br/>\r\n                            <Paper>\r\n                              <Typography className={classes.heading}>Extremely Hard</Typography>\r\n                              <Typography className={classes.secondaryHeading}>Best Score: {props.puzzlerushview.maxexhard}</Typography>\r\n                              <Typography>\r\n                                Average Score: {props.puzzlerushview.averageexhard}\r\n                              </Typography>\r\n                              <Typography>\r\n                                Average Difference of Moves from Optimal Solution: {props.puzzlerushview.averagediffexhard}\r\n                              </Typography>\r\n                            </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nexport default function RandomGamePage(props) {\r\n    return (\r\n        <Game randomGame={'Yes'}\r\n              game={props.game}\r\n              difficulty={props.difficulty}\r\n         />\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PuzzleRushPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game puzzleRush={'Yes'}\r\n                  p_id={this.props.p_id}\r\n                  games={this.props.games}\r\n                  difficulty={this.props.difficulty}\r\n             />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PuzzleRushPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass LessonsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game learnMode={'Yes'} games={window.learngameslist}/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default LessonsPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game dailyChallengeMode={'Yes'} playerStateList={this.props.playerStateList} savedMoves={this.props.savedMoves} games={window.dailyChallengeGameslist} dc_id={window.dc_id} highscores={window.dchighscores}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengePage;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function AboutUs(props) {\r\n    return (<div id=\"GameMain\">\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item spacing={4} xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Typography variant={'body1'}>\r\n                            RobotsEvolved.com is based on the board game Ricochet Robots. We have several game modes and variants that are inspired by the several Chess variants on the internet. Tell your friends about the site and get people on here!\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Paper>\r\n                            <Typography color={'textPrimary'} variant={\"h2\"}>\r\n                                Classic\r\n                            </Typography>\r\n                            <Typography variant={\"body1\"} paragraph={true}>\r\n                                Classic Puzzles are based on the original Game. These Puzzles only have walls that are L shaped and a goal is in the center of one of them.\r\n                            </Typography>\r\n                            <Typography variant={\"h2\"} display={\"inline\"}>\r\n                                Random\r\n                            </Typography>\r\n                            <Typography variant={\"body1\"} paragraph={true}>\r\n                                Random Puzzles are created by having a 10% chance for a wall to spawn in Any location possible wall location, Goals and Robit placements are completely random also.\r\n                            </Typography>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Paper>\r\n                            <Typography variant={\"h4\"}>\r\n                                Easy\r\n                            </Typography>\r\n                            <Typography variant={\"body2\"} paragraph={true}>\r\n                                Puzzles of this difficulty always can be solved in 5-8 Moves\r\n                            </Typography>\r\n                            <Typography variant={\"h4\"}>\r\n                                Medium\r\n                            </Typography>\r\n                            <Typography variant={\"body2\"} paragraph={true}>\r\n                                Puzzles of this difficulty always can be solved in 9-13 Moves\r\n                            </Typography>\r\n                            <Typography variant={\"h4\"}>\r\n                                Hard\r\n                            </Typography>\r\n                            <Typography variant={\"body2\"} paragraph={true}>\r\n                                Puzzles of this difficulty always can be solved in 13-18 Moves\r\n                            </Typography>\r\n                            <Typography variant={\"h4\"} >\r\n                                Extremely Hard\r\n                            </Typography>\r\n                            <Typography variant={\"body2\"} paragraph={true}>\r\n                                Puzzles of this difficulty always can be solved in 18-23 Moves\r\n                            </Typography>\r\n                            <Typography variant={\"h4\"}>\r\n                                God Tier\r\n                            </Typography>\r\n                            <Typography variant={\"body2\"} paragraph={true}>\r\n                                Puzzles of this difficulty always can be solved in over 23 Moves\r\n                            </Typography>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div class=\"row3\">\r\n                          <div class=\"column3\">\r\n                            <div class=\"card3\">\r\n                              <img src={\"/static/images/284457_10151211078621477_839164197_n.jpg\"} alt=\"Jane\"/>\r\n                              <div class=\"container3\">\r\n                                <h2>Kyle Kwasniewski</h2>\r\n                                <p class=\"title3\">Creator &amp; FullStack Dev.</p>\r\n                                <p>This Project was made in order to learn React as a web-framework. If there are any features that you would like to see then feel free to email my personal email below.</p>\r\n                                <p>robotsevolved@gmail.com</p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"column3\">\r\n                            <div class=\"card3\">\r\n                              <img src={\"/static/images/284f909d-0d5c-4ae1-b100-76c9d46ae7d4.png\"} alt=\"Mike\"/>\r\n                              <div class=\"container3\">\r\n                                <h2>Jonah Tollefson</h2>\r\n                                <p class=\"title3\">Front-End Dev.</p>\r\n                                <p>Went to college with these other goobers in the US and now I work professionally as a software engineer in Germany. For RobotsEvolved, I mainly worked on the frontend using React. Cats and Ultimate Frisbee are life.</p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"column3\">\r\n                            <div class=\"card3\">\r\n                              <img src={\"/static/images/derekschultz.jpg\"} alt=\"John\"/>\r\n                              <div class=\"container3\">\r\n                                <h2>Derek Schultz</h2>\r\n                                <p class=\"title3\">Back-End Dev.</p>\r\n                                <p>Full time Software Engineer. Graduated from University of Wisconsin Platteville with a BS in Computer Science and Minor in Business Administration. Worked on most of the database aspect of RobotsEvolved and some back end functionality. I enjoy video games, beer, and playing darts.</p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        </Grid>\r\n                  </Grid>\r\n                </div>\r\n\r\n\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nexport default function ShowDailyPuzzleHistory(props) {\r\n    const handleDailyPuzzleHistoryClick = event => {\r\n        console.log(props.history)\r\n        props.handleDailyPuzzleHistoryClick(props.history)\r\n    }\r\n    return (\r\n            <Button size=\"small\" color=\"primary\" onClick={handleDailyPuzzleHistoryClick}>\r\n                 details\r\n            </Button>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport ShowDailyPuzzleHistory from '../components/ShowDailyPuzzleHistory';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ProfilePageCreatedGamesDetails from \"../components/ProfilePageComponents/ProfilePageCreatedGamesDetails\";\r\n\r\n\r\n\r\nexport default function DailyChallengeHistory(props) {\r\n    const [expandedPanel, setExpandedPanel] = React.useState(false);\r\n    const handleChangePanel = (panel) => (event, isExpanded) => {\r\n        setExpandedPanel(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles();\r\n    return (<div id={'GameMain'}>\r\n                <Typography className={classes.titlehome} variant=\"h3\">Daily Challenge History</Typography>\r\n                {\r\n                    props.dailychallengehistory.map((history, index) =>\r\n                        <ExpansionPanel expanded={expandedPanel === 'panelgame' + index} onChange={handleChangePanel('panelgame' + index)}>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={\"panel\" + index + \"-content\"}\r\n                                id={\"panel\" + index + \"-header\"}\r\n                            >\r\n                                <Typography className={classes.heading}>{history.created}</Typography>\r\n                                <Typography className={classes.secondaryHeading}>Winner: {history.nameSubmitted}</Typography>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <div>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        <FaCrown/> {history.nameSubmitted} - {history.scoreSubmitted} <FaCrown/>\r\n                                    </Typography>\r\n                                    <Typography className={classes.secondaryHeading}>Lowest possible solution: {history.bestScore}</Typography>\r\n                                    <br/>\r\n                                    <ShowDailyPuzzleHistory history={history} handleDailyPuzzleHistoryClick={props.handleDailyPuzzleHistoryClick}/>\r\n                                </div>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                    )\r\n                }\r\n           </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengeHistoryAnswersPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        console.log(this.props.history);\r\n        return (\r\n            <Game dailyChallengeModeAnswers={'Yes'}\r\n                nameSubmitted={this.props.history.nameSubmitted}\r\n                bestScore={this.props.history.bestScore}\r\n                created={this.props.history.created}\r\n                games={this.props.history.games}\r\n                playerStateList={this.props.history.playerStateList}\r\n                scoreSubmitted={this.props.history.scoreSubmitted}\r\n                solutionDataSubmitted={this.props.history.solutionDataSubmitted}\r\n                submitted={this.props.history.submitted}\r\n                user_id={this.props.user_id}\r\n                />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengeHistoryAnswersPage;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n  },\r\n}));\r\n\r\nexport default function LoadingPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress size={120} color=\"secondary\" />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport clsx from 'clsx';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport Home from './Pages/Home';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\nimport axios from 'axios';\r\nimport Game from './containers/Game';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"./constants/constants\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport PuzzleRushDifficultyModal from \"./containers/Modals/PuzzleRushDifficultyModal\";\r\nimport RandomGameDifficultyModal from \"./containers/Modals/RandomGameDifficultyModal\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport RandomGamePage from \"./Pages/RandomGamePage\";\r\nimport PuzzleRushPage from \"./Pages/PuzzleRushPage\";\r\nimport LessonsPage from \"./Pages/LessonsPage\";\r\nimport DailyChallengePage from \"./Pages/DailyChallenge\";\r\nimport AboutUs from \"./Pages/AboutUs\";\r\nimport DailyChallengeHistory from \"./Pages/DailyChallengeHistory\";\r\nimport DailyChallengeHistoryAnswersPage from \"./Pages/DailyChallengeHistoryAnswersPage\";\r\nimport { FaMedal } from 'react-icons/fa';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport LoadingPage from './components/LoadingPage';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    drawerHeaderRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerHeaderLeft: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    dividerFullWidth: {\r\n        margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    darkmode: {\r\n          body: '#363537',\r\n          text: '#FAFAFA',\r\n          toggleBorder: '#6B8096',\r\n          gradient: 'linear-gradient(#091236, #1E215D)',\r\n    },\r\n});\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (window.uri === '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n                dailychallengehistoryloaded: false,\r\n                profileDataloaded: false,\r\n            };\r\n        }\r\n        else {\r\n            if (window.token.g_id == undefined) {\r\n                this.state = {\r\n                    PageSelected: <PlayGame name={window.token.name} gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri}/>, //when uri is entered to play specific game\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                };\r\n            }\r\n            else {\r\n                this.state = {\r\n                    PageSelected: <RandomGamePage randomGame={'Yes'} game={window.token} difficulty={window.token.g_difficulty}/>,\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                }\r\n            }\r\n        }\r\n        this.state.open = true;\r\n        this.state.mobileAnchorEl = null;\r\n        this.state.mobileMenuOpen = false;\r\n        this.state.showLoginModal = false;\r\n        this.state.showPuzzleRushModal = false;\r\n    }\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState( {\r\n            open: false\r\n        })\r\n    };\r\n\r\n    handleClickDailyChallenge = (event) => {\r\n        event.preventDefault();\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        const dc_movesList = window.dc_movesList == null ? null : JSON.parse(JSON.stringify(window.dc_movesList))\r\n        const dc_playerList = window.dc_playerList == null ? null : JSON.parse(JSON.stringify(window.dc_playerList))\r\n        this.setState({\r\n            PageSelected: <DailyChallengePage savedMoves={dc_movesList} playerStateList={dc_playerList}/>,\r\n        });\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState( {\r\n            open: true\r\n        });\r\n    };\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type === 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    };\r\n\r\n    handleClickRandomGameModal = (game,difficulty) => {\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showRandomGameModal: false,\r\n            PageSelected: <RandomGamePage randomGame={'Yes'} game={game} difficulty={difficulty}/>,\r\n        });\r\n    }\r\n\r\n    handleClickRandomGame = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: true,\r\n        });\r\n    }\r\n\r\n\r\n    handleClickPuzzleRush = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: true,\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallengeHistory = (event) => {\r\n        event.preventDefault();\r\n        if (!this.state.dailychallengehistoryloaded) {\r\n            axios.get('/getDailyChallengeHistory')\r\n                .then( res => {\r\n                        var isOpen = true;\r\n                        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                            isOpen = false\r\n                        }\r\n                        var historydata = JSON.parse(res.data)\r\n                        this.setState({\r\n                            PageSelected: <DailyChallengeHistory handleDailyPuzzleHistoryClick={this.handleDailyPuzzleHistoryClick} dailychallengehistory={historydata}/>,\r\n                            challengeHistoryData: historydata,\r\n                            dailychallengehistoryloaded: true,\r\n                        });\r\n                });\r\n            this.setState({\r\n                PageSelected: <LoadingPage/>,\r\n            });\r\n        }\r\n        else {\r\n            var isOpen = true;\r\n            if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                isOpen = false\r\n            }\r\n            this.setState({\r\n                PageSelected: <DailyChallengeHistory handleDailyPuzzleHistoryClick={this.handleDailyPuzzleHistoryClick} dailychallengehistory={this.state.challengeHistoryData}/>,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleDailyPuzzleHistoryClick = history => {\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <DailyChallengeHistoryAnswersPage history={history}/>,\r\n        });\r\n    }\r\n\r\n    handleClickPuzzleRushModal = (difficulty,games,p_id) => {\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showPuzzleRushModal: false,\r\n            PageSelected: <PuzzleRushPage puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={difficulty}/>,\r\n        });\r\n    };\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: false\r\n        });\r\n    }\r\n\r\n    closeRandomGameLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: false\r\n        });\r\n    }\r\n\r\n    handleGameClick = (name, gamedata,highscores,uri) => {\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <PlayGame name={name} highscores={highscores} gamedata={gamedata} uri={uri}/>,\r\n        });\r\n    };\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var newGame = <CreateGame state={\"new\"}/>; //KNOWN bug where if you create a game you have to refresh the page to cause a re-render of <CreateGame/>\r\n\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: newGame, //if selected page is already CreateGame it wont refresh known problem\r\n        });\r\n    };\r\n\r\n\r\n    handleClickProfile = event => {\r\n        if (window.loggedin === 'Yes') {\r\n            if (!this.state.profileDataloaded) {\r\n                    axios.get('/getProfileData')\r\n                        .then( res => {\r\n                            var isOpen = true;\r\n                            if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                                isOpen = false\r\n                            }\r\n                            var profileData = res.data;\r\n                            var gamesview = JSON.parse(profileData.gamesview)\r\n                            var solutionsview = JSON.parse(profileData.solutionsview)\r\n                            var puzzlerushview = JSON.parse(profileData.puzzlerushview)\r\n                            this.setState({\r\n                                PageSelected: <ProfilePage handleClickPlayGame={this.handleGameClick} gamesview={gamesview} solutionsview={solutionsview} puzzlerushview={puzzlerushview}/>,\r\n                                gamesview: gamesview,\r\n                                solutionsview: solutionsview,\r\n                                puzzlerushview: puzzlerushview,\r\n                                profileDataloaded: true,\r\n                            });\r\n                        });\r\n                    this.setState({\r\n                        PageSelected: <LoadingPage/>,\r\n                    });\r\n                }\r\n                else {\r\n                    var isOpen = true;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    this.setState({\r\n                        PageSelected: <ProfilePage handleClickPlayGame={this.handleGameClick} gamesview={this.state.gamesview} solutionsview={this.state.solutionsview} puzzlerushview={this.state.puzzlerushview}/>,\r\n                    });\r\n                }\r\n        }\r\n        else {\r\n            this.SignInButtonPressed('Sign in');\r\n        }\r\n    };\r\n\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <FindGame handleGameClick={this.handleGameClick}/>,\r\n        });\r\n    };\r\n\r\n    handleHomePageClick = () => {\r\n        this.setState({\r\n            PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n        });\r\n    }\r\n\r\n\r\n    handleClickAboutUs = event => {\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <AboutUs/>,\r\n        });\r\n    }\r\n\r\n    handleClickLearnGame = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            PageSelected: <LessonsPage/>,\r\n        });\r\n\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileAnchorEl: null,\r\n            mobileMenuOpen: false\r\n        });\r\n    };\r\n\r\n    showPage = () => {\r\n        return(\r\n            this.state.PageSelected\r\n        )\r\n    }\r\n\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({\r\n            mobileAnchorEl: event.currentTarget,\r\n            mobileMenuOpen: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const theme = createMuiTheme({\r\n            palette: {\r\n                primary: teal,\r\n                secondary: {\r\n                    main: '#e65100',\r\n                },\r\n            }\r\n        });\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <AppBar\r\n                        position=\"fixed\"\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: this.state.open,\r\n                        })}\r\n                     >\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={this.handleDrawerOpen}\r\n                                edge=\"start\"\r\n                                className={clsx(classes.menuButton, this.state.open && classes.hide)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <img onClick={this.handleHomePageClick} width={50} height={50} src=\"/static/images/logo150.png\"/>\r\n                            <Typography variant=\"h6\" className={classes.title} noWrap>\r\n                                <a href=\"/\" style={{color: 'white'}}>RobotsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </Typography>\r\n                            <div className={classes.grow} />\r\n                            <div className={classes.sectionDesktop}>\r\n                                <LoggedInUser/>\r\n                            </div>\r\n                            <div className={classes.sectionMobile}>\r\n                                <IconButton\r\n                                    aria-label=\"show more\"\r\n                                    aria-controls={\"primary-search-account-menu-mobile\"}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.handleMobileMenuOpen}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <MoreIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Menu\r\n                        anchorEl={this.state.mobileAnchorEl}\r\n                        anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        id={\"primary-search-account-menu-mobile\"}\r\n                        keepMounted\r\n                        transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        open={this.state.mobileMenuOpen}\r\n                        onClose={this.handleMobileMenuClose}\r\n                    >\r\n                        <MenuItem>\r\n                            <LoggedInUser/>\r\n                        </MenuItem>\r\n                        <MenuItem>\r\n                            <p>Notifications</p>\r\n                            <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                                <Badge badgeContent={11} color=\"secondary\">\r\n                                    <NotificationsIcon/>\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                    <Drawer\r\n                        id=\"MainDrawer\"\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.state.open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div className={classes.drawerHeader}>\r\n                            <div className={classes.drawerHeaderLeft}>\r\n                                <SignInButton onClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.drawerHeaderRight}>\r\n                                <IconButton onClick={this.handleDrawerClose}>\r\n                                    {useTheme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Play\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Create a Game'} onClick={this.handleClickCreateGame}>\r\n                                <ListItemIcon><PlayArrowIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Create a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Find a Game'} onClick={this.handleClickFindGame}>\r\n                                <ListItemIcon><SearchIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Find a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge'} onClick={this.handleClickDailyChallenge}>\r\n                                <ListItemIcon><TodayIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Random Game'} onClick={this.handleClickRandomGame}>\r\n                                <ListItemIcon><CasinoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Random Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Puzzle Rush'} onClick={this.handleClickPuzzleRush}>\r\n                                <ListItemIcon><TimerIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Puzzle Rush'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Learn\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Lessons'} onClick={this.handleClickLearnGame}>\r\n                                <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Lessons'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Starter Puzzles'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Starter Puzzles'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Community\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Profile'} onClick={this.handleClickProfile}>\r\n                                <ListItemIcon><AccountBoxIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Profile'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge History'} onClick={this.handleClickDailyChallengeHistory}>\r\n                                <ListItemIcon><FaMedal /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge History'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Tools\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'About'} onClick={this.handleClickAboutUs}>\r\n                                <ListItemIcon><InfoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'About'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Settings'}>\r\n                                <ListItemIcon><SettingsIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Settings'} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n                    <main className={clsx(classes.content, {\r\n                        [classes.contentShift]: this.state.open,\r\n                    })}>\r\n                        <div className={classes.drawerHeader} />\r\n                        {this.showPage()}\r\n                    </main>\r\n                    <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n                    <PuzzleRushDifficultyModal\r\n                        closeModal={this.closePuzzleRushLoginModal}\r\n                        show={this.state.showPuzzleRushModal}\r\n                        handleClickPuzzleRush={this.handleClickPuzzleRushModal}\r\n                    />\r\n                    <RandomGameDifficultyModal\r\n                        closeModal={this.closeRandomGameLoginModal}\r\n                        show={this.state.showRandomGameModal}\r\n                        handleClickRandomGame={this.handleClickRandomGameModal}\r\n                    />\r\n                </div>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}