{"version":3,"sources":["constants/constants.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinModal.jsx","components/AddPuzzleModal.jsx","components/ToggleSettings.js","components/Timer.js","containers/DisplayView.js","components/HighScores.jsx","containers/Modals/PuzzleRushFinishedModal.js","components/boardgenerator.js","containers/Modals/BoardResetModal.js","containers/Game.js","Material-UI/themes.jsx","Pages/CreateGame.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","Pages/Home.js","containers/Modals/LoginModal.js","components/LoggedInUser.js","components/SignInButton.js","containers/Modals/PuzzleRushDifficultyModal.js","App.js","serviceWorker.js","index.js"],"names":["UP","DIRECTION_MAP_IMAGES","yellow","DOWN","LEFT","RIGHT","red","green","blue","MovesView","props","style","width","float","display","this","moveHistory","length","map","move","src","playerState","robot","colorSignifier","dir","React","Component","styleoutside","dimension","position","dim","height","backgroundColor","top","left","styleinside","styleinside2","Square","handleClick","handlePlayerMovementFromMouse","onClick","border","margin","overflow","children","id","transition","styleoutsidedraggable","color","selectedColor","undefined","borderStyle","index","selected","borderColor","borderRadius","Robot","handleKeyDown","e","newDirection","keyCode","tabSelector","resetPuzzle","handlePlayerMovement","onStopDragHandler","handleCreateMode","isCreateMode","buildMode","x","y","grid","draggableGrid","onStop","bounds","window","onkeydown","orientation","opacity","wallThickness","wallOffset","Wall","userSelect","styledragable","Goal","endPosition","obj","key","hasOwnProperty","YouWinModal","Dialog","onClose","handleClose","aria-labelledby","open","show","maxWidth","DialogTitle","DialogContent","dividers","numMoves","TextField","label","defaultValue","username","DialogActions","Button","variant","submitAnswer","AddPuzzleModal","submitPuzzle","ToggleSettings","event","FormControlLabel","value","control","Switch","onChange","Timer","state","minutes","seconds","timer","myInterval","setInterval","setState","puzzleRushTimeUp","clearInterval","valuetext","DisplayView","createMode","fullWidth","handleCreateBoardClick","checked","toggleBuildMode","createBoardPressed","copyToClipboard","dummy","document","createElement","body","appendChild","location","host","uri","select","execCommand","removeChild","copiedClipboard","thisThing","copyButtonText","setTimeout","handleDimensionChange","parseInt","toString","DimensionChanged","puzzleRush","isPuzzleRush","Typography","gutterBottom","numPuzzleRush","marginRight","marginTop","marginBottom","paddingBottom","Divider","ButtonGroup","aria-label","undoMove","toggleLineIndicators","Slider","onChangeCommitted","getAriaValueText","step","marks","min","max","squareSizeValue","valueLabelDisplay","highscores","marginleft","highscore","comment","highscorestyle","PuzzleRushWinModal","difficulty","Grid","container","spacing","item","xs","md","List","dense","ListItem","ListItemText","primary","secondary","numPuzzlesCompleted","percentile","averageTime","averageMoves","differenceOptimal","movesPerSecond","playPuzzleRushAgain","closeModal","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","type","boardState","wallVerticle","wallHorizontal","goal","randompos1","randompos2","randompos3","randompos4","randomPositions","i","push","extend","j","gameWon","playerStart","slice","BoardResetModal","createBoardHandler","preventDefault","getElementById","percent","createBoard","textAlign","paddingRight","Input","inputProps","title","placeholder","addEventListener","indexOf","setDefaultSquareSize","boardWidth","drawerWidth","getComputedStyle","windowWidth","innerWidth","settings","console","log","Game","squareSize","updateHighscores","axios","get","then","res","JSON","parse","data","copiedToClipboard","componentDidMount","loadedGame","IntervalId","componentWillUnmount","robotSelect","robotSelected","namesubmit","post","puzzledata","name","history","ColoredLineDirections","showBoardResetPanelModal","closeCreateBoardModal","closePuzzleRushFinishedModal","showPuzzleRushFinishedModal","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","totalMovesDiff","solutiondifference","numPuzzleon","totalMoves","totalMovesList","avgMoves","checkwin","robotPosition","userInfo","p_id","g_id","games","solutionmoves","g_moves","g_puzzledata","newarray","concat","oldPositon","prevPosition","posObj","handleUndoMove","moveObj","pop","createModeWallClick","indexToChange","newWallHorizontal","wallH","newWallVerticle","wallV","onStopDragHandlerGoal","round","lastY","lastX","gamedata","settingsWidth","settingsHeight","percentWall","settingsPercent","padding","alignItems","sm","Board","square","ColoredLineDirection","ColoredLine","player","HighScores","puzzleRushPercentileCompleted","withRouter","useStyles","makeStyles","theme","root","flexGrow","griditems","paper","Width","image","img","maxHeight","CreateGame","ComplexGrid","classes","highscoreauthor","handleGameClick","game","cursor","Paper","className","ButtonBase","alt","direction","authorname","FindGame","handleSearchSubmit","searchTerm","search","highscoreslist","gameslist","justify","PlayGame","wrap","handleClickCreateGame","handleClickFindGame","handleClickPuzzleRush","LoginModal","loginGoogle","href","closeLoginModal","LoggedInUser","loggedin","justifyContent","class","profilePicture","SignInButton","textToShow","PuzzleRushDifficultyModal","handleClickEasyPuzzleRush","handleClickMediumPuzzleRush","handleClickHardPuzzleRush","handleClickExHardPuzzleRush","App","handleDrawerClose","handleDrawerOpen","SignInButtonPressed","showLoginModal","showPuzzleRushModal","action","PageSelected","handleClickGodlyPuzzleRush","closePuzzleRushLoginModal","newGame","isOpen","handleMobileMenuClose","mobileAnchorEl","mobileMenuOpen","handleMobileMenuOpen","currentTarget","token","createMuiTheme","palette","teal","main","AppBar","clsx","appBar","appBarShift","Toolbar","IconButton","edge","menuButton","hide","noWrap","grow","sectionDesktop","Badge","badgeContent","sectionMobile","aria-controls","aria-haspopup","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","Drawer","drawer","anchor","drawerPaper","drawerHeader","drawerHeaderLeft","drawerHeaderRight","useTheme","dividerFullWidth","button","ListItemIcon","content","contentShift","withStyles","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","flexShrink","mixins","toolbar","breakpoints","up","Boolean","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.572cae0c.chunk.js","sourcesContent":["export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const MOBILE_INNER_SCREEN_WIDTH = '960';\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.handlePlayerMovementFromMouse(this.props.position);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div id=\"MainGameBoard\" style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleoutsidedraggable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var selectedColor = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        selectedColor = SELECTED_ROBOT;\r\n        borderStyle = \"solid\";\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        borderStyle: borderStyle,\r\n        borderColor: selectedColor,\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.props.tabSelector();\r\n                return;\r\n                break;\r\n            case 32:\r\n                this.props.resetPuzzle();\r\n                return;\r\n                break;\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n\r\n\r\n        }\r\n        this.props.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    onStopDragHandler = (e, position) => {\r\n        this.props.onStopDragHandler(position,this.props.index);\r\n    }\r\n\r\n\r\n    handleCreateMode = () => {\r\n        if (this.props.isCreateMode === 'Yes' && this.props.buildMode) {\r\n            return (\r\n            <Draggable position={{x: this.props.position.left * this.props.dimension, y:this.props.position.top*this.props.dimension}} grid={this.props.draggableGrid} onStop={this.onStopDragHandler} bounds=\"parent\">\r\n                <div onClick={this.handleClick} style={styleoutsidedraggable(this.props)}>\r\n                    <div style={styleinside(this.props)}>\r\n                        <div style={styleinside2(this.props)}/>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n        this.handleCreateMode()\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onkeydown = this.handleKeyDown;\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.isCreateMode === 'Yes'  && props.buildMode) {\r\n        const onStopDragHandler = (e, position) => {\r\n            props.onStopDragHandler(position);\r\n        }\r\n        return(\r\n        <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n            <img src={GOAL_IMAGE} style={styledragable(props)}/>\r\n        </Draggable>\r\n        )\r\n    }\r\n    else {\r\n        return(<img src={GOAL_IMAGE} style={style(props)}/>)\r\n    }\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = '4px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = '4px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = '4px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension;\r\n            width = '4px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    top+=18;\r\n    left+=18;\r\n\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\nexport default (props) => (\r\n    <div style={style(props)}/>\r\n);","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Submit Puzzle</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField id={\"namesubmit\"} label={\"Name of Puzzle\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleModal;\r\n","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Line Indicators\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n\r\n    state = {\r\n            minutes: 5,\r\n            seconds: 0,\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.puzzleRushTimeUp();\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    timer = () => {\r\n        if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n            return (<h2>Time is up!</h2>)\r\n        }\r\n        else {\r\n            return(\r\n                <h2>Time Remaining: {this.state.minutes}:{this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds}</h2>)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            this.timer()\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ToggleSettings from \"../components/ToggleSettings\";\r\nimport Timer from \"../components/Timer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { copyButtonText: \"Copy Puzzle Link\" };\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <div>\r\n                    <Button color=\"secondary\" variant={\"outlined\"} fullWidth={true} onClick={this.handleCreateBoardClick}> Create Board</Button>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Switch color=\"primary\" checked={this.props.buildMode} onChange={this.props.toggleBuildMode}/>}\r\n                        label=\"Build Mode\"\r\n                            />\r\n                </div>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.props.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n    puzzleRush = () => {\r\n        if (this.props.isPuzzleRush === 'Yes'){\r\n            return (\r\n                     <div>\r\n                        <Typography id=\"discrete-slider-small-steps\"\r\n                                     color=\"textSecondary\"\r\n                                     display=\"inline\"\r\n                                     gutterBottom>\r\n                             Puzzles: {this.props.numPuzzleRush}\r\n                         </Typography>\r\n                        <Timer puzzleRushTimeUp={this.props.puzzleRushTimeUp}>\r\n                        </Timer>\r\n                     </div>\r\n            )\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                 <div style={{paddingBottom: '10px'}}>\r\n                     <Button fullWidth={true} variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                             onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                 </div>\r\n                 <Divider />\r\n                 <Typography\r\n                     color=\"textSecondary\"\r\n                     display=\"block\"\r\n                     variant=\"caption\"\r\n                     style={{paddingBottom: '10px'}}\r\n                 >\r\n                     Board Actions\r\n                 </Typography>\r\n                 <ButtonGroup fullWidth={true} color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     <Button onClick={this.props.undoMove}>Undo</Button>\r\n                 </ButtonGroup>\r\n                 {this.isCreateMode(this.props.createMode)}\r\n                 <ToggleSettings onClick={this.props.toggleLineIndicators}/>\r\n                 <div style={buttonPanel()}>\r\n                     <Typography id=\"discrete-slider-small-steps\"\r\n                                 color=\"textSecondary\"\r\n                                 display=\"inline\"\r\n                                 gutterBottom>\r\n                         Size Of Board\r\n                     </Typography>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={this.props.squareSizeValue}\r\n                         valueLabelDisplay=\"auto\"\r\n                     />\r\n                 </div>\r\n                 {this.puzzleRush()}\r\n                 <Divider/>\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n        <div style={styleelements()}>{'By: ' + highscore.comment}\r\n            <div>\r\n                {'Moves: ' + highscore.numMoves}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <div style={styleouter()}>{'All Highscores:'}\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </div>\r\n)","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\n\r\nclass PuzzleRushWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Puzzle Rush - {this.props.difficulty}</DialogTitle>\r\n                <DialogContent dividers>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"h6\">\r\n                            Statistics\r\n                          </Typography>\r\n                          <div>\r\n                            <List dense={true}>\r\n\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Number of Puzzles Completed\"\r\n                                    secondary={this.props.numPuzzlesCompleted}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Percentile\"\r\n                                    secondary={this.props.percentile}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average time Per Puzzle\"\r\n                                    secondary={this.props.averageTime}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average Moves per Puzzle\"\r\n                                    secondary={this.props.averageMoves}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Difference from most optimal Solution\"\r\n                                    secondary={this.props.differenceOptimal}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Moves Per Second\"\r\n                                    secondary={this.props.movesPerSecond}\r\n                                  />\r\n                                </ListItem>\r\n                            </List>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.playPuzzleRushAgain}>Play Again!</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushWinModal;\r\n\r\n","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent,type) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    if (type === 'blank') {\r\n        var goal = {top: 1, left: 0};\r\n        var randompos1 = {top: 0,left: 0, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n        var randompos2 = {top: 0,left: 1, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n        var randompos3 = {top: 0,left: 2, color: ROBOT_RED, colorSignifier: 'red'};\r\n        var randompos4 = {top: 0,left: 3, color: ROBOT_YELLOW, colorSignifier:'yellow'};\r\n    }\r\n    else {\r\n        var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n        var randomPositions = [goal];\r\n        for (var i=0;i<5;i++) {\r\n            randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n        }\r\n        var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n        var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n        var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n        var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    }\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router'\r\nimport Draggable from 'react-draggable';\r\n\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport PuzzleRushWinModal from '../containers/Modals/PuzzleRushFinishedModal';\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if([37, 38, 39, 40, 9].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        padding: '40px'\r\n    };\r\n};\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\n\r\nconst setDefaultSquareSize = (boardWidth) => {\r\n    const drawerWidth = parseInt(getComputedStyle(document.getElementById(\"MainDrawer\")).width);\r\n    const windowWidth = window.innerWidth;\r\n    var settings = ((windowWidth < 600) ? windowWidth : (windowWidth - drawerWidth) / 1.75);\r\n    console.log(settings);\r\n    settings = settings / boardWidth;\r\n    settings = parseInt(settings);\r\n    settings = settings - (settings % 4);\r\n    if (settings < 16) {\r\n        settings = 16;\r\n    }\r\n    else if (settings > 52) {\r\n        settings = 52;\r\n    }\r\n    return settings;\r\n};\r\n\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.puzzleRush === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.p_id = this.props.p_id;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n        }\r\n        else if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.buildMode = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,1,'blank');\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                buildMode: true,\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false\r\n            },board);\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n        }\r\n    };\r\n\r\n    setDefaultSquareSize = (boardWidth) => {\r\n        const drawerWidth = document.getElementById(\"MainDrawer\")\r\n        const windowWidth = window.innerWidth;\r\n        var settings = windowWidth - drawerWidth;\r\n        settings = ((windowWidth < 600) ? settings : settings / 1.5);\r\n        settings = settings / boardWidth;\r\n        this.setState({\r\n            squareSize: settings,\r\n        });\r\n    };\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                this.setState({\r\n                    highscores: JSON.parse(res.data.highscores),\r\n                });\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            var IntervalId = setInterval(this.updateHighscores, 2000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.ColoredLineDirections.length === 0) {\r\n            this.setState({\r\n                ColoredLineDirections: [LEFT,RIGHT,UP,DOWN],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                ColoredLineDirections: [],\r\n            });\r\n        }\r\n    };\r\n\r\n    toggleBuildMode = () => {\r\n        if (this.state.buildMode) {\r\n            this.setState({\r\n                buildMode: false,\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                buildMode: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        console.log(this.state.uri);\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length, name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushFinishedModal = event => {\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: false\r\n        });\r\n\r\n    }\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent, 'blank');\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n\r\n    puzzleRushTimeUp = () => {\r\n        var totalMovesDiff = 0;\r\n        this.state.solutiondifference.map(numMoves => {\r\n            totalMovesDiff += numMoves;\r\n        });\r\n        var averageTime = parseInt(300 / (this.state.numPuzzleon))\r\n        var totalMoves = 0;\r\n        this.state.totalMovesList.map(numMoves => {\r\n            totalMoves += numMoves\r\n        });\r\n        var avgMoves = parseInt(totalMoves / (this.state.numPuzzleon))\r\n        var movesPerSecond = totalMoves / 300;\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: true,\r\n            numPuzzlesCompleted: this.state.numPuzzleon,\r\n            percentile: 'TBD%',\r\n            averageTime: averageTime + 's',\r\n            averageMoves: avgMoves,\r\n            differenceOptimal: totalMovesDiff,\r\n            movesPerSecond: movesPerSecond\r\n        });\r\n    }\r\n\r\n\r\n    checkwin = (robotPosition) => {\r\n        if (robotPosition.top === this.state.goal.top && robotPosition.left === this.state.goal.left) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No' && this.props.puzzleRush !== 'Yes') {\r\n                var username = '';\r\n                if (window.userInfo !== null) {\r\n                    username = window.userInfo.username\r\n                }\r\n                return  (<YouWinModal\r\n                    show={this.state.gameWon}\r\n                    numMoves={this.state.moveHistory.length}\r\n                    submitAnswer={this.submitAnswer}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                    username={username}\r\n                />);\r\n            }\r\n            else if (this.props.puzzleRush === 'Yes'){\r\n                axios.post('/puzzlerushsubmit', {p_id: this.state.p_id,g_id:this.state.games[this.state.numPuzzleon].g_id, moveHistory: this.state.moveHistory})\r\n                    .then( res => {\r\n                        console.log(res.data);\r\n                    });\r\n                var totalMoves = this.state.moveHistory.slice().length\r\n                var totalMovesList = this.state.totalMovesList\r\n                totalMovesList.push(totalMoves)\r\n                var solutionmoves = totalMoves - this.state.games[this.state.numPuzzleon].g_moves\r\n                var solutiondifference = this.state.solutiondifference\r\n                solutiondifference.push(solutionmoves)\r\n                var puzzledata = JSON.parse(this.state.games[this.state.numPuzzleon + 1].g_puzzledata)\r\n                if (this.state.numPuzzleon + 3 > this.state.games.length) {\r\n                    axios.get('/puzzlerushgetmore?p_id=' + this.props.p_id + '&difficulty=' + this.props.difficulty)\r\n                        .then( res => {\r\n                                var games = JSON.parse(res.data.games);\r\n                                console.log(games)\r\n                                var stategames = this.state.games\r\n                                var newarray = stategames.concat(games)\r\n                                this.setState({\r\n                                    games: newarray\r\n                                });\r\n                        });\r\n                }\r\n                this.setState(\r\n                    extend(puzzledata,{numPuzzleon: this.state.numPuzzleon + 1, playerState: puzzledata.playerStart.slice(), gameWon: false, solutiondifference: solutiondifference, totalMovesList: totalMovesList})\r\n                );\r\n\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false) {\r\n            var oldPositon = {left: this.state.playerState[this.state.robotSelected].left, top: this.state.playerState[this.state.robotSelected].top};\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left)) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier,\r\n                    prevPosition: oldPositon\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n            this.checkwin(newPosition);\r\n        }\r\n    };\r\n\r\n    handlePlayerMovementFromMouse = (posObj) => {\r\n        var newDirection;\r\n        var robot = this.state.playerState[this.state.robotSelected];\r\n        if (posObj.top === robot.top && posObj.left < robot.left)\r\n            newDirection = { top: 0, left: -(this.state.squareSize), dir: LEFT};\r\n        else if (posObj.top === robot.top && posObj.left > robot.left)\r\n            newDirection = { top: 0, left: this.state.squareSize, dir: RIGHT};\r\n        else if (posObj.top < robot.top && posObj.left === robot.left)\r\n            newDirection = { top: -(this.state.squareSize), left: 0, dir: UP};\r\n        else if (posObj.top > robot.top && posObj.left === robot.left)\r\n            newDirection = { top: this.state.squareSize, left: 0, dir: DOWN};\r\n        else newDirection = { top: 0, left: 0, dir: undefined};\r\n        this.handlePlayerMovement(newDirection)\r\n    };\r\n\r\n    handleUndoMove = () => {\r\n        var moveHistory = this.state.moveHistory;\r\n        var playerState = this.state.playerState;\r\n        if (this.state.gameWon === false && moveHistory.length !== 0) {\r\n            var moveObj = moveHistory.pop();\r\n            playerState[moveObj.robot].left = moveObj.prevPosition.left;\r\n            playerState[moveObj.robot].top = moveObj.prevPosition.top;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory\r\n            });\r\n        }\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes' && this.state.buildMode) {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                console.log('clicking horizontal wall');\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onStopDragHandlerGoal = (position) => {\r\n        this.setState({\r\n            goal: {top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize)},\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n        })\r\n    };\r\n\r\n    onStopDragHandler = (position,index) => {\r\n        var playerState = this.state.playerState.slice();\r\n        var lastX = position.lastX / this.state.squareSize;\r\n        var lastY = position.lastY / this.state.squareSize;\r\n        playerState[index].top = Math.round(lastY);\r\n        playerState[index].left = Math.round(lastX);\r\n        this.setState({\r\n            playerStart: playerState.slice(),\r\n            playerState: playerState,\r\n            moveHistory: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        puzzleRushTimeUp={this.puzzleRushTimeUp}\r\n                        isPuzzleRush={this.props.puzzleRush}\r\n                        numPuzzleRush={this.state.numPuzzleon}\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                        toggleLineIndicators = {this.toggleLineIndicators}\r\n                        toggleBuildMode = {this.toggleBuildMode}\r\n                        undoMove = {this.handleUndoMove}\r\n                        buildMode = {this.state.buildMode}\r\n                        squareSizeValue = {parseInt((this.state.squareSize/4))}\r\n                    />\r\n                    <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8}>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                        handlePlayerMovementFromMouse={this.handlePlayerMovementFromMouse}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal\r\n                            dimension={this.state.squareSize}\r\n                            position={this.state.goal}\r\n                            onStopDragHandler={this.onStopDragHandlerGoal}\r\n                            draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                            isCreateMode={this.state.createMode}\r\n                            buildMode={this.state.buildMode}\r\n                        />\r\n                        {\r\n                            this.state.ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={LINE_INDICATOR_COLOR}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    onStopDragHandler={this.onStopDragHandler}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                />\r\n                            )\r\n                        }\r\n\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n\r\n                        }\r\n                    </Board>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <div style={{display: 'grid'}}>\r\n                        <Typography\r\n                            color=\"secondary\"\r\n                            display=\"block\"\r\n                            variant={\"h4\"}\r\n\r\n                        >\r\n                            {this.props.name}\r\n                        </Typography>\r\n                        <br/>\r\n                        <HighScores highscores={this.state.highscores}/>\r\n                    </div>\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                {\r\n                    this.state.playerState.map(position =>\r\n                        this.checkwin(position))\r\n                }\r\n                <PuzzleRushWinModal\r\n                    show={this.state.showPuzzleRushFinishedModal}\r\n                    closeModal={this.closePuzzleRushFinishedModal}\r\n                    numPuzzlesCompleted={this.state.numPuzzlesCompleted}\r\n                    percentile={this.state.puzzleRushPercentileCompleted}\r\n                    averageTime={this.state.averageTime}\r\n                    averageMoves={this.state.averageMoves}\r\n                    differenceOptimal={this.state.differenceOptimal}\r\n                    movesPerSecond={this.state.movesPerSecond}\r\n                    difficulty={this.props.difficulty}\r\n                />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport useStyles from '../Material-UI/themes';\r\n\r\nconst handleClick = (callback,puzzledata,highscores,uri) => {\r\n    callback(puzzledata,highscores,uri);\r\n}\r\n\r\n\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n    if (typeof props.highscore !== 'undefined') {\r\n        var highscore = props.highscore.numMoves;\r\n        var highscoreauthor = props.highscore.comment;\r\n    }\r\n    else {\r\n        var highscore = 'None'\r\n        var highscoreauthor = ''\r\n    }\r\n    const handleClick = () => {\r\n        props.handleGameClick(props.game.name, props.game.puzzledata,props.highscores,props.game.uri);\r\n    }\r\n\r\n    return (\r\n    <Grid onClick={handleClick} style={{ cursor: 'pointer' }} item>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <ButtonBase className={classes.image}>\r\n              <img className={classes.img} alt=\"complex\" src=\"https://scx1.b-cdn.net/csz/news/800/2019/3-robot.jpg\" />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={15} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={5}>\r\n              <Grid item xs>\r\n                <Typography gutterBottom variant=\"subtitle1\">\r\n                  {props.game.name}\r\n                </Typography>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  Type {props.game.type} • {props.game.difficulty}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {props.game.authorname}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                  Remove\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid spacing={2} item>\r\n              <Typography variant=\"body2\">\r\n                  {highscore}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {highscoreauthor}\r\n              </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios';\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = window.gameslist;\r\n        var highscoreslist = window.highscoreslist;\r\n        console.log(gameslist)\r\n        console.log(highscoreslist)\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n        }\r\n    }\r\n\r\n    handleGameClick = (name,gamedata,highscores,uri) => {\r\n        console.log(uri);\r\n        this.props.handleGameClick(name,gamedata,highscores,uri);\r\n    }\r\n\r\n    handleSearchSubmit = event => {\r\n        event.preventDefault();\r\n        var searchTerm = document.getElementById(\"searchBarFindGame\").value;\r\n        axios.post('/search', {search: searchTerm})\r\n            .then( res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div id={'GameMain'}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\" spacing={2}>\r\n                        {\r\n                            this.state.gameslist.map((game,index)=>\r\n                                <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n//<SearchBarFindGame submitSearch={this.handleSearchSubmit}/>\r\nexport default FindGame;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame={'Yes'}\r\n                  name={this.props.name}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n\r\n    return (<div className={classes.grid}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={4}>\r\n                </Grid>\r\n                <Grid\r\n                    container xs={4}\r\n                    spacing={4}\r\n                    direction=\"column\"\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    wrap=\"nowrap\"\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={props.handleClickCreateGame}variant=\"contained\" color=\"primary\">\r\n                            Create a Game\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={props.handleClickFindGame} variant=\"contained\" color=\"primary\">\r\n                            Find a Game\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\" color=\"primary\">\r\n                            Play a Random Game\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={props.handleClickPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                            Puzzle Rush\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeLoginModal}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>Login to Robits</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <img onClick={this.loginGoogle} src={\"/static/images/btn_google_signin_light_normal_web@2x.png\"}></img>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeLoginModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '40px',\r\n        width: '40px',\r\n        marginTop: '5px',\r\n    };\r\n};\r\n\r\nconst divStyle = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        width: '200px',\r\n    };\r\n};\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return null\r\n        }\r\n        else {\r\n            return (\r\n                <div style={divStyle()}>\r\n                    <div>{window.userInfo.username}</div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <Button color=\"primary\" onClick={this.handleClick}>{textToShow}</Button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                            <Grid\r\n                                container xs={12}\r\n                                spacing={4}\r\n                                direction=\"column\"\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n                                wrap=\"nowrap\"\r\n                            >\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.props.handleClickEasyPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                        Easy\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.props.handleClickMediumPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                        Medium\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.props.handleClickHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                        Hard\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.props.handleClickExHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                        Exteremely Hard\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\nimport PuzzleRush from './Pages/PuzzleRush';\r\nimport clsx from 'clsx';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport Home from './Pages/Home';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\nimport axios from 'axios';\r\nimport Game from './containers/Game';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"./constants/constants\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport PuzzleRushDifficultyModal from \"./containers/Modals/PuzzleRushDifficultyModal\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    drawerHeaderRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerHeaderLeft: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    dividerFullWidth: {\r\n        margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n});\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (window.uri === '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>, //default page for website\r\n            };\r\n        }\r\n        else {\r\n            this.state = {\r\n                PageSelected: <PlayGame name={window.token.name} gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri}/>, //when uri is entered to play specific game\r\n            };\r\n        }\r\n        this.state.open = true;\r\n        this.state.mobileAnchorEl = null;\r\n        this.state.mobileMenuOpen = false;\r\n        this.state.showLoginModal = false;\r\n        this.state.showPuzzleRushModal = false;\r\n    }\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState( {\r\n            open: false\r\n        })\r\n    };\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState( {\r\n            open: true\r\n        })\r\n    };\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type === 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    };\r\n\r\n    handleClickPuzzleRush = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: true,\r\n        });\r\n    };\r\n\r\n    handleClickEasyPuzzleRush = event => {\r\n        axios.post('/puzzlerush', {difficulty: 'easy', action: 'start'})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            showPuzzleRushModal: false,\r\n                            PageSelected: <Game puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={'easy'}/>\r\n                        });\r\n                    //this.props.history.push('/play/' + res.data.uri)\r\n                });\r\n    };\r\n\r\n     handleClickMediumPuzzleRush = event => {\r\n        axios.post('/puzzlerush', {difficulty: 'medium', action: 'start'})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            showPuzzleRushModal: false,\r\n                            PageSelected: <Game puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={'medium'}/>\r\n                        });\r\n                    //this.props.history.push('/play/' + res.data.uri)\r\n                });\r\n    };\r\n\r\n     handleClickHardPuzzleRush = event => {\r\n        axios.post('/puzzlerush', {difficulty: 'hard', action: 'start'})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            showPuzzleRushModal: false,\r\n                            PageSelected: <Game puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={'hard'}/>\r\n                        });\r\n                    //this.props.history.push('/play/' + res.data.uri)\r\n                });\r\n    };\r\n\r\n     handleClickExHardPuzzleRush = event => {\r\n        axios.post('/puzzlerush', {difficulty: 'exteremely hard', action: 'start'})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            showPuzzleRushModal: false,\r\n                            PageSelected: <Game puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={'exteremely hard'}/>\r\n                        });\r\n                    //this.props.history.push('/play/' + res.data.uri)\r\n                });\r\n    };\r\n\r\n     handleClickGodlyPuzzleRush = event => {\r\n        axios.post('/puzzlerush', {difficulty: 'godly', action: 'start'})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            showPuzzleRushModal: false,\r\n                            PageSelected: <Game puzzleRush={'Yes'} games={games} p_id={p_id}/>\r\n                        });\r\n                    //this.props.history.push('/play/' + res.data.uri)\r\n                });\r\n    };\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: false\r\n        });\r\n    }\r\n\r\n    handleGameClick = (name, gamedata,highscores,uri) => {\r\n        this.setState({\r\n            PageSelected: <PlayGame name={name} highscores={highscores} gamedata={gamedata} uri={uri}/>\r\n        });\r\n    };\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var newGame = <CreateGame state={\"new\"}/>; //KNOWN bug where if you create a game you have to refresh the page to cause a re-render of <CreateGame/>\r\n\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: newGame, //if selected page is already CreateGame it wont refresh known problem\r\n            open: isOpen\r\n        });\r\n    };\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <FindGame handleGameClick={this.handleGameClick}/>,\r\n            open: isOpen\r\n        });\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileAnchorEl: null,\r\n            mobileMenuOpen: false\r\n        });\r\n    };\r\n\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({\r\n            mobileAnchorEl: event.currentTarget,\r\n            mobileMenuOpen: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const theme = createMuiTheme({\r\n            palette: {\r\n                primary: teal,\r\n                secondary: {\r\n                    main: '#e65100',\r\n                },\r\n            }\r\n        });\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <AppBar\r\n                        position=\"fixed\"\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: this.state.open,\r\n                        })}\r\n                    >\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={this.handleDrawerOpen}\r\n                                edge=\"start\"\r\n                                className={clsx(classes.menuButton, this.state.open && classes.hide)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" className={classes.title} noWrap>\r\n                                <a href=\"/\" style={{color: 'white'}}>RobotsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </Typography>\r\n                            <div className={classes.grow} />\r\n                            <div className={classes.sectionDesktop}>\r\n                                <LoggedInUser/>\r\n                                <IconButton aria-label=\"show 2 new notifications\" color=\"inherit\">\r\n                                    <Badge badgeContent={2} color=\"secondary\">\r\n                                        <NotificationsIcon />\r\n                                    </Badge>\r\n                                </IconButton>\r\n                            </div>\r\n                            <div className={classes.sectionMobile}>\r\n                                <IconButton\r\n                                    aria-label=\"show more\"\r\n                                    aria-controls={\"primary-search-account-menu-mobile\"}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.handleMobileMenuOpen}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <MoreIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Menu\r\n                        anchorEl={this.state.mobileAnchorEl}\r\n                        anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        id={\"primary-search-account-menu-mobile\"}\r\n                        keepMounted\r\n                        transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        open={this.state.mobileMenuOpen}\r\n                        onClose={this.handleMobileMenuClose}\r\n                    >\r\n                        <MenuItem>\r\n                            <LoggedInUser/>\r\n                        </MenuItem>\r\n                        <MenuItem>\r\n                            <p>Notifications</p>\r\n                            <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                                <Badge badgeContent={11} color=\"secondary\">\r\n                                    <NotificationsIcon/>\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                    <Drawer\r\n                        id=\"MainDrawer\"\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.state.open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div className={classes.drawerHeader}>\r\n                            <div className={classes.drawerHeaderLeft}>\r\n                                <SignInButton onClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.drawerHeaderRight}>\r\n                                <IconButton onClick={this.handleDrawerClose}>\r\n                                    {useTheme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Play\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Create a Game'} onClick={this.handleClickCreateGame}>\r\n                                <ListItemIcon><PlayArrowIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Create a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Find a Game'} onClick={this.handleClickFindGame}>\r\n                                <ListItemIcon><SearchIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Find a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Puzzle Rush'} onClick={this.handleClickPuzzleRush}>\r\n                                <ListItemIcon><ExtensionIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Puzzle Rush'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Learn\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Robits Basics'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Robits Basics'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Starter Puzzles'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Starter Puzzles'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Community\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Players'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Players'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Teams'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Teams'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Forum'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Forum'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Tools\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Robits Solver'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Robits Solver'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Settings'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Settings'} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n                    <main className={clsx(classes.content, {\r\n                        [classes.contentShift]: this.state.open,\r\n                    })}>\r\n                        <div className={classes.drawerHeader} />\r\n                        {this.state.PageSelected}\r\n                    </main>\r\n                    <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n                    <PuzzleRushDifficultyModal\r\n                        closeModal={this.closePuzzleRushLoginModal}\r\n                        show={this.state.showPuzzleRushModal}\r\n                        handleClickEasyPuzzleRush={this.handleClickEasyPuzzleRush}\r\n                        handleClickMediumPuzzleRush={this.handleClickMediumPuzzleRush}\r\n                        handleClickHardPuzzleRush={this.handleClickHardPuzzleRush}\r\n                        handleClickExHardPuzzleRush={this.handleClickExHardPuzzleRush}\r\n                    />\r\n                </div>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}