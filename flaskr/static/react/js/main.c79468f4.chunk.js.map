{"version":3,"sources":["constants/constants.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinModal.jsx","components/AddPuzzleModal.jsx","components/ToggleSettings.js","components/Timer.js","containers/DisplayView.js","components/HighScores.jsx","containers/Modals/PuzzleRushFinishedModal.js","components/boardgenerator.js","containers/Modals/BoardResetModal.js","containers/Game.js","Material-UI/themes.jsx","Pages/PuzzleRush.js","Pages/CreateGame.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","Pages/Home.js","containers/Modals/LoginModal.js","components/LoggedInUser.js","components/SignInButton.js","App.js","serviceWorker.js","index.js"],"names":["UP","DIRECTION_MAP_IMAGES","yellow","DOWN","LEFT","RIGHT","red","green","blue","MovesView","props","style","width","float","display","this","moveHistory","length","map","move","src","playerState","robot","colorSignifier","dir","React","Component","styleoutside","dimension","position","dim","height","backgroundColor","top","left","styleinside","styleinside2","Square","handleClick","handlePlayerMovementFromMouse","onClick","border","margin","overflow","children","transition","styleoutsidedraggable","color","selectedColor","undefined","borderStyle","index","selected","borderColor","borderRadius","Robot","handleKeyDown","e","newDirection","keyCode","tabSelector","resetPuzzle","handlePlayerMovement","onStopDragHandler","handleCreateMode","isCreateMode","buildMode","x","y","grid","draggableGrid","onStop","bounds","window","onkeydown","orientation","opacity","wallThickness","wallOffset","Wall","userSelect","styledragable","Goal","endPosition","obj","key","hasOwnProperty","YouWinModal","Dialog","onClose","handleClose","aria-labelledby","open","show","maxWidth","DialogTitle","id","DialogContent","dividers","numMoves","TextField","label","DialogActions","Button","variant","submitAnswer","AddPuzzleModal","submitPuzzle","ToggleSettings","event","FormControlLabel","value","control","Switch","onChange","Timer","state","minutes","seconds","timer","myInterval","setInterval","setState","puzzleRushTimeUp","clearInterval","valuetext","DisplayView","createMode","fullWidth","handleCreateBoardClick","checked","toggleBuildMode","createBoardPressed","copyToClipboard","dummy","document","createElement","body","appendChild","location","host","uri","select","execCommand","removeChild","copiedClipboard","thisThing","copyButtonText","setTimeout","handleDimensionChange","parseInt","toString","DimensionChanged","puzzleRush","isPuzzleRush","Typography","gutterBottom","numPuzzleRush","marginRight","marginTop","marginBottom","paddingBottom","Divider","ButtonGroup","aria-label","undoMove","toggleLineIndicators","Slider","onChangeCommitted","getAriaValueText","step","marks","min","max","defaultValue","valueLabelDisplay","highscores","marginleft","highscore","comment","highscorestyle","PuzzleRushWinModal","difficulty","Grid","container","spacing","item","xs","md","List","dense","ListItem","ListItemText","primary","secondary","numPuzzlesCompleted","percentile","averageTime","averageMoves","differenceOptimal","movesPerSecond","playPuzzleRushAgain","closeModal","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","type","boardState","wallVerticle","wallHorizontal","goal","randompos1","randompos2","randompos3","randompos4","randomPositions","i","push","extend","j","gameWon","playerStart","slice","BoardResetModal","createBoardHandler","preventDefault","getElementById","percent","createBoard","textAlign","paddingRight","Input","inputProps","title","placeholder","addEventListener","indexOf","Game","updateHighscores","axios","get","then","res","JSON","parse","data","squareSize","copiedToClipboard","componentDidMount","loadedGame","IntervalId","componentWillUnmount","robotSelect","robotSelected","namesubmit","post","puzzledata","name","history","ColoredLineDirections","console","log","showBoardResetPanelModal","closeCreateBoardModal","closePuzzleRushFinishedModal","showPuzzleRushFinishedModal","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","totalMovesDiff","solutiondifference","numPuzzleon","totalMoves","totalMovesList","avgMoves","checkwin","robotPosition","solutionmoves","games","g_moves","g_puzzledata","p_id","newarray","concat","oldPositon","prevPosition","posObj","handleUndoMove","moveObj","pop","createModeWallClick","indexToChange","newWallHorizontal","wallH","newWallVerticle","wallV","onStopDragHandlerGoal","round","lastY","lastX","gamedata","settingsWidth","settingsHeight","percentWall","settingsPercent","padding","alignItems","sm","Board","square","ColoredLineDirection","ColoredLine","player","HighScores","puzzleRushPercentileCompleted","withRouter","useStyles","makeStyles","theme","root","flexGrow","griditems","paper","Width","image","img","maxHeight","PuzzleRush","classes","className","direction","justify","wrap","handleClickEasyPuzzleRush","handleClickMediumPuzzleRush","handleClickHardPuzzleRush","handleClickExHardPuzzleRush","CreateGame","ComplexGrid","highscoreauthor","handleGameClick","game","cursor","Paper","ButtonBase","alt","authorname","FindGame","handleSearchSubmit","searchTerm","search","highscoreslist","gameslist","PlayGame","handleClickCreateGame","handleClickFindGame","handleClickPuzzleRush","LoginModal","loginGoogle","href","closeLoginModal","LoggedInUser","loggedin","justifyContent","userInfo","username","class","profilePicture","SignInButton","textToShow","App","handleDrawerClose","handleDrawerOpen","SignInButtonPressed","showLoginModal","PageSelected","handleClickGodlyPuzzleRush","action","newGame","isOpen","innerWidth","handleMobileMenuClose","mobileAnchorEl","mobileMenuOpen","handleMobileMenuOpen","currentTarget","token","createMuiTheme","palette","teal","main","AppBar","clsx","appBar","appBarShift","Toolbar","IconButton","edge","menuButton","hide","noWrap","grow","sectionDesktop","Badge","badgeContent","sectionMobile","aria-controls","aria-haspopup","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","Drawer","drawer","anchor","drawerPaper","drawerHeader","drawerHeaderLeft","drawerHeaderRight","useTheme","dividerFullWidth","button","ListItemIcon","content","contentShift","withStyles","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","flexShrink","mixins","toolbar","breakpoints","up","Boolean","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.c79468f4.chunk.js","sourcesContent":["export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const MOBILE_INNER_SCREEN_WIDTH = '960';\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.handlePlayerMovementFromMouse(this.props.position);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleoutsidedraggable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var selectedColor = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        selectedColor = SELECTED_ROBOT;\r\n        borderStyle = \"solid\";\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        borderStyle: borderStyle,\r\n        borderColor: selectedColor,\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.props.tabSelector();\r\n                return;\r\n                break;\r\n            case 32:\r\n                this.props.resetPuzzle();\r\n                return;\r\n                break;\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n\r\n\r\n        }\r\n        this.props.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    onStopDragHandler = (e, position) => {\r\n        this.props.onStopDragHandler(position,this.props.index);\r\n    }\r\n\r\n\r\n    handleCreateMode = () => {\r\n        if (this.props.isCreateMode === 'Yes' && this.props.buildMode) {\r\n            return (\r\n            <Draggable position={{x: this.props.position.left * this.props.dimension, y:this.props.position.top*this.props.dimension}} grid={this.props.draggableGrid} onStop={this.onStopDragHandler} bounds=\"parent\">\r\n                <div onClick={this.handleClick} style={styleoutsidedraggable(this.props)}>\r\n                    <div style={styleinside(this.props)}>\r\n                        <div style={styleinside2(this.props)}/>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n        this.handleCreateMode()\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onkeydown = this.handleKeyDown;\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.isCreateMode === 'Yes'  && props.buildMode) {\r\n        const onStopDragHandler = (e, position) => {\r\n            props.onStopDragHandler(position);\r\n        }\r\n        return(\r\n        <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n            <img src={GOAL_IMAGE} style={styledragable(props)}/>\r\n        </Draggable>\r\n        )\r\n    }\r\n    else {\r\n        return(<img src={GOAL_IMAGE} style={style(props)}/>)\r\n    }\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = '4px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = '4px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = '4px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension;\r\n            width = '4px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    top+=18;\r\n    left+=18;\r\n\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\nexport default (props) => (\r\n    <div style={style(props)}/>\r\n);","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Submit Puzzle</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField id={\"namesubmit\"} label={\"Name of Puzzle\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleModal;\r\n","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Line Indicators\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n\r\n    state = {\r\n            minutes: 5,\r\n            seconds: 0,\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.puzzleRushTimeUp();\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    timer = () => {\r\n        if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n            return (<h2>Time is up!</h2>)\r\n        }\r\n        else {\r\n            return(\r\n                <h2>Time Remaining: {this.state.minutes}:{this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds}</h2>)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            this.timer()\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ToggleSettings from \"../components/ToggleSettings\";\r\nimport Timer from \"../components/Timer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { copyButtonText: \"Copy Puzzle Link\" };\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <div>\r\n                    <Button color=\"secondary\" variant={\"outlined\"} fullWidth={true} onClick={this.handleCreateBoardClick}> Create Board</Button>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Switch color=\"primary\" checked={this.props.buildMode} onChange={this.props.toggleBuildMode}/>}\r\n                        label=\"Build Mode\"\r\n                            />\r\n                </div>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.props.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n    puzzleRush = () => {\r\n        if (this.props.isPuzzleRush === 'Yes'){\r\n            return (\r\n                     <div>\r\n                        <Typography id=\"discrete-slider-small-steps\"\r\n                                     color=\"textSecondary\"\r\n                                     display=\"inline\"\r\n                                     gutterBottom>\r\n                             Puzzles: {this.props.numPuzzleRush}\r\n                         </Typography>\r\n                        <Timer puzzleRushTimeUp={this.props.puzzleRushTimeUp}>\r\n                        </Timer>\r\n                     </div>\r\n            )\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                 <div style={{paddingBottom: '10px'}}>\r\n                     <Button fullWidth={true} variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                             onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                 </div>\r\n                 <Divider />\r\n                 <Typography\r\n                     color=\"textSecondary\"\r\n                     display=\"block\"\r\n                     variant=\"caption\"\r\n                     style={{paddingBottom: '10px'}}\r\n                 >\r\n                     Board Actions\r\n                 </Typography>\r\n                 <ButtonGroup fullWidth={true} color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     <Button onClick={this.props.undoMove}>Undo</Button>\r\n                 </ButtonGroup>\r\n                 {this.isCreateMode(this.props.createMode)}\r\n                 <ToggleSettings onClick={this.props.toggleLineIndicators}/>\r\n                 <div style={buttonPanel()}>\r\n                     <Typography id=\"discrete-slider-small-steps\"\r\n                                 color=\"textSecondary\"\r\n                                 display=\"inline\"\r\n                                 gutterBottom>\r\n                         Size Of Board\r\n                     </Typography>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={10}\r\n                         valueLabelDisplay=\"auto\"\r\n                     />\r\n                 </div>\r\n                 {this.puzzleRush()}\r\n                 <Divider/>\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n        <div style={styleelements()}>{'By: ' + highscore.comment}\r\n            <div>\r\n                {'Moves: ' + highscore.numMoves}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <div style={styleouter()}>{'All Highscores:'}\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </div>\r\n)","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\n\r\nclass PuzzleRushWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Puzzle Rush - {this.props.difficulty}</DialogTitle>\r\n                <DialogContent dividers>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"h6\">\r\n                            Statistics\r\n                          </Typography>\r\n                          <div>\r\n                            <List dense={true}>\r\n\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Number of Puzzles Completed\"\r\n                                    secondary={this.props.numPuzzlesCompleted}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Percentile\"\r\n                                    secondary={this.props.percentile}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average time Per Puzzle\"\r\n                                    secondary={this.props.averageTime}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average Moves per Puzzle\"\r\n                                    secondary={this.props.averageMoves}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Difference from most optimal Solution\"\r\n                                    secondary={this.props.differenceOptimal}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Moves Per Second\"\r\n                                    secondary={this.props.movesPerSecond}\r\n                                  />\r\n                                </ListItem>\r\n                            </List>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.playPuzzleRushAgain}>Play Again!</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushWinModal;\r\n\r\n","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent,type) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    if (type === 'blank') {\r\n        var goal = {top: 1, left: 0};\r\n        var randompos1 = {top: 0,left: 0, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n        var randompos2 = {top: 0,left: 1, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n        var randompos3 = {top: 0,left: 2, color: ROBOT_RED, colorSignifier: 'red'};\r\n        var randompos4 = {top: 0,left: 3, color: ROBOT_YELLOW, colorSignifier:'yellow'};\r\n    }\r\n    else {\r\n        var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n        var randomPositions = [goal];\r\n        for (var i=0;i<5;i++) {\r\n            randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n        }\r\n        var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n        var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n        var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n        var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    }\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router'\r\nimport Draggable from 'react-draggable';\r\n\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport PuzzleRushWinModal from '../containers/Modals/PuzzleRushFinishedModal';\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if([37, 38, 39, 40, 9].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        padding: '40px'\r\n    };\r\n};\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.puzzleRush === 'Yes') {\r\n            console.log(this.props.games);\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.p_id = this.props.p_id;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n        }\r\n        else if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.buildMode = false;\r\n            this.state.copiedToClipboard = false;\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,1,'blank');\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                buildMode: true,\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false\r\n            },board);\r\n        }\r\n    }\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                this.setState({\r\n                    highscores: JSON.parse(res.data.highscores),\r\n                });\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            var IntervalId = setInterval(this.updateHighscores, 2000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.ColoredLineDirections.length === 0) {\r\n            this.setState({\r\n                ColoredLineDirections: [LEFT,RIGHT,UP,DOWN],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                ColoredLineDirections: [],\r\n            });\r\n        }\r\n    };\r\n\r\n    toggleBuildMode = () => {\r\n        if (this.state.buildMode) {\r\n            this.setState({\r\n                buildMode: false,\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                buildMode: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        console.log(this.state.uri);\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length, name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushFinishedModal = event => {\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: false\r\n        });\r\n\r\n    }\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent, 'blank');\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n\r\n    puzzleRushTimeUp = () => {\r\n        var totalMovesDiff = 0;\r\n        this.state.solutiondifference.map(numMoves => {\r\n            totalMovesDiff += numMoves;\r\n        });\r\n        var averageTime = parseInt(300 / (this.state.numPuzzleon))\r\n        var totalMoves = 0;\r\n        this.state.totalMovesList.map(numMoves => {\r\n            totalMoves += numMoves\r\n        });\r\n        var avgMoves = parseInt(totalMoves / (this.state.numPuzzleon))\r\n        var movesPerSecond = totalMoves / 300;\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: true,\r\n            numPuzzlesCompleted: this.state.numPuzzleon,\r\n            percentile: 'TBD%',\r\n            averageTime: averageTime + 's',\r\n            averageMoves: avgMoves,\r\n            differenceOptimal: totalMovesDiff,\r\n            movesPerSecond: movesPerSecond\r\n        });\r\n    }\r\n\r\n\r\n    checkwin = (robotPosition) => {\r\n        if (robotPosition.top === this.state.goal.top && robotPosition.left === this.state.goal.left) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No' && this.props.puzzleRush !== 'Yes') {\r\n                return  (<YouWinModal\r\n                    show={this.state.gameWon}\r\n                    numMoves={this.state.moveHistory.length}\r\n                    submitAnswer={this.submitAnswer}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                />);\r\n            }\r\n            else if (this.props.puzzleRush === 'Yes'){\r\n                var totalMoves = this.state.moveHistory.slice().length\r\n                var totalMovesList = this.state.totalMovesList\r\n                totalMovesList.push(totalMoves)\r\n                var solutionmoves = totalMoves - this.state.games[this.state.numPuzzleon].g_moves\r\n                var solutiondifference = this.state.solutiondifference\r\n                solutiondifference.push(solutionmoves)\r\n                var puzzledata = JSON.parse(this.state.games[this.state.numPuzzleon + 1].g_puzzledata)\r\n                if (this.state.numPuzzleon + 3 > this.state.games.length) {\r\n                    axios.get('/puzzlerushgetmore?p_id=' + this.props.p_id + '&difficulty=' + this.props.difficulty)\r\n                        .then( res => {\r\n                                var games = JSON.parse(res.data.games);\r\n                                console.log(games)\r\n                                var stategames = this.state.games\r\n                                var newarray = stategames.concat(games)\r\n                                this.setState({\r\n                                    games: newarray\r\n                                });\r\n                        });\r\n                }\r\n                this.setState(\r\n                    extend(puzzledata,{numPuzzleon: this.state.numPuzzleon + 1, playerState: puzzledata.playerStart.slice(), gameWon: false, solutiondifference: solutiondifference, totalMovesList: totalMovesList})\r\n                );\r\n\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false) {\r\n            var oldPositon = {left: this.state.playerState[this.state.robotSelected].left, top: this.state.playerState[this.state.robotSelected].top};\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left)) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier,\r\n                    prevPosition: oldPositon\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n            this.checkwin(newPosition);\r\n        }\r\n    };\r\n\r\n    handlePlayerMovementFromMouse = (posObj) => {\r\n        var newDirection;\r\n        var robot = this.state.playerState[this.state.robotSelected];\r\n        if (posObj.top === robot.top && posObj.left < robot.left)\r\n            newDirection = { top: 0, left: -(this.state.squareSize), dir: LEFT};\r\n        else if (posObj.top === robot.top && posObj.left > robot.left)\r\n            newDirection = { top: 0, left: this.state.squareSize, dir: RIGHT};\r\n        else if (posObj.top < robot.top && posObj.left === robot.left)\r\n            newDirection = { top: -(this.state.squareSize), left: 0, dir: UP};\r\n        else if (posObj.top > robot.top && posObj.left === robot.left)\r\n            newDirection = { top: this.state.squareSize, left: 0, dir: DOWN};\r\n        else newDirection = { top: 0, left: 0, dir: undefined};\r\n        this.handlePlayerMovement(newDirection)\r\n    };\r\n\r\n    handleUndoMove = () => {\r\n        var moveHistory = this.state.moveHistory;\r\n        var playerState = this.state.playerState;\r\n        if (this.state.gameWon === false && moveHistory.length !== 0) {\r\n            var moveObj = moveHistory.pop();\r\n            playerState[moveObj.robot].left = moveObj.prevPosition.left;\r\n            playerState[moveObj.robot].top = moveObj.prevPosition.top;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory\r\n            });\r\n        }\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes' && this.state.buildMode) {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                console.log('clicking horizontal wall');\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onStopDragHandlerGoal = (position) => {\r\n        this.setState({\r\n            goal: {top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize)},\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n        })\r\n    };\r\n\r\n    onStopDragHandler = (position,index) => {\r\n        var playerState = this.state.playerState.slice();\r\n        var lastX = position.lastX / this.state.squareSize;\r\n        var lastY = position.lastY / this.state.squareSize;\r\n        playerState[index].top = Math.round(lastY);\r\n        playerState[index].left = Math.round(lastX);\r\n        this.setState({\r\n            playerStart: playerState.slice(),\r\n            playerState: playerState,\r\n            moveHistory: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        puzzleRushTimeUp={this.puzzleRushTimeUp}\r\n                        isPuzzleRush={this.props.puzzleRush}\r\n                        numPuzzleRush={this.state.numPuzzleon}\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                        toggleLineIndicators = {this.toggleLineIndicators}\r\n                        toggleBuildMode = {this.toggleBuildMode}\r\n                        undoMove = {this.handleUndoMove}\r\n                        buildMode = {this.state.buildMode}\r\n                    />\r\n                    <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8}>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                        handlePlayerMovementFromMouse={this.handlePlayerMovementFromMouse}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal\r\n                            dimension={this.state.squareSize}\r\n                            position={this.state.goal}\r\n                            onStopDragHandler={this.onStopDragHandlerGoal}\r\n                            draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                            isCreateMode={this.state.createMode}\r\n                            buildMode={this.state.buildMode}\r\n                        />\r\n                        {\r\n                            this.state.ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={LINE_INDICATOR_COLOR}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    onStopDragHandler={this.onStopDragHandler}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                />\r\n                            )\r\n                        }\r\n\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n\r\n                        }\r\n                    </Board>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <div style={{display: 'grid'}}>\r\n                        <Typography\r\n                            color=\"secondary\"\r\n                            display=\"block\"\r\n                            variant={\"h4\"}\r\n\r\n                        >\r\n                            {this.props.name}\r\n                        </Typography>\r\n                        <br/>\r\n                        <HighScores highscores={this.state.highscores}/>\r\n                    </div>\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                {\r\n                    this.state.playerState.map(position =>\r\n                        this.checkwin(position))\r\n                }\r\n                <PuzzleRushWinModal\r\n                    show={this.state.showPuzzleRushFinishedModal}\r\n                    closeModal={this.closePuzzleRushFinishedModal}\r\n                    numPuzzlesCompleted={this.state.numPuzzlesCompleted}\r\n                    percentile={this.state.puzzleRushPercentileCompleted}\r\n                    averageTime={this.state.averageTime}\r\n                    averageMoves={this.state.averageMoves}\r\n                    differenceOptimal={this.state.differenceOptimal}\r\n                    movesPerSecond={this.state.movesPerSecond}\r\n                    difficulty={this.props.difficulty}\r\n                />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function PuzzleRush(props) {\r\n    const classes = useStyles();\r\n\r\n    return (<div className={classes.grid}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={4}>\r\n                </Grid>\r\n                <Grid\r\n                    container xs={4}\r\n                    spacing={4}\r\n                    direction=\"column\"\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    wrap=\"nowrap\"\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={props.handleClickEasyPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                            Easy\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={props.handleClickMediumPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                            Medium\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={props.handleClickHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                            Hard\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={props.handleClickExHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                            Exteremely Hard\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport useStyles from '../Material-UI/themes';\r\n\r\nconst handleClick = (callback,puzzledata,highscores,uri) => {\r\n    callback(puzzledata,highscores,uri);\r\n}\r\n\r\n\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n    if (typeof props.highscore !== 'undefined') {\r\n        var highscore = props.highscore.numMoves;\r\n        var highscoreauthor = props.highscore.comment;\r\n    }\r\n    else {\r\n        var highscore = 'None'\r\n        var highscoreauthor = ''\r\n    }\r\n    const handleClick = () => {\r\n        props.handleGameClick(props.game.name, props.game.puzzledata,props.highscores,props.game.uri);\r\n    }\r\n\r\n    return (\r\n    <Grid onClick={handleClick} style={{ cursor: 'pointer' }} item>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <ButtonBase className={classes.image}>\r\n              <img className={classes.img} alt=\"complex\" src=\"https://scx1.b-cdn.net/csz/news/800/2019/3-robot.jpg\" />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={15} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={5}>\r\n              <Grid item xs>\r\n                <Typography gutterBottom variant=\"subtitle1\">\r\n                  {props.game.name}\r\n                </Typography>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  Type {props.game.type} • {props.game.difficulty}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {props.game.authorname}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                  Remove\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid spacing={2} item>\r\n              <Typography variant=\"body2\">\r\n                  {highscore}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {highscoreauthor}\r\n              </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios';\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = window.gameslist;\r\n        var highscoreslist = window.highscoreslist;\r\n        console.log(gameslist)\r\n        console.log(highscoreslist)\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n        }\r\n    }\r\n\r\n    handleGameClick = (name,gamedata,highscores,uri) => {\r\n        console.log(uri);\r\n        this.props.handleGameClick(name,gamedata,highscores,uri);\r\n    }\r\n\r\n    handleSearchSubmit = event => {\r\n        event.preventDefault();\r\n        var searchTerm = document.getElementById(\"searchBarFindGame\").value;\r\n        axios.post('/search', {search: searchTerm})\r\n            .then( res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div id={'GameMain'}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\" spacing={2}>\r\n                        {\r\n                            this.state.gameslist.map((game,index)=>\r\n                                <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n//<SearchBarFindGame submitSearch={this.handleSearchSubmit}/>\r\nexport default FindGame;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame={'Yes'}\r\n                  name={this.props.name}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n\r\n    return (<div className={classes.grid}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={4}>\r\n                </Grid>\r\n                <Grid\r\n                    container xs={4}\r\n                    spacing={4}\r\n                    direction=\"column\"\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    wrap=\"nowrap\"\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={props.handleClickCreateGame}variant=\"contained\" color=\"primary\">\r\n                            Create a Game\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={props.handleClickFindGame} variant=\"contained\" color=\"primary\">\r\n                            Find a Game\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\" color=\"primary\">\r\n                            Play a Random Game\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={props.handleClickPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                            Puzzle Rush\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeLoginModal}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>Login to Robits</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <img onClick={this.loginGoogle} src={\"/static/images/btn_google_signin_light_normal_web@2x.png\"}></img>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeLoginModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '40px',\r\n        width: '40px',\r\n        marginTop: '5px',\r\n    };\r\n};\r\n\r\nconst divStyle = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        width: '200px',\r\n    };\r\n};\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return null\r\n        }\r\n        else {\r\n            return (\r\n                <div style={divStyle()}>\r\n                    <div>{window.userInfo.username}</div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <Button color=\"primary\" onClick={this.handleClick}>{textToShow}</Button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport PuzzleRush from './Pages/PuzzleRush';\r\nimport clsx from 'clsx';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport Home from './Pages/Home';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\nimport axios from 'axios';\r\nimport Game from './containers/Game';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"./constants/constants\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    drawerHeaderRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerHeaderLeft: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    dividerFullWidth: {\r\n        margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n});\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (window.uri === '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>, //default page for website\r\n            };\r\n        }\r\n        else {\r\n            this.state = {\r\n                PageSelected: <PlayGame name={window.token.name} gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri}/>, //when uri is entered to play specific game\r\n            };\r\n        }\r\n        this.state.open = true;\r\n        this.state.mobileAnchorEl = null;\r\n        this.state.mobileMenuOpen = false;\r\n        this.state.showLoginModal = false;\r\n    }\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState( {\r\n            open: false\r\n        })\r\n    };\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState( {\r\n            open: true\r\n        })\r\n    };\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type === 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    };\r\n\r\n    handleClickPuzzleRush = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            PageSelected: <PuzzleRush\r\n                            handleClickEasyPuzzleRush={this.handleClickEasyPuzzleRush}\r\n                            handleClickMediumPuzzleRush={this.handleClickMediumPuzzleRush}\r\n                            handleClickHardPuzzleRush={this.handleClickHardPuzzleRush}\r\n                            handleClickExHardPuzzleRush={this.handleClickExHardPuzzleRush}\r\n                            handleClickGodlyPuzzleRush={this.handleClickGodlyPuzzleRush}\r\n                            />\r\n        });\r\n    };\r\n\r\n    handleClickEasyPuzzleRush = event => {\r\n        axios.post('/puzzlerush', {difficulty: 'easy', action: 'start'})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            PageSelected: <Game puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={'easy'}/>\r\n                        });\r\n                    //this.props.history.push('/play/' + res.data.uri)\r\n                });\r\n    };\r\n\r\n     handleClickMediumPuzzleRush = event => {\r\n        axios.post('/puzzlerush', {difficulty: 'medium', action: 'start'})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            PageSelected: <Game puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={'medium'}/>\r\n                        });\r\n                    //this.props.history.push('/play/' + res.data.uri)\r\n                });\r\n    };\r\n\r\n     handleClickHardPuzzleRush = event => {\r\n        axios.post('/puzzlerush', {difficulty: 'hard', action: 'start'})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            PageSelected: <Game puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={'hard'}/>\r\n                        });\r\n                    //this.props.history.push('/play/' + res.data.uri)\r\n                });\r\n    };\r\n\r\n     handleClickExHardPuzzleRush = event => {\r\n        axios.post('/puzzlerush', {difficulty: 'exteremely hard', action: 'start'})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            PageSelected: <Game puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={'exteremely hard'}/>\r\n                        });\r\n                    //this.props.history.push('/play/' + res.data.uri)\r\n                });\r\n    };\r\n\r\n     handleClickGodlyPuzzleRush = event => {\r\n        axios.post('/puzzlerush', {difficulty: 'godly', action: 'start'})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            PageSelected: <Game puzzleRush={'Yes'} games={games} p_id={p_id}/>\r\n                        });\r\n                    //this.props.history.push('/play/' + res.data.uri)\r\n                });\r\n    };\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    };\r\n\r\n    handleGameClick = (name, gamedata,highscores,uri) => {\r\n        this.setState({\r\n            PageSelected: <PlayGame name={name} highscores={highscores} gamedata={gamedata} uri={uri}/>\r\n        });\r\n    };\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var newGame = <CreateGame state={\"new\"}/>; //KNOWN bug where if you create a game you have to refresh the page to cause a re-render of <CreateGame/>\r\n\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: newGame, //if selected page is already CreateGame it wont refresh known problem\r\n            open: isOpen\r\n        });\r\n    };\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <FindGame handleGameClick={this.handleGameClick}/>,\r\n            open: isOpen\r\n        });\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileAnchorEl: null,\r\n            mobileMenuOpen: false\r\n        });\r\n    };\r\n\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({\r\n            mobileAnchorEl: event.currentTarget,\r\n            mobileMenuOpen: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const theme = createMuiTheme({\r\n            palette: {\r\n                primary: teal,\r\n                secondary: {\r\n                    main: '#e65100',\r\n                },\r\n            }\r\n        });\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <AppBar\r\n                        position=\"fixed\"\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: this.state.open,\r\n                        })}\r\n                    >\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={this.handleDrawerOpen}\r\n                                edge=\"start\"\r\n                                className={clsx(classes.menuButton, this.state.open && classes.hide)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" className={classes.title} noWrap>\r\n                                <a href=\"/\" style={{color: 'white'}}>RobotsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </Typography>\r\n                            <div className={classes.grow} />\r\n                            <div className={classes.sectionDesktop}>\r\n                                <LoggedInUser/>\r\n                                <IconButton aria-label=\"show 2 new notifications\" color=\"inherit\">\r\n                                    <Badge badgeContent={2} color=\"secondary\">\r\n                                        <NotificationsIcon />\r\n                                    </Badge>\r\n                                </IconButton>\r\n                            </div>\r\n                            <div className={classes.sectionMobile}>\r\n                                <IconButton\r\n                                    aria-label=\"show more\"\r\n                                    aria-controls={\"primary-search-account-menu-mobile\"}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.handleMobileMenuOpen}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <MoreIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Menu\r\n                        anchorEl={this.state.mobileAnchorEl}\r\n                        anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        id={\"primary-search-account-menu-mobile\"}\r\n                        keepMounted\r\n                        transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        open={this.state.mobileMenuOpen}\r\n                        onClose={this.handleMobileMenuClose}\r\n                    >\r\n                        <MenuItem>\r\n                            <LoggedInUser/>\r\n                        </MenuItem>\r\n                        <MenuItem>\r\n                            <p>Notifications</p>\r\n                            <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                                <Badge badgeContent={11} color=\"secondary\">\r\n                                    <NotificationsIcon/>\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                    <Drawer\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.state.open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div className={classes.drawerHeader}>\r\n                            <div className={classes.drawerHeaderLeft}>\r\n                                <SignInButton onClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.drawerHeaderRight}>\r\n                                <IconButton onClick={this.handleDrawerClose}>\r\n                                    {useTheme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Play\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Create a Game'} onClick={this.handleClickCreateGame}>\r\n                                <ListItemIcon><PlayArrowIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Create a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Find a Game'} onClick={this.handleClickFindGame}>\r\n                                <ListItemIcon><SearchIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Find a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Puzzle Rush'} onClick={this.handleClickPuzzleRush}>\r\n                                <ListItemIcon><ExtensionIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Puzzle Rush'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Learn\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Robits Basics'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Robits Basics'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Starter Puzzles'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Starter Puzzles'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Community\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Players'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Players'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Teams'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Teams'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Forum'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Forum'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Tools\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Robits Solver'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Robits Solver'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Settings'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Settings'} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n                    <main className={clsx(classes.content, {\r\n                        [classes.contentShift]: this.state.open,\r\n                    })}>\r\n                        <div className={classes.drawerHeader} />\r\n                        {this.state.PageSelected}\r\n                    </main>\r\n                    <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n                </div>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}