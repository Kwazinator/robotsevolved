{"version":3,"sources":["constants/constants.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/GameWonOverlay.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinView.jsx","components/AddPuzzleView.jsx","components/ResetButton.jsx","containers/DisplayView.js","components/HighScores.jsx","containers/GameWonDisplayView.js","components/ToggleSettings.js","components/boardgenerator.js","containers/Game.js","Pages/CreateGame.js","components/GameListItemView.jsx","Pages/FindGame.js","Pages/PlayGame.js","App.js","serviceWorker.js","index.js"],"names":["UP","DIRECTION_MAP_IMAGES","yellow","DOWN","LEFT","RIGHT","red","green","blue","MovesView","props","style","width","float","this","moveHistory","map","move","src","playerState","robot","colorSignifier","dir","React","Component","styleoutside","dimension","position","dim","height","backgroundColor","top","left","transition","styleinside","styleinside2","Square","handleClick","handlePlayerMovementFromMouse","onClick","border","margin","overflow","marginRight","children","color","selectedColor","undefined","borderStyle","index","selected","borderColor","borderRadius","Robot","handleKeyDown","e","newDirection","keyCode","tabSelector","handlePlayerMovement","window","onkeydown","orientation","mainStyle","visible","display","normalStyle","justifyContent","alignItems","opacityStyle","opacity","endPosition","obj","key","hasOwnProperty","YouWinView","numMoves","marginTop","marginBottom","id","type","placeholder","onSubmit","submitAnswer","AddPuzzleView","submitPuzzle","resetPuzzle","DisplayView","location","host","uri","ResetButton","highscores","marginleft","highscore","comment","highscorestyle","GameWonDisplayView","checkwin","ToggleSettings","event","class","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","addEventListener","indexOf","preventDefault","Game","robotSelect","i","setState","robotSelected","namesubmit","document","getElementById","value","state","playerStart","slice","createMode","axios","post","extend","puzzledata","name","then","res","data","gameWon","history","push","toggleLineIndicators","ColoredLineDirections","length","console","log","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","wallHorizontal","checkRobot","MAX_WIDTH","wallVerticle","MAX_HEIGHT","robotPosition","goal","posObj","loadedGame","JSON","parse","gamedata","board","randomPercent","boardState","randomPositions","randompos1","randompos2","randompos3","randompos4","j","BoardGenerator","Board","square","Goal","ColoredLineDirection","ColoredLine","player","wallH","Wall","wallV","GameWonOverlay","HighScores","withRouter","CreateGame","GameListItemView","handleGameClick","game","marginLeft","paddingRight","paddingLeft","paddingTop","paddingBottom","FindGame","gameslist","highscoreslist","PlayGame","App","PageSelected","handleClickCreateGame","handleClickFindGame","token","aria-label","for","href","role","data-icon","spellcheck","autocomplete","title","Boolean","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.cb9f4fc1.chunk.js","sourcesContent":["export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves:</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top + 'px',\r\n        left: position.left + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.handlePlayerMovementFromMouse(this.props.position);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '25px auto',\r\n        overflow: 'hidden',\r\n        float: 'left',\r\n        marginRight: '30px',\r\n    };\r\n\r\n\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top + 'px',\r\n        left: position.left + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = (dimension-4)-8 + 'px';\r\n    var selectedColor = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        selectedColor = SELECTED_ROBOT;\r\n        borderStyle = \"solid\";\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        borderStyle: borderStyle,\r\n        borderColor: selectedColor,\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: 4 + 'px',\r\n        left: 4 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.props.tabSelector();\r\n                return;\r\n                break;\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n\r\n\r\n        }\r\n        this.props.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onkeydown = this.handleKeyDown;\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position}) => {\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = '8px';\r\n    }\r\n    else {\r\n        var width = '8px';\r\n        var height = dimension + 'px'\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: position.top + 'px',\r\n        left: position.left + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nexport default (props) =>\r\n    <div style={style(props)}/>\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE} from '../constants/constants';\r\n\r\n\r\nconst style = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top + 'px',\r\n        left: position.left + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nexport default (props) =>\r\n    <img src={GOAL_IMAGE} style={style(props)}/>\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from \"react\";\r\n\r\nconst mainStyle = (width,height,visible) => {\r\n    var display = 'block';\r\n    if (visible === false) {\r\n        display = 'none';\r\n    }\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        display: display,\r\n        width: widthset,\r\n        height: heightset,\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        float: 'left',\r\n        marginRight: '30px',\r\n        margin: 'auto',\r\n    };\r\n};\r\n\r\nconst normalStyle = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        display: 'flex',\r\n        width: widthset,\r\n        height: heightset,\r\n        position: 'absolute',\r\n        overflow: 'hidden',\r\n        float: 'center',\r\n        marginRight: '30px',\r\n        margin: 'auto',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    };\r\n};\r\n\r\nconst opacityStyle = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        backgroundColor: 'black',\r\n        opacity: 0.5,\r\n        width: widthset,\r\n        height: heightset,\r\n        position: 'absolute',\r\n        overflow: 'hidden',\r\n        float: 'left',\r\n        marginRight: '30px',\r\n        margin: 'auto',\r\n    };\r\n};\r\n\r\nexport default ({ width,height,visible,children }) => (\r\n    <div style={mainStyle(width, height,visible)}>\r\n        <div style={opacityStyle(width,height)}></div>\r\n        <div style={normalStyle(width, height)}>\r\n            {children}\r\n        </div>\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top;\r\n            left = endPosition.left;\r\n            width = position.left - endPosition.left + 'px';\r\n            height = '4px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top;\r\n            left = position.left;\r\n            width = endPosition.left - position.left + 'px';\r\n            height = '4px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top;\r\n            left = endPosition.left;\r\n            width = '4px';\r\n            height = position.top - endPosition.top + 'px';\r\n        } else {\r\n            top = position.top;\r\n            left = position.left;\r\n            width = '4px';\r\n            height = endPosition.top - position.top + 'px'\r\n        }\r\n    }\r\n    top+=18;\r\n    left+=18;\r\n\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\nexport default (props) => (\r\n    <div style={style(props)}/>\r\n);","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{color: 'white'}}>\r\n                You Win! with {this.props.numMoves} Moves!\r\n                </div>\r\n                <input style={buttonpanel()} id={\"namesubmitHS\"} type={\"text\"} placeholder={\"Username\"}>\r\n                </input>\r\n                <form onSubmit={this.props.submitAnswer} style={buttonpanel()}>\r\n                    <button type=\"submit\">Submit Highscore </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinView;","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitPuzzle} style={buttonpanel()}>\r\n                    <button type=\"submit\">Create Puzzle</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"namesubmit\"} type={\"text\"} placeholder={\"Name Of Puzzle?\"}>\r\n\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleView;\r\n","import React from \"react\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    };\r\n};\r\n\r\nexport default (props) =>\r\n    <div>\r\n        <form onSubmit={props.resetPuzzle} style={buttonpanel()}>\r\n            <button type=\"submit\">Reset</button>\r\n        </form>\r\n    </div>","import React from 'react';\r\nimport ResetButton from \"../components/ResetButton\";\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        float: 'left',\r\n        width: '15%',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={controlpanel()}>\r\n                <div>\r\n                    {'http://' + window.location.host + '/play/' + this.props.uri}\r\n                </div>\r\n                <ResetButton\r\n                    resetPuzzle={this.props.resetPuzzle}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DisplayView;\r\n","import React from 'react';\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n        <div style={styleelements()}>{'By: ' + highscore.comment}\r\n            <div>\r\n                {'Moves: ' + highscore.numMoves}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <div style={styleouter()}>{'All Highscores:'}\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </div>\r\n)","import React from 'react';\r\nimport ResetButton from \"../components/ResetButton\";\r\nimport HighScores from '../components/HighScores';\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        float: 'center',\r\n        width: '15%',\r\n        opacity: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    };\r\n};\r\n\r\nclass GameWonDisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={'DisplayView'} style={controlpanel()}>\r\n                {\r\n                    this.props.playerState.map(position =>\r\n                        this.props.checkwin(position)\r\n                    )\r\n                }\r\n                <ResetButton\r\n                    resetPuzzle={this.props.resetPuzzle}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameWonDisplayView;","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>Toggle Line Indicators:\r\n                <label class=\"switch\">\r\n                    <input id={\"toggleLineIndicators\"} onClick={this.handleClick} type=\"checkbox\" class=\"real-checkbox\"></input>\r\n                    <span class=\"slider round\"></span>\r\n                </label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY-4 && wall.left == indexX-40) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-44));\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-44 && wall.left == indexX) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-40 && (wall.left == indexX-4)) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-40 && (wall.left == indexX+36)) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    /*if ((isWallAbove && (isWallBesideLeft || isWallBesideRight) || (isWallBesideLeft && isWallBesideRight)) ) {\r\n        console.log('wall above');\r\n        console.log({top: indexY-44, left: indexX})\r\n        console.log(WallHorizToPlace)\r\n    }*/\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height/40));\r\n        X = Math.floor(Math.random() * Math.floor(width/40));\r\n        dontPlacePositions.map(position => {\r\n            if (Y*40 == position.top && X*40 == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y*40,left: X*40};\r\n};\r\n\r\nexport default (width,height,randomPercent) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: -4}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    var goal = {top:Math.floor(Math.random() * Math.floor(height/40))*40, left:Math.floor(Math.random() * Math.floor(width/40))*40};\r\n    var randomPositions = [goal];\r\n    for (var i=0;i<5;i++) {\r\n        randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n    }\r\n    var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n    var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n    var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n    var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=40) {\r\n        for (var j=0;j<height;j+=40) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=40) {\r\n        for (var i=0;i<width;i+=40) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i-4});\r\n            }\r\n            else if (i==(width-40)) {\r\n                wallVerticle.push({top: j, left: i+36});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j-4,left: i});\r\n            }\r\n            else if (j == (height-40)) {\r\n                wallHorizontal.push({top: j+36, left: i});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=40) {\r\n        for (var i=0;i<width;i+=40) {\r\n            if (i > 1 && i != (width-40) && Math.random() > randomPercent) {\r\n                if (checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                    wallVerticle.push({top: j,left: i-4});\r\n                }\r\n            }\r\n            if (j > 1 && j != (height-40) && Math.random() > randomPercent) {\r\n                if (checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                    wallHorizontal.push({top: j-4,left: i});\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router'\r\n\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport GameWonOverlay from \"../components/GameWonOverlay\";\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinView from '../components/YouWinView';\r\nimport AddPuzzleView from '../components/AddPuzzleView';\r\nimport DisplayView from './DisplayView';\r\nimport GameWonDisplayView from \"./GameWonDisplayView\";\r\nimport HighScores from '../components/HighScores';\r\nimport ToggleSettings from '../components/ToggleSettings';\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if([32, 37, 38, 39, 40,9].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n    };\r\n};\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n        }\r\n        else {\r\n            var board = BoardGenerator(MAX_WIDTH,MAX_HEIGHT,.90);\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                highscores: [],\r\n                ColoredLineDirections: [],\r\n            },board);\r\n        }\r\n    }\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.ColoredLineDirections.length === 0) {\r\n            this.setState({\r\n                ColoredLineDirections: [LEFT,RIGHT,UP,DOWN],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                ColoredLineDirections: [],\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        console.log(this.state.uri);\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length, name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top < robotY && wall.top > minimumWall) {\r\n                        minimumWall = wall.top + 4;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top > minimumWall - 4) {\r\n                        minimumWall = checkRobot.top + 40;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = MAX_WIDTH - 40;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall) {\r\n                        minimumWall = wall.left - 36;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 36) {\r\n                        minimumWall = checkRobot.left - 40;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left < robotX && wall.left > minimumWall) {\r\n                        minimumWall = wall.left + 4;\r\n\r\n                    }\r\n\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left > minimumWall - 4) {\r\n                        minimumWall = checkRobot.left + 40;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = MAX_HEIGHT - 40;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall)\r\n                        minimumWall = wall.top - 36;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 36) {\r\n                        minimumWall = checkRobot.top - 40;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n    checkwin = (robotPosition) => {\r\n        if (robotPosition.top === this.state.goal.top && robotPosition.left === this.state.goal.left) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No') {\r\n                return  (<YouWinView numMoves={this.state.moveHistory.length} submitAnswer={this.submitAnswer}/>);\r\n            }\r\n            else {\r\n                return (<AddPuzzleView submitPuzzle={this.submitPuzzle}/>);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false) {\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left)) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n            this.checkwin(newPosition);\r\n        }\r\n    };\r\n\r\n    handlePlayerMovementFromMouse = (posObj) => {\r\n        var newDirection;\r\n        var robot = this.state.playerState[this.state.robotSelected];\r\n        if (posObj.top === robot.top && posObj.left < robot.left)\r\n            newDirection = { top: 0, left: -40, dir: LEFT};\r\n        else if (posObj.top === robot.top && posObj.left > robot.left)\r\n            newDirection = { top: 0, left: 40, dir: RIGHT};\r\n        else if (posObj.top < robot.top && posObj.left === robot.left)\r\n            newDirection = { top: -40, left: 0, dir: UP};\r\n        else if (posObj.top > robot.top && posObj.left === robot.left)\r\n            newDirection = { top: 40, left: 0, dir: DOWN};\r\n        else newDirection = { top: 0, left: 0, dir: undefined};\r\n        this.handlePlayerMovement(newDirection)\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n        <div id={'GameMain'} style={gamepanel()}>\r\n            <DisplayView\r\n                uri={this.state.uri}\r\n                resetPuzzle={this.resetPuzzle}\r\n            />\r\n            <Board width={MAX_WIDTH} height={MAX_HEIGHT}>\r\n                {\r\n                    this.state.boardState.map(square =>\r\n                        <Square dimension={40}\r\n                                position={{top:square.top,left: square.left}}\r\n                                handlePlayerMovementFromMouse={this.handlePlayerMovementFromMouse}\r\n                        />\r\n                    )\r\n                }\r\n                <Goal dimension={40} position={this.state.goal}/>\r\n                {\r\n                    this.state.ColoredLineDirections.map(ColoredLineDirection =>\r\n                        <ColoredLine\r\n                            dir={ColoredLineDirection}\r\n                            position={{\r\n                                top: this.state.playerState[this.state.robotSelected].top,\r\n                                left: this.state.playerState[this.state.robotSelected].left\r\n                            }}\r\n                            endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                            color={LINE_INDICATOR_COLOR}\r\n                        />\r\n                    )\r\n                }\r\n                {\r\n                    this.state.playerState.map((player, index) =>\r\n                        <Robot\r\n                            dimension={40}\r\n                            position={{top:player.top,left:player.left}}\r\n                            color={player.color}\r\n                            selected={this.state.robotSelected}\r\n                            index={index}\r\n                            onClick={this.robotSelect}\r\n                            handlePlayerMovement={this.handlePlayerMovement}\r\n                            tabSelector={this.tabSelector}\r\n                        />\r\n                    )\r\n                }\r\n\r\n                {\r\n                    this.state.wallHorizontal.map(wallH =>\r\n                        <Wall\r\n                            orientation={'horizontal'}\r\n                            dimension={40}\r\n                            position={{top:wallH.top,left:wallH.left}}\r\n                        />\r\n                    )\r\n                }\r\n                {\r\n                    this.state.wallVerticle.map(wallV =>\r\n                        <Wall\r\n                            orientation={'verticle'}\r\n                            dimension={40}\r\n                            position={{top:wallV.top,left:wallV.left}}\r\n                        />\r\n                    )\r\n\r\n                }\r\n                <GameWonOverlay\r\n                    width={MAX_WIDTH}\r\n                    height={MAX_HEIGHT}\r\n                    visible={this.state.gameWon}\r\n                >\r\n                    <GameWonDisplayView\r\n                        playerState={this.state.playerState}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        highscores={this.state.highscores}\r\n                        checkwin={this.checkwin}\r\n                    />\r\n                </GameWonOverlay>\r\n            </Board>\r\n            <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>\r\n            <HighScores highscores={this.state.highscores}/>\r\n            <ToggleSettings onClick={this.toggleLineIndicators}/>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport GameListItemView from '../components/GameListItemView';\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = window.gameslist;\r\n        var highscoreslist = window.highscoreslist;\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n        }\r\n    }\r\n\r\n    handleGameClick = (gamedata,highscores,uri) => {\r\n        this.props.handleGameClick(gamedata,highscores,uri);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div id={'GameMain'}>\r\n                {\r\n                    this.state.gameslist.map((game,index)=>\r\n                        <GameListItemView handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default FindGame;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame={'Yes'} gamedata={this.props.gamedata} highscores={this.props.highscores} uri={this.props.uri}/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import React from 'react';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(window.highscoreslist);\r\n        console.log(window.gameslist);\r\n        if (window.uri == '') {\r\n            this.state = {\r\n                PageSelected: <CreateGame/>, //default page for website\r\n            };\r\n        }\r\n        else {\r\n            this.state = {\r\n                PageSelected: <PlayGame gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri}/>, //when uri is entered to play specific game\r\n            };\r\n        }\r\n    }\r\n\r\n    handleGameClick = (gamedata,highscores,uri) => {\r\n        this.setState({\r\n            PageSelected: <PlayGame highscores={highscores} gamedata={gamedata} uri={uri}/>\r\n        });\r\n\r\n    }\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            PageSelected: <CreateGame/>, //if selected page is already CreateGame it wont refresh known problem\r\n        });\r\n    }\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            PageSelected: <FindGame handleGameClick={this.handleGameClick}/>,\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header id=\"top\">\r\n                    <div class=\"site-title-nav\">\r\n                        <input type=\"checkbox\" id=\"tn-tg\" class=\"topnav-toggle fullscreen-toggle\" aria-label=\"Navigation\"/>\r\n                            <label for=\"tn-tg\" class=\"fullscreen-mask\"></label>\r\n                            <label for=\"tn-tg\" class=\"hbg\">\r\n                                <span class=\"hbg__in\"></span>\r\n                            </label>\r\n                            <h1 class=\"site-title\">\r\n                                <a href=\"/\">RobitsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </h1>\r\n                            <nav id=\"topnav\" class=\"hover\">\r\n                                <section>\r\n                                    <a href=\"/\">\r\n                                        <span class=\"play\">Play</span>\r\n                                        <span class=\"home\">robitsevolved</span>\r\n                                    </a>\r\n                                    <div role=\"group\">\r\n                                        <a onClick={this.handleClickCreateGame} href=\"/#createGame\">Create a game</a>\r\n                                        <a onClick={this.handleClickFindGame} href=\"/#findgame\">Find a game</a>\r\n                                        <a href=\"/simul\">Puzzle Rush</a>\r\n                                    </div>\r\n                                </section>\r\n                                <section>\r\n                                    <a href=\"/training\">Learn</a>\r\n                                    <div role=\"group\">\r\n                                        <a href=\"/learn\">Robits Basics</a>\r\n                                        <a href=\"/training\">Starter Puzzles</a>\r\n                                    </div>\r\n                                </section>\r\n                                <section>\r\n                                    <a href=\"/player\">Community</a>\r\n                                    <div role=\"group\">\r\n                                        <a href=\"/player\">Players</a>\r\n                                        <a href=\"/team\">Teams</a>\r\n                                        <a href=\"/forum\">Forum</a>\r\n                                    </div>\r\n                                </section>\r\n                                <section>\r\n                                    <a href=\"/analysis\">Tools</a>\r\n                                    <div role=\"group\">\r\n                                        <a href=\"/analysis\">Robits solver (test)</a>\r\n                                        <a href=\"/analysis#explorer\">Settings</a>\r\n                                    </div>\r\n                                </section>\r\n                            </nav>\r\n                    </div>\r\n                    <div class=\"site-buttons\">\r\n                        <div id=\"clinput\">\r\n                            <a class=\"link\">\r\n                                <span data-icon=\"y\"></span>\r\n                            </a>\r\n                            <input spellcheck=\"false\" autocomplete=\"false\" aria-label=\"Search\" placeholder=\"Search\"></input>\r\n                        </div>\r\n                        <div class=\"dasher\">\r\n                            <a class=\"toggle link anon\">\r\n                                <span title=\"Preferences\" data-icon=\"%\"></span>\r\n                            </a>\r\n                        </div>\r\n                        <a href=\"/login?referrer=/\" class=\"signin button button-empty\">Sign in</a>\r\n                    </div>\r\n                </header>\r\n                      {this.state.PageSelected}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter> <App /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}