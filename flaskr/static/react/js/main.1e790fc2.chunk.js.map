{"version":3,"sources":["constants/constants.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/GameWonOverlay.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinView.jsx","components/AddPuzzleView.jsx","Material-UI/themes.jsx","components/ResetButton.jsx","containers/Modals/BoardResetModal.js","containers/DisplayView.js","components/HighScores.jsx","containers/GameWonDisplayView.js","components/ToggleSettings.js","components/boardgenerator.js","containers/Game.js","Pages/CreateGame.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","Pages/Home.js","containers/Modals/LoginModal.js","components/LoggedInUser.js","components/SignInButton.js","App.js","serviceWorker.js","index.js"],"names":["UP","DIRECTION_MAP_IMAGES","yellow","DOWN","LEFT","RIGHT","red","green","blue","MovesView","props","style","width","float","display","this","moveHistory","length","map","move","src","playerState","robot","colorSignifier","dir","React","Component","styleoutside","dimension","position","dim","height","backgroundColor","top","left","styleinside","styleinside2","Square","handleClick","handlePlayerMovementFromMouse","onClick","border","margin","overflow","children","transition","color","selectedColor","undefined","borderStyle","index","selected","borderColor","borderRadius","Robot","handleKeyDown","e","newDirection","keyCode","tabSelector","handlePlayerMovement","window","onkeydown","orientation","opacity","wallThickness","Wall","mainStyle","visible","marginRight","normalStyle","justifyContent","alignItems","opacityStyle","endPosition","obj","key","hasOwnProperty","YouWinView","numMoves","marginTop","marginBottom","id","type","placeholder","onSubmit","submitAnswer","AddPuzzleView","submitPuzzle","useStyles","makeStyles","theme","root","flexGrow","grid","griditems","paper","padding","spacing","Width","image","img","maxWidth","maxHeight","resetPuzzle","BoardResetModal","createBoardHandler","event","preventDefault","parseInt","document","getElementById","value","percent","toString","createBoard","show","className","textAlign","paddingRight","title","min","max","closeModal","DisplayView","createBoardPressed","Grid","container","item","xs","Button","dummy","createElement","body","appendChild","location","host","uri","select","execCommand","removeChild","copiedClipboard","variant","copiedToClipboard","createMode","highscores","marginleft","highscore","comment","highscorestyle","GameWonDisplayView","checkwin","ResetButton","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","boardState","wallVerticle","wallHorizontal","goal","randomPositions","i","push","randompos1","extend","randompos2","randompos3","randompos4","j","gameWon","playerStart","slice","addEventListener","indexOf","Game","updateHighscores","axios","get","state","then","res","setState","JSON","parse","data","DimensionChanged","squareSize","componentDidMount","loadedGame","IntervalId","setInterval","componentWillUnmount","clearInterval","robotSelect","robotSelected","namesubmit","post","puzzledata","name","history","toggleLineIndicators","ColoredLineDirections","console","log","showBoardResetPanelModal","closeCreateBoardModal","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","robotPosition","posObj","createModeWallClick","newWallHorizontal","wallH","indexToChange","newWallVerticle","wallV","gamedata","settingsWidth","settingsHeight","percentWall","settingsPercent","direction","justify","wrap","Board","square","Goal","ColoredLineDirection","ColoredLine","player","GameWonOverlay","HighScores","withRouter","CreateGame","ComplexGrid","classes","highscoreauthor","handleGameClick","game","cursor","Paper","ButtonBase","alt","sm","Typography","gutterBottom","difficulty","authorname","FindGame","handleSearchSubmit","searchTerm","search","highscoreslist","gameslist","PlayGame","handleClickCreateGame","handleClickFindGame","LoginModal","loginGoogle","href","class","closeLoginModal","LoggedInUser","loggedin","userInfo","profilePicture","username","SignInButton","textToShow","App","SignInButtonPressed","showLoginModal","PageSelected","newGame","token","aria-label","for","role","data-icon","spellcheck","autocomplete","Boolean","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.1e790fc2.chunk.js","sourcesContent":["export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.handlePlayerMovementFromMouse(this.props.position);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var selectedColor = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        selectedColor = SELECTED_ROBOT;\r\n        borderStyle = \"solid\";\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        borderStyle: borderStyle,\r\n        borderColor: selectedColor,\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.props.tabSelector();\r\n                return;\r\n                break;\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n\r\n\r\n        }\r\n        this.props.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onkeydown = this.handleKeyDown;\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - 4) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - 4) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE} from '../constants/constants';\r\n\r\n\r\nconst style = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nexport default (props) =>\r\n    <img src={GOAL_IMAGE} style={style(props)}/>\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from \"react\";\r\n\r\nconst mainStyle = (width,height,visible) => {\r\n    var display = 'block';\r\n    if (visible === false) {\r\n        display = 'none';\r\n    }\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        display: display,\r\n        width: widthset,\r\n        height: heightset,\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        float: 'left',\r\n        marginRight: '30px',\r\n        margin: 'auto',\r\n    };\r\n};\r\n\r\nconst normalStyle = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        display: 'flex',\r\n        width: widthset,\r\n        height: heightset,\r\n        position: 'absolute',\r\n        overflow: 'hidden',\r\n        float: 'center',\r\n        marginRight: '30px',\r\n        margin: 'auto',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    };\r\n};\r\n\r\nconst opacityStyle = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        backgroundColor: 'black',\r\n        opacity: 0.5,\r\n        width: widthset,\r\n        height: heightset,\r\n        position: 'absolute',\r\n        overflow: 'hidden',\r\n        float: 'left',\r\n        marginRight: '30px',\r\n        margin: 'auto',\r\n    };\r\n};\r\n\r\nexport default ({ width,height,visible,children }) => (\r\n    <div style={mainStyle(width, height,visible)}>\r\n        <div style={opacityStyle(width,height)}></div>\r\n        <div style={normalStyle(width, height)}>\r\n            {children}\r\n        </div>\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top;\r\n            left = endPosition.left;\r\n            width = position.left - endPosition.left + 'px';\r\n            height = '4px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top;\r\n            left = position.left;\r\n            width = endPosition.left - position.left + 'px';\r\n            height = '4px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top;\r\n            left = endPosition.left;\r\n            width = '4px';\r\n            height = position.top - endPosition.top + 'px';\r\n        } else {\r\n            top = position.top;\r\n            left = position.left;\r\n            width = '4px';\r\n            height = endPosition.top - position.top + 'px'\r\n        }\r\n    }\r\n    top+=18;\r\n    left+=18;\r\n\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\nexport default (props) => (\r\n    <div style={style(props)}/>\r\n);","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{color: 'white'}}>\r\n                You Win! with {this.props.numMoves} Moves!\r\n                </div>\r\n                <input style={buttonpanel()} id={\"namesubmitHS\"} type={\"text\"} placeholder={\"Username\"}>\r\n                </input>\r\n                <form onSubmit={this.props.submitAnswer} style={buttonpanel()}>\r\n                    <button type=\"submit\">Submit Highscore </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinView;","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitPuzzle} style={buttonpanel()}>\r\n                    <button type=\"submit\">Create Puzzle</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"namesubmit\"} type={\"text\"} placeholder={\"Name Of Puzzle?\"}>\r\n\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleView;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n}));\r\n\r\nexport default useStyles;","import React from \"react\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '10px'\r\n    };\r\n};\r\n\r\nexport default (props) =>\r\n    <div>\r\n        <form onSubmit={props.resetPuzzle} style={buttonpanel()}>\r\n            <button type=\"submit\">Reset</button>\r\n        </form>\r\n    </div>","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    render () {\r\n        if (!this.props.show) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"modal\">\r\n                <h2>Create Board Settings</h2>\r\n                <div className=\"content\" style={buttonpanel()}>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <input title=\"default is 16\" id={\"boardWidthInput\"} type={\"number\"} min={\"4\"} max={\"36\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <input title=\"default is 16\" id={\"boardHeightInput\"} type={\"number\"} min={\"4\"} max={\"36\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <input title=\"default is 20%\" id={\"boardRandomPercent\"} type={\"number\"} min={\"0\"} max={\"100\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"actions\">\r\n                    <button type=\"submit\" onClick={this.createBoardHandler}>Create New Board</button>\r\n                    <button style={{float: \"right\"}} className=\"toggle-button\" onClick={this.props.closeModal}>Close</button>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","import React from 'react';\r\nimport useStyles from '../Material-UI/themes';\r\nimport ResetButton from \"../components/ResetButton\";\r\nimport BoardResetModal from './Modals/BoardResetModal';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n}\r\n\r\n\r\nexport default function DisplayView(props) {\r\n    const classes = useStyles();\r\n    const createBoardPressed = () => {\r\n        props.createBoardPressed('Create Board');\r\n    }\r\n    const isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <Button onClick={createBoardPressed} variant=\"contained\" color=\"secondary\">Create New Board</Button>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    const copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + props.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        props.copiedClipboard();\r\n    };\r\n\r\n    const handleDimensionChange = (event,value) => {\r\n        var dimension = parseInt(value);\r\n        console.log(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        props.DimensionChanged(dimension);\r\n    }\r\n    return (\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                    <Button onClick={copyToClipboard} variant=\"contained\" color=\"secondary\">Copy Puzzle Link</Button>\r\n                    {\r\n                        props.copiedToClipboard ?\r\n                            <div style={{\"color\": \"green\"}}>\r\n                                Copied!\r\n                            </div> : null\r\n                    }\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Button\r\n                        onClick={props.resetPuzzle}\r\n                        variant=\"contained\" color=\"secondary\"\r\n                    >\r\n                    Reset\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    {isCreateMode(props.createMode)}\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    /*\r\n                    <Grid item xs={2}>\r\n                        <Typography id=\"discrete-slider-small-steps\" gutterBottom>\r\n                          Size Of Board\r\n                        </Typography>\r\n                        <Slider\r\n                          onChangeCommitted={handleDimensionChange}\r\n                          getAriaValueText={valuetext}\r\n                          aria-labelledby=\"discrete-slider-small-steps\"\r\n                          step={1}\r\n                          marks\r\n                          min={2}\r\n                          max={16}\r\n                          valueLabelDisplay=\"auto\"\r\n                        />\r\n                </Grid>\r\n\r\n    */","import React from 'react';\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n        <div style={styleelements()}>{'By: ' + highscore.comment}\r\n            <div>\r\n                {'Moves: ' + highscore.numMoves}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <div style={styleouter()}>{'All Highscores:'}\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </div>\r\n)","import React from 'react';\r\nimport ResetButton from \"../components/ResetButton\";\r\nimport HighScores from '../components/HighScores';\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        float: 'center',\r\n        width: '15%',\r\n        opacity: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    };\r\n};\r\n\r\nclass GameWonDisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={'DisplayView'} style={controlpanel()}>\r\n                {\r\n                    this.props.playerState.map(position =>\r\n                        this.props.checkwin(position)\r\n                    )\r\n                }\r\n                <ResetButton\r\n                    resetPuzzle={this.props.resetPuzzle}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameWonDisplayView;","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>Toggle Line Indicators:\r\n                <label class=\"switch\">\r\n                    <input id={\"toggleLineIndicators\"} onClick={this.handleClick} type=\"checkbox\" class=\"real-checkbox\"></input>\r\n                    <span class=\"slider round\"></span>\r\n                </label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n    var randomPositions = [goal];\r\n    for (var i=0;i<5;i++) {\r\n        randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n    }\r\n    var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n    var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n    var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n    var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport GameWonOverlay from \"../components/GameWonOverlay\";\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinView from '../components/YouWinView';\r\nimport AddPuzzleView from '../components/AddPuzzleView';\r\nimport DisplayView from './DisplayView';\r\nimport GameWonDisplayView from \"./GameWonDisplayView\";\r\nimport HighScores from '../components/HighScores';\r\nimport ToggleSettings from '../components/ToggleSettings';\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if([32, 37, 38, 39, 40,9].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        display: 'inline-block'\r\n    };\r\n};\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            console.log(this.state)\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,.90);\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false\r\n            },board);\r\n        }\r\n    }\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                this.setState({\r\n                    highscores: JSON.parse(res.data.highscores),\r\n                });\r\n            });\r\n    }\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    }\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            var IntervalId = setInterval(this.updateHighscores, 2000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.ColoredLineDirections.length === 0) {\r\n            this.setState({\r\n                ColoredLineDirections: [LEFT,RIGHT,UP,DOWN],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                ColoredLineDirections: [],\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        console.log(this.state.uri);\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length, name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeCreateBoardModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    createBoard = (width,height,percent) => {\r\n        console.log(width);\r\n        console.log(height);\r\n        console.log(percent);\r\n        var board = BoardGenerator(width,height,percent);\r\n           this.setState(extend({\r\n                width: width,\r\n                height: height,\r\n                percent: percent,\r\n           },board));\r\n    }\r\n\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        console.log(robotX);\r\n        console.log(robotY);\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity == 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity == 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity == 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity == 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n    checkwin = (robotPosition) => {\r\n        if (robotPosition.top === this.state.goal.top && robotPosition.left === this.state.goal.left) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No') {\r\n                return  (<YouWinView numMoves={this.state.moveHistory.length} submitAnswer={this.submitAnswer}/>);\r\n            }\r\n            else {\r\n                return (<AddPuzzleView submitPuzzle={this.submitPuzzle}/>);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false) {\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left)) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n            this.checkwin(newPosition);\r\n        }\r\n    };\r\n\r\n    handlePlayerMovementFromMouse = (posObj) => {\r\n        var newDirection;\r\n        var robot = this.state.playerState[this.state.robotSelected];\r\n        if (posObj.top === robot.top && posObj.left < robot.left)\r\n            newDirection = { top: 0, left: -(this.state.squareSize), dir: LEFT};\r\n        else if (posObj.top === robot.top && posObj.left > robot.left)\r\n            newDirection = { top: 0, left: this.state.squareSize, dir: RIGHT};\r\n        else if (posObj.top < robot.top && posObj.left === robot.left)\r\n            newDirection = { top: -(this.state.squareSize), left: 0, dir: UP};\r\n        else if (posObj.top > robot.top && posObj.left === robot.left)\r\n            newDirection = { top: this.state.squareSize, left: 0, dir: DOWN};\r\n        else newDirection = { top: 0, left: 0, dir: undefined};\r\n        this.handlePlayerMovement(newDirection)\r\n    };\r\n\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode == 'Yes') {\r\n            this.resetPuzzle()\r\n            if (orientation == 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                var indexToChange;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top == top && wallH.left == left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                console.log('clicking horizontal wall');\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation == 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                var indexToChange;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top == top && wallV.left == left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div id={'GameMain'} style={gamepanel()}>\r\n        <Grid\r\n            container\r\n            spacing={2}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n            wrap=\"nowrap\"\r\n            >\r\n            <Grid item xs={8}>\r\n                <DisplayView\r\n                    uri={this.state.uri}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    createMode={this.state.createMode}\r\n                    createBoardPressed={this.createBoardPressed}\r\n                    DimensionChanged={this.DimensionChanged}\r\n                    copiedClipboard = {this.copiedClipboard}\r\n                    copiedToClipboard = {this.copiedToClipboard}\r\n                />\r\n            </Grid>\r\n            <Grid container xs={12}>\r\n                <Grid item xs={2}>\r\n                    <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>\r\n                </Grid>\r\n                <Grid item xs={10} justify={'center'} alignItems={'center'}>\r\n                <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                    {\r\n                        this.state.boardState.map(square =>\r\n                            <Square dimension={this.state.squareSize}\r\n                                    position={{top:square.top,left: square.left}}\r\n                                    handlePlayerMovementFromMouse={this.handlePlayerMovementFromMouse}\r\n                            />\r\n                        )\r\n                    }\r\n                    <Goal dimension={this.state.squareSize} position={this.state.goal}/>\r\n                    {\r\n                        this.state.ColoredLineDirections.map(ColoredLineDirection =>\r\n                            <ColoredLine\r\n                                dir={ColoredLineDirection}\r\n                                position={{\r\n                                    top: this.state.playerState[this.state.robotSelected].top * this.state.squareSize,\r\n                                    left: this.state.playerState[this.state.robotSelected].left * this.state.squareSize\r\n                                }}\r\n                                endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                color={LINE_INDICATOR_COLOR}\r\n                            />\r\n                        )\r\n                    }\r\n                    {\r\n                        this.state.playerState.map((player, index) =>\r\n                            <Robot\r\n                                dimension={this.state.squareSize}\r\n                                position={{top:player.top,left:player.left}}\r\n                                color={player.color}\r\n                                selected={this.state.robotSelected}\r\n                                index={index}\r\n                                onClick={this.robotSelect}\r\n                                handlePlayerMovement={this.handlePlayerMovement}\r\n                                tabSelector={this.tabSelector}\r\n                            />\r\n                        )\r\n                    }\r\n\r\n                    {\r\n                        this.state.wallHorizontal.map(wallH =>\r\n                            <Wall\r\n                                orientation={'horizontal'}\r\n                                dimension={this.state.squareSize}\r\n                                position={{top:wallH.top,left:wallH.left}}\r\n                                opacity={wallH.opacity}\r\n                                onClick={this.createModeWallClick}\r\n                            />\r\n                        )\r\n                    }\r\n                    {\r\n                        this.state.wallVerticle.map(wallV =>\r\n                            <Wall\r\n                                orientation={'verticle'}\r\n                                dimension={this.state.squareSize}\r\n                                position={{top:wallV.top,left:wallV.left}}\r\n                                opacity={wallV.opacity}\r\n                                onClick={this.createModeWallClick}\r\n                            />\r\n                        )\r\n\r\n                    }\r\n                    <GameWonOverlay\r\n                        width={this.state.width * this.state.squareSize}\r\n                        height={this.state.height * this.state.squareSize}\r\n                        visible={this.state.gameWon}\r\n                    >\r\n                        <GameWonDisplayView\r\n                            playerState={this.state.playerState}\r\n                            resetPuzzle={this.resetPuzzle}\r\n                            highscores={this.state.highscores}\r\n                            checkwin={this.checkwin}\r\n                        />\r\n                    </GameWonOverlay>\r\n                </Board>\r\n                </Grid>\r\n             </Grid>\r\n            <Grid item xs={4}>\r\n                <HighScores highscores={this.state.highscores}/>\r\n            </Grid>\r\n            <BoardResetModal\r\n                createBoard={this.createBoard}\r\n                width={this.state.width}\r\n                height={this.state.height}\r\n                percent={this.state.percent}\r\n                closeModal={this.closeCreateBoardModal}\r\n                show={this.state.showBoardResetPanelModal}\r\n            />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n                //<ToggleSettings onClick={this.toggleLineIndicators}/>\r\n\r\nexport default withRouter(Game);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport useStyles from '../Material-UI/themes';\r\n\r\nconst handleClick = (callback,puzzledata,highscores,uri) => {\r\n    callback(puzzledata,highscores,uri);\r\n}\r\n\r\n\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n    if (typeof props.highscore !== 'undefined') {\r\n        var highscore = props.highscore.numMoves;\r\n        var highscoreauthor = props.highscore.comment;\r\n    }\r\n    else {\r\n        var highscore = 'None'\r\n        var highscoreauthor = ''\r\n    }\r\n    const handleClick = () => {\r\n        props.handleGameClick(props.game.puzzledata,props.highscores,props.game.uri);\r\n    }\r\n\r\n    return (\r\n    <Grid onClick={handleClick} style={{ cursor: 'pointer' }} item>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <ButtonBase className={classes.image}>\r\n              <img className={classes.img} alt=\"complex\" src=\"https://scx1.b-cdn.net/csz/news/800/2019/3-robot.jpg\" />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={15} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={5}>\r\n              <Grid item xs>\r\n                <Typography gutterBottom variant=\"subtitle1\">\r\n                  {props.game.name}\r\n                </Typography>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  Type {props.game.type} • {props.game.difficulty}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {props.game.authorname}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                  Remove\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid spacing={2} item>\r\n              <Typography variant=\"body2\">\r\n                  {highscore}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {highscoreauthor}\r\n              </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios';\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = window.gameslist;\r\n        var highscoreslist = window.highscoreslist;\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n        }\r\n    }\r\n\r\n    handleGameClick = (gamedata,highscores,uri) => {\r\n        this.props.handleGameClick(gamedata,highscores,uri);\r\n    }\r\n\r\n    handleSearchSubmit = event => {\r\n        event.preventDefault();\r\n        var searchTerm = document.getElementById(\"searchBarFindGame\").value;\r\n        axios.post('/search', {search: searchTerm})\r\n            .then( res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div id={'GameMain'}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\" spacing={2}>\r\n                        {\r\n                            this.state.gameslist.map((game,index)=>\r\n                                <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n//<SearchBarFindGame submitSearch={this.handleSearchSubmit}/>\r\nexport default FindGame;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame={'Yes'}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n\r\n    return (<div className={classes.grid}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={4}>\r\n                </Grid>\r\n                <Grid\r\n                    container xs={4}\r\n                    spacing={4}\r\n                    direction=\"column\"\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    wrap=\"nowrap\"\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={props.handleClickCreateGame}variant=\"contained\" color=\"primary\">\r\n                            Create a Game\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={props.handleClickFindGame} variant=\"contained\" color=\"primary\">\r\n                            Find a Game\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\" color=\"primary\">\r\n                            Play a Random Game\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\" color=\"primary\">\r\n                            Puzzle Rush\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./modal.css\";\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    }\r\n\r\n    render () {\r\n        if (!this.props.show) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div class=\"modal\" id=\"modal\">\r\n                <h2>Login to Robits!</h2>\r\n                <img onClick={this.loginGoogle} src={\"/static/images/btn_google_signin_light_normal_web@2x.png\"}></img>\r\n                <button class=\"toggle-button\" onClick={this.props.closeLoginModal}>close</button>\r\n            </div>\r\n            )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '50px',\r\n        width: '50px',\r\n    };\r\n}\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return null\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                    <div>{window.userInfo.username}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <a onClick={this.handleClick} class=\"signin button button-empty\">{textToShow}</a>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport Home from './Pages/Home';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(window.highscoreslist);\r\n        console.log(window.gameslist);\r\n        if (window.uri == '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame}/>, //default page for website\r\n            };\r\n        }\r\n        else {\r\n            this.state = {\r\n                PageSelected: <PlayGame gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri}/>, //when uri is entered to play specific game\r\n            };\r\n        }\r\n        this.state.showLoginModal = false;\r\n    }\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type == 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    }\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    }\r\n\r\n    handleGameClick = (gamedata,highscores,uri) => {\r\n        this.setState({\r\n            PageSelected: <PlayGame highscores={highscores} gamedata={gamedata} uri={uri}/>\r\n        });\r\n    }\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var newGame = <CreateGame state={\"new\"}/>; //KNOWN bug where if you create a game you have to refresh the page to cause a re-render of <CreateGame/>\r\n        this.setState({\r\n            PageSelected: newGame, //if selected page is already CreateGame it wont refresh known problem\r\n        });\r\n    }\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        console.log('here');\r\n        this.setState({\r\n            PageSelected: <FindGame handleGameClick={this.handleGameClick}/>,\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header id=\"top\">\r\n                    <div class=\"site-title-nav\">\r\n                        <input type=\"checkbox\" id=\"tn-tg\" class=\"topnav-toggle fullscreen-toggle\" aria-label=\"Navigation\"/>\r\n                            <label for=\"tn-tg\" class=\"fullscreen-mask\"></label>\r\n                            <label for=\"tn-tg\" class=\"hbg\">\r\n                                <span class=\"hbg__in\"></span>\r\n                            </label>\r\n                            <h1 class=\"site-title\">\r\n                                <a href=\"/\">RobitsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </h1>\r\n                            <nav id=\"topnav\" class=\"hover\">\r\n                                <section>\r\n                                    <a href=\"/\">\r\n                                        <span class=\"play\">Play</span>\r\n                                        <span class=\"home\">robitsevolved</span>\r\n                                    </a>\r\n                                    <div role=\"group\">\r\n                                        <a onClick={this.handleClickCreateGame} href=\"/#createGame\">Create a game</a>\r\n                                        <a onClick={this.handleClickFindGame} href=\"/#findgame\">Find a game</a>\r\n                                        <a href=\"/simul\">Puzzle Rush</a>\r\n                                    </div>\r\n                                </section>\r\n                                <section>\r\n                                    <a href=\"/training\">Learn</a>\r\n                                    <div role=\"group\">\r\n                                        <a href=\"/learn\">Robits Basics</a>\r\n                                        <a href=\"/training\">Starter Puzzles</a>\r\n                                    </div>\r\n                                </section>\r\n                                <section>\r\n                                    <a href=\"/player\">Community</a>\r\n                                    <div role=\"group\">\r\n                                        <a href=\"/player\">Players</a>\r\n                                        <a href=\"/team\">Teams</a>\r\n                                        <a href=\"/forum\">Forum</a>\r\n                                    </div>\r\n                                </section>\r\n                                <section>\r\n                                    <a href=\"/analysis\">Tools</a>\r\n                                    <div role=\"group\">\r\n                                        <a href=\"/analysis\">Robits solver (test)</a>\r\n                                        <a href=\"/analysis#explorer\">Settings</a>\r\n                                    </div>\r\n                                </section>\r\n                            </nav>\r\n                    </div>\r\n                    <div class=\"site-buttons\">\r\n                        <div id=\"clinput\">\r\n                            <a class=\"link\">\r\n                                <span data-icon=\"y\"></span>\r\n                            </a>\r\n                            <input spellcheck=\"false\" autocomplete=\"false\" aria-label=\"Search\" placeholder=\"Search\"></input>\r\n                        </div>\r\n                        <div class=\"dasher\">\r\n                            <a class=\"toggle link anon\">\r\n                                <span title=\"Preferences\" data-icon=\"%\"></span>\r\n                            </a>\r\n                        </div>\r\n                        <LoggedInUser/>\r\n                        <SignInButton onClick={this.SignInButtonPressed}/>\r\n                    </div>\r\n                </header>\r\n                {this.state.PageSelected}\r\n                <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}