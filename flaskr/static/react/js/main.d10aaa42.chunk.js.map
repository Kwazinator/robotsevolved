{"version":3,"sources":["DarkMode/constants/constants.js","DarkMode/components/DailyMovesView.jsx","DarkMode/components/CreateBoardGoalSelector.jsx","DarkMode/components/LearnGameItems.js","DarkMode/components/MovesView.jsx","DarkMode/components/Square.jsx","DarkMode/components/Board.jsx","DarkMode/components/Robot.jsx","DarkMode/components/Wall.jsx","DarkMode/components/Goal.jsx","DarkMode/components/ColoredLine.jsx","DarkMode/constants/extend.js","DarkMode/components/YouWinModal.jsx","DarkMode/components/YouWinDailySingleModal.js","DarkMode/components/YouWinDailyFinalModal.js","DarkMode/components/AddPuzzleModal.jsx","DarkMode/components/ToggleSettings.js","DarkMode/components/Timer.js","DarkMode/containers/DisplayView.js","DarkMode/components/HighScores.jsx","DarkMode/components/DailyChallengeScores.jsx","DarkMode/containers/Modals/PuzzleRushFinishedModal.js","DarkMode/containers/Modals/RandomGameStatsModal.jsx","DarkMode/components/CloseIconWithOnClick.jsx","DarkMode/components/DescriptionList.jsx","DarkMode/components/YouWinLessonModal.js","DarkMode/components/ShowDailyChallengeScoresCard.jsx","DarkMode/components/DailyChallengeHistoryData.js","DarkMode/components/boardgenerator.js","DarkMode/containers/Modals/BoardResetModal.js","DarkMode/containers/Game.js","DarkMode/Material-UI/themes.jsx","DarkMode/containers/FindGameElements.js","DarkMode/Pages/Home.js","DarkMode/Pages/CreateGame.js","DarkMode/Pages/FindGame.js","DarkMode/Pages/PlayGame.js","DarkMode/containers/Modals/LoginModal.js","DarkMode/components/SignInButton.js","DarkMode/components/LoggedInUser.js","DarkMode/containers/Modals/PuzzleRushDifficultyModal.js","DarkMode/containers/Modals/RandomGameDifficultyPage.js","DarkMode/components/GameListItemView.jsx","DarkMode/components/SearchBarFindGame.jsx","DarkMode/components/ProfilePageComponents/ProfilePageCreatedGamesDetails.js","DarkMode/components/ProfilePageComponents/ProfilePageSolutionDetails.js","DarkMode/Pages/ProfilePage.js","DarkMode/Pages/RandomGamePage.js","DarkMode/Pages/PuzzleRushPage.js","DarkMode/Pages/LessonsPage.js","DarkMode/Pages/DailyChallenge.js","DarkMode/Pages/AboutUs.js","DarkMode/components/ShowDailyPuzzleHistory.js","DarkMode/Pages/DailyChallengeHistory.js","DarkMode/Pages/DailyChallengeHistoryAnswersPage.js","DarkMode/components/LoadingPage.jsx","DarkMode/App.js","containers/Modals/DailyChallengeStartModal.js","Material-UI/themes.jsx","constants/constants.js","Pages/Leaderboard.js","components/WeeklyGameItems.js","components/SwitchPad.jsx","components/DailyMovesView.jsx","components/CreateBoardGoalSelector.jsx","components/LearnGameItems.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinModal.jsx","components/YouWinDailySingleModal.js","components/YouWinDailyFinalModal.js","components/YouWinWeeklyModal.js","components/AddPuzzleModal.jsx","components/ToggleSettings.js","components/Timer.js","containers/DisplayView.js","components/HighScores.jsx","containers/Modals/PuzzleRushFinishedModal.js","containers/Modals/RandomGameStatsModal.jsx","components/CloseIconWithOnClick.jsx","components/DescriptionList.jsx","components/YouWinLessonModal.js","components/ShowDailyChallengeScoresCard.jsx","components/DailyChallengeHistoryData.js","components/boardgenerator.js","containers/Modals/BoardResetModal.js","containers/Game.js","Pages/CreateGame.js","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","Pages/Home.js","Pages/WeeklyChallengePage.js","containers/Modals/LoginModal.js","components/SignInButton.js","components/LoggedInUser.js","containers/Modals/PuzzleRushDifficultyModal.js","containers/Modals/RandomGameDifficultyModal.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","components/ProfilePageComponents/ProfilePageCreatedGamesDetails.js","components/ProfilePageComponents/ProfilePageSolutionDetails.js","Pages/ProfilePage.js","Pages/RandomGamePage.js","Pages/PuzzleRushPage.js","Pages/LessonsPage.js","Pages/DailyChallenge.js","Pages/AboutUs.js","components/ShowDailyPuzzleHistory.js","Pages/DailyChallengeHistory.js","Pages/DailyChallengeHistoryAnswersPage.js","components/LoadingPage.jsx","App.js","ContainerApplication.js","serviceWorker.js","index.js"],"names":["UP","DOWN","LEFT","RIGHT","MOBILE_INNER_SCREEN_WIDTH","ROBOT_GREEN","ROBOT_BLUE","ROBOT_YELLOW","ROBOT_RED","COLORED_GOAL_IMAGE","GOAL_IMAGE","DIRECTION_MAP_IMAGES","yellow","red","green","blue","DailyMovesView","props","resetToBest","moveHistory","playerState","this","length","animate","levels","corners","style","margin","layer","Typography","map","move","src","robot","colorSignifier","dir","Divider","Button","color","variant","onClick","React","Component","CreateBoardGoalSelector","useState","wildchecked","setWildChecked","Paper","FormControl","backgroundColor","textAlign","component","FormLabel","FormGroup","row","FormControlLabel","value","control","Checkbox","handleWildCardClick","checked","label","labelPlacement","handleColoredClick","LearnGameItems","handleClick","handleClickGame","index","selected","active","name","MovesView","width","float","display","styleoutside","dimension","position","dim","height","backgroundImage","boxShadow","top","left","Square","border","overflow","children","id","transition","styleoutsidedraggable","styleinside","styleinside2","undefined","backgroundSize","borderRadius","Robot","onStopDragHandler","e","handleCreateMode","isCreateMode","buildMode","x","y","grid","draggableGrid","onStop","bounds","orientation","opacity","wallThickness","wallOffset","Wall","userSelect","styledragable","Goal","show","endPosition","obj","key","hasOwnProperty","YouWinModal","classes","Dialog","PaperProps","overlayStyle","disableAutoFocus","disableEnforceFocus","onClose","handleClose","container","document","getElementById","BackdropProps","open","maxWidth","numMoves","TextField","InputProps","className","multilineColor","InputLabelProps","multilineColorLabel","defaultValue","username","DialogActions","submitAnswer","resetPuzzle","withStyles","theme","YouWinDailySingleModal","totalMoves","undoMove","moveNextPuzzle","YouWinDailyFinalModal","handleClickSubmitGame","setState","error","Alert","severity","newPlayerState","state","submitted","AddPuzzleModal","campaignPuzzle","window","loggedin","userInfo","userID","submitPuzzleCampaign","submitPuzzle","ToggleSettings","event","Switch","onChange","showColoredLineDirections","Timer","minutes","seconds","timer","myInterval","setInterval","puzzleRushTimeUp","clearInterval","valuetext","DisplayView","createMode","fullWidth","handleCreateBoardClick","toggleBuildMode","createBoardPressed","copyToClipboard","dummy","createElement","body","appendChild","location","host","uri","select","execCommand","removeChild","copiedClipboard","thisThing","copyButtonText","setTimeout","handleDimensionChange","getElementsByClassName","blur","parseInt","toString","DimensionChanged","showPuzzleLink","isPuzzleRush","isLesson","isDailyChallengeAnswers","isDailyChallenge","paddingBottom","marginRight","marginTop","marginBottom","ButtonGroup","toggleLineIndicators","fontSize","Slider","onChangeCommitted","getAriaValueText","step","marks","min","max","squareSizeValue","valueLabelDisplay","highscores","Grid","item","xs","marginleft","highscore","level","spacing","comment","userid","created","highscorestyle","score","wins","i","crowns","push","CrownCounter","user_id","direction","PuzzleRushWinModal","closeModal","onBackdropClick","DialogTitle","difficulty","DialogContent","dividers","md","List","dense","ListItem","ListItemText","primary","secondary","numPuzzlesCompleted","averageTime","averageMoves","differenceOptimal","movesPerSecond","handleClickPlayAgain","RandomGameStatsModal","showStatsModal","handleShowRandomAnswers","answers","lowestMoveSequence","lowestMoves","CloseIconWithOnClick","onMouseDown","Descriptionlist","tipsText","text","ListItemSecondaryAction","IconButton","edge","handleCloseToolTips","YouWinLessonModal","useStyles","makeStyles","root","bullet","transform","title","pos","ShowDailyChallengeScoresCard","header","anim","CardContent","bestScore","MovesforPuzzle","MoveSequence","DailyChallengeHistoryData","difficultyforPuzzle","lowestMovesforPuzzle","nameSubmitted","scoreSubmitted","playerMovedSequence","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","type","boardState","wallVerticle","wallHorizontal","goal","randompos1","randompos2","randompos3","randompos4","randomPositions","extend","j","gameWon","playerStart","slice","BoardResetModal","createBoardHandler","preventDefault","percent","createBoard","paddingRight","Input","inputProps","placeholder","addEventListener","keyCode","target","indexOf","formatGeneratedMoveSequence","moves","images","charAt","setDefaultSquareSize","boardWidth","boardHeight","drawerWidth","getComputedStyle","windowWidth","innerWidth","settingstop","innerHeight","settings","squarevalue","ColoredLineDirections","Game","updateHighscores","axios","get","then","res","highscoresdata","JSON","parse","data","FindhighscoreIsDiff","squareSize","copiedToClipboard","check","tocheck","toreturn","DChighscoreIsDiff","updateDailyHighscores","dc_id","dailyChallengeSessionBestHistory","dailyChallengeSessionBestPlayerState","handleClickDailyChallenge","dchighscores","componentDidMount","onkeydown","handleKeyDown","loadedGame","IntervalId","dailyChallengeMode","componentWillUnmount","newDirection","tabSelector","handleUndoMove","handlePlayerMovement","robotSelect","robotSelected","namesubmit","themoveHistory","post","puzzledata","authorname","history","handleLineDirections","solutiondata","dailySubmittedSucessfully","showBoardResetPanelModal","closeRandomStatsModal","closeCreateBoardModal","closePuzzleRushFinishedModal","showPuzzleRushFinishedModal","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","nextLessonPuzzle","puzzle","numPuzzleon","handleLearnClickGame","totalMovesDiff","solutiondifference","totalMovesList","avgMoves","p_id","differenceFrom","console","log","percentile","submitDailyAnswer","LastRobotPosition","moveHistoryList","playerStateList","dc_movesList","dc_playerList","checkwin","coloredGoals","Won","player","found","colorfound","puzzleRush","randomGame","dailyChallengeModeAnswers","gamesWonDaily","games","handleDailyClickGame","learnMode","g_id","solutionmoves","g_moves","g_puzzledata","newarray","concat","oldPositon","prevPosition","splice","description","handleDailyClickAnswersGame","g_solutiondata","g_difficulty","solutionDataSubmitted","goalItem","newgoal","newColoredGoals","filter","trimName","separated","split","word","substring","loadSidebar","fontsize","game","paddingTop","dailyDayName","DailyChallengeScores","gutterBottom","alignItems","author","borderTopRightRadius","borderBottomRightRadius","startIcon","hasVoted","updateLike","size","borderTopLeftRadius","borderBottomLeftRadius","marginLeft","votes","HighScores","action","vote","newHasVoted","newVotes","isNaN","catch","_","signInModalOpen","handlePlayerMovementFromMouse","moveObj","pop","createModeWallClick","indexToChange","newWallHorizontal","wallH","newWallVerticle","wallV","onStopDragHandlerGoal","round","lastY","lastX","newGoals","goals","gamedata","g_name","savedMoves","g_uri","pushState","settingsWidth","settingsHeight","percentWall","settingsPercent","LineDirections","paddingLeft","sm","numPuzzleRush","zeroMinWidth","Board","square","ColoredLineDirection","ColoredLine","puzzleRushPercentileCompleted","withRouter","flexGrow","homepage","griditems","paper","padding","Width","image","img","maxHeight","baseExpansion","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","darkmode","iconcards","marginBotton","iconcardsDaily","minWidth","titlehome","fontFamily","titledailyroto","iconfonts","createboardcard","content","demo","background","centeredProfile","expandedPanelDCH","table","upperPadding","upperPaddingButton","bottom","lowerPadding","rightSideText","leftSideText","handleGameClick","numberOfHighScores","trimNameShort","justifyContent","plays","disableGutters","ComplexGrid","justify","entered","handleClickFindGame","handleClickCreateGame","handleClickRandomGame","handleClickLearnGame","handleClickPuzzleRush","handleClickProfile","handleClickDailyChallengeHistory","handleClickAbout","dividerFullWidth","CreateGame","FindGame","handleFilterMenuOpen","anchorEl","currentTarget","keycode","handleSearchSubmit","scrollTo","findWindowHeight","setFindWindow","scrollY","handleCloseFilterMenuMostPlayed","searchTerm","searchRef","search","offset","gameslist","highscoreslist","setNumFindGames","lastSearch","hasMore","handleCloseFilterMenuMostLiked","handleCloseFilterMenuHighest","loadMoreItems","isLoadingSearch","offsetSearch","handleCloseFilterMenu","align","InputBase","input","inputRef","ref","onKeyPress","iconButton","divider","Menu","keepMounted","Boolean","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","FindGameElements","pageStart","loadMore","bind","loader","CircularProgress","threshold","flex","PlayGame","LoginModal","loginGoogle","href","loginFacebook","closeLoginModal","class","SignInButton","textToShow","LoggedInUser","SignInButtonPressed","profilePicture","PuzzleRushDifficultyModal","handleClickPuzzleRushModal","isLoading","handleClickEasyPuzzleRush","handleClickMediumPuzzleRush","handleClickHardPuzzleRush","handleClickExHardPuzzleRush","handleChange","wrap","RadioGroup","Radio","backButton","RandomGameDifficultyPage","handleClickRandomGameModal","handleClickEasy","handleClickMedium","handleClickHard","handleClickExHard","handleClickGodMode","ProfilePageCreatedGamesDetails","handleClickPlayGame","ProfilePageSolutionDetails","solution","WinnerCreated","WinnerUsername","ProfilePage","createData","col1","col2","columns","rows","puzzlerushview","maxeasyc","maxeasyp","maxmediumc","maxmediump","maxhardc","maxhardp","maxexhardc","maxexhardp","rowseff","maxeffec","maxeffep","maxeffmc","maxeffmp","maxeffhc","maxeffhp","maxeffexc","maxeffexp","setError","expandedGame","setExpandedGame","expandedHighscores","setExpandedHighscores","newuser","gamesview","ExpansionPanel","expanded","panel","isExpandedGame","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","solutionsview","isExpandedHighScores","WinnerUserId","TableContainer","Table","TableHead","TableRow","column","TableCell","TableBody","RandomGamePage","PuzzleRushPage","LessonsPage","learngameslist","DailyChallengePage","dailyChallengeGameslist","AboutUs","Card","CardActions","Avatar","alt","paragraph","ShowDailyPuzzleHistory","handleDailyPuzzleHistoryClick","DailyChallengeHistory","expandedPanel","setExpandedPanel","dailychallengehistory","isExpanded","DailyChallengeHistoryAnswersPage","LoadingPage","full","MyApp","animTime","base","handleChatOpen","openChat","chatAnchor","handleChatClose","handleDrawerClose","boolean","loadingPage","isOpen","PageSelected","DailyChallenge","handleDrawerOpen","showLoginModal","showRandomGameModal","closeRandomGameLoginModal","handleHomePageClick","closePuzzleRushLoginModal","showPuzzleRushModal","historydata","challengeHistoryData","dailychallengehistoryloaded","profileData","profileDataloaded","num","filterTerm","numFindGames","numGames","handleClickAboutUs","handleMobileMenuClose","mobileAnchorEl","mobileMenuOpen","showPage","handleMobileMenuOpen","token","linedir","LineDirFlag","getTheme","createTheme","theme2","createMuiTheme","teal","main","pattern","AppBar","clsx","appBar","appBarShift","Toolbar","toolbar1","grow","sectionDesktop","sectionMobile","Drawer","drawer","anchor","drawerPaper","drawerHeader","drawerHeaderLeft","drawerHeaderRight","useTheme","button","ListItemIcon","contentShift","right","Popover","frameBorder","withStyles2","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","menuButton","hide","mixins","toolbar","breakpoints","up","toggleBorder","gradient","DailyChallengeStartModal","startDailyChallenge","startDaily","Leaderboard","setAnchorEl","puzzleRushTabValue","setPuzzleRushTabValue","puzzleRushDifficultyValue","setPuzzleRushDifficultyValue","puzzleRushDifficultyLabel","setPuzzleRushDifficultyLabel","puzzle_rush_leaderboard","easyrandomscore","puzzleRushCurrentScoreList","setPuzzleRushCurrentScoreList","easyrandomusername","puzzleRushCurrentUserList","setPuzzleRushCurrentUserList","handlePuzzleRushDifficultyChange","useEffect","updatePuzzleRushList","mediumrandomscore","mediumrandomusername","hardrandomscore","hardrandomusername","exhardrandomscore","exhardrandomusername","easyclassicscore","easyclassicusername","mediumclassicscore","mediumclassicusername","hardclassicscore","hardclassicusername","exhardclassicscore","exhardclassicusername","easyclassicv2score","easyclassicv2username","mediumclassicv2score","mediumclassicv2username","hardclassicv2score","hardclassicv2username","exhardclassicv2score","exhardclassicv2username","findGame_leaderboard","entry","Crowns","dailyChallenge_leaderboard","Tabs","indicatorColor","textColor","newValue","Tab","userName","WeeklyGameItems","disabled","wallType","coloredSwitches","redOpac","blueOpac","greenOpac","yellowOpac","switches","isOn","YouWinWeeklyModal","buttontext","isWeeklyChallenge","elevation","noWrap","daily_crowns","weekly_crowns","Tooltip","Badge","badgeContent","MyStopwatch","stopwatchOffset","Date","setSeconds","getSeconds","seconds_add","minutes_add","useStopwatch","offsetTimestamp","autoStart","hours","displaySeconds","days","isRunning","start","pause","reset","displayMinutes","displayHours","Chip","updateWeeklyHighscores","wc_id","weeklyChallengeSessionBestHistory","weeklyChallengeSessionBestPlayerState","handleClickWeeklyClick","weeklyChallengeMode","isWallSolid","weeklyChallegeSaveMovesCookie","completed","checkWinningPosition","gameswonWeekly","gamesWon","submitWeeklyAnswer","stringify","gamesWonWeekly","handleWeeklyClickGame","moveNextPuzzleWeekly","isEvolution","newSwitches","daily_start_timer_seconds","daily_start_timer_minutes","oldPosition","flashMessage","greeting","experiencedUser","CardActionArea","handleClickWeekly100","CardMedia","WeeklyChallengePage","handleWeeklyClick","weeklyChallengeGameslist","wchighscores","col3","maxeasyc2","maxmediumc2","maxhardc2","maxexhardc2","maxeffec2","maxeffmc2","maxeffhc2","maxeffexc2","aligh","App","isDailyStarted","showDailyChallengeModal","handleClickDailyChallengeModal","closeDailyChallengeModal","wc_movesList","wc_playerList","wc_gamesWon","handleClickWebsiteLeaderboard","bannerImg","iconImg","handleClickDarkMode","RandomGameDifficultyModal","ContainerApplication","Page","render","hostname","match","ReactDOM","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"js/main.d10aaa42.chunk.js","sourcesContent":["export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const MOBILE_INNER_SCREEN_WIDTH = '960';\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const COLORED_GOAL_IMAGE = '/static/images/targetbullseye.png';\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {Words,Line,Frame} from 'arwes';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass DailyMovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    resetToBest = () => {\r\n        this.props.resetToBest(this.props.moveHistory,this.props.playerState)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.moveHistory.length == 0 ?\r\n            <Frame animate levels={1} corners={3}>\r\n                <p style={{margin: '15px'}}>\r\n                <Words animate layer='control'>Personal Best</Words>\r\n                <Line animate/>\r\n                <Typography>None</Typography>\r\n                </p>\r\n            </Frame> :\r\n            <Frame animate levels={1} corners={3}>\r\n            <p style={{margin: '15px'}}>\r\n                <Words animate layer='control'>Personal Best</Words>\r\n                <Line animate/>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n                <Divider />\r\n                <Button color=\"secondary\" variant={\"outlined\"} onClick={this.resetToBest}>Reset to best</Button>\r\n                </p>\r\n            </Frame>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyMovesView;","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function CreateBoardGoalSelector(props) {\r\n  const [wildchecked, setWildChecked] = React.useState(true);\r\n  const handleWildCardClick = () => {\r\n    props.handleWildCardClick();\r\n    setWildChecked(wildchecked ? false : true);\r\n  }\r\n\r\n  const handleBlueClick = () => {\r\n    props.handleColoredClick('blue');\r\n  }\r\n  const handleGreenClick = () => {\r\n    props.handleColoredClick('green');\r\n  }\r\n  const handleRedClick = () => {\r\n    props.handleColoredClick('red');\r\n  }\r\n  const handleYellowClick = () => {\r\n    props.handleColoredClick('yellow');\r\n  }\r\n  return (\r\n  <Paper>\r\n    <FormControl style={{backgroundColor: 'white', textAlign: 'center'}} component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Goal Selector</FormLabel>\r\n      <FormGroup aria-label=\"position\" row>\r\n        <FormControlLabel\r\n          value=\"Wildcard\"\r\n          control={<Checkbox onClick={handleWildCardClick} checked={wildchecked} color=\"primary\" />}\r\n          label=\"wildcard\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Blue\"\r\n          control={<Checkbox onClick={handleBlueClick} color=\"primary\" />}\r\n          label=\"blue\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Green\"\r\n          control={<Checkbox onClick={handleGreenClick} color=\"primary\" />}\r\n          label=\"green\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Red\"\r\n          control={<Checkbox onClick={handleRedClick} color=\"primary\" />}\r\n          label=\"red\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Yellow\"\r\n          control={<Checkbox onClick={handleYellowClick} color=\"primary\" />}\r\n          label=\"yellow\"\r\n          labelPlacement=\"top\"\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n    </Paper>\r\n  );\r\n}","import React from 'react';\r\nimport {Button} from 'arwes';\r\n\r\nexport default function LearnGameItems(props) {\r\n    const handleClick = () => {\r\n        props.handleClickGame(props.index)\r\n    }\r\n    if (props.selected === props.index) {\r\n        return (\r\n            <Button animate active={true}\r\n                onClick={handleClick}\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Button animate\r\n                variant=\"contained\"\r\n                onClick={handleClick}\r\n                aria-label=\"vertical outlined primary button group\"\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundImage: '/static/images/background-space.jpg',\r\n        boxShadow: '0 0 0 0.5pt ' + SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundImage: '/static/images/background-space.jpg',\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={styleoutside(this.props)}>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div id=\"MainGameBoard\" style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleoutsidedraggable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var boxShadow = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        boxShadow = '0 0 0 3pt ' + SELECTED_ROBOT;\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        boxShadow: boxShadow,\r\n        backgroundSize: dim,\r\n        backgroundImage: \"url(\" + \"/static/images/astronaut.png\" + \")\",\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    onStopDragHandler = (e, position) => {\r\n        this.props.onStopDragHandler(position,this.props.index);\r\n    }\r\n\r\n\r\n    handleCreateMode = () => {\r\n        if (this.props.isCreateMode === 'Yes' && this.props.buildMode) {\r\n            return (\r\n            <Draggable position={{x: this.props.position.left * this.props.dimension, y:this.props.position.top*this.props.dimension}} grid={this.props.draggableGrid} onStop={this.onStopDragHandler} bounds=\"parent\">\r\n                <div onClick={this.handleClick} style={styleoutsidedraggable(this.props)}>\r\n                    <div style={styleinside(this.props)}>\r\n                        <div style={styleinside2(this.props)}/>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            this.handleCreateMode()\r\n        );\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundImage: 'url(/static/images/concrete2smallsized.jpg)',\r\n        boxShadow: '0 0 0 2pt black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE,ROBOT_GREEN,ROBOT_BLUE,ROBOT_RED,ROBOT_YELLOW,COLORED_GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none',\r\n        backgroundColor: color,\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none',\r\n        backgroundColor: color\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.position == null) {\r\n        return null\r\n    }\r\n    if (props.isCreateMode === 'Yes'  && props.buildMode) {\r\n        const onStopDragHandler = (e, position) => {\r\n            props.onStopDragHandler(position,props.color);\r\n        }\r\n        if (props.color == undefined) {\r\n            return(\r\n            <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n                <img src={GOAL_IMAGE} style={styledragable(props)}/>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n                <img src={COLORED_GOAL_IMAGE} style={styledragable(props)}/>\r\n            </Draggable>\r\n            )\r\n        }\r\n    }\r\n    else {\r\n        if (props.color == undefined) {\r\n            return(<img src={GOAL_IMAGE} style={style(props)}/>)\r\n        }\r\n        else {\r\n            return(<img src={COLORED_GOAL_IMAGE} style={style(props)}/>)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({buildMode,show,dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension + dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension + dimension;\r\n            left = position.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        opacity: show ? '0.5' : '0.0',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default (props) => {\r\n    const handleClick = () => {\r\n        props.handleClick(props.dir)\r\n    }\r\n    if (props.buildMode === 'undefined' || !props.buildMode)\r\n    {\r\n        return (\r\n            <div onClick={handleClick} style={style(props)}/>\r\n        );\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {Frame, Words, Line} from 'arwes';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nconst styles = theme => ({\r\n    multilineColor:{\r\n        color:'#12599b',\r\n    },\r\n    multilineColorLabel:{\r\n        color:'#12599b',\r\n    },\r\n\r\n});\r\n\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n              PaperProps={{\r\n                style: {\r\n                  backgroundColor: \"transparent\",\r\n                  boxShadow: \"none\",\r\n                },\r\n              }}\r\n              overlayStyle={{ backgroundColor: \"transparent\" }}\r\n              disableAutoFocus={true}\r\n              disableEnforceFocus={true}\r\n              onClose={this.handleClose}\r\n              container={() => document.getElementById(\"MainGameBoard\")}\r\n              style={{ position: \"absolute\" }}\r\n              BackdropProps={{ style: { position: \"absolute\" } }}\r\n              aria-labelledby=\"customized-dialog-title\"\r\n              open={this.props.show}\r\n              maxWidth={\"xs\"}\r\n            >\r\n              <div style={{ margin: \"20px\" }}>\r\n                <Frame animate levels={1} corners={3}>\r\n                  <p style={{ margin: \"10px\" }}>\r\n                    <Words animate layer=\"control\">\r\n                      You Win!\r\n                    </Words>\r\n                    <Line animate />\r\n                    <Words animate layer='primary'>{'You used ' + this.props.numMoves + ' Moves!'}</Words><br/>\r\n                    <TextField\r\n                      InputProps={{\r\n                        className: classes.multilineColor,\r\n                      }}\r\n                      InputLabelProps={{\r\n                        className: classes.multilineColorLabel,\r\n                      }}\r\n                      color=\"secondary\"\r\n                      id={\"namesubmitHS\"}\r\n                      label={\"Username\"}\r\n                      defaultValue={this.props.username == '' ? \"Anonymous\" : this.props.username}\r\n                    />\r\n                    <DialogActions>\r\n                      <Button variant=\"outlined\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                      <Button color='secondary' variant='outlined' onClick={this.props.resetPuzzle}>Reset</Button>\r\n                    </DialogActions>\r\n                  </p>\r\n                </Frame>\r\n              </div>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(YouWinModal);","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LearnGameItems from '../components/LearnGameItems';\r\nimport {Words,Line,Frame} from 'arwes';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailySingleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n              PaperProps={{\r\n                style: {\r\n                  backgroundColor: \"transparent\",\r\n                  boxShadow: \"none\",\r\n                },\r\n              }}\r\n              overlayStyle={{ backgroundColor: \"transparent\" }}\r\n              disableAutoFocus={true}\r\n              disableEnforceFocus={true}\r\n              onClose={this.handleClose}\r\n              container={() => document.getElementById(\"MainGameBoard\")}\r\n              style={{ position: \"absolute\" }}\r\n              BackdropProps={{ style: { position: \"absolute\" } }}\r\n              aria-labelledby=\"customized-dialog-title\"\r\n              open={this.props.show}\r\n              maxWidth={\"xs\"}\r\n            >\r\n              <div style={{ margin: \"20px\" }}>\r\n                <Frame animate levels={1} corners={3}>\r\n                  <p style={{ margin: \"10px\" }}>\r\n                    <Words animate layer=\"control\">\r\n                      Completed!\r\n                    </Words>\r\n                    <Line animate />\r\n                    <Words animate layer='primary'>{this.props.numMoves + \" Moves\"}</Words>\r\n                    <Words animate layer='primary'>{\"Total Moves: \" + this.props.totalMoves}</Words>\r\n                    <Words animate layer='alert'>Finish all puzzles to get submit your score!</Words>\r\n                    <Line animate />\r\n                    <DialogActions>\r\n                      <Button variant=\"outlined\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                      <Button variant=\"outlined\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                      <Button variant='outlined' color='secondary' onClick={this.props.resetPuzzle}>Reset</Button>\r\n                    </DialogActions>\r\n                  </p>\r\n                </Frame>\r\n              </div>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailySingleModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {Project, Words,Line,Frame} from 'arwes';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = theme => ({\r\n    multilineColor:{\r\n        color:'#12599b',\r\n    },\r\n    multilineColorLabel:{\r\n        color:'#12599b',\r\n    },\r\n\r\n});\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailyFinalModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null\r\n        }\r\n    }\r\n\r\n    handleClickSubmitGame = () => {\r\n        if (document.getElementById(\"namesubmitHS\").value == '') {\r\n            this.setState({\r\n                error: <Alert severity=\"error\">You must choose a submit name</Alert>\r\n            })\r\n        }\r\n        else {\r\n            this.props.submitAnswer(this.props.newPlayerState);\r\n            this.setState({\r\n                error: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n              PaperProps={{\r\n                style: {\r\n                  backgroundColor: \"transparent\",\r\n                  boxShadow: \"none\",\r\n                },\r\n              }}\r\n              overlayStyle={{ backgroundColor: \"transparent\" }}\r\n              disableAutoFocus={true}\r\n              disableEnforceFocus={true}\r\n              onClose={this.handleClose}\r\n              container={() => document.getElementById(\"MainGameBoard\")}\r\n              style={{ position: \"absolute\" }}\r\n              BackdropProps={{ style: { position: \"absolute\" } }}\r\n              aria-labelledby=\"customized-dialog-title\"\r\n              open={this.props.show}\r\n              maxWidth={\"xs\"}\r\n            >\r\n              <div style={{ margin: \"20px\" }}>\r\n                <Frame animate levels={1} corners={3}>\r\n                  <p style={{ margin: \"10px\" }}>\r\n                    <Words animate layer=\"control\">\r\n                      You Completed the Challenge!\r\n                    </Words>\r\n                    <Line animate />\r\n                    <Words animate layer='primary'>{\"You used \" + this.props.numMoves + \" Moves!\"}</Words>\r\n                    <Line animate />\r\n                    <TextField\r\n                      InputProps={{\r\n                        className: classes.multilineColor,\r\n                      }}\r\n                      InputLabelProps={{\r\n                        className: classes.multilineColorLabel,\r\n                      }}\r\n                      color=\"secondary\"\r\n                      id={\"namesubmitHS\"}\r\n                      label={\"Username\"}\r\n                      defaultValue={this.props.username == '' ? \"Anonymous\" : this.props.username}\r\n                    />\r\n                    {this.state.error}\r\n                    {this.props.submitted}\r\n                    <DialogActions>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.undoMove}\r\n                      >\r\n                        Undo Move\r\n                      </Button>\r\n                      {this.props.submitted == null ? (\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          color=\"secondary\"\r\n                          onClick={this.handleClickSubmitGame}\r\n                        >\r\n                          Submit Highscore\r\n                        </Button>\r\n                      ) : null}\r\n                      <Button\r\n                        color=\"secondary\"\r\n                        variant=\"outlined\"\r\n                        onClick={this.props.resetPuzzle}\r\n                      >\r\n                        Reset\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </p>\r\n                </Frame>\r\n              </div>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(YouWinDailyFinalModal);","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Frame,Words,Line} from 'arwes';\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nconst styles = theme => ({\r\n    multilineColor:{\r\n        color:'#12599b',\r\n    },\r\n    multilineColorLabel:{\r\n        color:'#12599b',\r\n    },\r\n\r\n});\r\n\r\n\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    campaignPuzzle = () => {\r\n        if (window.loggedin === 'Yes') {\r\n            if (window.userInfo.userID == 2 || window.userInfo.userID == 3 || window.userInfo.userID == 7 || window.userInfo.userID == 4) {\r\n                return <Button variant='outlined' color='secondary' onClick={this.props.submitPuzzleCampaign}>Campaign Puzzle</Button>\r\n            }\r\n            else {\r\n                return null\r\n            }\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n              PaperProps={{\r\n                style: {\r\n                  backgroundColor: \"transparent\",\r\n                  boxShadow: \"none\",\r\n                },\r\n              }}\r\n              overlayStyle={{ backgroundColor: \"transparent\" }}\r\n              disableAutoFocus={true}\r\n              disableEnforceFocus={true}\r\n              onClose={this.handleClose}\r\n              container={() => document.getElementById(\"MainGameBoard\")}\r\n              style={{ position: \"absolute\" }}\r\n              BackdropProps={{ style: { position: \"absolute\" } }}\r\n              aria-labelledby=\"customized-dialog-title\"\r\n              open={this.props.show}\r\n              maxWidth={\"xs\"}\r\n            >\r\n              <div style={{ margin: \"20px\" }}>\r\n                <Frame animate levels={1} corners={3}>\r\n                  <p style={{ margin: \"10px\" }}>\r\n                    <Words animate layer=\"control\">\r\n                      Submit Puzzle\r\n                    </Words>\r\n                    <Line animate />\r\n                    <TextField\r\n                      InputProps={{\r\n                        className: classes.multilineColor,\r\n                      }}\r\n                      InputLabelProps={{\r\n                        className: classes.multilineColorLabel,\r\n                      }}\r\n                      color=\"secondary\"\r\n                      id={\"namesubmit\"}\r\n                      label={\"Name of Puzzle\"}\r\n                      defaultValue={\"PuzzleName\"}\r\n                    />\r\n                    <DialogActions>\r\n                      <Button variant=\"outlined\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                      <Button variant='outlined' color='secondary' onClick={this.props.resetPuzzle}>Reset</Button>\r\n                      {this.campaignPuzzle()}\r\n                    </DialogActions>\r\n                  </p>\r\n                </Frame>\r\n              </div>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AddPuzzleModal);\r\n","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Path Indicators\"\r\n                    checked={this.props.showColoredLineDirections}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n\r\n    state = {\r\n            minutes: 5,\r\n            seconds: 0,\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.puzzleRushTimeUp();\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    timer = () => {\r\n        if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n            return (<h2>Time is up!</h2>)\r\n        }\r\n        else {\r\n            return(\r\n                <h2>Time Remaining: {this.state.minutes}:{this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds}</h2>)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            this.timer()\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Line,Project,Words,Arwes} from 'arwes';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ToggleSettings from \"../components/ToggleSettings\";\r\nimport Timer from \"../components/Timer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                        copyButtonText: \"Copy Puzzle Link\"\r\n                     };\r\n        this.state.uri = this.props.isDailyChallenge === 'Yes' ? 'dailychallenge' : this.props.uri;\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <div>\r\n                    <Button color=\"secondary\" variant={\"outlined\"} fullWidth={true} onClick={this.handleCreateBoardClick}>Modify Board</Button>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Switch color=\"primary\" checked={this.props.buildMode} onChange={this.props.toggleBuildMode}/>}\r\n                        label=\"Build Mode\"\r\n                            />\r\n                    <Line animate />\r\n                </div>\r\n\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.state.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        document.getElementsByClassName(\"MuiSlider-thumb\")[0].blur();\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n    showPuzzleLink = () => {\r\n        if (this.props.createMode === 'Yes' || this.props.isPuzzleRush === 'Yes' || this.props.isLesson === 'Yes' || this.props.isDailyChallengeAnswers === 'Yes' || this.props.isDailyChallenge === 'Yes') {\r\n            return null;\r\n        }\r\n        else {\r\n                return(\r\n                     <div style={{paddingBottom: '10px'}}>\r\n                         <Button fullWidth={true} variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                                 onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                     </div>\r\n                    )\r\n        }\r\n    }\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                {this.showPuzzleLink()}\r\n                 <Line animate />\r\n                 <Words animate layer='control'>\r\n                         Board Actions\r\n                 </Words>\r\n                 <ButtonGroup fullWidth={true} color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     <Button onClick={this.props.undoMove}>Undo</Button>\r\n                 </ButtonGroup>\r\n                 {this.isCreateMode(this.props.createMode)}\r\n                 <ToggleSettings showColoredLineDirections={this.props.showColoredLineDirections} onClick={this.props.toggleLineIndicators}/>\r\n                 <div style={buttonPanel()}>\r\n                     <Words animate style={{fontSize: '15px'}} layer='control'>\r\n                         Size Of Board\r\n                     </Words>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={this.props.squareSizeValue}\r\n                         valueLabelDisplay=\"auto\"\r\n                         id=\"sliderelement\"\r\n                     />\r\n                 </div>\r\n                 <Line animate />\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { GoVerified } from \"react-icons/go\";\r\nimport {Frame,Words} from 'arwes';\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n}\r\n\r\nconst paperstyle = () => {\r\n    return {\r\n        marginBottom: '15px'\r\n    }\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n                <Frame animate level={1} corners={3}>\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={12}>\r\n                        <Words animate layer='control'>{highscore.comment + ' - ' + highscore.numMoves}</Words>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                            {highscore.userid != 1 ? <GoVerified/> : null}\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.created}</Typography>\r\n                    </Grid>\r\n                 </Grid>\r\n                </Frame>\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid item xs={12} style={styleouter()}>\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { GoVerified } from \"react-icons/go\";\r\nimport {Frame, Words} from 'arwes';\r\n\r\n\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginTop: '30px',\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst CrownCounter = highscore => {\r\n    var crowns = []\r\n    var i;\r\n    for (i=0; i<highscore.wins;i++) {\r\n        crowns.push(<FaCrown/>);\r\n    }\r\n    return (\r\n        <div>\r\n            {crowns}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n                    <Grid item xs={12}>\r\n                        <Frame animate level={1} corners={3}>\r\n                            <Grid container spacing={0}>\r\n                                <Words animate layer='control'>{highscore.name + ' - ' + highscore.score}</Words>\r\n                                <Grid item xs={6}>\r\n                                        {highscore.wins == 0 || highscore.wins == null ? null : CrownCounter(highscore) }\r\n                                        {highscore.user_id != 1 ? <GoVerified/> : null}\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Typography color={'secondary'} variant={'body2'}>{highscore.submitted}</Typography>\r\n                                </Grid>\r\n                             </Grid>\r\n                        </Frame>\r\n                    </Grid>\r\n            )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid style={styleouter()} container direction={'column'} spacing={1}>\r\n        {\r\n                highscores.map(highscore =>\r\n                    highscorestyle(highscore)\r\n                )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nclass PuzzleRushWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Puzzle Rush - {this.props.difficulty}</DialogTitle>\r\n                <DialogContent dividers>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"h6\">\r\n                            Statistics\r\n                          </Typography>\r\n                          <div>\r\n                            <List dense={true}>\r\n\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Number of Puzzles Completed\"\r\n                                    secondary={this.props.numPuzzlesCompleted}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average time Per Puzzle\"\r\n                                    secondary={this.props.averageTime}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average Moves per Puzzle\"\r\n                                    secondary={this.props.averageMoves}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Efficiency Score: puzzles * 7 - redundant moves from best\"\r\n                                    secondary={(this.props.numPuzzlesCompleted * 7) - this.props.differenceOptimal}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Moves Per Second\"\r\n                                    secondary={this.props.movesPerSecond}\r\n                                  />\r\n                                </ListItem>\r\n                            </List>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.handleClickPlayAgain}>Play Again!</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushWinModal;\r\n\r\n","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../../constants/constants';\r\n\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass RandomGameStatsModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answers: null,\r\n        }\r\n    }\r\n\r\n    showStatsModal = () => {\r\n        this.props.handleShowRandomAnswers()\r\n        this.setState({\r\n            answers: this.props.lowestMoveSequence\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-random\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        lowest possible moves: {this.props.lowestMoves}\r\n                    </div>\r\n                    {this.state.answers}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.showStatsModal}>Show Puzzle Answers</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomGameStatsModal;","import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nexport default function CloseIconWithOnClick(props) {\r\n    const handleClose = () => {\r\n        props.handleClose(props.index);\r\n    }\r\n    return (<CloseIcon onMouseDown={handleClose}/>\r\n    )\r\n}","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport CloseIconWithOnClick from './CloseIconWithOnClick';\r\nimport {Words} from 'arwes';\r\n\r\nexport default function Descriptionlist(props) {\r\n    return(\r\n            <List>\r\n              {\r\n                  props.tipsText.map((text,index) =>\r\n                    <ListItem>\r\n                      <Words animate>\r\n                        {text}\r\n                      </Words>\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                          <CloseIconWithOnClick color='secondary' index={index} handleClose={props.handleCloseToolTips}/>\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  )\r\n              }\r\n            </List>\r\n    )\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Words,Line,Frame} from 'arwes';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinLessonModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n              PaperProps={{\r\n                style: {\r\n                  backgroundColor: \"transparent\",\r\n                  boxShadow: \"none\",\r\n                },\r\n              }}\r\n              overlayStyle={{ backgroundColor: \"transparent\" }}\r\n              disableAutoFocus={true}\r\n              disableEnforceFocus={true}\r\n              onClose={this.handleClose}\r\n              container={() => document.getElementById(\"MainGameBoard\")}\r\n              style={{ position: \"absolute\" }}\r\n              BackdropProps={{ style: { position: \"absolute\" } }}\r\n              aria-labelledby=\"customized-dialog-title\"\r\n              open={this.props.show}\r\n              maxWidth={\"xs\"}\r\n            >\r\n              <div style={{ margin: \"20px\" }}>\r\n                <Frame animate levels={1} corners={3}>\r\n                  <p style={{ margin: \"10px\" }}>\r\n                    <Words animate layer=\"control\">\r\n                      You Win!\r\n                    </Words>\r\n                    <Line animate />\r\n                    <Words animate layer='primary'>{'You used ' + this.props.numMoves + ' Moves!'}</Words><br/>\r\n                    <Words animate layer='primary'>Move on to the next one!</Words>\r\n                    <DialogActions>\r\n                      <Button variant=\"outlined\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                      <Button color='secondary' variant='outlined' onClick={this.props.resetPuzzle}>Reset</Button>\r\n                    </DialogActions>\r\n                  </p>\r\n                </Frame>\r\n              </div>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinLessonModal;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Project,Words} from 'arwes';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: '0 10px'\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 25,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function ShowDailyChallengeScoresCard(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n            <Project\r\n                        animate\r\n                        header={props.name}\r\n                    >\r\n                    {anim => (\r\n                        <p>\r\n                              <CardContent>\r\n                                <Typography style={{marginBottom: '30px'}} variant=\"h5\" component=\"h2\">\r\n                                  {props.bestScore}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" component=\"p\">\r\n                                  {props.MovesforPuzzle}\r\n                                  <br/>\r\n                                  {props.MoveSequence}\r\n                                  <br />\r\n                                </Typography>\r\n                              </CardContent>\r\n                        </p>\r\n                    )}\r\n            </Project>\r\n  );\r\n}","import React from 'react';\r\nimport MovesView from '../components/MovesView';\r\nimport ShowDailyChallengeScoreCard from '../components/ShowDailyChallengeScoresCard'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst stylebelow = () => {\r\n    return {\r\n        marginTop: '40px',\r\n        marginBottom: '20px'\r\n    }\r\n}\r\n\r\nclass DailyChallengeHistoryData extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography style={stylebelow()} variant=\"h4\"> {this.props.difficultyforPuzzle} </Typography>\r\n                <ShowDailyChallengeScoreCard\r\n                    name={\"Robot God\"}\r\n                    bestScore={this.props.bestScore}\r\n                    MovesforPuzzle={this.props.lowestMovesforPuzzle}\r\n                    MoveSequence={this.props.lowestMoveSequence}\r\n                />\r\n                <ShowDailyChallengeScoreCard\r\n                    name={this.props.nameSubmitted}\r\n                    bestScore={this.props.scoreSubmitted}\r\n                    MovesforPuzzle={null}\r\n                    MoveSequence={<MovesView\r\n                                        moveHistory={this.props.playerMovedSequence} playerState={[{colorSignifier: \"blue\"},{colorSignifier: \"green\"},{colorSignifier: \"red\"},{colorSignifier: \"yellow\"}]}\r\n                                  />}\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyChallengeHistoryData;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent,type) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    if (type === 'blank') {\r\n        var goal = {top: height-1, left: width-1};\r\n        var randompos1 = {top: 0,left: 0, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n        var randompos2 = {top: 0,left: 1, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n        var randompos3 = {top: 1,left: 0, color: ROBOT_RED, colorSignifier: 'red'};\r\n        var randompos4 = {top: 1,left: 1, color: ROBOT_YELLOW, colorSignifier:'yellow'};\r\n    }\r\n    else {\r\n        var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n        var randomPositions = [goal];\r\n        for (var i=0;i<5;i++) {\r\n            randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n        }\r\n        var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n        var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n        var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n        var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    }\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport DailyMovesView from '../components/DailyMovesView';\r\nimport CreateBoardGoalSelector from '../components/CreateBoardGoalSelector';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {withRouter} from 'react-router';\r\nimport Draggable from 'react-draggable';\r\nimport LearnGameItems from '../components/LearnGameItems';\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport YouWinDailySingleModal from '../components/YouWinDailySingleModal';\r\nimport YouWinDailyFinalModal from '../components/YouWinDailyFinalModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport PuzzleRushWinModal from '../containers/Modals/PuzzleRushFinishedModal';\r\nimport RandomGameStatsModal from '../containers/Modals/RandomGameStatsModal';\r\nimport DescriptionList from '../components/DescriptionList';\r\nimport YouWinLessonModal from '../components/YouWinLessonModal';\r\nimport DailyChallengeHistoryData from '../components/DailyChallengeHistoryData';\r\nimport Timer from \"../components/Timer\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR,\r\n    MOBILE_INNER_SCREEN_WIDTH\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport {Words} from 'arwes';\r\n\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if(e.keyCode == 32 && e.target == document.body) {\r\n    e.preventDefault();\r\n  }\r\n    if([37, 38, 39, 40, 9,13].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n    }\r\n}\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\nconst formatGeneratedMoveSequence = (moves) => {\r\n    var images = []\r\n    moves.map(move => {\r\n        var color = move.charAt(0);\r\n        var direction = move.charAt(1);\r\n        if (color == 'B') {\r\n            color = 'blue'\r\n        }\r\n        else if (color == 'R') {\r\n            color = 'red'\r\n        }\r\n        else if (color == 'Y') {\r\n            color = 'yellow'\r\n        }\r\n        else {\r\n            color = 'green'\r\n        }\r\n        if (direction == 'N') {\r\n            direction = UP\r\n        }\r\n        else if (direction == 'S') {\r\n            direction = DOWN\r\n        }\r\n        else if (direction == 'E') {\r\n            direction = RIGHT\r\n        }\r\n        else {\r\n            direction = LEFT\r\n        }\r\n        images.push(<img src={DIRECTION_MAP_IMAGES[color][direction]}/>)\r\n    });\r\n    return images\r\n}\r\n\r\n\r\nconst setDefaultSquareSize = (boardWidth,boardHeight) => {\r\n    const drawerWidth = document.getElementById(\"MainDrawer\") == null ? 140 : parseInt(getComputedStyle(document.getElementById(\"MainDrawer\")).width);\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n    var settingstop = windowHeight - 120;\r\n\r\n    settingstop = settingstop / boardHeight\r\n    settingstop = parseInt(settingstop);\r\n    settingstop = settingstop - (settingstop % 4)\r\n\r\n    var settings = ((windowWidth < MOBILE_INNER_SCREEN_WIDTH) ? windowWidth - 20 : (windowWidth - drawerWidth) / 1.75);\r\n    settings = settings / boardWidth;\r\n    settings = parseInt(settings);\r\n    settings = settings - (settings % 4);\r\n    var squarevalue = settings > settingstop ? settingstop : settings\r\n    if (squarevalue < 16) {\r\n        squarevalue = 16;\r\n    }\r\n    else if (squarevalue > 52) {\r\n        squarevalue = 52;\r\n    }\r\n    return squarevalue;\r\n};\r\n\r\nconst ColoredLineDirections = [LEFT,RIGHT,UP,DOWN]\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.puzzleRush === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.p_id = this.props.p_id;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = []\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            this.state.moveHistoryList=[];\r\n\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[0].g_solutiondata))\r\n            this.state.lowestMovesforPuzzle = this.props.games[0].g_moves\r\n            this.state.difficultyforPuzzle = this.props.games[0].g_difficulty\r\n            this.state.playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[0]\r\n\r\n            this.state.playerStateList = [];\r\n            this.state.tipsText = [];\r\n            this.state.highscores = [];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.dailyDayName = this.props.games[0].g_name\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            if (this.props.savedMoves != null) {\r\n                this.state.moveHistoryList = this.props.savedMoves\r\n                this.state.gamesWonDaily = [true,true,true,true]\r\n                this.state.moveHistory = this.props.savedMoves[0].slice()\r\n                this.state.playerState = this.props.playerStateList[0].slice()\r\n            }\r\n            else {\r\n                this.state.moveHistoryList=[];\r\n            }\r\n            this.state.playerStateList = this.props.playerStateList != null ? this.props.playerStateList : [];\r\n            this.state.tipsText = ['Winners who are Logged in will receive a Crown','See about page for details on the daily challenge difficulty','Puzzles reset at 3PM EST, the page will refresh automatically'];\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.dc_id = this.props.dc_id;\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.game.g_puzzledata)\r\n            this.state.lowestMoves = this.props.game.g_moves\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.game.g_solutiondata))\r\n            this.state.difficulty = this.props.game.g_difficulty\r\n            this.state.createMode = 'No';\r\n            this.state.gameWon = false;\r\n            this.state.buildMode = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = ['this game was randomly generated'];\r\n            this.state.uri = this.props.game.g_uri;\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n            window.history.pushState({id: 'Random Game'},'RobotsEvolved | Random Game','/play/' + this.props.game.g_uri)\r\n        }\r\n        else if (this.props.learnMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [this.props.games[0].description];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.votes = this.props.votes\r\n            this.state.hasVoted = this.props.hasVoted\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.buildMode = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n            window.history.pushState({id: 'Play Game'},'RobotsEvolved | Play Game','/play/'+ this.props.uri)\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,1,'blank');\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                buildMode: true,\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false,\r\n                tipsText: [\r\n                                        'Click on Wall spots to toggle',\r\n                                        'Click and Drag robots or goal to move robots',\r\n                                        'When you are ready, toggle build mode in order to solve the puzzle',\r\n                                        'You must solve the puzzle in order to submit.']\r\n            },board);\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.coloredGoals = [];\r\n        }\r\n        this.state.showColoredLineDirections = this.props.LineDirections;\r\n        if (this.state.coloredGoals == undefined) {\r\n            this.state.coloredGoals = [];\r\n        }\r\n    };\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                const highscoresdata = JSON.parse(res.data.highscores)\r\n                if (this.FindhighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    FindhighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.numMoves != check[index].numMoves) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n\r\n    DChighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.score != check[index].score) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n    updateDailyHighscores = () => {\r\n        axios.get('/dailychallengehighscores?dc_id=' + this.state.dc_id)\r\n            .then( res => {\r\n                if (res.data.dc_id != this.state.dc_id) {\r\n                    window.dailyChallengeSessionBestHistory = [[],[],[],[]];\r\n                    window.dailyChallengeSessionBestPlayerState = [[],[],[],[]];\r\n                    this.props.handleClickDailyChallenge();\r\n                    return\r\n                }\r\n                const highscoresdata = JSON.parse(res.data.highscores)//PoorMan's global redux implementation\r\n                if (this.DChighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                    window.dchighscores = JSON.parse(res.data.highscores)\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.updateHighscores();\r\n            var IntervalId = setInterval(this.updateHighscores, 8000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.updateDailyHighscores();\r\n            var IntervalId = setInterval(this.updateDailyHighscores, 6000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.tabSelector();\r\n                return;\r\n                break;\r\n            case 81:\r\n                if (!this.state.gameWon) {\r\n                    this.handleUndoMove();\r\n                }\r\n                break;\r\n                return;\r\n            case 87:\r\n                if (!this.state.gameWon) {\r\n                    this.resetPuzzle();\r\n                }\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n        }\r\n        this.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzleCampaign = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        var themoveHistory = this.state.moveHistory.slice()\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.loggedin === 'Yes') {\r\n            username = window.userInfo.username\r\n        }\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username,moveHistory: themoveHistory,type: 'Campaign'}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        var themoveHistory = this.state.moveHistory.slice()\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.loggedin === 'Yes') {\r\n            username = window.userInfo.username\r\n        }\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username,moveHistory: themoveHistory,type: 'type'}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.showColoredLineDirections === true) {\r\n            this.setState({\r\n                showColoredLineDirections: false,\r\n            });\r\n            this.props.handleLineDirections(false)\r\n        }\r\n        else {\r\n            this.setState({\r\n                showColoredLineDirections: true,\r\n            });\r\n            this.props.handleLineDirections(true)\r\n        }\r\n    };\r\n\r\n    toggleBuildMode = () => {\r\n        if (this.state.buildMode) {\r\n            this.setState({\r\n                buildMode: false,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n                buildMode: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length,solutiondata: this.state.moveHistory,name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            dailySubmittedSucessfully: null\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeRandomStatsModal = event => {\r\n        this.setState({\r\n            closeRandomStatsModal: false,\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    }\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushFinishedModal = event => {\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: false\r\n        });\r\n\r\n    }\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent, 'blank');\r\n        var squareSize = setDefaultSquareSize(width,height);\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n            squareSize: squareSize,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n    showStatsModal = () => {\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            showStatsModal: true,\r\n        });\r\n    }\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n    nextLessonPuzzle  = () => {\r\n        var puzzle = this.state.numPuzzleon;\r\n        puzzle += 1;\r\n        puzzle = puzzle == 4 ? 5 : puzzle;\r\n        puzzle = puzzle == 7 ? 8 : puzzle;\r\n        this.handleLearnClickGame(puzzle % 12);\r\n    }\r\n\r\n    puzzleRushTimeUp = () => {\r\n        var totalMovesDiff = 0;\r\n        this.state.solutiondifference.map(numMoves => {\r\n            totalMovesDiff += numMoves;\r\n        });\r\n        var averageTime = parseInt(300 / (this.state.numPuzzleon))\r\n        var totalMoves = 0;\r\n        this.state.totalMovesList.map(numMoves => {\r\n            totalMoves += numMoves\r\n        });\r\n        var avgMoves = parseInt(totalMoves / (this.state.numPuzzleon))\r\n        var movesPerSecond = totalMoves / 300;\r\n\r\n        axios.post('/puzzlerushend', {p_id: this.state.p_id,totalMoves: totalMoves,differenceFrom: totalMovesDiff})\r\n            .then( res => {\r\n                console.log(res.data);\r\n            });\r\n\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: true,\r\n            numPuzzlesCompleted: this.state.numPuzzleon,\r\n            percentile: 'TBD%',\r\n            averageTime: averageTime + 's',\r\n            averageMoves: avgMoves,\r\n            differenceOptimal: totalMovesDiff,\r\n            movesPerSecond: movesPerSecond\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    submitDailyAnswer = (LastRobotPosition) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            numMoves += moveHistory.length\r\n        });\r\n        var playerStateList = this.state.playerStateList.slice()\r\n        playerStateList[this.state.numPuzzleon] = LastRobotPosition.slice()\r\n        console.log(playerStateList);\r\n        axios.post('/dailychallenge', {score: numMoves, name: document.getElementById(\"namesubmitHS\").value, solutiondata: moveHistoryList, dc_id: this.state.dc_id, playerStateList: playerStateList})\r\n            .then( res => {\r\n                this.setState({\r\n                    dailySubmittedSucessfully: <Alert severity=\"success\">Submitted!</Alert>\r\n                });\r\n            });\r\n        window.dc_movesList = moveHistoryList;\r\n        window.dc_playerList = playerStateList;\r\n        this.state.gameWon = false;\r\n    }\r\n\r\n    checkwin = (newPlayerState) => {\r\n        if (this.state.goal != null && this.state.coloredGoals == null) {\r\n            var Won = false;\r\n            newPlayerState.map((player) => {\r\n                if (player.top === this.state.goal.top && player.left === this.state.goal.left) {\r\n                    Won = true;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            if (this.state.goal != null) {\r\n                var Won = false;\r\n                newPlayerState.map((player) => {\r\n                    if (player.top === this.state.goal.top && player.left === this.state.goal.left) {\r\n                        Won = true;\r\n                    }\r\n                });\r\n            }\r\n            else if (this.state.coloredGoals.length == 0) {\r\n                var Won = false;\r\n            }\r\n            else {\r\n                var Won = true;\r\n            }\r\n            var found = false;\r\n            var colorfound = false;\r\n            newPlayerState.map((player) => {\r\n                found = false\r\n                colorfound = false\r\n                this.state.coloredGoals.map(goal => {\r\n                    if (goal.colorSignifier == player.colorSignifier && goal.top === player.top && goal.left === player.left) {\r\n                        found = true;\r\n                    }\r\n                    if (goal.colorSignifier == player.colorSignifier) {\r\n                        colorfound = true;\r\n                    }\r\n                });\r\n                if (!found && colorfound) {\r\n                    Won = false;\r\n                }\r\n            });\r\n        }\r\n        if (Won) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No' && this.props.puzzleRush !== 'Yes') {\r\n                var username = '';\r\n                if (window.loggedin === 'Yes') {\r\n                    username = window.userInfo.username\r\n                }\r\n                if (this.props.randomGame === 'Yes') {\r\n                    return (\r\n                        <RandomGameStatsModal\r\n                            show={this.state.gameWon}\r\n                            lowestMoves={this.state.lowestMoves}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            numMoves={this.state.moveHistory.length}\r\n                            difficulty={this.state.difficulty}\r\n                            resetPuzzle={this.resetPuzzle}\r\n                            handleShowRandomAnswers={this.handleShowRandomAnswers}\r\n                        />\r\n                    );\r\n                }\r\n                else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n                    return null\r\n                }\r\n                else if (this.props.dailyChallengeMode === 'Yes') {\r\n                    var Won=true\r\n                    if (window.dailyChallengeSessionBestHistory[this.state.numPuzzleon].length == 0 || this.state.moveHistory.length < window.dailyChallengeSessionBestHistory[this.state.numPuzzleon].length) {\r\n                        window.dailyChallengeSessionBestHistory[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n                        window.dailyChallengeSessionBestPlayerState[this.state.numPuzzleon] = this.state.playerState.slice()\r\n                    }\r\n                    this.state.gamesWonDaily.map((gameWon,index) => {\r\n                        if (!(index == this.state.numPuzzleon) && !gameWon) {\r\n                            Won = false\r\n                        }\r\n                    });\r\n                    var moveHistoryList = this.state.moveHistoryList\r\n                    moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory\r\n                    var numMoves = 0\r\n                    moveHistoryList.map(moveHistory => {\r\n                        numMoves += moveHistory.length\r\n                    });\r\n                    return (Won ? <YouWinDailyFinalModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={numMoves}\r\n                        submitAnswer={this.submitDailyAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                        undoMove={this.handleUndoMove}\r\n                        newPlayerState={newPlayerState}\r\n                        submitted={this.state.dailySubmittedSucessfully}\r\n                    /> : <YouWinDailySingleModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        totalMoves={numMoves}\r\n                        undoMove={this.handleUndoMove}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        games={this.state.games}\r\n                        handleClickGame={this.handleDailyClickGame}\r\n                        numPuzzleon={this.state.numPuzzleon}\r\n                        moveNextPuzzle={this.moveNextPuzzle}\r\n                    />);\r\n                }\r\n                else if (this.props.learnMode === 'Yes') {\r\n                    return  (<YouWinLessonModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        moveNextPuzzle={this.nextLessonPuzzle}\r\n                    />);\r\n                }\r\n                else {\r\n                    return  (<YouWinModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        submitAnswer={this.submitAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                    />);\r\n                }\r\n            }\r\n            else if (this.props.puzzleRush === 'Yes'){\r\n                axios.post('/puzzlerushsubmit', {p_id: this.state.p_id,g_id:this.state.games[this.state.numPuzzleon].g_id, moveHistory: this.state.moveHistory})\r\n                    .then( res => {\r\n                        console.log(res.data);\r\n                    });\r\n                var totalMoves = this.state.moveHistory.slice().length\r\n                var totalMovesList = this.state.totalMovesList\r\n                totalMovesList.push(totalMoves)\r\n                var solutionmoves = totalMoves - this.state.games[this.state.numPuzzleon].g_moves\r\n                var solutiondifference = this.state.solutiondifference\r\n                solutiondifference.push(solutionmoves)\r\n                var puzzledata = JSON.parse(this.state.games[this.state.numPuzzleon + 1].g_puzzledata)\r\n                if (this.state.numPuzzleon + 10 > this.state.games.length) {\r\n                    axios.get('/puzzlerushgetmore?p_id=' + this.props.p_id + '&difficulty=' + this.props.difficulty)\r\n                        .then( res => {\r\n                                var games = JSON.parse(res.data.games);\r\n                                var stategames = this.state.games\r\n                                var newarray = stategames.concat(games)\r\n                                this.setState({\r\n                                    games: newarray\r\n                                });\r\n                        });\r\n                }\r\n                this.setState(\r\n                    extend(puzzledata,{numPuzzleon: this.state.numPuzzleon + 1, playerState: puzzledata.playerStart.slice(), gameWon: false, solutiondifference: solutiondifference, totalMovesList: totalMovesList})\r\n                );\r\n\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                    submitPuzzleCampaign={this.submitPuzzleCampaign}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handleShowRandomAnswers = () => {\r\n        this.setState({\r\n            tipsText: [this.state.lowestMoveSequence]\r\n        })\r\n    }\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false && !this.state.buildMode) {\r\n            var oldPositon = {left: this.state.playerState[this.state.robotSelected].left, top: this.state.playerState[this.state.robotSelected].top};\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left) && !this.state.buildMode) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier,\r\n                    prevPosition: oldPositon\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseToolTips = (index) => {\r\n        this.state.tipsText.splice(index,1);\r\n        this.setState({\r\n            tipsText: this.state.tipsText,\r\n        });\r\n    }\r\n\r\n    moveNextPuzzle = () => {\r\n        this.handleDailyClickGame((this.state.numPuzzleon + 1) % 4)\r\n    }\r\n\r\n    handleLearnClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].puzzledata);\r\n        var squareSize = setDefaultSquareSize(puzzledata.width,puzzledata.height);\r\n        this.setState(\r\n            extend(puzzledata,{buildMode: false,squareSize: squareSize, numPuzzleon: index, moveHistory: [], gameWon: false, playerState: puzzledata.playerStart.slice(),tipsText: [this.props.games[index].description]})\r\n        );\r\n    }\r\n\r\n    handleDailyClickAnswersGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n        var lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[index].g_solutiondata))\r\n        var lowestMovesforPuzzle = this.props.games[index].g_moves\r\n        var difficultyforPuzzle = this.props.games[index].g_difficulty\r\n        var playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[index]\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory,\r\n                    gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily,\r\n                    lowestMoveSequence: lowestMoveSequence, lowestMovesforPuzzle: lowestMovesforPuzzle, difficultyforPuzzle: difficultyforPuzzle,\r\n                    playerMovedSequence: playerMovedSequence})\r\n        );\r\n    }\r\n\r\n    handleDailyClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily})\r\n        );\r\n    }\r\n\r\n\r\n    handleWildCardClick = () => {\r\n        if (this.state.goal == null) {\r\n            this.setState({\r\n                goal: {top: this.state.height - 1, left: this.state.width - 1}\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                goal: null\r\n            });\r\n        }\r\n        this.resetPuzzle();\r\n    }\r\n\r\n    resetToBest = (moveHistory, playerState) => {\r\n        this.setState({\r\n            moveHistory: moveHistory,\r\n            playerState: playerState,\r\n        });\r\n    }\r\n\r\n    handleColoredClick = (colorSignifier) => {\r\n        var goal = null;\r\n        this.state.coloredGoals.map(goalItem => {\r\n            if (colorSignifier == goalItem.colorSignifier) {\r\n                goal = goalItem;\r\n            }\r\n        })\r\n        if (goal == null) {\r\n            var newColoredGoals = this.state.coloredGoals;\r\n            var newgoal\r\n            switch (colorSignifier) {\r\n                case 'blue':\r\n                    newgoal = {top: this.state.height - 2, left: this.state.width - 2, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n                    break;\r\n                case 'green':\r\n                    newgoal = {top: this.state.height - 1, left: this.state.width - 2, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n                    break;\r\n                case 'red':\r\n                    newgoal = {top: this.state.height - 2, left: this.state.width - 1, color: ROBOT_RED, colorSignifier: 'red'};\r\n                    break;\r\n                case 'yellow':\r\n                    newgoal = {top: this.state.height - 3, left: this.state.width - 3, color: ROBOT_YELLOW, colorSignifier: 'yellow'};\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            newColoredGoals.push(newgoal);\r\n            this.setState({\r\n                coloredGoals: newColoredGoals\r\n            });\r\n        }\r\n        else {\r\n            var newColoredGoals = this.state.coloredGoals.filter(goalItem =>\r\n                colorSignifier != goalItem.colorSignifier\r\n            );\r\n            console.log(newColoredGoals);\r\n            this.setState({\r\n                coloredGoals: newColoredGoals\r\n            });\r\n        }\r\n        this.resetPuzzle();\r\n    }\r\n\r\n    trimName = name => {\r\n        var separated = (name + '').split(\" \")\r\n        var toreturn = '';\r\n        separated.map((word) => {\r\n            if (word.length > 17)\r\n                toreturn += word.substring(0, 17) + \"...\" + ' ';\r\n            else {\r\n                toreturn += word + ' '\r\n            }\r\n        });\r\n        return toreturn.substring(0, toreturn.length - 1);\r\n    };\r\n\r\n    loadSidebar = () => {\r\n        if (this.props.learnMode == 'Yes') {\r\n            return (\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\">\r\n                        <Divider/>\r\n                        <Words animate\r\n                             layer='control'\r\n                             style={{paddingBottom: '10px', fontsize: '12px'}}\r\n                         >\r\n                             Beginner Lessons\r\n                         </Words>\r\n                        {\r\n                            this.state.games.map((game,index) => {\r\n                                    if (index === 4) {\r\n                                        return(\r\n                                                <Words animate\r\n                                                     layer='control'\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px', fontsize: '12px'}}\r\n                                                 >\r\n                                                     Intermediate Lessons\r\n                                                 </Words>\r\n                                        )\r\n                                    }\r\n                                    else if (index === 7) {\r\n                                            return(\r\n                                                <Words animate\r\n                                                     layer='control'\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px', fontsize: '12px'}}\r\n                                                 >\r\n                                                     Advanced Lessons\r\n                                                 </Words>\r\n                                        )\r\n                                    }\r\n                                    return(\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={game.name} index={index} handleClickGame={this.handleLearnClickGame}/>\r\n                                    )\r\n                                }\r\n\r\n                            )\r\n                        }\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickAnswersGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeHistoryData\r\n                            lowestMovesforPuzzle={this.state.lowestMovesforPuzzle}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            difficultyforPuzzle={this.state.difficultyforPuzzle}\r\n                            nameSubmitted={this.props.nameSubmitted}\r\n                            playerMovedSequence={this.state.playerMovedSequence}\r\n                            bestScore={this.props.bestScore}\r\n                            scoreSubmitted={this.props.scoreSubmitted}\r\n                         />\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <DailyMovesView\r\n                            moveHistory={window.dailyChallengeSessionBestHistory[this.state.numPuzzleon]}\r\n                            playerState={window.dailyChallengeSessionBestPlayerState[this.state.numPuzzleon]}\r\n                            resetToBest={this.resetToBest}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            color=\"secondary\"\r\n                            display=\"block\"\r\n                            variant={\"h4\"}\r\n\r\n                        >\r\n                            {this.state.dailyDayName}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeScores highscores={this.state.highscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.state.createMode === 'Yes') {\r\n            return (\r\n                <CreateBoardGoalSelector\r\n                    handleWildCardClick={this.handleWildCardClick}\r\n                    handleColoredClick={this.handleColoredClick}\r\n                />\r\n            );\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.puzzleRush) {\r\n            return (\r\n                     <div>\r\n                        <Timer puzzleRushTimeUp={this.puzzleRushTimeUp}>\r\n                        </Timer>\r\n                        <Typography id=\"discrete-slider-small-steps\"\r\n                                     color=\"Primary\"\r\n                                     variant=\"h3\"\r\n                                     display=\"inline\"\r\n                                     gutterBottom>\r\n                             {this.state.numPuzzleon}\r\n                         </Typography>\r\n                     </div>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n            <div style={{display: 'grid'}}>\r\n                <Typography\r\n                    color=\"secondary\"\r\n                    display=\"block\"\r\n                    variant={\"h4\"}\r\n\r\n                >\r\n                    {this.trimName(this.props.name)}\r\n                </Typography>\r\n                <div style={{paddingBottom: '10px', display: 'inline-flex', alignItems: \"center\"}}>\r\n                    <Typography variant=\"caption\" style={{paddingRight: \"5%\"}}>\r\n                        By: {this.trimName(this.props.author)}\r\n                    </Typography>\r\n                    <div>\r\n                        <div style={{display: \"inline-flex\"}}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                style={{borderTopRightRadius: \"0px\", borderBottomRightRadius: \"0px\"}}\r\n                                startIcon={this.state.hasVoted ? <StarIcon/> : <StarBorderIcon/>}\r\n                                onClick={this.updateLike}\r\n                                size={\"small\"}\r\n                            >\r\n                                {this.state.hasVoted ? \"Unlike\" : \"Like\"}\r\n                            </Button>\r\n                            <Paper variant=\"contained\"  style={{borderTopLeftRadius: \"0px\", borderBottomLeftRadius: \"0px\"}} >\r\n                                <Typography style={{marginLeft: \"5px\", marginRight: \"5px\"}} variant=\"h6\">{this.state.votes ? this.state.votes : 0}</Typography>\r\n                            </Paper>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Grid container xs={12} direction=\"column\">\r\n                <HighScores highscores={this.state.highscores}/>\r\n                </Grid>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    updateLike = () => {\r\n        const action = this.state.hasVoted ? \"remove\" : \"create\"\r\n        axios.post('/likepuzzle', {uri: this.state.uri, action: action, vote: \"voting\"})\r\n            .then( res => {\r\n                var newHasVoted = \"Y\"\r\n                var newVotes = this.state.votes\r\n                if (this.state.hasVoted)\r\n                    newHasVoted = null\r\n                if (!isNaN(res.data.votes))\r\n                    newVotes = res.data.votes\r\n\r\n                this.setState({\r\n                    hasVoted: newHasVoted,\r\n                    votes: newVotes\r\n                });\r\n            }).catch(_ => {\r\n                this.props.signInModalOpen(\"Sign in\")\r\n            });\r\n    }\r\n\r\n    handlePlayerMovementFromMouse = (direction) => {\r\n        this.handlePlayerMovement({dir: direction})\r\n    };\r\n\r\n    handleUndoMove = () => {\r\n        var moveHistory = this.state.moveHistory;\r\n        var playerState = this.state.playerState;\r\n        if (moveHistory.length !== 0) {\r\n            var moveObj = moveHistory.pop();\r\n            playerState[moveObj.robot].left = moveObj.prevPosition.left;\r\n            playerState[moveObj.robot].top = moveObj.prevPosition.top;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n                gameWon: false,\r\n                dailySubmittedSucessfully: null\r\n            });\r\n        }\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes' && this.state.buildMode) {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onStopDragHandlerGoal = (position,color) => {\r\n        if (color == undefined) {\r\n            this.setState({\r\n                goal: {top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize)},\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            })\r\n        }\r\n        else {\r\n            var coloredGoals = this.state.coloredGoals;\r\n            var newGoals = [];\r\n            coloredGoals.map(goal => {\r\n                if (goal.color == color) {\r\n                    newGoals.push({top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize), color: color, colorSignifier: goal.colorSignifier});\r\n                }\r\n                else {\r\n                    newGoals.push(goal);\r\n                }\r\n            });\r\n            this.setState({\r\n                coloredGoals: newGoals,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    onStopDragHandler = (position,index) => {\r\n        var playerState = this.state.playerState.slice();\r\n        var lastX = position.lastX / this.state.squareSize;\r\n        var lastY = position.lastY / this.state.squareSize;\r\n        playerState[index].top = Math.round(lastY);\r\n        playerState[index].left = Math.round(lastX);\r\n        this.setState({\r\n            playerStart: playerState.slice(),\r\n            playerState: playerState,\r\n            moveHistory: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        puzzleRushTimeUp={this.puzzleRushTimeUp}\r\n                        isPuzzleRush={this.props.puzzleRush}\r\n                        numPuzzleRush={this.state.numPuzzleon}\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                        toggleLineIndicators = {this.toggleLineIndicators}\r\n                        showColoredLineDirections={this.state.showColoredLineDirections}\r\n                        toggleBuildMode = {this.toggleBuildMode}\r\n                        undoMove = {this.handleUndoMove}\r\n                        buildMode = {this.state.buildMode}\r\n                        squareSizeValue = {parseInt((this.state.squareSize/4))}\r\n                        isLesson = {this.props.learnMode}\r\n                        isDailyChallenge = {this.props.dailyChallengeMode}\r\n                        isDailyChallengeAnswers = {this.props.dailyChallengeModeAnswers}\r\n                    />\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? null : <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>}\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8} zeroMinWidth>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal\r\n                            dimension={this.state.squareSize}\r\n                            position={this.state.goal}\r\n                            onStopDragHandler={this.onStopDragHandlerGoal}\r\n                            draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                            isCreateMode={this.state.createMode}\r\n                            buildMode={this.state.buildMode}\r\n                        />\r\n                        {\r\n                            this.state.coloredGoals.map(goal =>\r\n                                <Goal\r\n                                    dimension={this.state.squareSize}\r\n                                    position={goal}\r\n                                    onStopDragHandler={this.onStopDragHandlerGoal}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    color={goal.color}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    onStopDragHandler={this.onStopDragHandler}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={this.state.playerState[this.state.robotSelected].color}\r\n                                    show={this.state.showColoredLineDirections}\r\n                                    handleClick={this.handlePlayerMovementFromMouse}\r\n                                    buildMode={this.state.buildMode}\r\n                                />\r\n                            )\r\n                        }\r\n                    {\r\n                        this.checkwin(this.state.playerState)\r\n                    }\r\n                    </Board>\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/> : null}\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DescriptionList\r\n                        handleCloseToolTips={this.handleCloseToolTips}\r\n                        tipsText={this.state.tipsText}\r\n                    />\r\n                    {this.loadSidebar()}\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                <PuzzleRushWinModal\r\n                    show={this.state.showPuzzleRushFinishedModal}\r\n                    closeModal={this.closePuzzleRushFinishedModal}\r\n                    numPuzzlesCompleted={this.state.numPuzzlesCompleted}\r\n                    percentile={this.state.puzzleRushPercentileCompleted}\r\n                    averageTime={this.state.averageTime}\r\n                    averageMoves={this.state.averageMoves}\r\n                    differenceOptimal={this.state.differenceOptimal}\r\n                    movesPerSecond={this.state.movesPerSecond}\r\n                    difficulty={this.props.difficulty}\r\n                    handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  homepage: {\r\n    marginTop: '40px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  baseExpansion: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: '10px'\r\n  },\r\n  darkmode: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      marginTop: '150px',\r\n  },\r\n  iconcards: {\r\n    width: '250px',\r\n    display: 'inline-block',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  iconcardsDaily: {\r\n    maxWidth: 345,\r\n    minWidth: 250,\r\n    float: 'left',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  titlehome: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '30px',\r\n  },\r\n  titledailyroto: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '10px',\r\n  },\r\n  iconfonts: {\r\n    fontFamily: \"'Arvo', serif\",\r\n  },\r\n  createboardcard: {\r\n    ':hover': {\r\n        content: '/static/images/CreateBoardCardIconPlaced.png',\r\n    }\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  centeredProfile: {\r\n    marginTop: '20px',\r\n    display: 'inline-block',\r\n  },\r\n  expandedPanelDCH: {\r\n    background: 'linear-gradient(70deg, #fff810  30%, rgba(0,0,0,0) 30%), linear-gradient(30deg, #63e89e 60%, #ff7ee3 60%)'\r\n  },\r\n  table: {\r\n    width: '33%'\r\n  }\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport axios from 'axios';\r\nimport {Project, Words, Button, Line} from 'arwes';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        maxWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 360,\r\n        minWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 235,\r\n        height: 225,\r\n        position: 'relative',\r\n        background: 'linear-gradient(100deg, #ffd34d 55%, #fff178 55%)'\r\n    },\r\n\r\n    item: {\r\n        padding: 0\r\n    },\r\n\r\n    upperPadding: {\r\n        paddingTop: 3\r\n    },\r\n    upperPaddingButton: {\r\n        paddingTop: 3,\r\n        position: 'absolute',\r\n        bottom: 15,\r\n        left: 25\r\n    },\r\n\r\n    lowerPadding: {\r\n        paddingBottom: 3\r\n    },\r\n\r\n    rightSideText: {\r\n        textAlign: \"right\",\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n        color: '#009688'\r\n    },\r\n\r\n    leftSideText: {\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(ComplexGrid)\r\n\r\nfunction ComplexGrid(props) {\r\n    const { classes } = props;\r\n    const handleClick = () => {\r\n        axios.get('/getFindGameData?uri=' + props.game.uri)\r\n                .then( res => {\r\n                    var game = JSON.parse(res.data.game);\r\n                    props.handleGameClick(game.name, game.puzzledata,props.highscores,game.uri,props.game.authorname,\r\n                        props.game.votes, props.game.hasVoted);\r\n                });\r\n    };\r\n\r\n    var numberOfHighScores = 0;\r\n\r\n    const highscorestyle = highscore => {\r\n        if (numberOfHighScores === 6) return \"\";\r\n        numberOfHighScores++;\r\n        return (\r\n            <ListItem disableGutters={true} classes={{ root: classes.item }}>\r\n                <Typography color='primary' classes={{ root: classes.leftSideText }}> {trimNameShort(highscore.comment)} </Typography>\r\n                <Typography color='primary' classes={{ root: classes.rightSideText }}> {highscore.numMoves} </Typography>\r\n            </ListItem>\r\n        )\r\n    };\r\n\r\n    const contentDivStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n        };\r\n\r\n    };\r\n\r\n    const trimName = name => {\r\n        var separated = (name + '').split(\" \")\r\n        var toreturn = '';\r\n        separated.map((word) => {\r\n            if (word.length > 17)\r\n                toreturn += word.substring(0, 17) + \"...\" + ' ';\r\n            else {\r\n                toreturn += word + ' '\r\n            }\r\n        });\r\n        return toreturn.substring(0, toreturn.length - 1);\r\n    };\r\n\r\n    const trimNameShort = name => {\r\n        if (name.length > 10)\r\n            name = name.substring(0, 10) + \"...\";\r\n        return name\r\n    };\r\n\r\n    return (\r\n        <Grid item xs={12} md={3} sm={6}>\r\n            <Project\r\n                            animate\r\n                            header={props.game.name}\r\n                        >\r\n                        {anim => (\r\n                            <p>\r\n                                <CardContent style={{width: \"100%\",\r\n                                    maxWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 360,\r\n                                    minWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 235,\r\n                                    height: 225,\r\n                                    position: 'relative',\r\n                                    }}>\r\n                                    <div style={contentDivStyle()}>\r\n                                        <div style={{width: '100%'}}>\r\n                                <Typography style={{fontSize: '13px'}} color='primary' variant=\"caption\">\r\n                                    By: {trimName(props.game.authorname)}\r\n                                </Typography>\r\n                                <br/>\r\n                                <Typography color='primary' variant=\"caption\">\r\n                                    {props.game.created}\r\n                                </Typography>\r\n                            <Line animate/>\r\n                            <Typography color=\"textSecondary\" color='secondary' variant=\"caption\">\r\n                                Plays: {props.game.plays}\r\n                            </Typography>\r\n                            <br/>\r\n                            <Typography color=\"textSecondary\" color='secondary' variant=\"caption\">\r\n                                Likes: {props.game.votes}\r\n                            </Typography>\r\n                                            <br/>\r\n                                            <Button animate onClick={handleClick} classes={{ root: classes.upperPaddingButton }} variant=\"contained\" color=\"primary\">Play</Button>\r\n                                        </div>\r\n                                        <div style={{width: '105px', marginLeft:'20px'}}>\r\n                                            <Typography color=\"textSecondary\" color='secondary' variant=\"caption\">\r\n                                                Top Scores\r\n                                            </Typography>\r\n                                            <List>\r\n                                                {\r\n                                                    props.highscores.map(highscore =>\r\n                                                        highscorestyle(highscore)\r\n                                                    )\r\n                                                }\r\n                                            </List>\r\n                                        </div>\r\n                                    </div>\r\n                                </CardContent>\r\n                            </p>\r\n                        )}\r\n                </Project>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport { Header, Line,Project, Words, Button,Arwes,ThemeProvider, createTheme, withStyles,Row,Col } from 'arwes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport FindGameElements from \"../containers/FindGameElements\";\r\nimport {GOAL_IMAGE} from '../constants/constants';\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n        return (<div className={classes.homepage} >\r\n                <Grid container spacing={2}>\r\n                    <Grid xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                        <Project\r\n                            animate\r\n                            header='Welcome to RobotsEvolved'\r\n                        >\r\n                        {anim => (\r\n                            <p><Words animate show={anim.entered}>\r\n                               Puzzle game for anyone to play! Create your own custom boards or play a random Solved game. Goal is to get ANY piece to stop on the\r\n                                </Words>\r\n                                <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                                <br/>\r\n                                <img width=\"300\" height=\"300\" src='/static/videos/basic2.gif'/>\r\n                                <br/>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickFindGame}>\r\n                                    Find a Game\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickDailyChallenge}>\r\n                                    Daily Challenge\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickCreateGame}>\r\n                                    Create a Game\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickRandomGame}>\r\n                                    Play a Random Game\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickLearnGame}>\r\n                                    Learn\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickPuzzleRush}>\r\n                                    Puzzle Rush\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickProfile}>\r\n                                    Profile\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickDailyChallengeHistory}>\r\n                                    Daily Challenge History\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickAbout}>\r\n                                    About\r\n                                </Button>\r\n                            </div>\r\n                            </p>\r\n\r\n                        )}\r\n                    </Project>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                        <Words className={classes.titlehome} variant=\"h4\"> News\r\n                        </Words>\r\n                        <Words> 8/23/2020 Personal Best saving feature added to Daily Challenge, Also Added Like feature to custom puzzles.\r\n                        </Words>\r\n                        <br/>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                    <Words animate className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                    </Words>\r\n                        <Project\r\n                                    animate\r\n                                    header='Daily Challenge Rotation'\r\n                                >\r\n                                {anim => (\r\n                                    <p>\r\n                                   <Words animate>\r\n                                                Medium Mondays\r\n                                   </Words>\r\n                                   <br/>\r\n                                   <Words animate>\r\n                                                Trouble Tuesdays\r\n                                   </Words>\r\n                                   <br/>\r\n                                   <Words animate>\r\n                                                Wild Wednesdays\r\n                                   </Words>\r\n                                   <br/>\r\n                                   <Words animate>\r\n                                                Tryhard Thursdays\r\n                                   </Words>\r\n                                   <br/>\r\n                                   <Words animate>\r\n                                                Flyin Fridays\r\n                                   </Words>\r\n                                   <br/>\r\n                                   <Words animate>\r\n                                                Sleepy Saturdays\r\n                                   </Words>\r\n                                   <br/>\r\n                                   <Words animate>\r\n                                                Standard Sundays\r\n                                   </Words>\r\n                                    </p>\r\n                                )}\r\n                        </Project>\r\n                        <Project\r\n                            animate\r\n                            header='Daily Challenge Scores'\r\n                        >\r\n                        {anim => (\r\n                            <p>\r\n                                <DailyChallengeScores highscores={window.dchighscores}/>\r\n                            </p>\r\n                        )}\r\n                     </Project>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (<div className={classes.homepage}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Project\r\n                            animate\r\n                            header='Controls'\r\n                        >\r\n                        {anim => (\r\n\r\n\r\n                            <p>\r\n                            <Line animate />\r\n                            <Words animate\r\n                                className={classes.dividerFullWidth}\r\n                            >\r\n                                Movement\r\n                            </Words>\r\n                            <br/>\r\n                            <img width={'20%'} height={'auto'} src={\"/static/images/keyboard.png\"}/>\r\n                            <Words animate>Pieces Move until they hit a wall or another piece</Words>\r\n                            <Line animate />\r\n                            <Words animate\r\n                            className={classes.dividerFullWidth}\r\n                            >\r\n                                Selecting robots\r\n                            </Words>\r\n                            <br/>\r\n                            <Words animate> Use </Words>\r\n                            <img width={'20%'} height={'auto'} src={\"/static/images/tab_button_keyboard_type_1-512.png\"}/>\r\n                            <Words animate>or click on Piece</Words>\r\n                            <Line animate />\r\n                            <Words animate\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                            >\r\n                            HotKeys\r\n                            </Words>\r\n                            <br/>\r\n                            <Words animate style={{fontSize: '13px'}}>Undo</Words> <img width={'20%'} height={'auto'} src={\"/static/images/Qkey.png\"}/> <br/>\r\n                            <Words animate style={{fontSize: '13px'}}>Reset</Words> <img width={'20%'} height={'auto'} src={\"/static/images/Wkey.png\"}/>\r\n                            <Line animate/>\r\n                            <div style={{marginTop:'100px'}}>\r\n                            <Words animate className={classes.titlehome} variant=\"h4\"> News\r\n                            </Words>\r\n                            <Words animate> 8/5/2020 Scaled down the Difficulty for the Daily Challenges, also modified the classic algorithm to be less cluttered\r\n                            </Words>\r\n                            <Words animate> 8/18/2020 New textures, Soon to be released: Color Specific Goals!\r\n                            </Words>\r\n                            <Words animate> 8/23/2020 Personal Best saving feature added to Daily Challenge, Also Added Like feature to custom puzzles.\r\n                            </Words>\r\n                            </div>\r\n                            <Line animate />\r\n                            </p>\r\n                        )}\r\n                    </Project>\r\n                </Grid>\r\n                <Grid item xs={8} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                        <Project\r\n                            animate\r\n                            header='Welcome to RobotsEvolved'\r\n                        >\r\n                        {anim => (\r\n                            <p><Words animate show={anim.entered}>\r\n                               Puzzle game for anyone to play! Create your own custom boards or play a random Solved game. Goal is to get ANY piece to stop on the\r\n                                </Words>\r\n                                <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                                <br/>\r\n                                <img width=\"300\" height=\"300\" src='/static/videos/basic2.gif'/>\r\n                                <br/>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickFindGame}>\r\n                                    Find a Game\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickDailyChallenge}>\r\n                                    Daily Challenge\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickCreateGame}>\r\n                                    Create a Game\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickRandomGame}>\r\n                                    Play a Random Game\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickLearnGame}>\r\n                                    Learn\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickPuzzleRush}>\r\n                                    Puzzle Rush\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickProfile}>\r\n                                    Profile\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickDailyChallengeHistory}>\r\n                                    Daily Challenge History\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickAbout}>\r\n                                    About\r\n                                </Button>\r\n                            </div>\r\n                            </p>\r\n\r\n                        )}\r\n                    </Project>\r\n\r\n                </Grid>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                <Project\r\n                            animate\r\n                            header='Daily Challenge Rotation'\r\n                        >\r\n                        {anim => (\r\n                            <p>\r\n                           <Words animate>\r\n                                        Medium Mondays\r\n                           </Words>\r\n                           <Words animate>\r\n                                        Trouble Tuesdays\r\n                           </Words>\r\n                           <Words animate>\r\n                                        Wild Wednesdays\r\n                           </Words>\r\n                           <Words animate>\r\n                                        Tryhard Thursdays\r\n                           </Words>\r\n                           <Words animate>\r\n                                        Flyin Fridays\r\n                           </Words>\r\n                           <Words animate>\r\n                                        Sleepy Saturdays\r\n                           </Words>\r\n                           <Words animate>\r\n                                        Standard Sundays\r\n                           </Words>\r\n                            </p>\r\n                        )}\r\n                </Project>\r\n                <Project\r\n                            animate\r\n                            header='Daily Challenge Scores'\r\n                        >\r\n                        {anim => (\r\n                            <p>\r\n                                <DailyChallengeScores highscores={window.dchighscores}/>\r\n                            </p>\r\n                        )}\r\n                </Project>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from 'axios';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport extend from '../constants/extend';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center'\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 400,\r\n    },\r\n    input: {\r\n        marginLeft: 5,\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n        marginLeft: 8,\r\n        marginRight: 8,\r\n    },\r\n});\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = this.props.gameslist;\r\n        var highscoreslist = this.props.highscoreslist;\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n            anchorEl: null,\r\n            hasMore: true,\r\n            lastSearch: 'None',\r\n            offsetSearch: gameslist.length,\r\n            isLoadingSearch: false,\r\n        }\r\n\r\n    }\r\n\r\n    handleGameClick = (name,gamedata,highscores,uri,authorname,votes,hasVoted) => {\r\n        this.props.handleGameClick(name,gamedata,highscores,uri,authorname,votes,hasVoted);\r\n    };\r\n\r\n    handleFilterMenuOpen = event => {\r\n        this.setState( {\r\n          anchorEl: event.currentTarget\r\n      });\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.keycode == 13) {\r\n            this.handleSearchSubmit(e);\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        window.scrollTo(0,this.props.findWindowHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.props.setFindWindow(window.scrollY)\r\n    }\r\n\r\n    handleCloseFilterMenuMostPlayed = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'MostPlayed', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'MostPlayed', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'MostPlayed',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleCloseFilterMenuMostLiked = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'MostLiked', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'MostLiked', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'MostLiked',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleCloseFilterMenuHighest = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'Highest', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'Highest', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'Highest',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleSearchSubmit = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n\r\n        axios.post('/search', {search: searchTerm, filter: 'None', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'None', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'None',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    hasMore = () => {\r\n        return ( this.state.hasMore ? null : <Grid item alignItems=\"center\" justify=\"center\" xs={12}><Typography style={{textAlign: 'center', display: 'block'}} variant=\"caption\">No More Puzzles</Typography></Grid>)\r\n    }\r\n\r\n    loadMoreItems = () => {\r\n        var searchTerm = this.searchRef.value;\r\n        if (!this.state.isLoadingSearch) {\r\n            this.state.isLoadingSearch = true;\r\n            axios.post('/search', {search: searchTerm, filter: 'None', offset: this.state.offsetSearch})\r\n                .then( res => {\r\n                    var gameslist = JSON.parse(res.data.gameslist);\r\n                    this.state.offsetSearch = gameslist.length + this.state.gameslist.length;\r\n                    var highscoreslist = JSON.parse(res.data.highscoreslist);\r\n                    this.props.setNumFindGames(gameslist.length + this.state.gameslist.length, this.state.lastSearch, searchTerm);\r\n                    this.setState({\r\n                        highscoreslist: this.state.highscoreslist.concat(highscoreslist),\r\n                        gameslist: this.state.gameslist.concat(gameslist),\r\n                        hasMore: gameslist.length == 0 ? false : true,\r\n                        isLoadingSearch: false,\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    handleCloseFilterMenu = () => {\r\n        this.setState({\r\n            anchorEl: null\r\n        });\r\n    };\r\n\r\n    render () {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <div id='MainFindPage' style={gamepanel()}>\r\n                <Paper component=\"form\" className={classes.root} >\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        inputRef={ref => this.searchRef = ref}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                this.handleSearchSubmit();\r\n                                event.preventDefault()\r\n                            }\r\n                        }}\r\n                    />\r\n                    <IconButton onClick={this.handleSearchSubmit} className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <Divider className={classes.divider} orientation=\"vertical\" />\r\n                    <Button\r\n                        onClick={this.handleFilterMenuOpen}\r\n                        startIcon={<FilterListIcon />}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        Sort\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(this.state.anchorEl)}\r\n                        onClose={this.handleCloseFilterMenu}\r\n                        getContentAnchorEl={null}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'center',\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center',\r\n                        }}\r\n                    >\r\n                        <MenuItem onClick={this.handleSearchSubmit}>Recently Created</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuMostPlayed}>Most Played</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuMostLiked}>Most Liked</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuHighest}>Highest Scores</MenuItem>\r\n                    </Menu>\r\n                </Paper>\r\n                <br/>\r\n                <Grid container alignItems={\"stretch\"} spacing={2}>\r\n                    {\r\n                        this.state.gameslist.map((game,index)=>\r\n                            <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                        )\r\n                    }\r\n                    <InfiniteScroll\r\n                        pageStart={1}\r\n                        loadMore={this.loadMoreItems.bind(this)}\r\n                        hasMore={this.state.hasMore}\r\n                        loader={<Grid item alignItems=\"center\" justify=\"center\" xs={12}><CircularProgress style={{textAlign: 'center',alignItems: 'center', marginLeft: 'auto', marginRight: 'auto'}} size={40} color=\"secondary\" /></Grid>}\r\n                        threshold={200}\r\n                        >\r\n                    </InfiniteScroll>\r\n                    {this.hasMore()}\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(FindGame);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  loadedGame={'Yes'}\r\n                  name={this.props.name}\r\n                  author={this.props.authorname}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n                  votes={this.props.votes}\r\n                  hasVoted={this.props.hasVoted}\r\n                  signInModalOpen={this.props.signInModalOpen}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst stylecol = () => {\r\n    return({\r\n            float: 'left',\r\n            width: '50%',\r\n            margin: 'auto',\r\n            padding: '0 50px',\r\n            marginTop: '6px',\r\n    });\r\n}\r\n\r\nconst spacing = () => {\r\n    return({\r\n            marginBottom: '10px',\r\n    });\r\n}\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    };\r\n\r\n    loginFacebook = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/facebook\";\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeLoginModal}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>Login to RobotsEvolved</DialogTitle>\r\n                <DialogContent dividers>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                           • Gain <FaCrown/>s when winning the Daily Challenge (stacks)\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                            • Be able to give a like to your favorite puzzles\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                            • Saving settings and your moves in the daily challenge\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography variant=\"body2\" display=\"inline\">\r\n                            • Profile Page to keep track of your submissions.\r\n                        </Typography>\r\n                    <div class=\"col\">\r\n                        <a href=\"#\" onClick={this.loginFacebook} id={\"buttonfb\"}>\r\n                          <i class=\"fa fa-facebook fa-fw\"></i> Login with Facebook\r\n                         </a>\r\n                        <a onClick={this.loginGoogle} href=\"#\" id={\"buttongoogle\"}><i class=\"fa fa-google fa-fw\">\r\n                          </i> Login with Google\r\n                        </a>\r\n                    </div>\r\n                    <Typography variant=\"caption\" display=\"block\">\r\n                            We will NEVER distribute/sell your facebook or google email address.\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeLoginModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <Button color=\"black\" onClick={this.handleClick}><b>{textToShow}</b></Button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport SignInButton from './SignInButton';\r\nimport {Frame,Words} from 'arwes';\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '40px',\r\n        width: '40px',\r\n        marginTop: '5px',\r\n    };\r\n};\r\n\r\nconst divStyle = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        width: '200px',\r\n    };\r\n};\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    SignInButtonPressed = () => {\r\n        this.props.handleClick('Sign in');\r\n    }\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return <SignInButton onClick={this.SignInButtonPressed}/>\r\n        }\r\n        else {\r\n            return (\r\n                <div style={divStyle()}>\r\n                    <Frame\r\n                        animate={true}\r\n                        level={3}\r\n                        corners={4}\r\n                        layer='header'\r\n                    >\r\n                        <Words animate layer='header'>{window.userInfo.username}</Words>\r\n                    </Frame>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Project, Words, Button} from 'arwes';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            position: 'relative',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            margin: '0 auto',\r\n            top: '25%',\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic v2',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty) => {\r\n        console.log(difficulty)\r\n        axios.post('/puzzlerush', {difficulty: difficulty, action: 'start',type: this.state.value})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            isLoading: false,\r\n                        });\r\n                        this.props.handleClickPuzzleRush(difficulty,games,p_id);\r\n                });\r\n    };\r\n\r\n    handleClickEasyPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMediumPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n\r\n    render () {\r\n        return (<div style={divStyle()}>\r\n                  <Project animate header=\"Select a Difficulty\">\r\n                    {(anim) => (\r\n                      <p>\r\n                        {this.state.isLoading ? (\r\n                          <Grid\r\n                            container\r\n                            xs={12}\r\n                            spacing={4}\r\n                            direction=\"column\"\r\n                            alignItems=\"center\"\r\n                            justify=\"center\"\r\n                            wrap=\"nowrap\"\r\n                          >\r\n                            <div style={divStyle()}>\r\n                              <CircularProgress />\r\n                            </div>\r\n                          </Grid>\r\n                        ) : (\r\n                          <Grid\r\n                            container\r\n                            xs={12}\r\n                            spacing={4}\r\n                            alignItems=\"center\"\r\n                            justify=\"center\"\r\n                            wrap=\"nowrap\"\r\n                          >\r\n                            <Grid item xs={6}>\r\n                              <ButtonGroup\r\n                                orientation=\"vertical\"\r\n                                color=\"primary\"\r\n                                aria-label=\"vertical outlined primary button group\"\r\n                              >\r\n                                <Button\r\n                                  animate\r\n                                  onClick={this.handleClickEasyPuzzleRush}\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Easy\r\n                                </Button>\r\n                                <Button\r\n                                  animate\r\n                                  onClick={this.handleClickMediumPuzzleRush}\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Medium\r\n                                </Button>\r\n                                <Button\r\n                                  animate\r\n                                  onClick={this.handleClickHardPuzzleRush}\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Hard\r\n                                </Button>\r\n                                <Button\r\n                                  animate\r\n                                  onClick={this.handleClickExHardPuzzleRush}\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Exteremely Hard\r\n                                </Button>\r\n                              </ButtonGroup>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                              <FormControl component=\"fieldset\">\r\n                                <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                <RadioGroup\r\n                                  aria-label=\"game type\"\r\n                                  name=\"gametype\"\r\n                                  value={this.state.value}\r\n                                  onChange={this.handleChange}\r\n                                >\r\n                                  <FormControlLabel\r\n                                    value=\"classic v2\"\r\n                                    control={<Radio />}\r\n                                    label=\"Classic V2\"\r\n                                  />\r\n                                  <FormControlLabel\r\n                                    value=\"classic\"\r\n                                    control={<Radio />}\r\n                                    label=\"Classic\"\r\n                                  />\r\n                                  <FormControlLabel\r\n                                    value=\"random\"\r\n                                    control={<Radio />}\r\n                                    label=\"Random\"\r\n                                  />\r\n                                </RadioGroup>\r\n                              </FormControl>\r\n                            </Grid>\r\n                          </Grid>\r\n                        )}\r\n                        <DialogActions>\r\n                          <Button animate onClick={this.props.backButton}>\r\n                            Back\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </p>\r\n                    )}\r\n                  </Project>\r\n                </div>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {Project, Words, Button} from 'arwes';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../../constants/constants\";\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            position: 'relative',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            margin: '0 auto',\r\n            top: '25%',\r\n        });\r\n}\r\n\r\nclass RandomGameDifficultyPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic v2',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickRandomGameModal = (difficulty,type) => {\r\n        axios.get('/randomgame?difficulty=' + difficulty + '&type=' + type)\r\n            .then( res => {\r\n                var game = JSON.parse(res.data.game);\r\n                this.setState({\r\n                    isLoading: false,\r\n                });\r\n                this.props.handleClickRandomGame(game,difficulty);\r\n            })\r\n    }\r\n\r\n    handleClickEasy = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMedium = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHard = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHard = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickGodMode = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('GodTeir',this.state.value)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n    render () {\r\n        return (<div style={divStyle()}>\r\n                  <Project animate header=\"Select a Difficulty\">\r\n                    {(anim) => (\r\n                      <p>\r\n                          {this.state.isLoading ? (\r\n                            <Grid\r\n                              container\r\n                              xs={12}\r\n                              spacing={4}\r\n                              direction=\"column\"\r\n                              alignItems=\"center\"\r\n                              justify=\"center\"\r\n                              wrap=\"nowrap\"\r\n                            >\r\n                              <div style={divStyle()}>\r\n                                <CircularProgress />\r\n                              </div>\r\n                            </Grid>\r\n                          ) : (\r\n                            <Grid\r\n                              container\r\n                              xs={12}\r\n                              spacing={4}\r\n                              alignItems=\"center\"\r\n                              justify=\"center\"\r\n                              wrap=\"nowrap\"\r\n                            >\r\n                              <Grid item xs={6}>\r\n                                <ButtonGroup\r\n                                  orientation=\"vertical\"\r\n                                  color=\"primary\"\r\n                                  aria-label=\"vertical outlined primary button group\"\r\n                                >\r\n                                  <Button animate\r\n                                    onClick={this.handleClickEasy}\r\n                                  >\r\n                                    Easy\r\n                                  </Button>\r\n                                  <Button animate\r\n                                    onClick={this.handleClickMedium}\r\n                                  >\r\n                                    Medium\r\n                                  </Button>\r\n                                  <Button animate\r\n                                    onClick={this.handleClickHard}\r\n                                  >\r\n                                    Hard\r\n                                  </Button>\r\n                                  <Button animate\r\n                                    onClick={this.handleClickExHard}\r\n                                  >\r\n                                    Extremely Hard\r\n                                  </Button>\r\n                                  <Button animate\r\n                                    onClick={this.handleClickGodMode}\r\n                                  >\r\n                                    God Tier\r\n                                  </Button>\r\n                                </ButtonGroup>\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                <FormControl component=\"fieldset\">\r\n                                  <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                  <RadioGroup\r\n                                    aria-label=\"game type\"\r\n                                    name=\"gametype\"\r\n                                    value={this.state.value}\r\n                                    onChange={this.handleChange}\r\n                                  >\r\n                                    <FormControlLabel\r\n                                      value=\"classic v2\"\r\n                                      control={<Radio />}\r\n                                      label=\"Classic V2\"\r\n                                    />\r\n                                    <FormControlLabel\r\n                                      value=\"classic\"\r\n                                      control={<Radio />}\r\n                                      label=\"Classic\"\r\n                                    />\r\n                                    <FormControlLabel\r\n                                      value=\"random\"\r\n                                      control={<Radio />}\r\n                                      label=\"Random\"\r\n                                    />\r\n                                  </RadioGroup>\r\n                                </FormControl>\r\n                              </Grid>\r\n                            </Grid>\r\n                          )}\r\n                        <DialogActions>\r\n                          <Button animate onClick={this.props.backButton}>Back</Button>\r\n                        </DialogActions>\r\n                      </p>\r\n                    )}\r\n                  </Project>\r\n                  </div>)\r\n            }\r\n}\r\n\r\nexport default RandomGameDifficultyPage;\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageCreatedGamesDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.game.name,props.game.puzzledata,[],props.game.uri, props.game.authorname, props.game.votes, props.game.hasVoted);\r\n    }\r\n\r\n    return (<div>\r\n            <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography> Highscore Holder: </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.game.username} - {props.game.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageSolutionDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.solution.name,props.solution.puzzledata,[],props.solution.uri);\r\n    }\r\n    return (<div>\r\n              <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography color={'secondary'} variant={'body2'}> {props.solution.WinnerCreated} </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.solution.WinnerUsername} - {props.solution.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Table,TableContainer,TableHead,TableRow,TableCell,TableBody} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useStyles from '../Material-UI/themes';\r\nimport ProfilePageCreatedGamesDetails from '../components/ProfilePageComponents/ProfilePageCreatedGamesDetails';\r\nimport ProfilePageSolutionDetails from '../components/ProfilePageComponents/ProfilePageSolutionDetails';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\n\r\nexport default function ProfilePage(props) {\r\n    const classes = useStyles();\r\n    const submitAnswer = () => {\r\n        axios.post('/userUpdate',{newuser: document.getElementById(\"ProfileName\").value})\r\n            .then( res => {\r\n                if (res.data == 'OK') {\r\n                    window.location.href = '/';\r\n                }\r\n                else {\r\n                    setError(res.data);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const createData = (name,col1,col2) => {\r\n        return {name,col1,col2}\r\n    }\r\n\r\n    const columns = [\r\n          { id: 'difficulty', label: 'Difficulty', maxWidth: 75 },\r\n          { id: 'classic', label: 'Classic', maxWidth: 75 },\r\n          { id: 'random', label: 'Random', maxWidth: 75 },\r\n        ];\r\n\r\n    const rows = [\r\n        createData('Easy', props.puzzlerushview.maxeasyc,props.puzzlerushview.maxeasyp),\r\n        createData('Medium', props.puzzlerushview.maxmediumc,props.puzzlerushview.maxmediump),\r\n        createData('Hard', props.puzzlerushview.maxhardc,props.puzzlerushview.maxhardp),\r\n        createData('Extremely Hard', props.puzzlerushview.maxexhardc,props.puzzlerushview.maxexhardp)\r\n    ]\r\n\r\n    const rowseff = [\r\n        createData('Easy', props.puzzlerushview.maxeffec,props.puzzlerushview.maxeffep),\r\n        createData('Medium', props.puzzlerushview.maxeffmc,props.puzzlerushview.maxeffmp),\r\n        createData('Hard', props.puzzlerushview.maxeffhc,props.puzzlerushview.maxeffhp),\r\n        createData('Extremely Hard', props.puzzlerushview.maxeffexc,props.puzzlerushview.maxeffexp)\r\n    ]\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [expandedGame, setExpandedGame] = React.useState(false);\r\n    const [expandedHighscores, setExpandedHighscores] = React.useState(false);\r\n    const handleChangeGame = (panel) => (event, isExpandedGame) => {\r\n        setExpandedGame(isExpandedGame ? panel : false);\r\n    };\r\n    const handleChangeHighscores = (panel) => (event, isExpandedHighScores) => {\r\n        setExpandedHighscores(isExpandedHighScores ? panel : false);\r\n    };\r\n    return (\r\n            <div style={gamepanel()}>\r\n                <Grid container spacing={4}>\r\n                    <Grid item xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <TextField className={classes.centeredProfile} id={\"ProfileName\"} label={\"Username\"} defaultValue={window.userInfo.username}/>\r\n                        <Button className={classes.centeredProfile} variant=\"contained\" color=\"secondary\" onClick={submitAnswer}>Change Username</Button>\r\n                        <Typography color={\"secondary\"}>{error}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Created</Typography>\r\n                        {\r\n                            props.gamesview.map((game,index) =>\r\n                                    <ExpansionPanel expanded={expandedGame === 'panelgame' + index} onChange={handleChangeGame('panelgame' + index)}>\r\n                                        <ExpansionPanelSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls={\"panel\" + index + \"-content\"}\r\n                                          id={\"panel\" + index + \"-header\"}\r\n                                        >\r\n                                          <Typography className={classes.heading}>{game.name}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Plays: {game.plays}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Likes: {game.votes}</Typography>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                          <ProfilePageCreatedGamesDetails\r\n                                            game={game}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                          />\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Solved</Typography>\r\n                        {\r\n                            props.solutionsview.map((solution,index) =>\r\n                                <ExpansionPanel expanded={expandedHighscores === 'panelhigh' + index} onChange={handleChangeHighscores('panelhigh' + index)}>\r\n                                    <ExpansionPanelSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls={\"panel\" + index + \"-content\"}\r\n                                      id={\"panel\" + index + \"-header\"}\r\n                                    >\r\n                                      <Typography className={classes.heading}>{solution.name}</Typography>\r\n                                      <Typography className={classes.secondaryHeading}>Best: {solution.numMoves}</Typography>\r\n                                      {solution.WinnerUserId == window.userInfo.userID ? <FaCrown style={{marginLeft: '30px'}}/> : null}\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <ProfilePageSolutionDetails\r\n                                            solution={solution}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                        />\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Puzzle Rush Records</Typography>\r\n                        <Typography variant=\"body1\">Most Puzzles Solved</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ maxWidth: column.maxWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rows.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                        <Typography style={{marginTop: '40px'}} variant=\"body1\">Highest Efficiency Scores</Typography>\r\n                        <Typography variant=\"caption\">Calculated by (total puzzles completed) * 7 - (total redundany moves from best score)</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ maxWidth: column.maxWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rowseff.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nexport default function RandomGamePage(props) {\r\n    return (\r\n        <Game\r\n              handleLineDirections={props.handleLineDirections}\r\n              LineDirections={props.LineDirections}\r\n              randomGame={'Yes'}\r\n              game={props.game}\r\n              difficulty={props.difficulty}\r\n         />\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PuzzleRushPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  puzzleRush={'Yes'}\r\n                  p_id={this.props.p_id}\r\n                  games={this.props.games}\r\n                  difficulty={this.props.difficulty}\r\n             />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PuzzleRushPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass LessonsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                learnMode={'Yes'}\r\n                games={window.learngameslist}/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default LessonsPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game handleClickDailyChallenge={this.props.handleClickDailyChallenge} handleLineDirections={this.props.handleLineDirections} LineDirections={this.props.LineDirections} dailyChallengeMode={'Yes'} playerStateList={this.props.playerStateList} savedMoves={this.props.savedMoves} games={this.props.dailyChallengeGameslist} dc_id={this.props.dc_id} highscores={this.props.dchighscores}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengePage;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Card,CardActions,Button,Avatar} from \"@material-ui/core\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function AboutUs(props) {\r\n    const facebookclick = () => {\r\n        window.open('https://www.facebook.com/RobotsEvolved-105278561284154')\r\n    }\r\n    const discordclick = () => {\r\n        window.open('https://discord.gg/VKMRQuE')\r\n    }\r\n    return (<div style={gamepanel()}>\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item spacing={4} xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card style={{display: 'inline-block', width: '100%'}}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    About\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    RobotsEvolved.com is based on the board game Ricochet Robots by Alex Randolph.\r\n                                    We have several game modes and variants that are inspired by the several Chess variants on the internet.\r\n                                    If you find any bugs or have any feature requests for RobotsEvolved please let me know by emailing robotsevolved@gmail.com or contacting me on FB from our FB page, I would love to hear some of the ideas people have. Ill get to developing the feature/fixing annoying bugs ASAP\r\n                                    If you use Google Login or Facebook Login I will NEVER email you or sell your information, it is strictly for user-identification.\r\n                                    Tell your friends about the site and get people on here!\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button onClick={facebookclick}>\r\n                                    <Avatar alt=\"Facebook\" src=\"https://facebookbrand.com/wp-content/uploads/2019/04/f_logo_RGB-Hex-Blue_512.png?w=512&h=512\" />\r\n                                </Button>\r\n                                <Button onClick={discordclick}>\r\n                                    <Avatar alt=\"Discord\" src=\"https://cdn.discordapp.com/attachments/675768013731135518/740251382862577694/icons8-discord-new-logo-48.png\" />\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Daily Challenge Rotation\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    The Daily Challenge rotates its difficulty every day as specified below with 2 x Random and 2 x Classic Type puzzles.\r\n                                    <br/>\r\n                                    Medium Mondays - 4 x Medium\r\n                                    <br/>\r\n                                    Trouble Tuesdays - 4 x Hard\r\n                                    <br/>\r\n                                    Wild Wednesdays - 4 x Medium\r\n                                    <br/>\r\n                                    Tryhard Thursdays -4 x Hard\r\n                                    <br/>\r\n                                    Flyin Fridays - 4 x Medium\r\n                                    <br/>\r\n                                    Sleepy Saturdays - 4 x Easy\r\n                                    <br/>\r\n                                    Standard Sundays - 4 x Hard\r\n                                </Typography>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Classic Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Classic puzzles are based on the original Game. These Puzzles only have walls that are L shaped and a goal is in the center of one of the L puzzles.\r\n                                </Typography>\r\n                                <Typography variant={\"h4\"} display={\"inline\"}>\r\n                                    Random Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Random Puzzles are created by having a 10% chance for a wall to spawn in location possible, Goals and Robot placements are completely random also.\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Easy\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 5-8 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Medium\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 9-13 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 14-17 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"} >\r\n                                    Extremely Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 18-22 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    God Tier\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 23+ Moves, Note: there are a low number of these puzzles due to the CPU required to create them\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Paper class=\"card3\">\r\n                          <img src={\"/static/images/284457_10151211078621477_839164197_n.jpg\"} alt=\"Jane\"/>\r\n                          <div class=\"container3\">\r\n                            <h2>Kyle Kwasniewski</h2>\r\n                            <p class=\"title3\">Creator &amp; FullStack Dev.</p>\r\n                            <p>I work in Software Development and Dev-Ops in New York and consider myself a Ricochet Robots enthusiast so I decided to make this application as a way to better hone my skill in web frameworks as well as pass the time during the quarantine. I play Frisbee and Ski alot as well as play my fair share of Steam games.</p>\r\n                            <p>Thanks for playing!</p>\r\n                            <p>robotsevolved@gmail.com</p>\r\n                          </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/284f909d-0d5c-4ae1-b100-76c9d46ae7d4.png\"} alt=\"Mike\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Jonah Tollefson</h2>\r\n                                <p className=\"title3\">Front-End Dev.</p>\r\n                                <p>Went to college with these other goobers in the US and now I work professionally as a\r\n                                    software engineer in Germany. For RobotsEvolved, I mainly worked on the frontend\r\n                                    using React. Cats and Ultimate Frisbee are life.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/derekschultz.jpg\"} alt=\"John\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Derek Schultz</h2>\r\n                                <p className=\"title3\">Back-End Dev.</p>\r\n                                <p>Full time Software Engineer. Graduated from University of Wisconsin Platteville\r\n                                    with a BS in Computer Science and Minor in Business Administration. Worked on\r\n                                    most of the database aspect of RobotsEvolved and some back end functionality. I\r\n                                    enjoy video games, beer, and playing darts.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n\r\n\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nexport default function ShowDailyPuzzleHistory(props) {\r\n    const handleDailyPuzzleHistoryClick = event => {\r\n        console.log(props.history)\r\n        props.handleDailyPuzzleHistoryClick(props.history)\r\n    }\r\n    return (\r\n            <Button style={window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? {marginLeft: '5px'} : {marginLeft: '60px'}} variant=\"contained\" size=\"small\" color=\"primary\" onClick={handleDailyPuzzleHistoryClick}>\r\n                 show answers\r\n            </Button>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport ShowDailyPuzzleHistory from '../components/ShowDailyPuzzleHistory';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ProfilePageCreatedGamesDetails from \"../components/ProfilePageComponents/ProfilePageCreatedGamesDetails\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function DailyChallengeHistory(props) {\r\n    const [expandedPanel, setExpandedPanel] = React.useState(false);\r\n    const handleChangePanel = (panel) => (event, isExpanded) => {\r\n        setExpandedPanel(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles();\r\n    return (<div style={gamepanel()}>\r\n                <Typography className={classes.titlehome} variant=\"h3\">Daily Challenge History</Typography>\r\n                {\r\n                    props.dailychallengehistory.map((history, index) =>\r\n                        <ExpansionPanel expanded={expandedPanel === 'panelgame' + index} onChange={handleChangePanel('panelgame' + index)}>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={\"panel\" + index + \"-content\"}\r\n                                id={\"panel\" + index + \"-header\"}\r\n                            >\r\n                                <Typography className={classes.heading}>{history.created}</Typography>\r\n                                <Typography style={{width: '15%'}} className={classes.secondaryHeading}>Winner: {history.nameSubmitted}</Typography>\r\n                                <ShowDailyPuzzleHistory history={history} handleDailyPuzzleHistoryClick={props.handleDailyPuzzleHistoryClick}/>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        <FaCrown/> {history.nameSubmitted} - {history.scoreSubmitted} <FaCrown/>\r\n                                    </Typography>\r\n                                    <Typography className={classes.secondaryHeading}>Lowest possible solution: {history.bestScore}</Typography>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                    )\r\n                }\r\n           </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengeHistoryAnswersPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        console.log(this.props.history);\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                dailyChallengeModeAnswers={'Yes'}\r\n                nameSubmitted={this.props.history.nameSubmitted}\r\n                bestScore={this.props.history.bestScore}\r\n                created={this.props.history.created}\r\n                games={this.props.history.games}\r\n                playerStateList={this.props.history.playerStateList}\r\n                scoreSubmitted={this.props.history.scoreSubmitted}\r\n                solutionDataSubmitted={this.props.history.solutionDataSubmitted}\r\n                submitted={this.props.history.submitted}\r\n                user_id={this.props.user_id}\r\n                />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengeHistoryAnswersPage;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Loading} from 'arwes';\r\n\r\nexport default function LoadingPage() {\r\n  return (\r\n    <div>\r\n            <Loading animate layer='success' full />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Home from './Pages/Home';\r\nimport { Header, Project, Words, Button,Arwes,ThemeProvider, createTheme, withStyles, Frame} from 'arwes';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport withStyles2 from \"@material-ui/core/styles/withStyles\";\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport clsx from 'clsx';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\nimport axios from 'axios';\r\nimport Game from './containers/Game';\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport BrushIcon from '@material-ui/icons/Brush';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"./constants/constants\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport PuzzleRushDifficultyModal from \"./containers/Modals/PuzzleRushDifficultyModal\";\r\nimport RandomGameDifficultyPage from \"./containers/Modals/RandomGameDifficultyPage\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport RandomGamePage from \"./Pages/RandomGamePage\";\r\nimport PuzzleRushPage from \"./Pages/PuzzleRushPage\";\r\nimport LessonsPage from \"./Pages/LessonsPage\";\r\nimport DailyChallengePage from \"./Pages/DailyChallenge\";\r\nimport AboutUs from \"./Pages/AboutUs\";\r\nimport DailyChallengeHistory from \"./Pages/DailyChallengeHistory\";\r\nimport DailyChallengeHistoryAnswersPage from \"./Pages/DailyChallengeHistoryAnswersPage\";\r\nimport { FaMedal } from 'react-icons/fa';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport Popover from \"@material-ui/core/Popover\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        backgroundColor: 'transparent',\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    drawerHeaderRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerHeaderLeft: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    toolbar1: {\r\n        opacity: '1'\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    dividerFullWidth: {\r\n        margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    darkmode: {\r\n          body: '#363537',\r\n          text: '#FAFAFA',\r\n          toggleBorder: '#6B8096',\r\n          gradient: 'linear-gradient(#091236, #1E215D)',\r\n    },\r\n});\r\n\r\n\r\n\r\nconst MyColor = withStyles(theme => ({\r\n    root: {\r\n        width: 300,\r\n        height: 120,\r\n        transition: `background-color ${theme.animTime}ms ease-out`,\r\n        backgroundColor: theme.color.primary.base,\r\n    },\r\n}))(props => (\r\n    <div className={props.classes.root} />\r\n));\r\n\r\n\r\nclass MyApp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        if (window.uri === '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickDailyChallengeHistory={this.handleClickDailyChallengeHistory} handleClickProfile={this.handleClickProfile} handleClickAbout={this.handleClickAboutUs} handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n                dailychallengehistoryloaded: false,\r\n                profileDataloaded: false,\r\n            };\r\n        }\r\n        else {\r\n            if (window.token.g_id == undefined) {\r\n                const linedir = window.loggedin === 'No' ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={linedir} name={window.token.name} gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri} authorname={window.token.authorname} votes={window.token.votes} hasVoted={window.token.hasVoted} signInModalOpen={this.SignInButtonPressed}/>, //when uri is entered to play specific game\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                };\r\n            }\r\n            else {\r\n                const linedir = window.loggedin === 'No' ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={linedir} randomGame={'Yes'} game={window.token} difficulty={window.token.g_difficulty}/>,\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                }\r\n            }\r\n        }\r\n        this.state.openChat = false;\r\n        this.state.chatAnchor = null;\r\n        this.state.open = window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? false : false;\r\n        this.state.mobileAnchorEl = null;\r\n        this.state.mobileMenuOpen = false;\r\n        this.state.showLoginModal = false;\r\n        this.state.showPuzzleRushModal = false;\r\n        this.state.loadingPage = false;\r\n        this.state.filterTerm = 'None'\r\n        this.state.searchTerm = ''\r\n        this.state.findWindowHeight = 0;\r\n        this.state.numFindGames = window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? 8 : 20;\r\n        if (window.loggedin === 'Yes') {\r\n           this.state.LineDirections = window.userInfo.LineDirFlag === 'Y';\r\n        }\r\n        else {\r\n           this.state.LineDirections = true;\r\n        }\r\n        const color = '#1976d2';\r\n        this.state.theme = this.getTheme(color);\r\n    }\r\n\r\n    handleChatOpen = (event) => {\r\n        this.setState({\r\n            openChat: true,\r\n            chatAnchor: event.currentTarget\r\n        })\r\n    };\r\n\r\n    handleChatClose = () => {\r\n      this.setState({\r\n          openChat: false\r\n      })\r\n    };\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState( {\r\n            open: false\r\n        })\r\n    };\r\n\r\n    getTheme (color) {\r\n        return createTheme({\r\n            color: {\r\n                primary: { base: color }\r\n            }\r\n        });\r\n    }\r\n\r\n    handleLineDirections = (boolean) => {\r\n        if (window.loggedin === 'Yes') {\r\n            axios.post('/settingsChange', {LineDirections: boolean ? 'Y' : 'N'})\r\n                .then( res => {\r\n                    console.log('changed');\r\n                });\r\n        }\r\n        this.setState({\r\n            LineDirections: boolean\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallenge = () => {\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeData')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    const dc_movesList = res.data.dc_movesList == null ? null : JSON.parse(res.data.dc_movesList)\r\n                    const dc_playerList = res.data.dc_playerList == null ? null : JSON.parse(res.data.dc_playerList)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                                        PageSelected: <DailyChallengePage\r\n                                                            handleClickDailyChallenge={this.handleClickDailyChallenge}\r\n                                                            dailyChallengeGameslist={JSON.parse(res.data.dailyChallengeGameslist)}\r\n                                                            dc_id={res.data.dc_id}\r\n                                                            dchighscores={JSON.parse(res.data.dchighscores)}\r\n                                                            handleLineDirections={this.handleLineDirections}\r\n                                                            LineDirections={this.state.LineDirections}\r\n                                                            savedMoves={dc_movesList}\r\n                                                            playerStateList={dc_playerList}\r\n                                        />,\r\n                                        open: isOpen,\r\n                                        loadingPage: false,\r\n                                    });\r\n                        }\r\n                    });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState( {\r\n            open: true\r\n        });\r\n    };\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type === 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    };\r\n\r\n    handleClickRandomGameModal = (game,difficulty) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showRandomGameModal: false,\r\n            PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} randomGame={'Yes'} game={game} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickRandomGame = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            PageSelected: <RandomGameDifficultyPage\r\n                                closeModal={this.closeRandomGameLoginModal}\r\n                                show={this.state.showRandomGameModal}\r\n                                handleClickRandomGame={this.handleClickRandomGameModal}\r\n                                backButton={this.handleHomePageClick}\r\n                            />,\r\n        });\r\n    };\r\n\r\n    handleClickPuzzleRush = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            PageSelected:   <PuzzleRushDifficultyModal\r\n                                closeModal={this.closePuzzleRushLoginModal}\r\n                                show={this.state.showPuzzleRushModal}\r\n                                handleClickPuzzleRush={this.handleClickPuzzleRushModal}\r\n                                backButton={this.handleHomePageClick}\r\n                            />,\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallengeHistory = (event) => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeHistory')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    var historydata = JSON.parse(res.data)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                            PageSelected: <DailyChallengeHistory handleDailyPuzzleHistoryClick={this.handleDailyPuzzleHistoryClick} dailychallengehistory={historydata}/>,\r\n                            challengeHistoryData: historydata,\r\n                            dailychallengehistoryloaded: true,\r\n                            open: isOpen,\r\n                            loadingPage: false,\r\n                        });\r\n                    }\r\n            });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleDailyPuzzleHistoryClick = history => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <DailyChallengeHistoryAnswersPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} history={history}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty,games,p_id) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showPuzzleRushModal: false,\r\n            PageSelected: <PuzzleRushPage handleClickPlayAgain={this.handleClickPuzzleRush} handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: false\r\n        });\r\n    };\r\n\r\n    closeRandomGameLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: false\r\n        });\r\n    };\r\n\r\n    handleGameClick = (name, gamedata, highscores, uri, authorname, votes, hasVoted) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} name={name} highscores={highscores} gamedata={gamedata} uri={uri} authorname={authorname} votes={votes} hasVoted={hasVoted} signInModalOpen={this.SignInButtonPressed}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <CreateGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} state={\"new\"}/>,\r\n             open: isOpen,\r\n             loadingPage: false,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickProfile = event => {\r\n        if (window.loggedin === 'Yes') {\r\n            this.state.loadingPage = true;\r\n                    axios.get('/getProfileData')\r\n                        .then( res => {\r\n                            var isOpen = this.state.open;\r\n                            if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                                isOpen = false\r\n                            }\r\n                            var profileData = res.data;\r\n                            var gamesview = JSON.parse(profileData.gamesview)\r\n                            var solutionsview = JSON.parse(profileData.solutionsview)\r\n                            var puzzlerushview = JSON.parse(profileData.puzzlerushview)\r\n                            if (this.state.loadingPage) {\r\n                                this.setState({\r\n                                    PageSelected: <ProfilePage handleClickPlayGame={this.handleGameClick} gamesview={gamesview} solutionsview={solutionsview} puzzlerushview={puzzlerushview}/>,\r\n                                    gamesview: gamesview,\r\n                                    solutionsview: solutionsview,\r\n                                    puzzlerushview: puzzlerushview,\r\n                                    profileDataloaded: true,\r\n                                    open: isOpen,\r\n                                    loadingPage: false,\r\n                                });\r\n                            }\r\n                        });\r\n                    this.setState({\r\n                        PageSelected: <LoadingPage/>,\r\n                    });\r\n                }\r\n        else {\r\n            this.SignInButtonPressed('Sign in');\r\n        }\r\n    };\r\n\r\n    setNumFindGames = (num,filterTerm,searchTerm) => {\r\n        this.setState({\r\n            numFindGames: num,\r\n            searchTerm: searchTerm,\r\n            filterTerm: filterTerm,\r\n        })\r\n    }\r\n\r\n    setFindWindow = height => {\r\n        this.setState({\r\n            findWindowHeight: height\r\n        })\r\n    }\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.post('/search', {search: this.state.searchTerm, filter: this.state.filterTerm, offset: 0, numGames: this.state.numFindGames})\r\n            .then( res => {\r\n                const gameslist = JSON.parse(res.data.gameslist);\r\n                const highscoreslist = JSON.parse(res.data.highscoreslist);\r\n                var isOpen = this.state.open;\r\n                if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                    isOpen = false\r\n                }\r\n                if (this.state.loadingPage) {\r\n                    this.setState({\r\n                        PageSelected: <FindGame findWindowHeight={this.state.findWindowHeight} setFindWindow={this.setFindWindow} setNumFindGames={this.setNumFindGames} gameslist={gameslist} highscoreslist={highscoreslist} handleGameClick={this.handleGameClick}/>,\r\n                        open: isOpen,\r\n                        loadingPage: false,\r\n                    });\r\n                }\r\n        });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleHomePageClick = () => {\r\n        this.setState({\r\n            PageSelected: <Home handleClickDailyChallengeHistory={this.handleClickDailyChallengeHistory} handleClickProfile={this.handleClickProfile} handleClickAbout={this.handleClickAboutUs} handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickAboutUs = event => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <AboutUs/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickLearnGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <LessonsPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileAnchorEl: null,\r\n            mobileMenuOpen: false\r\n        });\r\n    };\r\n\r\n    showPage = () => {\r\n        return(\r\n            this.state.PageSelected\r\n        )\r\n    };\r\n\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({\r\n            mobileAnchorEl: event.currentTarget,\r\n            mobileMenuOpen: true\r\n        });\r\n    };\r\n\r\n    render () {\r\n        const { color, theme } = this.state;\r\n        const { classes } = this.props;\r\n        const theme2 = createMuiTheme({\r\n            palette: {\r\n                primary: teal,\r\n                secondary: {\r\n                    main: '#e65100',\r\n                },\r\n            }\r\n        });\r\n        return (<MuiThemeProvider theme={theme2}>\r\n            <ThemeProvider theme={theme}>\r\n                <Arwes animate background='/static/images/background-space.jpg' pattern='/static/images/glow-space.png'>\r\n                        <div className={classes.root}>\r\n                            <AppBar\r\n                                position=\"fixed\"\r\n                                className={clsx(classes.appBar, {\r\n                                    [classes.appBarShift]: this.state.open,\r\n                                })}\r\n                                color=\"transparent\"\r\n                             >\r\n                                <Toolbar className={classes.toolbar1}>\r\n                                    <img onClick={this.handleHomePageClick} width={50} height={50} src=\"/static/images/logo150.png\"/>\r\n                                    <Words animate layer='header'> RobotsEvolved </Words>\r\n                                    <div className={classes.grow} />\r\n                                    <div className={classes.sectionDesktop}>\r\n                                        <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                                    </div>\r\n                                    <div className={classes.sectionMobile}>\r\n                                        <IconButton\r\n                                            aria-label=\"show more\"\r\n                                            aria-controls={\"primary-search-account-menu-mobile\"}\r\n                                            aria-haspopup=\"true\"\r\n                                            onClick={this.handleMobileMenuOpen}\r\n                                            color=\"inherit\"\r\n                                        >\r\n                                            <MoreIcon />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </Toolbar>\r\n                            </AppBar>\r\n                            <Menu\r\n                                anchorEl={this.state.mobileAnchorEl}\r\n                                anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                                id={\"primary-search-account-menu-mobile\"}\r\n                                keepMounted\r\n                                transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                                open={this.state.mobileMenuOpen}\r\n                                onClose={this.handleMobileMenuClose}\r\n                            >\r\n                                <MenuItem>\r\n                                    <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                                </MenuItem>\r\n                            </Menu>\r\n                            <Drawer\r\n                                id=\"MainDrawer\"\r\n                                className={classes.drawer}\r\n                                variant=\"persistent\"\r\n                                anchor=\"left\"\r\n                                open={this.state.open}\r\n                                classes={{\r\n                                    paper: classes.drawerPaper,\r\n                                }}\r\n                            >\r\n                                <div className={classes.drawerHeader}>\r\n                                    <div className={classes.drawerHeaderLeft}>\r\n                                        <SignInButton onClick={this.SignInButtonPressed}/>\r\n                                    </div>\r\n                                    <div className={classes.drawerHeaderRight}>\r\n                                        <IconButton onClick={this.handleDrawerClose}>\r\n                                            {useTheme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </div>\r\n                                <Divider />\r\n                                <Typography\r\n                                    className={classes.dividerFullWidth}\r\n                                    color=\"textSecondary\"\r\n                                    display=\"block\"\r\n                                    variant=\"caption\"\r\n                                >\r\n                                    Play\r\n                                </Typography>\r\n                                <List>\r\n                                    <ListItem button key={'Find a Game'} onClick={this.handleClickFindGame}>\r\n                                        <ListItemIcon><SearchIcon /></ListItemIcon>\r\n                                        <ListItemText primary={'Find a Game'} />\r\n                                    </ListItem>\r\n                                    <ListItem button key={'Daily Challenge'} onClick={this.handleClickDailyChallenge}>\r\n                                        <ListItemIcon><TodayIcon /></ListItemIcon>\r\n                                        <ListItemText primary={'Daily Challenge'} />\r\n                                    </ListItem>\r\n                                    <ListItem button key={'Create a Game'} onClick={this.handleClickCreateGame}>\r\n                                        <ListItemIcon><BrushIcon /></ListItemIcon>\r\n                                        <ListItemText primary={'Create a Game'} />\r\n                                    </ListItem>\r\n                                    <ListItem button key={'Random Game'} onClick={this.handleClickRandomGame}>\r\n                                        <ListItemIcon><CasinoIcon /></ListItemIcon>\r\n                                        <ListItemText primary={'Random Game'} />\r\n                                    </ListItem>\r\n                                    <ListItem button key={'Puzzle Rush'} onClick={this.handleClickPuzzleRush}>\r\n                                        <ListItemIcon><TimerIcon /></ListItemIcon>\r\n                                        <ListItemText primary={'Puzzle Rush'} />\r\n                                    </ListItem>\r\n                                </List>\r\n                                <Divider />\r\n                                <Typography\r\n                                    className={classes.dividerFullWidth}\r\n                                    color=\"textSecondary\"\r\n                                    display=\"block\"\r\n                                    variant=\"caption\"\r\n                                >\r\n                                    Learn\r\n                                </Typography>\r\n                                <List>\r\n                                    <ListItem button key={'Lessons'} onClick={this.handleClickLearnGame}>\r\n                                        <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n                                        <ListItemText primary={'Lessons'} />\r\n                                    </ListItem>\r\n                                </List>\r\n                                <Divider />\r\n                                <Typography\r\n                                    className={classes.dividerFullWidth}\r\n                                    color=\"textSecondary\"\r\n                                    display=\"block\"\r\n                                    variant=\"caption\"\r\n                                >\r\n                                    Community\r\n                                </Typography>\r\n                                <List>\r\n                                    <ListItem button key={'Profile'} onClick={this.handleClickProfile}>\r\n                                        <ListItemIcon><AccountBoxIcon /></ListItemIcon>\r\n                                        <ListItemText primary={'Profile'} />\r\n                                    </ListItem>\r\n                                    <ListItem button key={'Daily Challenge History'} onClick={this.handleClickDailyChallengeHistory}>\r\n                                        <ListItemIcon><FaMedal /></ListItemIcon>\r\n                                        <ListItemText primary={'Daily Challenge History'} />\r\n                                    </ListItem>\r\n                                </List>\r\n                                <Divider />\r\n                                <Typography\r\n                                    className={classes.dividerFullWidth}\r\n                                    color=\"textSecondary\"\r\n                                    display=\"block\"\r\n                                    variant=\"caption\"\r\n                                >\r\n                                    Tools\r\n                                </Typography>\r\n                                <List>\r\n                                    <ListItem button key={'About'} onClick={this.handleClickAboutUs}>\r\n                                        <ListItemIcon><InfoIcon /></ListItemIcon>\r\n                                        <ListItemText primary={'About'} />\r\n                                    </ListItem>\r\n                                </List>\r\n                            </Drawer>\r\n                            <main className={clsx(classes.content, {\r\n                                [classes.contentShift]: this.state.open,\r\n                            })}>\r\n                                <div className={classes.drawerHeader} />\r\n                                {this.showPage()}\r\n                            </main>\r\n                            <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n                        </div>\r\n                        <div style={{position: \"fixed\", bottom: \"10px\", right: \"10px\"}}>\r\n                            <IconButton\r\n                                style = {{backgroundColor: \"#14a76c\"}}\r\n                                onClick={this.handleChatOpen}\r\n                            >\r\n                                <ChatIcon />\r\n                            </IconButton>\r\n                            <Popover\r\n                                open={this.state.openChat}\r\n                                anchorEl={this.state.chatAnchor}\r\n                                onClose={this.handleChatClose}\r\n                                anchorOrigin={{\r\n                                    vertical: \"top\",\r\n                                    horizontal: \"left\"\r\n                                }}\r\n                                transformOrigin={{\r\n                                    vertical: \"bottom\",\r\n                                    horizontal: \"right\"\r\n                                }}\r\n                            >\r\n                                <iframe\r\n                                    src=\"https://titanembeds.com/embed/740127738345554021?css=140&username=guest&defaultchannel=740270339900178583\"\r\n                                    height= {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? (parseInt(window.innerHeight/2)) + '': \"600\"}\r\n                                    width= {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? (window.innerWidth - 40) + '': \"400\"}\r\n                                    frameBorder=\"0\"\r\n                                />\r\n                            </Popover>\r\n                        </div>\r\n                </Arwes>\r\n            </ThemeProvider>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles2(useStyles)(MyApp);","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst stylecol = () => {\r\n    return({\r\n            float: 'left',\r\n            width: '50%',\r\n            margin: 'auto',\r\n            padding: '0 50px',\r\n            marginTop: '6px',\r\n    });\r\n}\r\n\r\nconst spacing = () => {\r\n    return({\r\n            marginBottom: '10px',\r\n    });\r\n}\r\n\r\nexport default class DailyChallengeStartModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    startDailyChallenge = () => {\r\n        this.props.startDaily();\r\n    }\r\n\r\n    render () {\r\n        return (\r\n        <Dialog onClose={this.props.closeModal}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={this.props.show}\r\n                maxWidth={\"xs\"}\r\n        >\r\n            <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>New Daily Challenge Format</DialogTitle>\r\n            <DialogContent dividers>\r\n                    <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                       • Daily Challenge timer STARTS when you click the start button\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                        • Puzzles reset at 3pm EST but you no longer have to get on at that time in order to get a highscore\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                        • Please respect the rules of the game and no incognito windows.\r\n                    </Typography>\r\n                    <br/>\r\n                <div class=\"col\">\r\n                    <a onClick={this.startDailyChallenge} href=\"#\" id={\"buttongoogle\"}><i class=\"fa fa-google fa-fw\">\r\n                      </i> START\r\n                    </a>\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.props.closeModal}>Close</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n        )\r\n    }\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  homepage: {\r\n    marginTop: '40px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  baseExpansion: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n    marginTop: \"4px\"\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    marginTop: \"4px\",\r\n    marginLeft: '10px'\r\n  },\r\n  darkmode: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      marginTop: '150px',\r\n  },\r\n  iconcards: {\r\n    width: '250px',\r\n    display: 'inline-block',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  iconcardsDaily: {\r\n    maxWidth: 345,\r\n    minWidth: 250,\r\n    float: 'left',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  titlehome: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '30px',\r\n  },\r\n  titledailyroto: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '10px',\r\n  },\r\n  iconfonts: {\r\n    fontFamily: \"'Arvo', serif\",\r\n  },\r\n  createboardcard: {\r\n    ':hover': {\r\n        content: '/static/images/CreateBoardCardIconPlaced.png',\r\n    }\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  centeredProfile: {\r\n    marginTop: '20px',\r\n    display: 'inline-block',\r\n  },\r\n  expandedPanelDCH: {\r\n    background: 'linear-gradient(70deg, #fff810  30%, rgba(0,0,0,0) 30%), linear-gradient(30deg, #63e89e 60%, #ff7ee3 60%)'\r\n  },\r\n  table: {\r\n    width: '33%'\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const MOBILE_INNER_SCREEN_WIDTH = '960';\r\n\r\nexport const SQUARE_CORE_COLOR = '#d8dbd0';\r\nexport const SQUARE_INNER_COLOR = '#d8dbd0';\r\nexport const SQUARE_OUTSIDE_COLOR = '#acada8';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const COLORED_GOAL_IMAGE = '/static/images/targetbullseye.png';\r\nexport const COLORED_SWITCHPAD_IMAGE = '/static/images/lever.png'\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n    TableContainer,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell, TableBody\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../Material-UI/themes\";\r\nimport {FaCrown} from \"react-icons/fa\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function Leaderboard(props) {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [puzzleRushTabValue, setPuzzleRushTabValue] = React.useState(0);\r\n    const [puzzleRushDifficultyValue, setPuzzleRushDifficultyValue] = React.useState(\"easy\");\r\n    const [puzzleRushDifficultyLabel, setPuzzleRushDifficultyLabel] = React.useState(\"Easy\");\r\n    const [puzzleRushCurrentScoreList, setPuzzleRushCurrentScoreList] = React.useState(props.puzzle_rush_leaderboard.easyrandomscore);\r\n    const [puzzleRushCurrentUserList, setPuzzleRushCurrentUserList] = React.useState(props.puzzle_rush_leaderboard.easyrandomusername);\r\n\r\n    const handlePuzzleRushTabChange = (event, newValue) => {\r\n        setPuzzleRushTabValue(newValue);\r\n    };\r\n\r\n    const handlePuzzleRushDifficultyChange = (value, label) => {\r\n        setPuzzleRushDifficultyValue(value)\r\n        setPuzzleRushDifficultyLabel(label)\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        updatePuzzleRushList()\r\n    }, [puzzleRushTabValue, puzzleRushDifficultyValue])\r\n\r\n    const updatePuzzleRushList = () => {\r\n        if (puzzleRushTabValue === 0) {\r\n            if (puzzleRushDifficultyValue === \"easy\") {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.easyrandomscore)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.easyrandomusername)\r\n            } else if (puzzleRushDifficultyValue === \"medium\") {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.mediumrandomscore)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.mediumrandomusername)\r\n            } else if (puzzleRushDifficultyValue === \"hard\") {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.hardrandomscore)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.hardrandomusername)\r\n            } else {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.exhardrandomscore)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.exhardrandomusername)\r\n            }\r\n        } else if (puzzleRushTabValue === 1) {\r\n            if (puzzleRushDifficultyValue === \"easy\") {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.easyclassicscore)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.easyclassicusername)\r\n            } else if (puzzleRushDifficultyValue === \"medium\") {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.mediumclassicscore)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.mediumclassicusername)\r\n            } else if (puzzleRushDifficultyValue === \"hard\") {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.hardclassicscore)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.hardclassicusername)\r\n            } else {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.exhardclassicscore)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.exhardclassicusername)\r\n            }\r\n        } else {\r\n            if (puzzleRushDifficultyValue === \"easy\") {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.easyclassicv2score)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.easyclassicv2username)\r\n            } else if (puzzleRushDifficultyValue === \"medium\") {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.mediumclassicv2score)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.mediumclassicv2username)\r\n            } else if (puzzleRushDifficultyValue === \"hard\") {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.hardclassicv2score)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.hardclassicv2username)\r\n            } else {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.exhardclassicv2score)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.exhardclassicv2username)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={gamepanel()}>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                    <Typography className={classes.titlehome} variant=\"h3\">Leaderboards</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={4}>\r\n                    <Typography className={classes.titledailyroto} variant=\"h5\">Find Game</Typography>\r\n                    <TableContainer component={Paper}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Rank</TableCell>\r\n                                    <TableCell>User</TableCell>\r\n                                    <TableCell align={\"right\"}>Crowns</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    props.findGame_leaderboard.map((entry,index) =>\r\n                                        <TableRow>\r\n                                            <TableCell>{index + 1}</TableCell>\r\n                                            <TableCell>{entry.username}</TableCell>\r\n                                            <TableCell align={\"right\"}>{entry.Crowns} <FaCrown/></TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={4}>\r\n                    <Typography className={classes.titledailyroto} variant=\"h5\">Daily Challenge</Typography>\r\n                    <TableContainer component={Paper}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Rank</TableCell>\r\n                                    <TableCell>User</TableCell>\r\n                                    <TableCell align={\"right\"}>Crowns</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    props.dailyChallenge_leaderboard.map((entry,index) =>\r\n                                        <TableRow>\r\n                                            <TableCell>{index + 1}</TableCell>\r\n                                            <TableCell>{entry.username}</TableCell>\r\n                                            <TableCell align={\"right\"}>{entry.Crowns} <FaCrown/></TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={4}>\r\n                    <div style={{width: \"100%\", display: \"inline-flex\"}}>\r\n                        <Typography style={{flexGrow: 1}} className={classes.titledailyroto} variant=\"h5\">Puzzle Rush</Typography>\r\n                        <Button\r\n                            onClick={(event) => setAnchorEl(event.currentTarget)}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            style={{height: \"20%\"}}\r\n                        >\r\n                            {puzzleRushDifficultyLabel}\r\n                        </Button>\r\n                        <Menu\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={() => setAnchorEl(null)}\r\n                            getContentAnchorEl={null}\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'center',\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'center',\r\n                            }}\r\n                        >\r\n                            <MenuItem onClick={() => handlePuzzleRushDifficultyChange(\"easy\", \"Easy\")}>Easy</MenuItem>\r\n                            <MenuItem onClick={() => handlePuzzleRushDifficultyChange(\"medium\", \"Medium\")}>Medium</MenuItem>\r\n                            <MenuItem onClick={() => handlePuzzleRushDifficultyChange(\"hard\", \"Hard\")}>Hard</MenuItem>\r\n                            <MenuItem onClick={() => handlePuzzleRushDifficultyChange(\"extra_hard\", \"Extra Hard\")}>Extra Hard</MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n                    <Paper style={{borderBottomLeftRadius: 0, borderBottomRightRadius: 0}}>\r\n                        <Tabs\r\n                            value={puzzleRushTabValue}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={handlePuzzleRushTabChange}\r\n                            aria-label=\"disabled tabs example\"\r\n                            variant={\"fullWidth\"}\r\n                        >\r\n                            <Tab label=\"Random\" />\r\n                            <Tab label=\"Classic\"/>\r\n                            <Tab label=\"Classic V2\" />\r\n                        </Tabs>\r\n                    </Paper>\r\n                    <TableContainer component={Paper} style={{borderTopLeftRadius: 0, borderTopRightRadius: 0}}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Rank</TableCell>\r\n                                    <TableCell>User</TableCell>\r\n                                    <TableCell align={\"right\"}>Score</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    puzzleRushCurrentUserList.map((userName,index) =>\r\n                                        <TableRow>\r\n                                            <TableCell>{index + 1}</TableCell>\r\n                                            <TableCell>{userName}</TableCell>\r\n                                            <TableCell align={\"right\"}>{puzzleRushCurrentScoreList[index]}</TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function WeeklyGameItems(props) {\r\n    const handleClick = () => {\r\n        props.handleClickGame(props.index)\r\n    }\r\n    const numMoves = props.moveHistoryList[props.index] == undefined ? 0 : props.moveHistoryList[props.index].length;\r\n    if (props.selected === props.index) {\r\n        return props.game.g_moves == numMoves ?\r\n             (\r\n            <Button\r\n                variant=\"contained\" color=\"secondary\"\r\n                aria-label=\"vertical outlined primary button group\"\r\n                onClick={handleClick}\r\n            >\r\n                {'Solved in minimum moves!'}\r\n            </Button>\r\n            )\r\n            :\r\n            (\r\n                <Button\r\n                    variant=\"contained\" color=\"secondary\"\r\n                    aria-label=\"vertical outlined primary button group\"\r\n                    onClick={handleClick}\r\n                >\r\n                    {numMoves + ' Moves'}\r\n                </Button>\r\n            )\r\n    }\r\n    else {\r\n        return props.game.g_moves == numMoves ?\r\n             (\r\n            <Button\r\n                variant=\"contained\" color=\"primary\"\r\n                aria-label=\"vertical outlined primary button group\"\r\n                onClick={handleClick}\r\n            >\r\n                {'Solved in minimum moves!'}\r\n            </Button>\r\n            )\r\n            :\r\n            (\r\n                <Button\r\n                    variant=\"contained\"\r\n                    aria-label=\"vertical outlined primary button group\"\r\n                    onClick={handleClick}\r\n                >\r\n                    {numMoves + ' Moves'}\r\n                </Button>\r\n            )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,COLORED_SWITCHPAD_IMAGE,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE,ROBOT_GREEN,ROBOT_BLUE,ROBOT_RED,ROBOT_YELLOW,COLORED_GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none',\r\n        backgroundColor: color,\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none',\r\n        backgroundColor: color\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.position == null) {\r\n        return null\r\n    }\r\n    return(<img src={COLORED_SWITCHPAD_IMAGE} style={style(props)}/>)\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass DailyMovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    resetToBest = () => {\r\n        this.props.resetToBest(this.props.moveHistory,this.props.playerState)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.moveHistory.length == 0 ?\r\n            <div style={style()}>\r\n                <Typography>Personal Best</Typography>\r\n                <Divider />\r\n                <Typography>None</Typography>\r\n            </div> :\r\n            <div style={style()}>\r\n                <Typography>Personal Best</Typography>\r\n                <Divider />\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n                <Divider />\r\n                <Button color=\"secondary\" onClick={this.resetToBest}>Reset to best</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyMovesView;","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function CreateBoardGoalSelector(props) {\r\n  const [wildchecked, setWildChecked] = React.useState(true);\r\n  const handleWildCardClick = () => {\r\n    props.handleWildCardClick();\r\n    setWildChecked(wildchecked ? false : true);\r\n  }\r\n\r\n  const handleBlueClick = () => {\r\n    props.handleColoredClick('blue');\r\n  }\r\n  const handleGreenClick = () => {\r\n    props.handleColoredClick('green');\r\n  }\r\n  const handleRedClick = () => {\r\n    props.handleColoredClick('red');\r\n  }\r\n  const handleYellowClick = () => {\r\n    props.handleColoredClick('yellow');\r\n  }\r\n  return (\r\n  <Paper>\r\n    <FormControl style={{backgroundColor: 'white', textAlign: 'center'}} component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Goal Selector</FormLabel>\r\n      <FormGroup aria-label=\"position\" row>\r\n        <FormControlLabel\r\n          value=\"Wildcard\"\r\n          control={<Checkbox onClick={handleWildCardClick} checked={wildchecked} color=\"primary\" />}\r\n          label=\"wildcard\"\r\n          labelPlacement=\"top\"\r\n          disabled={!props.buildMode}\r\n        />\r\n        <FormControlLabel\r\n          value=\"Blue\"\r\n          control={<Checkbox onClick={handleBlueClick} color=\"primary\" />}\r\n          label=\"blue\"\r\n          labelPlacement=\"top\"\r\n          disabled={!props.buildMode}\r\n        />\r\n        <FormControlLabel\r\n          value=\"Green\"\r\n          control={<Checkbox onClick={handleGreenClick} color=\"primary\" />}\r\n          label=\"green\"\r\n          labelPlacement=\"top\"\r\n          disabled={!props.buildMode}\r\n        />\r\n        <FormControlLabel\r\n          value=\"Red\"\r\n          control={<Checkbox onClick={handleRedClick} color=\"primary\" />}\r\n          label=\"red\"\r\n          labelPlacement=\"top\"\r\n          disabled={!props.buildMode}\r\n        />\r\n        <FormControlLabel\r\n          value=\"Yellow\"\r\n          control={<Checkbox onClick={handleYellowClick} color=\"primary\" />}\r\n          label=\"yellow\"\r\n          labelPlacement=\"top\"\r\n          disabled={!props.buildMode}\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function LearnGameItems(props) {\r\n    const handleClick = () => {\r\n        props.handleClickGame(props.index)\r\n    }\r\n    if (props.selected === props.index) {\r\n        return (\r\n            <Button\r\n                variant=\"contained\" color=\"primary\"\r\n                aria-label=\"vertical outlined primary button group\"\r\n                onClick={handleClick}\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={handleClick}\r\n                aria-label=\"vertical outlined primary button group\"\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><Typography variant={\"h6\"}>Moves: {this.props.moveHistory.length}</Typography>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;\r\n","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div id=\"MainGameBoard\" style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleoutsidedraggable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var boxShadow = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        boxShadow = '0 0 0 3pt ' + SELECTED_ROBOT;\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        boxShadow: boxShadow,\r\n        backgroundSize: dim,\r\n        backgroundImage: \"url(\" + \"/static/images/astronaut.png\" + \")\",\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    onStopDragHandler = (e, position) => {\r\n        this.props.onStopDragHandler(position,this.props.index,this.props.position);\r\n    }\r\n\r\n\r\n    handleCreateMode = () => {\r\n        if (this.props.isCreateMode === 'Yes' && this.props.buildMode) {\r\n            return (\r\n            <Draggable position={{x: this.props.position.left * this.props.dimension, y:this.props.position.top*this.props.dimension}} grid={this.props.draggableGrid} onStop={this.onStopDragHandler} bounds=\"parent\">\r\n                <div onClick={this.handleClick} style={styleoutsidedraggable(this.props)}>\r\n                    <div style={styleinside(this.props)}>\r\n                        <div style={styleinside2(this.props)}/>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            this.handleCreateMode()\r\n        );\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick, wallType,coloredSwitches}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    var backgroundColor = 'black'\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    if (wallType != undefined) {\r\n        var redOpac = 1;\r\n        var blueOpac = 1;\r\n        var greenOpac = 1;\r\n        var yellowOpac = 1;\r\n        coloredSwitches.map(switches => {\r\n            if (switches.colorSignifier === 'red') {\r\n                redOpac = switches.isOn ? 1 : .5;\r\n            }\r\n            if (switches.colorSignifier === 'blue') {\r\n                blueOpac = switches.isOn ? 1 : .5;\r\n            }\r\n            if (switches.colorSignifier === 'green') {\r\n                greenOpac = switches.isOn ? 1 : .5;\r\n            }\r\n            if (switches.colorSignifier === 'yellow') {\r\n                yellowOpac = switches.isOn ? 1 : .5;\r\n            }\r\n        });\r\n        if (wallType == 'redPass') {\r\n            opacity = redOpac;\r\n            backgroundColor = 'red';\r\n        } else if (wallType == 'bluePass') {\r\n            opacity = blueOpac;\r\n            backgroundColor = 'blue';\r\n        } else if (wallType == 'greenPass') {\r\n            opacity = greenOpac;\r\n            backgroundColor = 'green';\r\n        } else if (wallType == 'yellowPass') {\r\n            opacity = yellowOpac\r\n            backgroundColor = 'orange'\r\n        }\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: backgroundColor,\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE,ROBOT_GREEN,ROBOT_BLUE,ROBOT_RED,ROBOT_YELLOW,COLORED_GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none',\r\n        backgroundColor: color,\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none',\r\n        backgroundColor: color\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.position == null) {\r\n        return null\r\n    }\r\n    if (props.isCreateMode === 'Yes'  && props.buildMode) {\r\n        const onStopDragHandler = (e, position) => {\r\n            props.onStopDragHandler(position,props.color);\r\n        }\r\n        if (props.color == undefined) {\r\n            return(\r\n            <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n                <img src={GOAL_IMAGE} style={styledragable(props)}/>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n                <img src={COLORED_GOAL_IMAGE} style={styledragable(props)}/>\r\n            </Draggable>\r\n            )\r\n        }\r\n    }\r\n    else {\r\n        if (props.color == undefined) {\r\n            return(<img src={GOAL_IMAGE} style={style(props)}/>)\r\n        }\r\n        else {\r\n            return(<img src={COLORED_GOAL_IMAGE} style={style(props)}/>)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({buildMode,show,dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension + dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension + dimension;\r\n            left = position.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        opacity: show ? '0.5' : '0.0',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default (props) => {\r\n    const handleClick = () => {\r\n        props.handleClick(props.dir)\r\n    }\r\n    if (props.buildMode === 'undefined' || !props.buildMode)\r\n    {\r\n        return (\r\n            <div onClick={handleClick} style={style(props)}/>\r\n        );\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LearnGameItems from '../components/LearnGameItems';\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailySingleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Completed!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <Typography variant=\"body1\">\r\n                        You used {this.props.numMoves} Moves, for this puzzle.\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Total Moves: {this.props.totalMoves}\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Finish all puzzles to get submit your score!\r\n                    </Typography>\r\n                    <br/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailySingleModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailyFinalModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null\r\n        }\r\n    }\r\n\r\n    handleClickSubmitGame = () => {\r\n        if (document.getElementById(\"namesubmitHS\").value == '') {\r\n            this.setState({\r\n                error: <Alert severity=\"error\">You must choose a submit name</Alert>\r\n            })\r\n        }\r\n        else {\r\n            this.props.submitAnswer(this.props.newPlayerState);\r\n            this.setState({\r\n                error: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Completed the Challenge!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                    {this.state.error}\r\n                    {this.props.submitted}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    {this.props.submitted == null ? <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickSubmitGame}>Submit Highscore</Button> : null}\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailyFinalModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinWeeklyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null\r\n        }\r\n    }\r\n\r\n    handleClickSubmitGame = () => {\r\n        if (document.getElementById(\"namesubmitHS\").value == '') {\r\n            this.setState({\r\n                error: <Alert severity=\"error\">You must choose a submit name</Alert>\r\n            })\r\n        }\r\n        else {\r\n            this.props.submitAnswer(this.props.newPlayerState);\r\n            this.setState({\r\n                error: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var buttontext = this.props.numMoves > 100 ? 'Show Progress' : 'Submit Highscore';\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You got all the puzzles!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                        <br/>\r\n                        {this.props.numMoves == 100 ? 'you receive a crown!' : 'Get total moves to 100 to receive a crown!'}\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                    {this.state.error}\r\n                    {this.props.submitted}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    {this.props.submitted == null ? <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickSubmitGame}>{buttontext}</Button> : null}\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinWeeklyModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    campaignPuzzle = () => {\r\n        if (window.loggedin === 'Yes') {\r\n            if (window.userInfo.userID == 2 || window.userInfo.userID == 3 || window.userInfo.userID == 7 || window.userInfo.userID == 4) {\r\n                return <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzleCampaign}>Campaign Puzzle</Button>\r\n            }\r\n            else {\r\n                return null\r\n            }\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Submit Puzzle</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField id={\"namesubmit\"} label={\"Name of Puzzle\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                    {this.campaignPuzzle()}\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleModal;\r\n","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Path Indicators\"\r\n                    checked={this.props.showColoredLineDirections}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n\r\n    state = {\r\n            minutes: 5,\r\n            seconds: 0,\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.puzzleRushTimeUp();\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    timer = () => {\r\n        if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n            return (<h2>Time is up!</h2>)\r\n        }\r\n        else {\r\n            return(\r\n                <h2>Time Remaining: {this.state.minutes}:{this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds}</h2>)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            this.timer()\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ToggleSettings from \"../components/ToggleSettings\";\r\nimport Timer from \"../components/Timer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                        copyButtonText: \"Copy Puzzle Link\"\r\n                     };\r\n        this.state.uri = this.props.isDailyChallenge === 'Yes' ? 'dailychallenge' : this.props.uri;\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <div>\r\n                    <Button color=\"secondary\" variant={\"outlined\"} fullWidth={true} onClick={this.handleCreateBoardClick}>Modify Board</Button>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Switch color=\"primary\" checked={this.props.buildMode} onChange={this.props.toggleBuildMode}/>}\r\n                        label=\"Build Mode\"\r\n                            />\r\n                </div>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.state.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        document.getElementsByClassName(\"MuiSlider-thumb\")[0].blur();\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n    showPuzzleLink = () => {\r\n        if (this.props.createMode === 'Yes' || this.props.isPuzzleRush === 'Yes' || this.props.isLesson === 'Yes' || this.props.isDailyChallengeAnswers === 'Yes' || this.props.isDailyChallenge === 'Yes' || this.props.isWeeklyChallenge === 'Yes') {\r\n            return null;\r\n        }\r\n        else {\r\n                return(\r\n                     <div style={{paddingBottom: '10px'}}>\r\n                         <Button fullWidth={true} variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                                 onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                     </div>\r\n                    )\r\n        }\r\n    }\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                {this.showPuzzleLink()}\r\n                 <Divider />\r\n                 <Typography\r\n                     color=\"textSecondary\"\r\n                     display=\"block\"\r\n                     variant=\"caption\"\r\n                     style={{paddingBottom: '10px'}}\r\n                 >\r\n                     Board Actions\r\n                 </Typography>\r\n                 <ButtonGroup fullWidth={true} color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     <Button onClick={this.props.undoMove}>Undo</Button>\r\n                 </ButtonGroup>\r\n                 {this.isCreateMode(this.props.createMode)}\r\n                 <Divider />\r\n                 <ToggleSettings showColoredLineDirections={this.props.showColoredLineDirections} onClick={this.props.toggleLineIndicators}/>\r\n                 <div style={buttonPanel()}>\r\n                     <Typography id=\"discrete-slider-small-steps\"\r\n                                 color=\"textSecondary\"\r\n                                 display=\"inline\"\r\n                                 gutterBottom>\r\n                         Size Of Board\r\n                     </Typography>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={this.props.squareSizeValue}\r\n                         valueLabelDisplay=\"auto\"\r\n                         id=\"sliderelement\"\r\n                     />\r\n                 </div>\r\n                 <Divider/>\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { GoVerified } from \"react-icons/go\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginTop: '30px',\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (<Grid item xs={12}>\r\n                <Paper elevation={3}>\r\n                    <Grid container spacing={0} xs={12}>\r\n                        <Grid item container spacing={0} xs={8}>\r\n                            <Grid item xs={12}>\r\n                                <div style={{display: \"flex\", marginLeft: 1}}>\r\n                                    <Typography noWrap color={'primary'} style={{float: 'left'}}>\r\n                                        {highscore.comment ? highscore.comment : highscore.name}\r\n                                    </Typography>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Typography style={{marginLeft: 2, marginTop: 9}}  color={'textSecondary'}>{highscore.numMoves ? highscore.numMoves : highscore.score}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <Typography style={{marginTop: 12}} color={'secondary'} variant={'body2'}>{highscore.created ? highscore.created : (highscore.submitted ? highscore.submitted : \"\") }</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={4} container spacing={1}>\r\n                            {highscore.user_id !== 1 ? <Grid item xs={12}><div style={{float: 'right'}}><GoVerified/></div></Grid> : null}\r\n                            {(highscore.daily_crowns !== null && highscore.daily_crowns !== 0) || (highscore.weekly_crowns !== null && highscore.weekly_crowns !== 0) ?\r\n                                <Grid item xs={12}>\r\n                                    <div style={{float: \"right\", justifyContent: \"space-between\", marginBottom: 1}}>\r\n                                        {highscore.daily_crowns !== null && highscore.daily_crowns !== 0 ?\r\n                                            <Tooltip title=\"Daily Challenge Crowns\">\r\n                                                <Badge\r\n                                                    color={\"primary\"}\r\n                                                    style={{marginRight: highscore.weekly_crowns !== null && highscore.weekly_crowns !== 0 ? 18 : 8}}\r\n                                                    badgeContent={highscore.daily_crowns}\r\n                                                    max={999}>\r\n                                                    <FaCrown size={20} />\r\n                                                </Badge>\r\n                                            </Tooltip>\r\n                                            : null\r\n                                        }\r\n                                        {highscore.weekly_crowns !== null && highscore.weekly_crowns !== 0 ?\r\n                                            <Tooltip title=\"Weekly 100 Crowns\">\r\n                                                <Badge color={\"secondary\"} style={{marginRight: 8}} badgeContent={highscore.weekly_crowns} max={999}><FaCrown size={20}/></Badge>\r\n                                            </Tooltip>\r\n                                            : null\r\n                                        }\r\n                                    </div>\r\n                                </Grid> : null\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid style={styleouter()} container spacing={1}>\r\n        {\r\n                highscores.map(highscore =>\r\n                    highscorestyle(highscore)\r\n                )\r\n        }\r\n    </Grid>\r\n)\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nclass PuzzleRushWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Puzzle Rush - {this.props.difficulty}</DialogTitle>\r\n                <DialogContent dividers>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"h6\">\r\n                            Statistics\r\n                          </Typography>\r\n                          <div>\r\n                            <List dense={true}>\r\n\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Number of Puzzles Completed\"\r\n                                    secondary={this.props.numPuzzlesCompleted}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average time Per Puzzle\"\r\n                                    secondary={this.props.averageTime}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average Moves per Puzzle\"\r\n                                    secondary={this.props.averageMoves}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Efficiency Score: puzzles * 7 - redundant moves from best\"\r\n                                    secondary={(this.props.numPuzzlesCompleted * 7) - this.props.differenceOptimal}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Moves Per Second\"\r\n                                    secondary={this.props.movesPerSecond}\r\n                                  />\r\n                                </ListItem>\r\n                            </List>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.handleClickPlayAgain}>Play Again!</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushWinModal;\r\n\r\n","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../../constants/constants';\r\n\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass RandomGameStatsModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answers: null,\r\n        }\r\n    }\r\n\r\n    showStatsModal = () => {\r\n        this.props.handleShowRandomAnswers()\r\n        this.setState({\r\n            answers: this.props.lowestMoveSequence\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-random\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        lowest possible moves: {this.props.lowestMoves}\r\n                    </div>\r\n                    {this.state.answers}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.showStatsModal}>Show Puzzle Answers</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomGameStatsModal;","import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nexport default function CloseIconWithOnClick(props) {\r\n    const handleClose = () => {\r\n        props.handleClose(props.index);\r\n    }\r\n    return (<CloseIcon onMouseDown={handleClose}/>\r\n    )\r\n}","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport CloseIconWithOnClick from './CloseIconWithOnClick'\r\n\r\nexport default function Descriptionlist(props) {\r\n    return(\r\n            <List>\r\n              {\r\n                  props.tipsText.map((text,index) =>\r\n                    <ListItem>\r\n                      <div>\r\n                        {text}\r\n                      </div>\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                          <CloseIconWithOnClick index={index} handleClose={props.handleCloseToolTips}/>\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  )\r\n              }\r\n            </List>\r\n    )\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinLessonModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <Typography> You completed the Lesson! Move on to the next one!\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinLessonModal;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: '0 10px'\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 25,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function ShowDailyChallengeScoresCard(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {props.name}\r\n        </Typography>\r\n        <Typography style={{marginBottom: '30px'}} variant=\"h5\" component=\"h2\">\r\n          {props.bestScore}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.MovesforPuzzle}\r\n          <br/>\r\n          {props.MoveSequence}\r\n          <br />\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport MovesView from '../components/MovesView';\r\nimport ShowDailyChallengeScoreCard from '../components/ShowDailyChallengeScoresCard'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst stylebelow = () => {\r\n    return {\r\n        marginTop: '40px',\r\n        marginBottom: '20px'\r\n    }\r\n}\r\n\r\nclass DailyChallengeHistoryData extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography style={stylebelow()} variant=\"h4\"> {this.props.difficultyforPuzzle} </Typography>\r\n                <ShowDailyChallengeScoreCard\r\n                    name={\"Robot God\"}\r\n                    bestScore={this.props.bestScore}\r\n                    MovesforPuzzle={this.props.lowestMovesforPuzzle}\r\n                    MoveSequence={this.props.lowestMoveSequence}\r\n                />\r\n                <ShowDailyChallengeScoreCard\r\n                    name={this.props.nameSubmitted}\r\n                    bestScore={this.props.scoreSubmitted}\r\n                    MovesforPuzzle={null}\r\n                    MoveSequence={<MovesView\r\n                                        moveHistory={this.props.playerMovedSequence} playerState={[{colorSignifier: \"blue\"},{colorSignifier: \"green\"},{colorSignifier: \"red\"},{colorSignifier: \"yellow\"}]}\r\n                                  />}\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyChallengeHistoryData;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent,type) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    if (type === 'blank') {\r\n        var goal = {top: height-1, left: width-1};\r\n        var randompos1 = {top: 0,left: 0, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n        var randompos2 = {top: 0,left: 1, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n        var randompos3 = {top: 1,left: 0, color: ROBOT_RED, colorSignifier: 'red'};\r\n        var randompos4 = {top: 1,left: 1, color: ROBOT_YELLOW, colorSignifier:'yellow'};\r\n    }\r\n    else {\r\n        var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n        var randomPositions = [goal];\r\n        for (var i=0;i<5;i++) {\r\n            randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n        }\r\n        var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n        var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n        var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n        var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    }\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport WeeklyGameItems from '../components/WeeklyGameItems'\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport SwitchPad from '../components/SwitchPad'\r\nimport DailyMovesView from '../components/DailyMovesView';\r\nimport CreateBoardGoalSelector from '../components/CreateBoardGoalSelector';\r\nimport FlashMessage from 'react-flash-message'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {withRouter} from 'react-router';\r\nimport LearnGameItems from '../components/LearnGameItems';\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport YouWinDailySingleModal from '../components/YouWinDailySingleModal';\r\nimport YouWinDailyFinalModal from '../components/YouWinDailyFinalModal';\r\nimport YouWinWeeklyModal from '../components/YouWinWeeklyModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport PuzzleRushWinModal from '../containers/Modals/PuzzleRushFinishedModal';\r\nimport RandomGameStatsModal from '../containers/Modals/RandomGameStatsModal';\r\nimport DescriptionList from '../components/DescriptionList';\r\nimport YouWinLessonModal from '../components/YouWinLessonModal';\r\nimport DailyChallengeHistoryData from '../components/DailyChallengeHistoryData';\r\nimport Timer from \"../components/Timer\";\r\nimport {useStopwatch} from 'react-timer-hook';\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR,\r\n    MOBILE_INNER_SCREEN_WIDTH\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nfunction MyStopwatch(props) {\r\n       var stopwatchOffset = new Date();\r\n       stopwatchOffset.setSeconds(stopwatchOffset.getSeconds() + props.seconds_add + props.minutes_add*60);\r\n      const {\r\n        seconds,\r\n        minutes,\r\n        hours,\r\n        days,\r\n        isRunning,\r\n        start,\r\n        pause,\r\n        reset,\r\n      } = useStopwatch({ offsetTimestamp: stopwatchOffset, autoStart: true });\r\n    let displaySeconds = seconds + \"\";\r\n    if (seconds < 10)\r\n          displaySeconds = \"0\" + seconds\r\n    let displayMinutes = minutes + \"\";\r\n    if (minutes < 10)\r\n          displayMinutes = \"0\" + minutes\r\n    let displayHours = hours + \"\";\r\n    if (hours < 10)\r\n          displayHours = \"0\" + hours\r\n    const display = displayHours + \":\" + displayMinutes + \":\" + displaySeconds\r\n    return (\r\n        <div style={{width: \"100%\", display: \"inline-flex\"}}>\r\n            <div style={{flex: 1}}/>\r\n            <Chip\r\n                label={<Typography variant={\"h4\"}>{displayHours}:{displayMinutes}:{displaySeconds}</Typography>}\r\n                color=\"secondary\"\r\n                variant={\"outlined\"}\r\n            />\r\n                {/*<Typography variant={\"h4\"}>{displayHours}:{displayMinutes}:{displaySeconds}</Typography>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if(e.keyCode == 32 && e.target == document.body) {\r\n    e.preventDefault();\r\n  }\r\n    if([37, 38, 39, 40, 9,13].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '80px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n    }\r\n}\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\nconst formatGeneratedMoveSequence = (moves) => {\r\n    var images = []\r\n    moves.map(move => {\r\n        var color = move.charAt(0);\r\n        var direction = move.charAt(1);\r\n        if (color == 'B') {\r\n            color = 'blue'\r\n        }\r\n        else if (color == 'R') {\r\n            color = 'red'\r\n        }\r\n        else if (color == 'Y') {\r\n            color = 'yellow'\r\n        }\r\n        else {\r\n            color = 'green'\r\n        }\r\n        if (direction == 'N') {\r\n            direction = UP\r\n        }\r\n        else if (direction == 'S') {\r\n            direction = DOWN\r\n        }\r\n        else if (direction == 'E') {\r\n            direction = RIGHT\r\n        }\r\n        else {\r\n            direction = LEFT\r\n        }\r\n        images.push(<img src={DIRECTION_MAP_IMAGES[color][direction]}/>)\r\n    });\r\n    return images\r\n}\r\n\r\n\r\nconst setDefaultSquareSize = (boardWidth,boardHeight) => {\r\n    const drawerWidth = document.getElementById(\"MainDrawer\") == null ? 140 : parseInt(getComputedStyle(document.getElementById(\"MainDrawer\")).width);\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n    var settingstop = windowHeight - 120;\r\n\r\n    settingstop = settingstop / boardHeight\r\n    settingstop = parseInt(settingstop);\r\n    settingstop = settingstop - (settingstop % 4)\r\n\r\n    var settings = ((windowWidth < MOBILE_INNER_SCREEN_WIDTH) ? windowWidth - 20 : (windowWidth - drawerWidth) / 1.75);\r\n    settings = settings / boardWidth;\r\n    settings = parseInt(settings);\r\n    settings = settings - (settings % 4);\r\n    var squarevalue = settings > settingstop ? settingstop : settings\r\n    if (squarevalue < 16) {\r\n        squarevalue = 16;\r\n    }\r\n    else if (squarevalue > 52) {\r\n        squarevalue = 52;\r\n    }\r\n    return squarevalue;\r\n};\r\n\r\nconst ColoredLineDirections = [LEFT,RIGHT,UP,DOWN]\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.puzzleRush === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.p_id = this.props.p_id;\r\n            this.state.isEvolution = false\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.coloredSwitches = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = []\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.coloredSwitches = [];\r\n            this.state.isEvolution = false\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            this.state.moveHistoryList=[];\r\n\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[0].g_solutiondata))\r\n            this.state.lowestMovesforPuzzle = this.props.games[0].g_moves\r\n            this.state.difficultyforPuzzle = this.props.games[0].g_difficulty\r\n            this.state.playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[0]\r\n\r\n            this.state.playerStateList = [];\r\n            this.state.tipsText = [];\r\n            this.state.highscores = [];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.weeklyChallengeMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.dailyDayName = 'Weekly 100';\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.coloredSwitches = [];\r\n            this.state.isEvolution = false\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonWeekly = [false,false,false,false,false];\r\n            if (this.props.savedMoves != null) {\r\n                this.state.moveHistoryList = this.props.savedMoves;\r\n                this.state.gamesWonWeekly = this.props.gamesWon;\r\n                this.state.moveHistory = this.props.savedMoves[0].slice()\r\n                this.state.playerState = this.props.playerStateList[0].slice()\r\n            }\r\n            else {\r\n                this.state.moveHistoryList=[];\r\n            }\r\n            this.state.playerStateList = this.props.playerStateList != null ? this.props.playerStateList : [];\r\n            this.state.tipsText = ['All users with 100 moves get a crown!','Moves are saved','puzzle button turns GREEN when solved with least moves'];\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.wc_id = this.props.wc_id;\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.dailyDayName = this.props.games[0].g_name\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.isEvolution = false\r\n            this.state.coloredSwitches = [];\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.daily_start_timer_seconds = this.props.daily_start_timer_seconds\r\n            this.state.daily_start_timer_minutes = this.props.daily_start_timer_minutes\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            if (this.props.savedMoves != null) {\r\n                this.state.moveHistoryList = this.props.savedMoves\r\n                this.state.gamesWonDaily = [true,true,true,true]\r\n                this.state.moveHistory = this.props.savedMoves[0].slice()\r\n                this.state.playerState = this.props.playerStateList[0].slice()\r\n            }\r\n            else {\r\n                this.state.moveHistoryList=[];\r\n            }\r\n            this.state.playerStateList = this.props.playerStateList != null ? this.props.playerStateList : [];\r\n            this.state.tipsText = ['Puzzles reset at 3PM EST'];\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.dc_id = this.props.dc_id;\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.game.g_puzzledata)\r\n            if (this.props.game.g_moves != 1) {\r\n                this.state.lowestMoves = this.props.game.g_moves\r\n                this.state.isEvolution = false\r\n                this.state.coloredSwitches = [];\r\n                this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.game.g_solutiondata))\r\n            }\r\n            else {\r\n                this.state.lowestMoves = \"I havent created a solver for this yet\"\r\n                this.state.lowestMoveSequence = null\r\n                this.state.isEvolution = true\r\n            }\r\n            this.state.difficulty = this.props.game.g_difficulty\r\n            this.state.createMode = 'No';\r\n            this.state.gameWon = false;\r\n            this.state.buildMode = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = ['this game was randomly generated'];\r\n            this.state.uri = this.props.game.g_uri;\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n            window.history.pushState({id: 'Random Game'},'RobotsEvolved | Random Game','/play/' + this.props.game.g_uri)\r\n        }\r\n        else if (this.props.learnMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.coloredSwitches = [];\r\n            this.state.createMode = 'No';\r\n            this.state.isEvolution = false\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [this.props.games[0].description];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.uri = this.props.uri;\r\n            this.state.votes = this.props.votes\r\n            this.state.hasVoted = this.props.hasVoted\r\n            this.state.gameWon = false;\r\n            this.state.isEvolution = false\r\n            this.state.coloredSwitches = [];\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.buildMode = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n            window.history.pushState({id: 'Play Game'},'RobotsEvolved | Play Game','/play/'+ this.props.uri)\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,1,'blank');\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                buildMode: true,\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false,\r\n                tipsText: [\r\n                                        'Click on Wall spots to toggle',\r\n                                        'Click and Drag robots or goal to move robots',\r\n                                        'When you are ready, toggle build mode in order to solve the puzzle',\r\n                                        'You must solve the puzzle in order to submit.']\r\n            },board);\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.coloredGoals = [];\r\n            this.state.coloredSwitches = [];\r\n            this.state.isEvolution = false\r\n        }\r\n        this.state.showColoredLineDirections = this.props.LineDirections;\r\n        if (this.state.coloredGoals == undefined) {\r\n            this.state.coloredGoals = [];\r\n        }\r\n    };\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                const highscoresdata = JSON.parse(res.data.highscores)\r\n                if (this.FindhighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    FindhighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.numMoves != check[index].numMoves) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n\r\n    DChighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.score != check[index].score) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n    updateWeeklyHighscores = () => {\r\n        axios.get('/weeklychallengehighscores?wc_id=' + this.state.wc_id)\r\n            .then( res => {\r\n                if (res.data.wc_id != this.state.wc_id) {\r\n                    window.weeklyChallengeSessionBestHistory = [[],[],[],[],[]];\r\n                    window.weeklyChallengeSessionBestPlayerState = [[],[],[],[],[]];\r\n                    this.props.handleClickWeeklyClick();\r\n                    return\r\n                }\r\n                const highscoresdata = JSON.parse(res.data.highscores)\r\n                if (this.DChighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    updateDailyHighscores = () => {\r\n        axios.get('/dailychallengehighscores?dc_id=' + this.state.dc_id)\r\n            .then( res => {\r\n                if (res.data.dc_id != this.state.dc_id) {\r\n                    window.dailyChallengeSessionBestHistory = [[],[],[],[]];\r\n                    window.dailyChallengeSessionBestPlayerState = [[],[],[],[]];\r\n                    this.props.handleClickDailyChallenge();\r\n                    return\r\n                }\r\n                const highscoresdata = JSON.parse(res.data.highscores)//PoorMan's global redux implementation\r\n                if (this.DChighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                    window.dchighscores = JSON.parse(res.data.highscores)\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.updateHighscores();\r\n            var IntervalId = setInterval(this.updateHighscores, 8000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.updateDailyHighscores();\r\n            var IntervalId = setInterval(this.updateDailyHighscores, 6000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n        else if (this.props.weeklyChallengeMode === 'Yes') {\r\n            var IntervalId = setInterval(this.updateWeeklyHighscores, 10000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n        else if (this.props.weeklyChallengeMode === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                this.handlePlayerMovement(newDirection);\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                this.handlePlayerMovement(newDirection);\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                this.handlePlayerMovement(newDirection);\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                this.handlePlayerMovement(newDirection);\r\n                break;\r\n            case 9:\r\n                this.tabSelector();\r\n                return;\r\n                break;\r\n            case 81:\r\n                if (!this.state.gameWon) {\r\n                    this.handleUndoMove();\r\n                }\r\n                break;\r\n                return;\r\n            case 69:\r\n                if (!this.state.gameWon) {\r\n                    this.resetPuzzle();\r\n                }\r\n                break;\r\n                return;\r\n            case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                this.handlePlayerMovement(newDirection);\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                this.handlePlayerMovement(newDirection);\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                this.handlePlayerMovement(newDirection);\r\n                break;\r\n            case 65:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                this.handlePlayerMovement(newDirection);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzleCampaign = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        var themoveHistory = this.state.moveHistory.slice()\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = window.userInfo.username\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username,moveHistory: themoveHistory,type: 'Campaign'}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        var themoveHistory = this.state.moveHistory.slice()\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.loggedin === 'Yes') {\r\n            username = window.userInfo.username\r\n        }\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username,moveHistory: themoveHistory,type: 'type'}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.showColoredLineDirections === true) {\r\n            this.setState({\r\n                showColoredLineDirections: false,\r\n            });\r\n            this.props.handleLineDirections(false)\r\n        }\r\n        else {\r\n            this.setState({\r\n                showColoredLineDirections: true,\r\n            });\r\n            this.props.handleLineDirections(true)\r\n        }\r\n    };\r\n\r\n    toggleBuildMode = () => {\r\n        if (this.state.buildMode) {\r\n            this.setState({\r\n                buildMode: false,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n                buildMode: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length,solutiondata: this.state.moveHistory,name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        console.log(\"playerStart\")\r\n        console.log(this.state.playerStart)\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            dailySubmittedSucessfully: null\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeRandomStatsModal = event => {\r\n        this.setState({\r\n            closeRandomStatsModal: false,\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    }\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushFinishedModal = event => {\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: false\r\n        });\r\n\r\n    }\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent, 'blank');\r\n        var squareSize = setDefaultSquareSize(width,height);\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n            squareSize: squareSize,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n    showStatsModal = () => {\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            showStatsModal: true,\r\n        });\r\n    }\r\n\r\n\r\n    isWallSolid = (wall) => {\r\n        if (wall.wallType == undefined) {\r\n            return true\r\n        } else {\r\n            var wallType = wall.wallType.substring(0, wall.wallType.length - 4)\r\n            this.state.coloredSwitches.map(switches => {\r\n                if (switches.colorSignifier === wallType) {\r\n                    return switches.isOn\r\n                }\r\n            });\r\n        }\r\n        return true\r\n    }\r\n\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        console.log(\"wallHorizontal\")\r\n        console.log(this.state.wallHorizontal)\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall => {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1 && this.isWallSolid(wall)) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall ) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1  && this.isWallSolid(wall)) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1  && this.isWallSolid(wall)) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1  && this.isWallSolid(wall))\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n    nextLessonPuzzle  = () => {\r\n        var puzzle = this.state.numPuzzleon;\r\n        puzzle += 1;\r\n        puzzle = puzzle == 4 ? 5 : puzzle;\r\n        puzzle = puzzle == 7 ? 8 : puzzle;\r\n        this.handleLearnClickGame(puzzle % 12);\r\n    }\r\n\r\n    puzzleRushTimeUp = () => {\r\n        var totalMovesDiff = 0;\r\n        this.state.solutiondifference.map(numMoves => {\r\n            totalMovesDiff += numMoves;\r\n        });\r\n        var averageTime = parseInt(300 / (this.state.numPuzzleon))\r\n        var totalMoves = 0;\r\n        this.state.totalMovesList.map(numMoves => {\r\n            totalMoves += numMoves\r\n        });\r\n        var avgMoves = parseInt(totalMoves / (this.state.numPuzzleon))\r\n        var movesPerSecond = totalMoves / 300;\r\n\r\n        axios.post('/puzzlerushend', {p_id: this.state.p_id,totalMoves: totalMoves,differenceFrom: totalMovesDiff})\r\n            .then( res => {\r\n                console.log(res.data);\r\n            });\r\n\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: true,\r\n            numPuzzlesCompleted: this.state.numPuzzleon,\r\n            percentile: 'TBD%',\r\n            averageTime: averageTime + 's',\r\n            averageMoves: avgMoves,\r\n            differenceOptimal: totalMovesDiff,\r\n            movesPerSecond: movesPerSecond\r\n        });\r\n    }\r\n\r\n    weeklyChallegeSaveMovesCookie = (LastRobotPosition,completed) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            if (moveHistory !== null) {\r\n                numMoves += moveHistory.length\r\n            }\r\n        });\r\n        var playerStateList = this.state.playerStateList\r\n        if (LastRobotPosition != null) {\r\n            playerStateList[this.state.numPuzzleon] = LastRobotPosition.slice()\r\n        }\r\n        this.checkWinningPosition(this.state.goal,this.state.coloredGoals,this.state.playerState)\r\n\r\n        var gameswonWeekly = [];\r\n        [0,1,2,3,4].map((move,index) => {\r\n            var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n\r\n            gameswonWeekly[index] = playerStateList[index] != null ? this.checkWinningPosition(puzzledata.goal,puzzledata.coloredGoals,playerStateList[index]) : false\r\n        })\r\n        console.log(gameswonWeekly)\r\n\r\n        axios.post('/weeklychallengesubmit', {score: numMoves, solutiondata: moveHistoryList, wc_id: 1, playerStateList: playerStateList, completed: completed, gamesWon: gameswonWeekly})\r\n            .then( res => {\r\n                console.log(res.data)\r\n            });\r\n    }\r\n\r\n\r\n    submitWeeklyAnswer = (LastRobotPosition) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            numMoves += moveHistory.length\r\n        });\r\n        var playerStateList = this.state.playerStateList.slice()\r\n        playerStateList[this.state.numPuzzleon] = LastRobotPosition.slice()\r\n        axios.post('/weeklychallengesubmit', {score: numMoves, name: document.getElementById(\"namesubmitHS\").value, solutiondata: moveHistoryList, wc_id: 1, playerStateList: playerStateList, completed: 1,display: 1,gamesWon: [true,true,true,true,true]})\r\n            .then( res => {\r\n                this.setState({\r\n                    dailySubmittedSucessfully: <Alert severity=\"success\">Submitted!</Alert>\r\n                });\r\n            });\r\n    }\r\n\r\n    submitDailyAnswer = (LastRobotPosition) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            numMoves += moveHistory.length\r\n        });\r\n        var playerStateList = this.state.playerStateList.slice()\r\n        playerStateList[this.state.numPuzzleon] = [...LastRobotPosition]\r\n        axios.post('/dailychallenge', {score: numMoves, name: document.getElementById(\"namesubmitHS\").value, solutiondata: moveHistoryList, dc_id: this.state.dc_id, playerStateList: playerStateList})\r\n            .then( res => {\r\n                this.setState({\r\n                    dailySubmittedSucessfully: <Alert severity=\"success\">Submitted!</Alert>\r\n                });\r\n            });\r\n        window.dc_movesList = moveHistoryList;\r\n        window.dc_playerList = playerStateList;\r\n        this.state.gameWon = false;\r\n    }\r\n    checkwin = (newPlayerState) => {\r\n        if (this.state.goal != null && this.state.coloredGoals == null) {\r\n            var Won = false;\r\n            newPlayerState.map((player) => {\r\n                if (player.top === this.state.goal.top && player.left === this.state.goal.left) {\r\n                    Won = true;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            if (this.state.goal != null) {\r\n                var Won = false;\r\n                newPlayerState.map((player) => {\r\n                    if (player.top === this.state.goal.top && player.left === this.state.goal.left) {\r\n                        Won = true;\r\n                    }\r\n                });\r\n            }\r\n            else if (this.state.coloredGoals.length == 0) {\r\n                var Won = false;\r\n            }\r\n            else {\r\n                var Won = true;\r\n            }\r\n            var found = false;\r\n            var colorfound = false;\r\n            newPlayerState.map((player) => {\r\n                found = false\r\n                colorfound = false\r\n                this.state.coloredGoals.map(goal => {\r\n                    if (goal.colorSignifier == player.colorSignifier && goal.top === player.top && goal.left === player.left) {\r\n                        found = true;\r\n                    }\r\n                    if (goal.colorSignifier == player.colorSignifier) {\r\n                        colorfound = true;\r\n                    }\r\n                });\r\n                if (!found && colorfound) {\r\n                    Won = false;\r\n                }\r\n            });\r\n        }\r\n        if (Won) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No' && this.props.puzzleRush !== 'Yes') {\r\n                var username = window.userInfo.username\r\n                if (this.props.randomGame === 'Yes') {\r\n                    return (\r\n                        <RandomGameStatsModal\r\n                            show={this.state.gameWon}\r\n                            lowestMoves={this.state.lowestMoves}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            numMoves={this.state.moveHistory.length}\r\n                            difficulty={this.state.difficulty}\r\n                            resetPuzzle={this.resetPuzzle}\r\n                            handleShowRandomAnswers={this.handleShowRandomAnswers}\r\n                        />\r\n                    );\r\n                }\r\n                else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n                    return null\r\n                }\r\n                else if (this.props.weeklyChallengeMode === 'Yes') {\r\n                    if (window.weeklyChallengeSessionBestHistory[this.state.numPuzzleon].length == 0 || this.state.moveHistory.length < window.weeklyChallengeSessionBestHistory[this.state.numPuzzleon].length) {\r\n                        window.weeklyChallengeSessionBestHistory[this.state.numPuzzleon] = JSON.parse(JSON.stringify(this.state.moveHistory))\r\n                        window.weeklyChallengeSessionBestPlayerState[this.state.numPuzzleon] = JSON.parse(JSON.stringify(this.state.playerState))\r\n                    }\r\n                    this.state.gamesWonWeekly.map((gameWon,index) => {\r\n                        if (!(index == this.state.numPuzzleon) && !gameWon) {\r\n                            Won = false\r\n                        }\r\n                    });\r\n                    var moveHistoryList = this.state.moveHistoryList\r\n                    moveHistoryList[this.state.numPuzzleon] = [...this.state.moveHistory]\r\n                    var numMoves = 0\r\n                    moveHistoryList.map(moveHistory => {\r\n                        if (moveHistory !== null) {\r\n                            numMoves += moveHistory.length\r\n                        }\r\n                    });\r\n                    if (Won) {\r\n                        this.weeklyChallegeSaveMovesCookie(newPlayerState,1)\r\n                    }\r\n                    return (Won ? <YouWinWeeklyModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={numMoves}\r\n                        submitAnswer={this.submitWeeklyAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                        undoMove={this.handleUndoMove}\r\n                        newPlayerState={newPlayerState}\r\n                        submitted={this.state.dailySubmittedSucessfully}\r\n                    /> : <YouWinDailySingleModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        totalMoves={numMoves}\r\n                        undoMove={this.handleUndoMove}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        games={this.state.games}\r\n                        handleClickGame={this.handleWeeklyClickGame}\r\n                        numPuzzleon={this.state.numPuzzleon}\r\n                        moveNextPuzzle={this.moveNextPuzzleWeekly}\r\n                    />);\r\n                }\r\n                else if (this.props.dailyChallengeMode === 'Yes') {\r\n                    if ((window.dailyChallengeSessionBestHistory[this.state.numPuzzleon].length == 0 ||\r\n                            this.state.moveHistory.length < window.dailyChallengeSessionBestHistory[this.state.numPuzzleon].length)) {\r\n                        window.dailyChallengeSessionBestHistory[this.state.numPuzzleon] = JSON.parse(JSON.stringify(this.state.moveHistory))\r\n                        window.dailyChallengeSessionBestPlayerState[this.state.numPuzzleon] = JSON.parse(JSON.stringify(this.state.playerState))\r\n                        console.log(\"playerState\")\r\n                        console.log(this.state.playerState)\r\n                        console.log(\"moveHistory\")\r\n                        console.log(this.state.moveHistory)\r\n                    }\r\n                    this.state.gamesWonDaily.map((gameWon,index) => {\r\n                        if (!(index == this.state.numPuzzleon) && !gameWon) {\r\n                            Won = false\r\n                        }\r\n                    });\r\n                    var moveHistoryList = [...this.state.moveHistoryList]\r\n                    moveHistoryList[this.state.numPuzzleon] = [...this.state.moveHistory]\r\n                    var numMoves = 0\r\n                    moveHistoryList.map(moveHistory => {\r\n                        numMoves += moveHistory.length\r\n                    });\r\n                    return (Won ? <YouWinDailyFinalModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={numMoves}\r\n                        submitAnswer={this.submitDailyAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                        undoMove={this.handleUndoMove}\r\n                        newPlayerState={newPlayerState}\r\n                        submitted={this.state.dailySubmittedSucessfully}\r\n                    /> : <YouWinDailySingleModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        totalMoves={numMoves}\r\n                        undoMove={this.handleUndoMove}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        games={this.state.games}\r\n                        handleClickGame={this.handleDailyClickGame}\r\n                        numPuzzleon={this.state.numPuzzleon}\r\n                        moveNextPuzzle={this.moveNextPuzzle}\r\n                    />);\r\n                }\r\n                else if (this.props.learnMode === 'Yes') {\r\n                    return  (<YouWinLessonModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        moveNextPuzzle={this.nextLessonPuzzle}\r\n                    />);\r\n                }\r\n                else {\r\n                    return  (<YouWinModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        submitAnswer={this.submitAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                    />);\r\n                }\r\n            }\r\n            else if (this.props.puzzleRush === 'Yes'){\r\n                axios.post('/puzzlerushsubmit', {p_id: this.state.p_id,g_id:this.state.games[this.state.numPuzzleon].g_id, moveHistory: this.state.moveHistory})\r\n                    .then( res => {\r\n                        console.log(res.data);\r\n                    });\r\n                var totalMoves = this.state.moveHistory.slice().length\r\n                var totalMovesList = this.state.totalMovesList\r\n                totalMovesList.push(totalMoves)\r\n                var solutionmoves = totalMoves - this.state.games[this.state.numPuzzleon].g_moves\r\n                var solutiondifference = this.state.solutiondifference\r\n                solutiondifference.push(solutionmoves)\r\n                var puzzledata = JSON.parse(this.state.games[this.state.numPuzzleon + 1].g_puzzledata)\r\n                if (this.state.numPuzzleon + 10 > this.state.games.length) {\r\n                    axios.get('/puzzlerushgetmore?p_id=' + this.props.p_id + '&difficulty=' + this.props.difficulty)\r\n                        .then( res => {\r\n                                var games = JSON.parse(res.data.games);\r\n                                var stategames = this.state.games\r\n                                var newarray = stategames.concat(games)\r\n                                this.setState({\r\n                                    games: newarray\r\n                                });\r\n                        });\r\n                }\r\n                this.setState(\r\n                    extend(puzzledata,{numPuzzleon: this.state.numPuzzleon + 1, playerState: puzzledata.playerStart.slice(), gameWon: false, solutiondifference: solutiondifference, totalMovesList: totalMovesList})\r\n                );\r\n\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                    submitPuzzleCampaign={this.submitPuzzleCampaign}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handleShowRandomAnswers = () => {\r\n        this.setState({\r\n            tipsText: [this.state.lowestMoveSequence]\r\n        })\r\n    }\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false && !this.state.buildMode) {\r\n            var oldPositon = {left: this.state.playerState[this.state.robotSelected].left, top: this.state.playerState[this.state.robotSelected].top};\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left) && !this.state.buildMode) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier,\r\n                    prevPosition: oldPositon\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            if (this.state.isEvolution) {\r\n                var newSwitches = []\r\n                console.log(\"playerState1\")\r\n                console.log(this.state.playerState)\r\n                console.log(\"coloredSwitches1\")\r\n                console.log(this.state.coloredSwitches)\r\n                this.state.coloredSwitches.map((switches,index) => {\r\n                    if (switches.left === newPosition.left && switches.top === newPosition.top) {\r\n                        switches.isOn = switches.isOn ? false : true;\r\n                    }\r\n                    newSwitches.push(switches)\r\n                });\r\n            }\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n                coloredSwitches: newSwitches\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseToolTips = (index) => {\r\n        this.state.tipsText.splice(index,1);\r\n        this.setState({\r\n            tipsText: this.state.tipsText,\r\n        });\r\n    }\r\n\r\n    moveNextPuzzle = () => {\r\n        this.handleDailyClickGame((this.state.numPuzzleon + 1) % 4)\r\n    }\r\n\r\n    moveNextPuzzleWeekly = () => {\r\n        this.handleWeeklyClickGame((this.state.numPuzzleon + 1) % 5)\r\n    }\r\n\r\n    handleLearnClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].puzzledata);\r\n        var squareSize = setDefaultSquareSize(puzzledata.width,puzzledata.height);\r\n        this.setState(\r\n            extend(puzzledata,{buildMode: false,squareSize: squareSize, numPuzzleon: index, moveHistory: [], gameWon: false, playerState: puzzledata.playerStart.slice(),tipsText: [this.props.games[index].description]})\r\n        );\r\n    }\r\n\r\n\r\n    handleDailyClickAnswersGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n        var lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[index].g_solutiondata))\r\n        var lowestMovesforPuzzle = this.props.games[index].g_moves\r\n        var difficultyforPuzzle = this.props.games[index].g_difficulty\r\n        var playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[index]\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory,\r\n                    gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily,\r\n                    lowestMoveSequence: lowestMoveSequence, lowestMovesforPuzzle: lowestMovesforPuzzle, difficultyforPuzzle: difficultyforPuzzle,\r\n                    playerMovedSequence: playerMovedSequence})\r\n        );\r\n    }\r\n\r\n    handleWeeklyClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonWeekly = this.state.gamesWonWeekly\r\n        if (this.state.gameWon) {\r\n            gamesWonWeekly[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonWeekly[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n        this.weeklyChallegeSaveMovesCookie(null,0);\r\n        if (puzzledata.goal === undefined)\r\n        {\r\n            this.setState(\r\n                extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonWeekly: gamesWonWeekly, goal: null})\r\n            );\r\n        }\r\n        else if (puzzledata.coloredGoals === undefined) {\r\n            this.setState(\r\n                extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonWeekly: gamesWonWeekly, coloredGoals: []})\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleDailyClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = [...this.state.moveHistoryList[index]];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = [...puzzledata.playerStart]\r\n        }\r\n        else {\r\n            puzzledata.playerState = [...this.state.playerStateList[index]];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = [...playerState];\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = [...this.state.moveHistory];\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily})\r\n        );\r\n    }\r\n\r\n\r\n    handleWildCardClick = () => {\r\n        if (this.state.goal == null) {\r\n            this.setState({\r\n                goal: {top: this.state.height - 1, left: this.state.width - 1}\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                goal: null\r\n            });\r\n        }\r\n        this.resetPuzzle();\r\n    }\r\n\r\n    resetToBest = (moveHistory, playerState) => {\r\n        this.setState({\r\n            moveHistory: moveHistory,\r\n            playerState: playerState,\r\n        });\r\n    }\r\n\r\n    handleColoredClick = (colorSignifier) => {\r\n        var goal = null;\r\n        this.state.coloredGoals.map(goalItem => {\r\n            if (colorSignifier == goalItem.colorSignifier) {\r\n                goal = goalItem;\r\n            }\r\n        })\r\n        if (goal == null) {\r\n            var newColoredGoals = this.state.coloredGoals;\r\n            var newgoal\r\n            switch (colorSignifier) {\r\n                case 'blue':\r\n                    newgoal = {top: this.state.height - 2, left: this.state.width - 2, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n                    break;\r\n                case 'green':\r\n                    newgoal = {top: this.state.height - 1, left: this.state.width - 2, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n                    break;\r\n                case 'red':\r\n                    newgoal = {top: this.state.height - 2, left: this.state.width - 1, color: ROBOT_RED, colorSignifier: 'red'};\r\n                    break;\r\n                case 'yellow':\r\n                    newgoal = {top: this.state.height - 3, left: this.state.width - 3, color: ROBOT_YELLOW, colorSignifier: 'yellow'};\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            newColoredGoals.push(newgoal);\r\n            this.setState({\r\n                coloredGoals: newColoredGoals\r\n            });\r\n        }\r\n        else {\r\n            var newColoredGoals = this.state.coloredGoals.filter(goalItem =>\r\n                colorSignifier != goalItem.colorSignifier\r\n            );\r\n            this.setState({\r\n                coloredGoals: newColoredGoals\r\n            });\r\n        }\r\n        this.resetPuzzle();\r\n    }\r\n\r\n    trimName = name => {\r\n        var separated = (name + '').split(\" \")\r\n        var toreturn = '';\r\n        separated.map((word) => {\r\n            if (word.length > 17)\r\n                toreturn += word.substring(0, 17) + \"...\" + ' ';\r\n            else {\r\n                toreturn += word + ' '\r\n            }\r\n        });\r\n        return toreturn.substring(0, toreturn.length - 1);\r\n    };\r\n\r\n    loadSidebar = () => {\r\n        if (this.props.learnMode == 'Yes') {\r\n            return (\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\">\r\n                        <Divider/>\r\n                        <Typography\r\n                             color=\"textSecondary\"\r\n                             display=\"block\"\r\n                             variant=\"caption\"\r\n                             style={{paddingBottom: '10px'}}\r\n                         >\r\n                             Beginner Lessons\r\n                         </Typography>\r\n                        {\r\n                            this.state.games.map((game,index) => {\r\n                                    if (index === 4) {\r\n                                        return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Intermediate Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    else if (index === 7) {\r\n                                            return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Advanced Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    return(\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={game.name} index={index} handleClickGame={this.handleLearnClickGame}/>\r\n                                    )\r\n                                }\r\n\r\n                            )\r\n                        }\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickAnswersGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeHistoryData\r\n                            lowestMovesforPuzzle={this.state.lowestMovesforPuzzle}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            difficultyforPuzzle={this.state.difficultyforPuzzle}\r\n                            nameSubmitted={this.props.nameSubmitted}\r\n                            playerMovedSequence={this.state.playerMovedSequence}\r\n                            bestScore={this.props.bestScore}\r\n                            scoreSubmitted={this.props.scoreSubmitted}\r\n                         />\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.weeklyChallengeMode === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <DailyMovesView\r\n                            moveHistory={JSON.parse(JSON.stringify(window.weeklyChallengeSessionBestHistory[this.state.numPuzzleon]))}\r\n                            playerState={JSON.parse(JSON.stringify(window.weeklyChallengeSessionBestPlayerState[this.state.numPuzzleon]))}\r\n                            resetToBest={this.resetToBest}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            color=\"secondary\"\r\n                            display=\"block\"\r\n                            variant={\"h4\"}\r\n\r\n                        >\r\n                            {this.state.dailyDayName}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <WeeklyGameItems\r\n                                            selected={this.state.numPuzzleon}\r\n                                            game={game}\r\n                                            name={'Puzzle ' + (index + 1)}\r\n                                            index={index}\r\n                                            moveHistoryList = {this.state.moveHistoryList}\r\n                                            gamesWonWeekly = {this.state.gamesWonWeekly}\r\n                                            handleClickGame={this.handleWeeklyClickGame}\r\n                                        />\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <HighScores highscores={this.state.highscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <MyStopwatch seconds_add={this.state.daily_start_timer_seconds} minutes_add={this.state.daily_start_timer_minutes}/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyMovesView\r\n                            moveHistory={JSON.parse(JSON.stringify(window.dailyChallengeSessionBestHistory[this.state.numPuzzleon]))}\r\n                            playerState={JSON.parse(JSON.stringify(window.dailyChallengeSessionBestPlayerState[this.state.numPuzzleon]))}\r\n                            resetToBest={this.resetToBest}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            color=\"secondary\"\r\n                            display=\"block\"\r\n                            variant={\"h4\"}\r\n\r\n                        >\r\n                            {this.state.dailyDayName}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <WeeklyGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickGame} moveHistoryList={this.state.moveHistoryList}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <HighScores highscores={this.state.highscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.state.createMode === 'Yes') {\r\n            return (\r\n                <CreateBoardGoalSelector\r\n                    buildMode={this.state.buildMode}\r\n                    handleWildCardClick={this.handleWildCardClick}\r\n                    handleColoredClick={this.handleColoredClick}\r\n                />\r\n            );\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.puzzleRush) {\r\n            return (\r\n                     <div>\r\n                        <Timer puzzleRushTimeUp={this.puzzleRushTimeUp}>\r\n                        </Timer>\r\n                        <Typography id=\"discrete-slider-small-steps\"\r\n                                     color=\"Primary\"\r\n                                     variant=\"h3\"\r\n                                     display=\"inline\"\r\n                                     gutterBottom>\r\n                             {this.state.numPuzzleon}\r\n                         </Typography>\r\n                     </div>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n            <div style={{display: 'grid'}}>\r\n                <Typography\r\n                    color=\"secondary\"\r\n                    display=\"block\"\r\n                    variant={\"h4\"}\r\n\r\n                >\r\n                    {this.trimName(this.props.name)}\r\n                </Typography>\r\n                <div style={{paddingBottom: '10px', display: 'inline-flex', alignItems: \"center\"}}>\r\n                    <Typography variant=\"caption\" style={{paddingRight: \"5%\"}}>\r\n                        By: {this.trimName(this.props.author)}\r\n                    </Typography>\r\n                    <div>\r\n                        <div style={{display: \"inline-flex\"}}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                style={{borderTopRightRadius: \"0px\", borderBottomRightRadius: \"0px\"}}\r\n                                startIcon={this.state.hasVoted ? <StarIcon/> : <StarBorderIcon/>}\r\n                                onClick={this.updateLike}\r\n                                size={\"small\"}\r\n                            >\r\n                                {this.state.hasVoted ? \"Unlike\" : \"Like\"}\r\n                            </Button>\r\n                            <Paper variant=\"contained\"  style={{borderTopLeftRadius: \"0px\", borderBottomLeftRadius: \"0px\"}} >\r\n                                <Typography style={{marginLeft: \"5px\", marginRight: \"5px\"}} variant=\"h6\">{this.state.votes ? this.state.votes : 0}</Typography>\r\n                            </Paper>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Grid container xs={12} direction=\"column\">\r\n                <HighScores highscores={this.state.highscores}/>\r\n                </Grid>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    updateLike = () => {\r\n        const action = this.state.hasVoted ? \"remove\" : \"create\"\r\n        axios.post('/likepuzzle', {uri: this.state.uri, action: action, vote: \"voting\"})\r\n            .then( res => {\r\n                var newHasVoted = \"Y\"\r\n                var newVotes = this.state.votes\r\n                if (this.state.hasVoted)\r\n                    newHasVoted = null\r\n                if (!isNaN(res.data.votes))\r\n                    newVotes = res.data.votes\r\n\r\n                this.setState({\r\n                    hasVoted: newHasVoted,\r\n                    votes: newVotes\r\n                });\r\n            }).catch(_ => {\r\n                this.props.signInModalOpen(\"Sign in\")\r\n            });\r\n    }\r\n\r\n    handlePlayerMovementFromMouse = (direction) => {\r\n        this.handlePlayerMovement({dir: direction})\r\n    };\r\n\r\n    handleUndoMove = () => {\r\n        var moveHistory = this.state.moveHistory;\r\n        var playerState = this.state.playerState;\r\n        if (moveHistory.length !== 0) {\r\n            var moveObj = moveHistory.pop();\r\n            playerState[moveObj.robot].left = moveObj.prevPosition.left;\r\n            playerState[moveObj.robot].top = moveObj.prevPosition.top;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n                gameWon: false,\r\n                dailySubmittedSucessfully: null\r\n            });\r\n        }\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes' && this.state.buildMode) {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    checkWinningPosition = (goal,coloredGoals,playerState) => {\r\n        if (goal != null && coloredGoals == null) {\r\n            var Won = false;\r\n            playerState.map((player) => {\r\n                if (player.top === goal.top && player.left === goal.left) {\r\n                    Won = true;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            if (goal != null) {\r\n                var Won = false;\r\n                playerState.map((player) => {\r\n                    if (player.top === goal.top && player.left === goal.left) {\r\n                        Won = true;\r\n                    }\r\n                });\r\n            }\r\n            else if (coloredGoals.length == 0) {\r\n                var Won = false;\r\n            }\r\n            else {\r\n                var Won = true;\r\n            }\r\n            var found = false;\r\n            var colorfound = false;\r\n            playerState.map((player) => {\r\n                found = false\r\n                colorfound = false\r\n                coloredGoals.map(goal => {\r\n                    if (goal.colorSignifier == player.colorSignifier && goal.top === player.top && goal.left === player.left) {\r\n                        found = true;\r\n                    }\r\n                    if (goal.colorSignifier == player.colorSignifier) {\r\n                        colorfound = true;\r\n                    }\r\n                });\r\n                if (!found && colorfound) {\r\n                    Won = false;\r\n                }\r\n            });\r\n        }\r\n        return Won\r\n    }\r\n\r\n\r\n    onStopDragHandlerGoal = (position,color) => {\r\n        if (color == undefined) {\r\n            var goal = {top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize)}\r\n            if (!this.checkWinningPosition(goal,this.state.coloredGoals,this.state.playerState)) {\r\n                this.setState({\r\n                    goal: goal,\r\n                    playerState: this.state.playerStart.slice(),\r\n                    moveHistory: [],\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            var coloredGoals = this.state.coloredGoals;\r\n            var newGoals = [];\r\n            coloredGoals.map(goal => {\r\n                if (goal.color == color) {\r\n                    newGoals.push({top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize), color: color, colorSignifier: goal.colorSignifier});\r\n                }\r\n                else {\r\n                    newGoals.push(goal);\r\n                }\r\n            });\r\n            if (!this.checkWinningPosition(this.state.goal,newGoals,this.state.playerState)) {\r\n                this.setState({\r\n                    coloredGoals: newGoals,\r\n                    playerState: this.state.playerStart.slice(),\r\n                    moveHistory: [],\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    onStopDragHandler = (position,index,oldPosition) => {\r\n        var playerState = this.state.playerState.slice();\r\n        var lastX = position.lastX / this.state.squareSize;\r\n        var lastY = position.lastY / this.state.squareSize;\r\n        playerState[index].top = Math.round(lastY);\r\n        playerState[index].left = Math.round(lastX);\r\n        var Won = this.checkWinningPosition(this.state.goal,this.state.coloredGoals,playerState)\r\n        if (!Won) {\r\n            this.setState({\r\n                playerStart: playerState.slice(),\r\n                playerState: playerState,\r\n                moveHistory: []\r\n            });\r\n        }\r\n        else {\r\n            playerState[index].top = oldPosition.top\r\n            playerState[index].left = oldPosition.left\r\n            this.setState({\r\n                playerState: playerState,\r\n                playerStart: playerState.slice(),\r\n                flashMessage: null\r\n            });\r\n            this.setState({\r\n                flashMessage: <FlashMessage duration={5000}>\r\n                                <Typography variant='h5' color='error'>You must click Build Mode to solve in order to submit the puzzle</Typography>\r\n                              </FlashMessage>\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        puzzleRushTimeUp={this.puzzleRushTimeUp}\r\n                        isPuzzleRush={this.props.puzzleRush}\r\n                        numPuzzleRush={this.state.numPuzzleon}\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                        toggleLineIndicators = {this.toggleLineIndicators}\r\n                        showColoredLineDirections={this.state.showColoredLineDirections}\r\n                        toggleBuildMode = {this.toggleBuildMode}\r\n                        undoMove = {this.handleUndoMove}\r\n                        buildMode = {this.state.buildMode}\r\n                        squareSizeValue = {parseInt((this.state.squareSize/4))}\r\n                        isLesson = {this.props.learnMode}\r\n                        isDailyChallenge = {this.props.dailyChallengeMode}\r\n                        isDailyChallengeAnswers = {this.props.dailyChallengeModeAnswers}\r\n                        isWeeklyChallenge = {this.props.weeklyChallengeMode}\r\n                    />\r\n                    {this.state.flashMessage}\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? null : <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>}\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8} zeroMinWidth>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal\r\n                            dimension={this.state.squareSize}\r\n                            position={this.state.goal}\r\n                            onStopDragHandler={this.onStopDragHandlerGoal}\r\n                            draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                            isCreateMode={this.state.createMode}\r\n                            buildMode={this.state.buildMode}\r\n                        />\r\n                        {\r\n                            this.state.coloredGoals.map(goal =>\r\n                                <Goal\r\n                                    dimension={this.state.squareSize}\r\n                                    position={goal}\r\n                                    onStopDragHandler={this.onStopDragHandlerGoal}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    color={goal.color}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.coloredSwitches.map(switches =>\r\n                                <SwitchPad\r\n                                    dimension={this.state.squareSize}\r\n                                    position={switches}\r\n                                    color={switches.color}\r\n                                    isOn={switches.isOn}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    onStopDragHandler={this.onStopDragHandler}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                    wallType={wallH.wallType}\r\n                                    coloredSwitches={this.state.coloredSwitches}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                    wallType={wallV.wallType}\r\n                                    coloredSwitches={this.state.coloredSwitches}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={this.state.playerState[this.state.robotSelected].color}\r\n                                    show={this.state.showColoredLineDirections}\r\n                                    handleClick={this.handlePlayerMovementFromMouse}\r\n                                    buildMode={this.state.buildMode}\r\n                                />\r\n                            )\r\n                        }\r\n                    </Board>\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/> : null}\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DescriptionList\r\n                        handleCloseToolTips={this.handleCloseToolTips}\r\n                        tipsText={this.state.tipsText}\r\n                    />\r\n                    {this.loadSidebar()}\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                {\r\n                    this.checkwin(this.state.playerState)\r\n                }\r\n                <PuzzleRushWinModal\r\n                    show={this.state.showPuzzleRushFinishedModal}\r\n                    closeModal={this.closePuzzleRushFinishedModal}\r\n                    numPuzzlesCompleted={this.state.numPuzzlesCompleted}\r\n                    percentile={this.state.puzzleRushPercentileCompleted}\r\n                    averageTime={this.state.averageTime}\r\n                    averageMoves={this.state.averageMoves}\r\n                    differenceOptimal={this.state.differenceOptimal}\r\n                    movesPerSecond={this.state.movesPerSecond}\r\n                    difficulty={this.props.difficulty}\r\n                    handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport axios from 'axios';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        maxWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 360,\r\n        minWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 235,\r\n        height: 225,\r\n        position: 'relative',\r\n        background: 'linear-gradient(100deg, #ffd34d 55%, #fff178 55%)'\r\n    },\r\n\r\n    item: {\r\n        padding: 0\r\n    },\r\n\r\n    upperPadding: {\r\n        paddingTop: 3\r\n    },\r\n    upperPaddingButton: {\r\n        paddingTop: 3,\r\n        position: 'absolute',\r\n        bottom: 15,\r\n        left: 25\r\n    },\r\n\r\n    lowerPadding: {\r\n        paddingBottom: 3\r\n    },\r\n\r\n    rightSideText: {\r\n        textAlign: \"right\",\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    },\r\n\r\n    leftSideText: {\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(ComplexGrid)\r\n\r\nfunction ComplexGrid(props) {\r\n    const { classes } = props;\r\n    const handleClick = () => {\r\n        axios.get('/getFindGameData?uri=' + props.game.uri)\r\n                .then( res => {\r\n                    var game = JSON.parse(res.data.game);\r\n                    props.handleGameClick(game.name, game.puzzledata,props.highscores,game.uri,props.game.authorname,\r\n                        props.game.votes, props.game.hasVoted);\r\n                });\r\n    };\r\n\r\n    var numberOfHighScores = 0;\r\n\r\n    const highscorestyle = highscore => {\r\n        if (numberOfHighScores === 6) return \"\";\r\n        numberOfHighScores++;\r\n        return (\r\n            <ListItem disableGutters={true} classes={{ root: classes.item }}>\r\n                <ListItemText primary={trimNameShort(highscore.comment)} classes={{ root: classes.leftSideText }} />\r\n                <ListItemText secondary={highscore.numMoves} classes={{ root: classes.rightSideText }} />\r\n            </ListItem>\r\n        )\r\n    };\r\n\r\n    const contentDivStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        };\r\n\r\n    };\r\n\r\n    const trimName = name => {\r\n        var separated = (name + '').split(\" \")\r\n        var toreturn = '';\r\n        separated.map((word) => {\r\n            if (word.length > 17)\r\n                toreturn += word.substring(0, 17) + \"...\" + ' ';\r\n            else {\r\n                toreturn += word + ' '\r\n            }\r\n        });\r\n        return toreturn.substring(0, toreturn.length - 1);\r\n    };\r\n\r\n    const trimNameShort = name => {\r\n        if (name.length > 10)\r\n            name = name.substring(0, 10) + \"...\";\r\n        return name\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid item xs={12} md={3} sm={6}>\r\n            <Card variant=\"outlined\" className={classes.root}>\r\n                <CardContent>\r\n                    <div style={contentDivStyle()}>\r\n                        <div style={{width: '150px'}}>\r\n                            <Tooltip title={props.game.name}>\r\n                                <Typography variant=\"h6\" classes={{ root: classes.lowerPadding }}>\r\n                                    {trimName(props.game.name)}\r\n                                </Typography>\r\n                            </Tooltip>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    By: {trimName(props.game.authorname)}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    {props.game.created}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Plays: {props.game.plays}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Likes: {props.game.votes}\r\n                                </Typography>\r\n                            </div>\r\n                            <br/>\r\n                            <Button onClick={handleClick} classes={{ root: classes.upperPaddingButton }} variant=\"contained\" color=\"primary\">Play</Button>\r\n                        </div>\r\n                        <div style={{width: '105px'}}>\r\n                            <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                Top Scores\r\n                            </Typography>\r\n                            <List>\r\n                                {\r\n                                    props.highscores.map(highscore =>\r\n                                        highscorestyle(highscore)\r\n                                    )\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from 'axios';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport extend from '../constants/extend';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center'\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 400,\r\n    },\r\n    input: {\r\n        marginLeft: 5,\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n        marginLeft: 8,\r\n        marginRight: 8,\r\n    },\r\n});\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = this.props.gameslist;\r\n        var highscoreslist = this.props.highscoreslist;\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n            anchorEl: null,\r\n            hasMore: true,\r\n            lastSearch: 'None',\r\n            offsetSearch: gameslist.length,\r\n            isLoadingSearch: false,\r\n        }\r\n\r\n    }\r\n\r\n    handleGameClick = (name,gamedata,highscores,uri,authorname,votes,hasVoted) => {\r\n        this.props.handleGameClick(name,gamedata,highscores,uri,authorname,votes,hasVoted);\r\n    };\r\n\r\n    handleFilterMenuOpen = event => {\r\n        this.setState( {\r\n          anchorEl: event.currentTarget\r\n      });\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.keycode == 13) {\r\n            this.handleSearchSubmit(e);\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        window.scrollTo(0,this.props.findWindowHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.props.setFindWindow(window.scrollY)\r\n    }\r\n\r\n    handleCloseFilterMenuMostPlayed = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'MostPlayed', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'MostPlayed', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'MostPlayed',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleCloseFilterMenuMostLiked = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'MostLiked', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'MostLiked', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'MostLiked',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleCloseFilterMenuHighest = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'Highest', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'Highest', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'Highest',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleSearchSubmit = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n\r\n        axios.post('/search', {search: searchTerm, filter: 'None', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'None', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'None',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    hasMore = () => {\r\n        return ( this.state.hasMore ? null : <Grid item alignItems=\"center\" justify=\"center\" xs={12}><Typography style={{textAlign: 'center', display: 'block'}} variant=\"caption\">No More Puzzles</Typography></Grid>)\r\n    }\r\n\r\n    loadMoreItems = () => {\r\n        var searchTerm = this.searchRef.value;\r\n        if (!this.state.isLoadingSearch) {\r\n            this.state.isLoadingSearch = true;\r\n            axios.post('/search', {search: searchTerm, filter: 'None', offset: this.state.offsetSearch})\r\n                .then( res => {\r\n                    var gameslist = JSON.parse(res.data.gameslist);\r\n                    this.state.offsetSearch = gameslist.length + this.state.gameslist.length;\r\n                    var highscoreslist = JSON.parse(res.data.highscoreslist);\r\n                    this.props.setNumFindGames(gameslist.length + this.state.gameslist.length, this.state.lastSearch, searchTerm);\r\n                    this.setState({\r\n                        highscoreslist: this.state.highscoreslist.concat(highscoreslist),\r\n                        gameslist: this.state.gameslist.concat(gameslist),\r\n                        hasMore: gameslist.length == 0 ? false : true,\r\n                        isLoadingSearch: false,\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    handleCloseFilterMenu = () => {\r\n        this.setState({\r\n            anchorEl: null\r\n        });\r\n    };\r\n\r\n    render () {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <div id='MainFindPage' style={gamepanel()}>\r\n                <Paper component=\"form\" className={classes.root} >\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        inputRef={ref => this.searchRef = ref}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                this.handleSearchSubmit();\r\n                                event.preventDefault()\r\n                            }\r\n                        }}\r\n                    />\r\n                    <IconButton onClick={this.handleSearchSubmit} className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <Divider className={classes.divider} orientation=\"vertical\" />\r\n                    <Button\r\n                        onClick={this.handleFilterMenuOpen}\r\n                        startIcon={<FilterListIcon />}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        Sort\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(this.state.anchorEl)}\r\n                        onClose={this.handleCloseFilterMenu}\r\n                        getContentAnchorEl={null}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'center',\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center',\r\n                        }}\r\n                    >\r\n                        <MenuItem onClick={this.handleSearchSubmit}>Recently Created</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuMostPlayed}>Most Played</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuMostLiked}>Most Liked</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuHighest}>Highest Scores</MenuItem>\r\n                    </Menu>\r\n                </Paper>\r\n                <br/>\r\n                <Grid container alignItems={\"stretch\"} spacing={2}>\r\n                    {\r\n                        this.state.gameslist.map((game,index)=>\r\n                            <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                        )\r\n                    }\r\n                    <InfiniteScroll\r\n                        pageStart={1}\r\n                        loadMore={this.loadMoreItems.bind(this)}\r\n                        hasMore={this.state.hasMore}\r\n                        loader={<Grid item alignItems=\"center\" justify=\"center\" xs={12}><CircularProgress style={{textAlign: 'center',alignItems: 'center', marginLeft: 'auto', marginRight: 'auto'}} size={40} color=\"secondary\" /></Grid>}\r\n                        threshold={200}\r\n                        >\r\n                    </InfiniteScroll>\r\n                    {this.hasMore()}\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(FindGame);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  loadedGame={'Yes'}\r\n                  name={this.props.name}\r\n                  author={this.props.authorname}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n                  votes={this.props.votes}\r\n                  hasVoted={this.props.hasVoted}\r\n                  signInModalOpen={this.props.signInModalOpen}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport DailyChallengeScores from '../components/HighScores';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport FindGameElements from \"../containers/FindGameElements\";\r\nimport {GOAL_IMAGE} from '../constants/constants';\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n    var greeting = window.experiencedUser != 'Yes' ?\r\n    <div>\r\n        <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n        </Typography>\r\n        <Typography variant=\"p1\" paragraph={true}>Puzzle game for anyone to play! Create your own custom boards or play a random Solved game. <br/>Goal is to get ANY piece to stop on the  <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n        </Typography>\r\n        <br/>\r\n        <img width=\"300\" height=\"300\" src='/static/videos/basic2.gif'/>\r\n        <br/>\r\n    </div>\r\n        :\r\n    <div>\r\n        <Typography className={classes.titlehome} variant=\"h3\"> Testing New DailyChallenge Puzzles in December!\r\n        </Typography>\r\n        <Typography variant=\"p1\" paragraph={true}> ADDED WASD key movement and changed e-> reset board.\r\n        </Typography>\r\n        <Typography variant=\"p1\" paragraph={true}> Weekly 100 mode is out! goal is to get 100 moves for all 5 puzzles anyone who gets 100 will get a crown, very hard! good luck!\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"p1\" paragraph={true}> Checkout the website leaderboard where you can see the best performers in each robots catagory\r\n        </Typography>\r\n        <br/>\r\n    </div>\r\n\r\n    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n        return (<div className={classes.homepage} >\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                        {greeting}\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n\r\n                        <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                        </Typography>\r\n                        <Typography> 3/22/2021 added website leaderboard for each of the robots catagories.\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography> 3/22/2021 ADDED WASD for movement keys\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography> 3/22/2021 Added weekly 100 mode, no time-constraint, just get the answers!! tough one.\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography> 1/31/2021 Modified Daily Challenge to have multiple goals, also to try and stump cheaters using the software available to solve\r\n                        </Typography>\r\n                        <br/>\r\n                    </Grid>\r\n                    <Grid container item alignItems={\"stretch\"} spacing={2} alignItems=\"center\" justify=\"center\" >\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickWeekly100}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Weekly 100\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/Weekly100.png\"\r\n                                        title=\"Weekly 100\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Weekly 100\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickFindGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Find a Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/FindAGameCardIcon.png\"\r\n                                        title=\"Find a Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Find a Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/DailyChallengeIcon.png\"\r\n                                        title=\"Daily Challenge\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Daily Challenge\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickCreateGame}>\r\n                                    <CardMedia\r\n                                        className={classes.createboardcard}\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                        title=\"Create Board\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Create Board\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickRandomGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Play a Random Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/puzzle.png\"\r\n                                        title=\"Play a Random Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Play a Random Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickLearnGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                        title=\"Learn\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Learn\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Contemplative Reptile\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/PuzzleRushIcon.png\"\r\n                                        title=\"Contemplative Reptile\"\r\n                                    />\r\n                                    <CardContent style={{textAlign: 'center'}}>\r\n                                        <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            Puzzle Rush\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                    <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                    </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            Medium Mondays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Trouble Tuesday <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Wild Wednesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Tryhard Thursdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                        </Typography>\r\n                        <Typography style={{marginTop: '30px'}} className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                        </Typography>\r\n                        <DailyChallengeScores highscores={window.dchighscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (<div className={classes.homepage}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> Controls\r\n                    </Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Movement\r\n                        </Typography>\r\n                    <img width={'20%'} height={'auto'} src={\"/static/images/keyboard.png\"}/>\r\n                    <Typography>Pieces Move until they hit a wall or another piece</Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Selecting robots\r\n                        </Typography>\r\n                        <img width={'20%'} height={'auto'} src={\"/static/images/tab.png\"}/>\r\n\r\n                    <Typography>Or click</Typography>\r\n                    <Divider/>\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            HotKeys\r\n                        </Typography>\r\n                        <Typography variant=\"h6\">Undo</Typography> <img width={'20%'} height={'auto'} src={\"/static/images/Qkey.png\"}/>\r\n                        <Typography variant=\"h6\">Reset</Typography> <img width={'20%'} height={'auto'} src={\"/static/images/Ekey.png\"}/>\r\n                    <Divider />\r\n                    <div style={{marginTop:'100px'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                    </Typography>\r\n                    <Typography> 3/22/2021 added website leaderboard for each of the robots catagories.\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography> 3/22/2021 ADDED WASD for movement keys\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography> 3/22/2021 Added weekly 100 mode, no time-constraint, just get the answers!! tough one.\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography> 1/31/2021 Modified Daily Challenge to have multiple goals, also to try and stump cheaters using the software available to solve\r\n                        </Typography>\r\n                        <br/>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={8} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    {greeting}\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickWeekly100}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Weekly 100\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/Weekly100.png\"\r\n                                title=\"Weekly 100\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Weekly 100\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                      <CardActionArea onClick={props.handleClickFindGame}>\r\n                        <CardMedia\r\n                          component=\"img\"\r\n                          alt=\"Find a Game\"\r\n                          height=\"140\"\r\n                          image=\"/static/images/FindAGameCardIcon.png\"\r\n                          title=\"Find a Game\"\r\n                        />\r\n                        <CardContent>\r\n                          <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                            Find a Game\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                      <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                        <CardMedia\r\n                          component=\"img\"\r\n                          alt=\"Create Board\"\r\n                          height=\"140\"\r\n                          image=\"/static/images/DailyChallengeIcon.png\"\r\n                          title=\"Daily Challenge\"\r\n                        />\r\n                        <CardContent>\r\n                          <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                            Daily Challenge\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickCreateGame}>\r\n                            <CardMedia\r\n                                className={classes.createboardcard}\r\n                                component=\"img\"\r\n                                alt=\"Create Board\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                title=\"Create Board\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Create Board\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickRandomGame}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Play a Random Game\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/puzzle.png\"\r\n                                title=\"Play a Random Game\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Play a Random Game\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickLearnGame}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Create Board\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                title=\"Learn\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Learn\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Contemplative Reptile\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/PuzzleRushIcon.png\"\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent style={{textAlign: 'center'}}>\r\n                                <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Puzzle Rush\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                            Medium Mondays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Trouble Tuesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Wild Wednesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Tryhard Thursdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                        </Typography>\r\n                <Typography className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                </Typography>\r\n                <DailyChallengeScores highscores={window.dchighscores}/>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass WeeklyChallengePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game handleWeeklyClick={this.props.handleWeeklyClick}\r\n                    handleLineDirections={this.props.handleLineDirections}\r\n                    LineDirections={this.props.LineDirections}\r\n                    weeklyChallengeMode={'Yes'}\r\n                    playerStateList={this.props.playerStateList}\r\n                    savedMoves={this.props.savedMoves}\r\n                    games={this.props.weeklyChallengeGameslist}\r\n                    wc_id={this.props.wc_id}\r\n                    highscores={this.props.wchighscores}\r\n                    gamesWon={this.props.gamesWon}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default WeeklyChallengePage;","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst stylecol = () => {\r\n    return({\r\n            float: 'left',\r\n            width: '50%',\r\n            margin: 'auto',\r\n            padding: '0 50px',\r\n            marginTop: '6px',\r\n    });\r\n}\r\n\r\nconst spacing = () => {\r\n    return({\r\n            marginBottom: '10px',\r\n    });\r\n}\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    };\r\n\r\n    loginFacebook = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/facebook\";\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeLoginModal}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>Login to RobotsEvolved</DialogTitle>\r\n                <DialogContent dividers>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                           • Gain <FaCrown/>s when winning the Daily Challenge (stacks)\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                            • Be able to give a like to your favorite puzzles\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                            • Saving settings and your moves in the daily challenge\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography variant=\"body2\" display=\"inline\">\r\n                            • Profile Page to keep track of your submissions.\r\n                        </Typography>\r\n                    <div class=\"col\">\r\n                        <a href=\"#\" onClick={this.loginFacebook} id={\"buttonfb\"}>\r\n                          <i class=\"fa fa-facebook fa-fw\"></i> Login with Facebook\r\n                         </a>\r\n                        <a onClick={this.loginGoogle} href=\"#\" id={\"buttongoogle\"}><i class=\"fa fa-google fa-fw\">\r\n                          </i> Login with Google\r\n                        </a>\r\n                    </div>\r\n                    <Typography variant=\"caption\" display=\"block\">\r\n                            We will NEVER distribute/sell your facebook or google email address.\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeLoginModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <Button color=\"black\" onClick={this.handleClick}><b>{textToShow}</b></Button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport SignInButton from './SignInButton';\r\n\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '40px',\r\n        width: '40px',\r\n        marginTop: '5px',\r\n    };\r\n};\r\n\r\nconst divStyle = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        width: '200px',\r\n    };\r\n};\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    SignInButtonPressed = () => {\r\n        this.props.handleClick('Sign in');\r\n    }\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return <SignInButton onClick={this.SignInButtonPressed}/>\r\n        }\r\n        else {\r\n            return (\r\n                <div style={divStyle()}>\r\n                    <div>{window.userInfo.username}</div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic v2',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty) => {\r\n        console.log(difficulty)\r\n        axios.post('/puzzlerush', {difficulty: difficulty, action: 'start',type: this.state.value})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            isLoading: false,\r\n                        });\r\n                        this.props.handleClickPuzzleRush(difficulty,games,p_id);\r\n                });\r\n    };\r\n\r\n    handleClickEasyPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMediumPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                                {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                                                        ) : (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                         <Grid item xs={6}>\r\n                                         <ButtonGroup\r\n                                            orientation=\"vertical\"\r\n                                            color=\"primary\"\r\n                                            aria-label=\"vertical outlined primary button group\"\r\n                                          >\r\n                                            <Button onClick={this.handleClickEasyPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Easy\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickMediumPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Medium\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Hard\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickExHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Exteremely Hard\r\n                                            </Button>\r\n                                          </ButtonGroup>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                              <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                              <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                                <FormControlLabel value=\"classic v2\" control={<Radio />} label=\"Classic V2\" />\r\n                                                <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                                <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                              </RadioGroup>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic v2',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickRandomGameModal = (difficulty,type) => {\r\n        axios.get('/randomgame?difficulty=' + difficulty + '&type=' + type)\r\n            .then( res => {\r\n                var game = JSON.parse(res.data.game);\r\n                this.setState({\r\n                    isLoading: false,\r\n                });\r\n                this.props.handleClickRandomGame(game,difficulty);\r\n            })\r\n    }\r\n\r\n    handleClickEasy = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMedium = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHard = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHard = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickGodMode = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('GodTeir',this.state.value)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                            {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                            ) : (\r\n                            <Grid\r\n                                container xs={12}\r\n                                spacing={4}\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n                                wrap=\"nowrap\"\r\n                            >\r\n                                <Grid item xs={6}>\r\n                                    <ButtonGroup\r\n                                        orientation=\"vertical\"\r\n                                        color=\"primary\"\r\n                                        aria-label=\"vertical outlined primary button group\"\r\n                                      >\r\n                                        <Button onClick={this.handleClickEasy} variant=\"contained\" color=\"primary\">\r\n                                            Easy\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickMedium} variant=\"contained\" color=\"primary\">\r\n                                            Medium\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickHard} variant=\"contained\" color=\"primary\">\r\n                                            Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickExHard} variant=\"contained\" color=\"primary\">\r\n                                            Extremely Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickGodMode} variant=\"contained\" color=\"primary\">\r\n                                            God Tier\r\n                                        </Button>\r\n                                     </ButtonGroup>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl component=\"fieldset\">\r\n                                      <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                      <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                        <FormControlLabel value=\"classic v2\" control={<Radio />} label=\"Classic V2\" />\r\n                                        <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                        <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                      </RadioGroup>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageCreatedGamesDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.game.name,props.game.puzzledata,[],props.game.uri, props.game.authorname, props.game.votes, props.game.hasVoted);\r\n    }\r\n\r\n    return (<div style={{width: \"100%\"}}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography> Highscore Holder: {props.game.username} - {props.game.numMoves} </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">Play</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageSolutionDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.solution.name,props.solution.puzzledata,[],props.solution.uri);\r\n    }\r\n    return (<div style={{width: \"100%\"}}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={3}>\r\n                        <Typography style={{marginTop: 3}} color={'secondary'} variant={'body2'}> {props.solution.WinnerCreated} </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <Typography>\r\n                            Highscore Holder: {props.solution.WinnerUsername} - {props.solution.numMoves}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                            Play\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Table,TableContainer,TableHead,TableRow,TableCell,TableBody} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useStyles from '../Material-UI/themes';\r\nimport ProfilePageCreatedGamesDetails from '../components/ProfilePageComponents/ProfilePageCreatedGamesDetails';\r\nimport ProfilePageSolutionDetails from '../components/ProfilePageComponents/ProfilePageSolutionDetails';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\n\r\nexport default function ProfilePage(props) {\r\n    const classes = useStyles();\r\n    const submitAnswer = () => {\r\n        axios.post('/userUpdate',{newuser: document.getElementById(\"ProfileName\").value})\r\n            .then( res => {\r\n                if (res.data == 'OK') {\r\n                    window.location.href = '/';\r\n                }\r\n                else {\r\n                    setError(res.data);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const createData = (name,col1,col2,col3) => {\r\n        return {name,col1,col2,col3}\r\n    }\r\n\r\n    const columns = [\r\n          { id: 'difficulty', label: 'Difficulty', maxWidth: 75 },\r\n          { id: 'classic', label: 'Classic', maxWidth: 75 },\r\n          { id: 'random', label: 'Random', maxWidth: 75 },\r\n          { id: 'classic V2', label: 'Classic V2', maxWidth: 75},\r\n        ];\r\n    console.log(props);\r\n    const rows = [\r\n        createData('Easy', props.puzzlerushview.maxeasyc,props.puzzlerushview.maxeasyp,props.puzzlerushview.maxeasyc2),\r\n        createData('Medium', props.puzzlerushview.maxmediumc,props.puzzlerushview.maxmediump,props.puzzlerushview.maxmediumc2),\r\n        createData('Hard', props.puzzlerushview.maxhardc,props.puzzlerushview.maxhardp, props.puzzlerushview.maxhardc2),\r\n        createData('Extremely Hard', props.puzzlerushview.maxexhardc,props.puzzlerushview.maxexhardp, props.puzzlerushview.maxexhardc2)\r\n    ]\r\n\r\n    const rowseff = [\r\n        createData('Easy', props.puzzlerushview.maxeffec,props.puzzlerushview.maxeffep,props.puzzlerushview.maxeffec2),\r\n        createData('Medium', props.puzzlerushview.maxeffmc,props.puzzlerushview.maxeffmp,props.puzzlerushview.maxeffmc2),\r\n        createData('Hard', props.puzzlerushview.maxeffhc,props.puzzlerushview.maxeffhp,props.puzzlerushview.maxeffhc2),\r\n        createData('Extremely Hard', props.puzzlerushview.maxeffexc,props.puzzlerushview.maxeffexp,props.puzzlerushview.maxeffexc2)\r\n    ]\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [expandedGame, setExpandedGame] = React.useState(false);\r\n    const [expandedHighscores, setExpandedHighscores] = React.useState(false);\r\n    const handleChangeGame = (panel) => (event, isExpandedGame) => {\r\n        setExpandedGame(isExpandedGame ? panel : false);\r\n    };\r\n    const handleChangeHighscores = (panel) => (event, isExpandedHighScores) => {\r\n        setExpandedHighscores(isExpandedHighScores ? panel : false);\r\n    };\r\n    return (\r\n            <div style={gamepanel()}>\r\n                <Grid container spacing={4}>\r\n                    <Grid item xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <TextField className={classes.centeredProfile} id={\"ProfileName\"} label={\"Username\"} defaultValue={window.userInfo.username}/>\r\n                        <Button className={classes.centeredProfile} variant=\"contained\" color=\"secondary\" onClick={submitAnswer}>Change Username</Button>\r\n                        <Typography color={\"secondary\"}>{error}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Created</Typography>\r\n                        {\r\n                            props.gamesview.map((game,index) =>\r\n                                    <ExpansionPanel expanded={expandedGame === 'panelgame' + index} onChange={handleChangeGame('panelgame' + index)}>\r\n                                        <ExpansionPanelSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls={\"panel\" + index + \"-content\"}\r\n                                          id={\"panel\" + index + \"-header\"}\r\n                                        >\r\n                                          <Typography className={classes.heading}>{game.name}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Plays: {game.plays}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Likes: {game.votes}</Typography>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                          <ProfilePageCreatedGamesDetails\r\n                                            game={game}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                          />\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Solved</Typography>\r\n                        {\r\n                            props.solutionsview.map((solution,index) =>\r\n                                <ExpansionPanel expanded={expandedHighscores === 'panelhigh' + index} onChange={handleChangeHighscores('panelhigh' + index)}>\r\n                                    <ExpansionPanelSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls={\"panel\" + index + \"-content\"}\r\n                                      id={\"panel\" + index + \"-header\"}\r\n                                    >\r\n                                      <Typography className={classes.heading}>{solution.name}</Typography>\r\n                                      <Typography className={classes.secondaryHeading}>Best: {solution.numMoves}</Typography>\r\n                                      {solution.WinnerUserId == window.userInfo.userID ? <FaCrown style={{marginLeft: '30px'}}/> : null}\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <ProfilePageSolutionDetails\r\n                                            solution={solution}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                        />\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Puzzle Rush Records</Typography>\r\n                        <Typography variant=\"body1\">Most Puzzles Solved</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ maxWidth: column.maxWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rows.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                  <TableCell aligh=\"left\">{row.col3}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                        <Typography style={{marginTop: '40px'}} variant=\"body1\">Highest Efficiency Scores</Typography>\r\n                        <Typography variant=\"caption\">Calculated by (total puzzles completed) * 7 - (total redundany moves from best score)</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ maxWidth: column.maxWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rowseff.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                  <TableCell aligh=\"left\">{row.col3}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nexport default function RandomGamePage(props) {\r\n    return (\r\n        <Game\r\n              handleLineDirections={props.handleLineDirections}\r\n              LineDirections={props.LineDirections}\r\n              randomGame={'Yes'}\r\n              game={props.game}\r\n              difficulty={props.difficulty}\r\n         />\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PuzzleRushPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  puzzleRush={'Yes'}\r\n                  p_id={this.props.p_id}\r\n                  games={this.props.games}\r\n                  difficulty={this.props.difficulty}\r\n             />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PuzzleRushPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass LessonsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                learnMode={'Yes'}\r\n                games={window.learngameslist}/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default LessonsPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game daily_start_timer_seconds={this.props.daily_start_timer_seconds} daily_start_timer_minutes={this.props.daily_start_timer_minutes} handleClickDailyChallenge={this.props.handleClickDailyChallenge} handleLineDirections={this.props.handleLineDirections} LineDirections={this.props.LineDirections} dailyChallengeMode={'Yes'} playerStateList={this.props.playerStateList} savedMoves={this.props.savedMoves} games={this.props.dailyChallengeGameslist} dc_id={this.props.dc_id} highscores={this.props.dchighscores}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengePage;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Card,CardActions,Button,Avatar} from \"@material-ui/core\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function AboutUs(props) {\r\n    const facebookclick = () => {\r\n        window.open('https://www.facebook.com/RobotsEvolved-105278561284154')\r\n    }\r\n    const discordclick = () => {\r\n        window.open('https://discord.gg/VKMRQuE')\r\n    }\r\n    return (<div style={gamepanel()}>\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item spacing={4} xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card style={{display: 'inline-block', width: '100%'}}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    About\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    RobotsEvolved.com is based on the board game Ricochet Robots by Alex Randolph.\r\n                                    We have several game modes and variants that are inspired by the several Chess variants on the internet.\r\n                                    If you find any bugs or have any feature requests for RobotsEvolved please let me know by emailing robotsevolved@gmail.com or contacting me on FB from our FB page, I would love to hear some of the ideas people have. Ill get to developing the feature/fixing annoying bugs ASAP\r\n                                    If you use Google Login or Facebook Login I will NEVER email you or sell your information, it is strictly for user-identification.\r\n                                    Tell your friends about the site and get people on here!\r\n                                    <br/>\r\n                                    <br/>\r\n                                    Credit to Feyzio for our banner and robot logo Artwork!\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button onClick={facebookclick}>\r\n                                    <Avatar alt=\"Facebook\" src=\"https://facebookbrand.com/wp-content/uploads/2019/04/f_logo_RGB-Hex-Blue_512.png?w=512&h=512\" />\r\n                                </Button>\r\n                                <Button onClick={discordclick}>\r\n                                    <Avatar alt=\"Discord\" src=\"https://cdn.discordapp.com/attachments/675768013731135518/740251382862577694/icons8-discord-new-logo-48.png\" />\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Daily Challenge Rotation\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    The Daily Challenge rotates its difficulty every day as specified below with 2 x Random and 2 x Classic Type puzzles.\r\n                                    <br/>\r\n                                    Medium Mondays - 4 x Medium\r\n                                    <br/>\r\n                                    Trouble Tuesdays - 4 x Hard\r\n                                    <br/>\r\n                                    Wild Wednesdays - 4 x Medium\r\n                                    <br/>\r\n                                    Tryhard Thursdays - 4 x Hard\r\n                                    <br/>\r\n                                    Flyin Fridays - 4 x Medium\r\n                                    <br/>\r\n                                    Sleepy Saturdays - 4 x Medium\r\n                                    <br/>\r\n                                    Standard Sundays - 4 x Medium\r\n                                </Typography>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Classic Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Classic puzzles are based on the original Game. These Puzzles only have walls that are L shaped and a goal is in the center of one of the L puzzles.\r\n                                </Typography>\r\n                                <Typography variant={\"h4\"} display={\"inline\"}>\r\n                                    Random Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Random Puzzles are created by having a 10% chance for a wall to spawn in location possible, Goals and Robot placements are completely random also.\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Easy\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 5-8 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Medium\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 9-13 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 14-17 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"} >\r\n                                    Extremely Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 18-22 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    God Tier\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 23+ Moves, Note: there are a low number of these puzzles due to the CPU required to create them\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Paper class=\"card3\">\r\n                          <img src={\"/static/images/284457_10151211078621477_839164197_n.jpg\"} alt=\"Jane\"/>\r\n                          <div class=\"container3\">\r\n                            <h2>Kyle Kwasniewski</h2>\r\n                            <p class=\"title3\">Creator &amp; FullStack Dev.</p>\r\n                            <p>I work in Software Development and Dev-Ops in New York and consider myself a Ricochet Robots enthusiast so I decided to make this application as a way to better hone my skill in web frameworks as well as pass the time during the quarantine. I play Frisbee and Ski alot as well as play my fair share of Steam games.</p>\r\n                            <p>Thanks for playing!</p>\r\n                            <p>robotsevolved@gmail.com</p>\r\n                          </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/284f909d-0d5c-4ae1-b100-76c9d46ae7d4.png\"} alt=\"Mike\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Jonah Tollefson</h2>\r\n                                <p className=\"title3\">Front-End Dev.</p>\r\n                                <p>Went to college with these other goobers in the US and now I work professionally as a\r\n                                    software engineer in Germany. For RobotsEvolved, I mainly worked on the frontend\r\n                                    using React. Cats and Ultimate Frisbee are life.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/derekschultz.jpg\"} alt=\"John\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Derek Schultz</h2>\r\n                                <p className=\"title3\">Back-End Dev.</p>\r\n                                <p>Full time Software Engineer. Graduated from University of Wisconsin Platteville\r\n                                    with a BS in Computer Science and Minor in Business Administration. Worked on\r\n                                    most of the database aspect of RobotsEvolved and some back end functionality. I\r\n                                    enjoy video games, beer, and playing darts.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nexport default function ShowDailyPuzzleHistory(props) {\r\n    const handleDailyPuzzleHistoryClick = event => {\r\n        console.log(props.history)\r\n        props.handleDailyPuzzleHistoryClick(props.history)\r\n    }\r\n    return (\r\n            <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={handleDailyPuzzleHistoryClick}>\r\n                 answers\r\n            </Button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport ShowDailyPuzzleHistory from '../components/ShowDailyPuzzleHistory';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ProfilePageCreatedGamesDetails from \"../components/ProfilePageComponents/ProfilePageCreatedGamesDetails\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function DailyChallengeHistory(props) {\r\n    const [expandedPanel, setExpandedPanel] = React.useState(false);\r\n    const handleChangePanel = (panel) => (event, isExpanded) => {\r\n        setExpandedPanel(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles();\r\n    return (<div style={gamepanel()}>\r\n                <Typography className={classes.titlehome} variant=\"h3\">Daily Challenge History</Typography>\r\n                {\r\n                    props.dailychallengehistory.map((history, index) =>\r\n                        <ExpansionPanel expanded={expandedPanel === 'panelgame' + index} onChange={handleChangePanel('panelgame' + index)}>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={\"panel\" + index + \"-content\"}\r\n                                id={\"panel\" + index + \"-header\"}\r\n                            >\r\n                                <Grid container>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography className={classes.heading}>{history.created}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={5}>\r\n                                        <Typography noWrap style={{marginLeft: 5, marginRight: 5}} className={classes.secondaryHeading}>{history.nameSubmitted}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <ShowDailyPuzzleHistory history={history} handleDailyPuzzleHistoryClick={props.handleDailyPuzzleHistoryClick}/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <Grid container spacing={0}>\r\n                                    <Grid item xs={12} md={3}>\r\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            <FaCrown/> {history.nameSubmitted} - {history.scoreSubmitted} <FaCrown/>\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={3}>\r\n                                        <Typography className={classes.secondaryHeading}>Lowest possible solution: {history.bestScore}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                    )\r\n                }\r\n           </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengeHistoryAnswersPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        console.log(this.props.history);\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                dailyChallengeModeAnswers={'Yes'}\r\n                nameSubmitted={this.props.history.nameSubmitted}\r\n                bestScore={this.props.history.bestScore}\r\n                created={this.props.history.created}\r\n                games={this.props.history.games}\r\n                playerStateList={this.props.history.playerStateList}\r\n                scoreSubmitted={this.props.history.scoreSubmitted}\r\n                solutionDataSubmitted={this.props.history.solutionDataSubmitted}\r\n                submitted={this.props.history.submitted}\r\n                user_id={this.props.user_id}\r\n                />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengeHistoryAnswersPage;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n  },\r\n}));\r\n\r\nexport default function LoadingPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress size={120} color=\"secondary\" />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport DailyChallengeStartModal from './containers/Modals/DailyChallengeStartModal';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\r\nimport Leaderboard from './Pages/Leaderboard';\r\nimport clsx from 'clsx';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport Home from './Pages/Home';\r\nimport WeeklyChallengePage from './Pages/WeeklyChallengePage';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\nimport axios from 'axios';\r\nimport Game from './containers/Game';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport BrushIcon from '@material-ui/icons/Brush';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"./constants/constants\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport PuzzleRushDifficultyModal from \"./containers/Modals/PuzzleRushDifficultyModal\";\r\nimport RandomGameDifficultyModal from \"./containers/Modals/RandomGameDifficultyModal\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport RandomGamePage from \"./Pages/RandomGamePage\";\r\nimport PuzzleRushPage from \"./Pages/PuzzleRushPage\";\r\nimport LessonsPage from \"./Pages/LessonsPage\";\r\nimport DailyChallengePage from \"./Pages/DailyChallenge\";\r\nimport AboutUs from \"./Pages/AboutUs\";\r\nimport DailyChallengeHistory from \"./Pages/DailyChallengeHistory\";\r\nimport DailyChallengeHistoryAnswersPage from \"./Pages/DailyChallengeHistoryAnswersPage\";\r\nimport { FaMedal } from 'react-icons/fa';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport {GiPuzzle,GiPodium} from \"react-icons/gi\";\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    drawerHeaderRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerHeaderLeft: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    toolbar1: {\r\n        backgroundColor: '#14A76C',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    dividerFullWidth: {\r\n        margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    darkmode: {\r\n          body: '#363537',\r\n          text: '#FAFAFA',\r\n          toggleBorder: '#6B8096',\r\n          gradient: 'linear-gradient(#091236, #1E215D)',\r\n    },\r\n});\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (window.uri === '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickWeekly100={this.handleWeeklyClick} handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n                dailychallengehistoryloaded: false,\r\n                profileDataloaded: false,\r\n            };\r\n        }\r\n        else {\r\n            if (window.token.g_id == undefined) {\r\n                const linedir = window.loggedin === 'No' ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={linedir} name={window.token.name} gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri} authorname={window.token.authorname} votes={window.token.votes} hasVoted={window.token.hasVoted} signInModalOpen={this.SignInButtonPressed}/>, //when uri is entered to play specific game\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                };\r\n            }\r\n            else {\r\n                const linedir = window.loggedin === 'No' ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={linedir} randomGame={'Yes'} game={window.token} difficulty={window.token.g_difficulty}/>,\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                }\r\n            }\r\n        }\r\n        this.state.openChat = false;\r\n        this.state.chatAnchor = null;\r\n        this.state.open = window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? false : true;\r\n        this.state.mobileAnchorEl = null;\r\n        this.state.mobileMenuOpen = false;\r\n        this.state.showLoginModal = false;\r\n        this.state.showDailyChallengeModal = false;\r\n        this.state.showPuzzleRushModal = false;\r\n        this.state.loadingPage = false;\r\n        this.state.filterTerm = 'None'\r\n        this.state.searchTerm = ''\r\n        this.state.findWindowHeight = 0;\r\n        this.state.numFindGames = window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? 8 : 20;\r\n         if (window.loggedin === 'Yes') {\r\n            this.state.LineDirections = window.userInfo.LineDirFlag === 'Y';\r\n         }\r\n         else {\r\n            this.state.LineDirections = true;\r\n         }\r\n    }\r\n\r\n    handleChatOpen = (event) => {\r\n        this.setState({\r\n            openChat: true,\r\n            chatAnchor: event.currentTarget\r\n        })\r\n    };\r\n\r\n    handleChatClose = () => {\r\n      this.setState({\r\n          openChat: false\r\n      })\r\n    };\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState( {\r\n            open: false\r\n        })\r\n    };\r\n\r\n    handleLineDirections = (boolean) => {\r\n        if (window.loggedin === 'Yes') {\r\n            axios.post('/settingsChange', {LineDirections: boolean ? 'Y' : 'N'})\r\n                .then( res => {\r\n                    console.log('changed');\r\n                });\r\n        }\r\n        this.setState({\r\n            LineDirections: boolean\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallenge = (event) => {\r\n        event.preventDefault();\r\n        console.log(window.isDailyStarted)\r\n        if (window.isDailyStarted === 'False') {\r\n            this.setState({\r\n                showDailyChallengeModal: true,\r\n            });\r\n        }\r\n        else {\r\n            this.handleClickDailyChallengeModal();\r\n        }\r\n    };\r\n\r\n\r\n    handleClickDailyChallengeModal = () => {\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeData')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    const dc_movesList = res.data.dc_movesList == null ? null : JSON.parse(res.data.dc_movesList)\r\n                    const dc_playerList = res.data.dc_playerList == null ? null : JSON.parse(res.data.dc_playerList)\r\n                    const daily_start_timer_minutes = res.data.daily_start_timer_minutes;\r\n                    const daily_start_timer_seconds = res.data.daily_start_timer_seconds;\r\n                    console.log(daily_start_timer_seconds);\r\n                    console.log(daily_start_timer_minutes);\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                                        PageSelected: <DailyChallengePage\r\n                                                            handleClickDailyChallenge={this.handleClickDailyChallenge}\r\n                                                            dailyChallengeGameslist={JSON.parse(res.data.dailyChallengeGameslist)}\r\n                                                            dc_id={res.data.dc_id}\r\n                                                            dchighscores={JSON.parse(res.data.dchighscores)}\r\n                                                            handleLineDirections={this.handleLineDirections}\r\n                                                            LineDirections={this.state.LineDirections}\r\n                                                            savedMoves={dc_movesList}\r\n                                                            playerStateList={dc_playerList}\r\n                                                            daily_start_timer_seconds={daily_start_timer_seconds}\r\n                                                            daily_start_timer_minutes={daily_start_timer_minutes}\r\n                                        />,\r\n                                        open: isOpen,\r\n                                        showDailyChallengeModal: false,\r\n                                        loadingPage: false,\r\n                                    });\r\n                        }\r\n                    });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n            showDailyChallengeModal: false,\r\n        });\r\n    };\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState( {\r\n            open: true\r\n        });\r\n    };\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type === 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    };\r\n\r\n    handleClickRandomGameModal = (game,difficulty) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showRandomGameModal: false,\r\n            PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} randomGame={'Yes'} game={game} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickRandomGame = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: true,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickPuzzleRush = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: true,\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallengeHistory = (event) => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeHistory')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    var historydata = JSON.parse(res.data)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                            PageSelected: <DailyChallengeHistory handleDailyPuzzleHistoryClick={this.handleDailyPuzzleHistoryClick} dailychallengehistory={historydata}/>,\r\n                            challengeHistoryData: historydata,\r\n                            dailychallengehistoryloaded: true,\r\n                            open: isOpen,\r\n                            loadingPage: false,\r\n                        });\r\n                    }\r\n            });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleDailyPuzzleHistoryClick = history => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <DailyChallengeHistoryAnswersPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} history={history}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty,games,p_id) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showPuzzleRushModal: false,\r\n            PageSelected: <PuzzleRushPage handleClickPlayAgain={this.handleClickPuzzleRush} handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    };\r\n\r\n    closeDailyChallengeModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showDailyChallengeModal: false\r\n        });\r\n    };\r\n\r\n\r\n    closePuzzleRushLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: false\r\n        });\r\n    };\r\n\r\n    closeRandomGameLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: false\r\n        });\r\n    };\r\n\r\n    handleGameClick = (name, gamedata, highscores, uri, authorname, votes, hasVoted) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} name={name} highscores={highscores} gamedata={gamedata} uri={uri} authorname={authorname} votes={votes} hasVoted={hasVoted} signInModalOpen={this.SignInButtonPressed}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <CreateGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} state={\"new\"}/>,\r\n             open: isOpen,\r\n             loadingPage: false,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickProfile = event => {\r\n        if (window.loggedin === 'Yes') {\r\n            this.state.loadingPage = true;\r\n                    axios.get('/getProfileData')\r\n                        .then( res => {\r\n                            var isOpen = this.state.open;\r\n                            if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                                isOpen = false\r\n                            }\r\n                            var profileData = res.data;\r\n                            var gamesview = JSON.parse(profileData.gamesview)\r\n                            var solutionsview = JSON.parse(profileData.solutionsview)\r\n                            var puzzlerushview = JSON.parse(profileData.puzzlerushview)\r\n                            if (this.state.loadingPage) {\r\n                                this.setState({\r\n                                    PageSelected: <ProfilePage handleClickPlayGame={this.handleGameClick} gamesview={gamesview} solutionsview={solutionsview} puzzlerushview={puzzlerushview}/>,\r\n                                    gamesview: gamesview,\r\n                                    solutionsview: solutionsview,\r\n                                    puzzlerushview: puzzlerushview,\r\n                                    profileDataloaded: true,\r\n                                    open: isOpen,\r\n                                    loadingPage: false,\r\n                                });\r\n                            }\r\n                        });\r\n                    this.setState({\r\n                        PageSelected: <LoadingPage/>,\r\n                    });\r\n                }\r\n        else {\r\n            this.SignInButtonPressed('Sign in');\r\n        }\r\n    };\r\n\r\n    setNumFindGames = (num,filterTerm,searchTerm) => {\r\n        this.setState({\r\n            numFindGames: num,\r\n            searchTerm: searchTerm,\r\n            filterTerm: filterTerm,\r\n        })\r\n    }\r\n\r\n    setFindWindow = height => {\r\n        this.setState({\r\n            findWindowHeight: height\r\n        })\r\n    }\r\n\r\n    handleWeeklyClick = event => {\r\n        this.state.loadingPage = true;\r\n        axios.get('/getWCData')\r\n            .then( res => {\r\n                    console.log(res.data);\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    const wc_movesList = res.data.wc_movesList == null ? null : JSON.parse(res.data.wc_movesList)\r\n                    const wc_playerList = res.data.wc_playerList == null ? null : JSON.parse(res.data.wc_playerList)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                                        PageSelected: <WeeklyChallengePage\r\n                                                            handleWeeklyClick={this.handleWeeklyClick}\r\n                                                            weeklyChallengeGameslist={JSON.parse(res.data.weeklyChallengeGameslist)}\r\n                                                            wc_id={res.data.wc_id}\r\n                                                            wchighscores={JSON.parse(res.data.wchighscores)}\r\n                                                            handleLineDirections={this.handleLineDirections}\r\n                                                            LineDirections={this.state.LineDirections}\r\n                                                            savedMoves={wc_movesList}\r\n                                                            playerStateList={wc_playerList}\r\n                                                            gamesWon={JSON.parse(res.data.wc_gamesWon)}\r\n                                        />,\r\n                                        open: isOpen,\r\n                                        loadingPage: false,\r\n                                    });\r\n                        }\r\n                    });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.post('/search', {search: this.state.searchTerm, filter: this.state.filterTerm, offset: 0, numGames: this.state.numFindGames})\r\n            .then( res => {\r\n                const gameslist = JSON.parse(res.data.gameslist);\r\n                const highscoreslist = JSON.parse(res.data.highscoreslist);\r\n                var isOpen = this.state.open;\r\n                if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                    isOpen = false\r\n                }\r\n                if (this.state.loadingPage) {\r\n                    this.setState({\r\n                        PageSelected: <FindGame findWindowHeight={this.state.findWindowHeight} setFindWindow={this.setFindWindow} setNumFindGames={this.setNumFindGames} gameslist={gameslist} highscoreslist={highscoreslist} handleGameClick={this.handleGameClick}/>,\r\n                        open: isOpen,\r\n                        loadingPage: false,\r\n                    });\r\n                }\r\n        });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleHomePageClick = () => {\r\n        this.setState({\r\n            PageSelected: <Home handleClickWeekly100={this.handleWeeklyClick} handleClickWeekly100={this.handleWeeklyClick} handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickWebsiteLeaderboard = event => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.get('/leaderboard')\r\n            .then( res => {\r\n                const dailyChallenge_leaderboard = res.data.dailyChallenge_leaderboard\r\n                const findGame_leaderboard = res.data.findGame_leaderboard\r\n                const puzzle_rush_leaderboard = res.data.puzzle_rush_leaderboard\r\n                var isOpen = this.state.open;\r\n                if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                    isOpen = false\r\n                }\r\n                if (this.state.loadingPage) {\r\n                    this.setState({\r\n                        PageSelected: <Leaderboard\r\n                                        dailyChallenge_leaderboard={dailyChallenge_leaderboard}\r\n                                        findGame_leaderboard={findGame_leaderboard}\r\n                                        puzzle_rush_leaderboard={puzzle_rush_leaderboard}\r\n                                        />,\r\n                        open: isOpen,\r\n                        loadingPage: false,\r\n                    });\r\n                }\r\n        });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n\r\n    }\r\n\r\n    handleClickAboutUs = event => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <AboutUs/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickLearnGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <LessonsPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileAnchorEl: null,\r\n            mobileMenuOpen: false\r\n        });\r\n    };\r\n\r\n    showPage = () => {\r\n        return(\r\n            this.state.PageSelected\r\n        )\r\n    };\r\n\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({\r\n            mobileAnchorEl: event.currentTarget,\r\n            mobileMenuOpen: true\r\n        });\r\n    };\r\n\r\n    bannerImg = () => {\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            return (\r\n                <img\r\n                    onClick={this.handleHomePageClick}\r\n                    width={300}\r\n                    height={75}\r\n                    style={{marginTop: -15, marginBottom: -25}}\r\n                    src=\"/static/images/robots_evolved_banner.png\"\r\n                />\r\n            )\r\n        }\r\n        return (\r\n            <img\r\n                onClick={this.handleHomePageClick}\r\n                width={671}\r\n                height={125}\r\n                style={{marginTop: -35, marginBottom: -40}}\r\n                src=\"/static/images/robots_evolved_banner.png\"\r\n            />\r\n        )\r\n    }\r\n\r\n    iconImg = () => {\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            return (\r\n                <img onClick={this.handleHomePageClick} width={40} height={40} src=\"/static/images/logo150.png\"/>\r\n            )\r\n        }\r\n        return (\r\n            <img onClick={this.handleHomePageClick} width={50} height={50} src=\"/static/images/logo150.png\"/>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const theme = createMuiTheme({\r\n            palette: {\r\n                primary: teal,\r\n                secondary: {\r\n                    main: '#e65100',\r\n                },\r\n            }\r\n        });\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <AppBar\r\n                        position=\"fixed\"\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: this.state.open,\r\n                        })}\r\n                     >\r\n                        <Toolbar className={classes.toolbar1}>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={this.handleDrawerOpen}\r\n                                edge=\"start\"\r\n                                className={clsx(classes.menuButton, this.state.open && classes.hide)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            {this.iconImg()}\r\n                            {this.bannerImg()}\r\n                            <div className={classes.grow} />\r\n                            <div className={classes.sectionDesktop}>\r\n                                <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.sectionMobile}>\r\n                                <IconButton\r\n                                    aria-label=\"show more\"\r\n                                    aria-controls={\"primary-search-account-menu-mobile\"}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.handleMobileMenuOpen}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <MoreIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Menu\r\n                        anchorEl={this.state.mobileAnchorEl}\r\n                        anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        id={\"primary-search-account-menu-mobile\"}\r\n                        keepMounted\r\n                        transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        open={this.state.mobileMenuOpen}\r\n                        onClose={this.handleMobileMenuClose}\r\n                    >\r\n                        <MenuItem>\r\n                            <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                    <Drawer\r\n                        id=\"MainDrawer\"\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.state.open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div className={classes.drawerHeader}>\r\n                            <div className={classes.drawerHeaderLeft}>\r\n                                <SignInButton onClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.drawerHeaderRight}>\r\n                                <IconButton onClick={this.handleDrawerClose}>\r\n                                    {useTheme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Play\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Find a Game'} onClick={this.handleClickFindGame}>\r\n                                <ListItemIcon><SearchIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Find a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Weekly 100'} onClick={this.handleWeeklyClick}>\r\n                                <ListItemIcon><GiPuzzle /> </ListItemIcon>\r\n                                <ListItemText primary={'Weekly 100'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge'} onClick={this.handleClickDailyChallenge}>\r\n                                <ListItemIcon><TodayIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Create a Game'} onClick={this.handleClickCreateGame}>\r\n                                <ListItemIcon><BrushIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Create a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Random Game'} onClick={this.handleClickRandomGame}>\r\n                                <ListItemIcon><CasinoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Random Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Puzzle Rush'} onClick={this.handleClickPuzzleRush}>\r\n                                <ListItemIcon><TimerIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Puzzle Rush'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Learn\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Lessons'} onClick={this.handleClickLearnGame}>\r\n                                <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Lessons'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Community\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Profile'} onClick={this.handleClickProfile}>\r\n                                <ListItemIcon><AccountBoxIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Profile'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge History'} onClick={this.handleClickDailyChallengeHistory}>\r\n                                <ListItemIcon><FaMedal /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge History'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Website Leaderboard'} onClick={this.handleClickWebsiteLeaderboard}>\r\n                                <ListItemIcon><GiPodium /></ListItemIcon>\r\n                                <ListItemText primary={'Website Leaderboard'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Tools\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'About'} onClick={this.handleClickAboutUs}>\r\n                                <ListItemIcon><InfoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'About'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Dark Mode'} onClick={this.props.handleClickDarkMode}>\r\n                                <ListItemIcon><Brightness6Icon /></ListItemIcon>\r\n                                <ListItemText primary={'Space Mode (Beta)'} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n                    <main className={clsx(classes.content, {\r\n                        [classes.contentShift]: this.state.open,\r\n                    })}>\r\n                        <div className={classes.drawerHeader} />\r\n                        {this.showPage()}\r\n                    </main>\r\n                    <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n                    <PuzzleRushDifficultyModal\r\n                        closeModal={this.closePuzzleRushLoginModal}\r\n                        show={this.state.showPuzzleRushModal}\r\n                        handleClickPuzzleRush={this.handleClickPuzzleRushModal}\r\n                    />\r\n                    <RandomGameDifficultyModal\r\n                        closeModal={this.closeRandomGameLoginModal}\r\n                        show={this.state.showRandomGameModal}\r\n                        handleClickRandomGame={this.handleClickRandomGameModal}\r\n                    />\r\n                    <DailyChallengeStartModal\r\n                        closeModal={this.closeDailyChallengeModal}\r\n                        show={this.state.showDailyChallengeModal}\r\n                        startDaily={this.handleClickDailyChallengeModal}\r\n                    />\r\n                </div>\r\n                <div style={{position: \"fixed\", bottom: \"10px\", right: \"10px\"}}>\r\n                    <IconButton\r\n                        style = {{backgroundColor: \"#14a76c\"}}\r\n                        onClick={this.handleChatOpen}\r\n                    >\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n                    <Popover\r\n                        open={this.state.openChat}\r\n                        anchorEl={this.state.chatAnchor}\r\n                        onClose={this.handleChatClose}\r\n                        anchorOrigin={{\r\n                            vertical: \"top\",\r\n                            horizontal: \"left\"\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"right\"\r\n                        }}\r\n                    >\r\n                        <iframe\r\n                            src=\"https://titanembeds.com/embed/740127738345554021?css=140&username=guest&defaultchannel=740270339900178583\"\r\n                            height= {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? (parseInt(window.innerHeight/2)) + '': \"600\"}\r\n                            width= {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? (window.innerWidth - 40) + '': \"400\"}\r\n                            frameBorder=\"0\"\r\n                        />\r\n                    </Popover>\r\n                </div>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);\r\n","\r\n\r\n\r\nimport React from 'react';\r\nimport DarkModeApp from './DarkMode/App';\r\nimport App from './App';\r\n\r\nexport default class ContainerApplication extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Page: <App handleClickDarkMode={this.handleClickDarkMode}/>\r\n        }\r\n\r\n    }\r\n\r\n    handleClickDarkMode = () => {\r\n        this.setState({\r\n            Page: <DarkModeApp/>\r\n        })\r\n    }\r\n\r\n    render = () => this.state.Page;\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport ContainerApplication from './ContainerApplication';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><ContainerApplication /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}