{"version":3,"sources":["constants/constants.js","components/DailyMovesView.jsx","components/CreateBoardGoalSelector.jsx","components/LearnGameItems.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinModal.jsx","components/YouWinDailySingleModal.js","components/YouWinDailyFinalModal.js","components/AddPuzzleModal.jsx","components/ToggleSettings.js","components/Timer.js","containers/DisplayView.js","components/HighScores.jsx","components/DailyChallengeScores.jsx","containers/Modals/PuzzleRushFinishedModal.js","containers/Modals/RandomGameStatsModal.jsx","components/CloseIconWithOnClick.jsx","components/DescriptionList.jsx","components/YouWinLessonModal.js","components/ShowDailyChallengeScoresCard.jsx","components/DailyChallengeHistoryData.js","components/boardgenerator.js","containers/Modals/BoardResetModal.js","containers/Game.js","Pages/CreateGame.js","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","Material-UI/themes.jsx","Pages/Home.js","containers/Modals/LoginModal.js","components/SignInButton.js","components/LoggedInUser.js","containers/Modals/PuzzleRushDifficultyModal.js","containers/Modals/RandomGameDifficultyModal.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","components/ProfilePageComponents/ProfilePageCreatedGamesDetails.js","components/ProfilePageComponents/ProfilePageSolutionDetails.js","Pages/ProfilePage.js","Pages/RandomGamePage.js","Pages/PuzzleRushPage.js","Pages/LessonsPage.js","Pages/DailyChallenge.js","Pages/AboutUs.js","components/ShowDailyPuzzleHistory.js","Pages/DailyChallengeHistory.js","Pages/DailyChallengeHistoryAnswersPage.js","components/LoadingPage.jsx","App.js","serviceWorker.js","index.js"],"names":["UP","GOAL_IMAGE","DIRECTION_MAP_IMAGES","yellow","DOWN","LEFT","RIGHT","red","green","blue","DailyMovesView","props","resetToBest","moveHistory","playerState","this","length","style","width","float","display","Typography","Divider","map","move","src","robot","colorSignifier","dir","Button","color","onClick","React","Component","CreateBoardGoalSelector","useState","wildchecked","setWildChecked","Paper","FormControl","backgroundColor","textAlign","component","FormLabel","FormGroup","aria-label","row","FormControlLabel","value","control","Checkbox","handleWildCardClick","checked","label","labelPlacement","handleColoredClick","LearnGameItems","handleClick","handleClickGame","index","selected","variant","name","MovesView","styleoutside","dimension","position","dim","height","top","left","styleinside","styleinside2","Square","border","margin","overflow","children","id","transition","styleoutsidedraggable","boxShadow","undefined","backgroundSize","backgroundImage","borderRadius","Robot","onStopDragHandler","e","handleCreateMode","isCreateMode","buildMode","x","y","grid","draggableGrid","onStop","bounds","orientation","opacity","wallThickness","wallOffset","Wall","userSelect","styledragable","Goal","show","endPosition","obj","key","hasOwnProperty","YouWinModal","Dialog","disableAutoFocus","disableEnforceFocus","onClose","handleClose","container","document","getElementById","BackdropProps","aria-labelledby","open","maxWidth","DialogTitle","DialogContent","dividers","numMoves","TextField","defaultValue","username","DialogActions","submitAnswer","resetPuzzle","YouWinDailySingleModal","totalMoves","undoMove","moveNextPuzzle","YouWinDailyFinalModal","handleClickSubmitGame","setState","error","Alert","severity","newPlayerState","state","submitted","AddPuzzleModal","campaignPuzzle","window","userInfo","userID","submitPuzzleCampaign","submitPuzzle","ToggleSettings","event","Switch","onChange","showColoredLineDirections","Timer","minutes","seconds","timer","myInterval","setInterval","puzzleRushTimeUp","clearInterval","valuetext","DisplayView","createMode","fullWidth","handleCreateBoardClick","toggleBuildMode","createBoardPressed","copyToClipboard","dummy","createElement","body","appendChild","location","host","uri","select","execCommand","removeChild","copiedClipboard","thisThing","copyButtonText","setTimeout","handleDimensionChange","getElementsByClassName","blur","parseInt","toString","DimensionChanged","showPuzzleLink","isPuzzleRush","isLesson","isDailyChallengeAnswers","isDailyChallenge","paddingBottom","marginRight","marginTop","marginBottom","ButtonGroup","toggleLineIndicators","gutterBottom","Slider","onChangeCommitted","getAriaValueText","step","marks","min","max","squareSizeValue","valueLabelDisplay","highscores","Grid","item","xs","marginleft","highscore","elevation","spacing","comment","userid","created","highscorestyle","wins","i","crowns","push","CrownCounter","user_id","score","direction","PuzzleRushWinModal","closeModal","onBackdropClick","difficulty","md","List","dense","ListItem","ListItemText","primary","secondary","numPuzzlesCompleted","averageTime","averageMoves","differenceOptimal","movesPerSecond","handleClickPlayAgain","RandomGameStatsModal","showStatsModal","handleShowRandomAnswers","answers","lowestMoveSequence","lowestMoves","CloseIconWithOnClick","onMouseDown","Descriptionlist","tipsText","text","ListItemSecondaryAction","IconButton","edge","handleCloseToolTips","YouWinLessonModal","useStyles","makeStyles","root","bullet","transform","title","fontSize","pos","ShowDailyChallengeScoresCard","classes","Card","className","CardContent","bestScore","MovesforPuzzle","MoveSequence","DailyChallengeHistoryData","difficultyforPuzzle","lowestMovesforPuzzle","nameSubmitted","scoreSubmitted","playerMovedSequence","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","type","boardState","wallVerticle","wallHorizontal","goal","randompos1","randompos2","randompos3","randompos4","randomPositions","extend","j","gameWon","playerStart","slice","BoardResetModal","createBoardHandler","preventDefault","percent","createBoard","paddingRight","Input","inputProps","placeholder","addEventListener","keyCode","target","indexOf","formatGeneratedMoveSequence","moves","images","charAt","setDefaultSquareSize","boardWidth","boardHeight","drawerWidth","getComputedStyle","windowWidth","innerWidth","settingstop","innerHeight","settings","squarevalue","ColoredLineDirections","Game","updateHighscores","axios","get","then","res","highscoresdata","JSON","parse","data","FindhighscoreIsDiff","squareSize","copiedToClipboard","check","tocheck","toreturn","DChighscoreIsDiff","updateDailyHighscores","dc_id","dailyChallengeSessionBestHistory","dailyChallengeSessionBestPlayerState","handleClickDailyChallenge","dchighscores","componentDidMount","onkeydown","handleKeyDown","loadedGame","IntervalId","dailyChallengeMode","componentWillUnmount","newDirection","tabSelector","handleUndoMove","handlePlayerMovement","robotSelect","robotSelected","namesubmit","themoveHistory","post","puzzledata","authorname","history","handleLineDirections","solutiondata","dailySubmittedSucessfully","showBoardResetPanelModal","closeRandomStatsModal","closeCreateBoardModal","closePuzzleRushFinishedModal","showPuzzleRushFinishedModal","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","nextLessonPuzzle","puzzle","numPuzzleon","handleLearnClickGame","totalMovesDiff","solutiondifference","totalMovesList","avgMoves","p_id","differenceFrom","console","log","percentile","submitDailyAnswer","LastRobotPosition","moveHistoryList","playerStateList","dc_movesList","dc_playerList","checkwin","coloredGoals","Won","player","found","colorfound","puzzleRush","randomGame","dailyChallengeModeAnswers","gamesWonDaily","games","handleDailyClickGame","learnMode","g_id","solutionmoves","g_moves","g_puzzledata","newarray","concat","oldPositon","prevPosition","splice","description","handleDailyClickAnswersGame","g_solutiondata","g_difficulty","solutionDataSubmitted","goalItem","newgoal","newColoredGoals","filter","trimName","separated","split","word","substring","loadSidebar","game","paddingTop","dailyDayName","DailyChallengeScores","alignItems","author","borderTopRightRadius","borderBottomRightRadius","startIcon","hasVoted","updateLike","size","borderTopLeftRadius","borderBottomLeftRadius","marginLeft","votes","HighScores","action","vote","newHasVoted","newVotes","isNaN","catch","_","signInModalOpen","handlePlayerMovementFromMouse","moveObj","pop","createModeWallClick","indexToChange","newWallHorizontal","wallH","newWallVerticle","wallV","onStopDragHandlerGoal","round","lastY","lastX","newGoals","goals","gamedata","g_name","savedMoves","g_uri","pushState","settingsWidth","settingsHeight","percentWall","settingsPercent","LineDirections","paddingLeft","sm","numPuzzleRush","zeroMinWidth","Board","square","ColoredLineDirection","ColoredLine","puzzleRushPercentileCompleted","withRouter","CreateGame","withStyles","theme","minWidth","background","padding","upperPadding","upperPaddingButton","bottom","lowerPadding","rightSideText","leftSideText","numberOfHighScores","trimNameShort","justifyContent","Tooltip","plays","handleGameClick","disableGutters","FindGame","handleFilterMenuOpen","anchorEl","currentTarget","keycode","handleSearchSubmit","scrollTo","findWindowHeight","setFindWindow","scrollY","handleCloseFilterMenuMostPlayed","searchTerm","searchRef","search","offset","gameslist","highscoreslist","setNumFindGames","lastSearch","hasMore","handleCloseFilterMenuMostLiked","handleCloseFilterMenuHighest","justify","loadMoreItems","isLoadingSearch","offsetSearch","handleCloseFilterMenu","align","InputBase","input","inputRef","ref","onKeyPress","iconButton","divider","Menu","keepMounted","Boolean","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","FindGameElements","pageStart","loadMore","bind","loader","CircularProgress","threshold","flex","PlayGame","flexGrow","homepage","griditems","paper","Width","image","img","maxHeight","baseExpansion","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","darkmode","iconcards","marginBotton","iconcardsDaily","titlehome","fontFamily","titledailyroto","iconfonts","createboardcard","content","demo","centeredProfile","expandedPanelDCH","table","ComplexGrid","paragraph","CardActionArea","handleClickFindGame","CardMedia","alt","handleClickCreateGame","handleClickRandomGame","handleClickLearnGame","handleClickPuzzleRush","dividerFullWidth","LoginModal","loginGoogle","href","loginFacebook","closeLoginModal","class","SignInButton","loggedin","textToShow","LoggedInUser","SignInButtonPressed","profilePicture","PuzzleRushDifficultyModal","handleClickPuzzleRushModal","isLoading","handleClickEasyPuzzleRush","handleClickMediumPuzzleRush","handleClickHardPuzzleRush","handleClickExHardPuzzleRush","handleChange","wrap","RadioGroup","Radio","handleClickRandomGameModal","handleClickEasy","handleClickMedium","handleClickHard","handleClickExHard","handleClickGodMode","ProfilePageCreatedGamesDetails","handleClickPlayGame","ProfilePageSolutionDetails","solution","WinnerCreated","WinnerUsername","ProfilePage","createData","col1","col2","columns","rows","puzzlerushview","maxeasyc","maxeasyp","maxmediumc","maxmediump","maxhardc","maxhardp","maxexhardc","maxexhardp","rowseff","maxeffec","maxeffep","maxeffmc","maxeffmp","maxeffhc","maxeffhp","maxeffexc","maxeffexp","setError","expandedGame","setExpandedGame","expandedHighscores","setExpandedHighscores","newuser","gamesview","ExpansionPanel","expanded","panel","isExpandedGame","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","solutionsview","isExpandedHighScores","WinnerUserId","TableContainer","Table","TableHead","TableRow","column","TableCell","TableBody","RandomGamePage","PuzzleRushPage","LessonsPage","learngameslist","DailyChallengePage","dailyChallengeGameslist","AboutUs","CardActions","Avatar","ShowDailyPuzzleHistory","handleDailyPuzzleHistoryClick","DailyChallengeHistory","expandedPanel","setExpandedPanel","dailychallengehistory","isExpanded","DailyChallengeHistoryAnswersPage","LoadingPage","App","handleChatOpen","openChat","chatAnchor","handleChatClose","handleDrawerClose","boolean","loadingPage","isOpen","PageSelected","DailyChallenge","handleDrawerOpen","showLoginModal","showRandomGameModal","showPuzzleRushModal","handleClickDailyChallengeHistory","historydata","challengeHistoryData","dailychallengehistoryloaded","closePuzzleRushLoginModal","closeRandomGameLoginModal","handleClickProfile","profileData","profileDataloaded","num","filterTerm","numFindGames","numGames","handleHomePageClick","handleClickAboutUs","handleMobileMenuClose","mobileAnchorEl","mobileMenuOpen","showPage","handleMobileMenuOpen","token","linedir","LineDirFlag","createMuiTheme","teal","main","AppBar","clsx","appBar","appBarShift","Toolbar","toolbar1","menuButton","hide","noWrap","grow","sectionDesktop","sectionMobile","aria-haspopup","Drawer","drawer","anchor","drawerPaper","drawerHeader","drawerHeaderLeft","drawerHeaderRight","useTheme","button","ListItemIcon","contentShift","RandomGameDifficultyModal","right","Popover","frameBorder","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","mixins","toolbar","breakpoints","up","toggleBorder","gradient","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"js/main.46e75b53.chunk.js","sourcesContent":["export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const MOBILE_INNER_SCREEN_WIDTH = '960';\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const COLORED_GOAL_IMAGE = '/static/images/targetbullseye.png';\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass DailyMovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    resetToBest = () => {\r\n        this.props.resetToBest(this.props.moveHistory,this.props.playerState)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.moveHistory.length == 0 ?\r\n            <div style={style()}>\r\n                <Typography>Personal Best</Typography>\r\n                <Divider />\r\n                <Typography>None</Typography>\r\n            </div> :\r\n            <div style={style()}>\r\n                <Typography>Personal Best</Typography>\r\n                <Divider />\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n                <Divider />\r\n                <Button color=\"secondary\" onClick={this.resetToBest}>Reset to best</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyMovesView;","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function CreateBoardGoalSelector(props) {\r\n  const [wildchecked, setWildChecked] = React.useState(true);\r\n  const handleWildCardClick = () => {\r\n    props.handleWildCardClick();\r\n    setWildChecked(wildchecked ? false : true);\r\n  }\r\n\r\n  const handleBlueClick = () => {\r\n    props.handleColoredClick('blue');\r\n  }\r\n  const handleGreenClick = () => {\r\n    props.handleColoredClick('green');\r\n  }\r\n  const handleRedClick = () => {\r\n    props.handleColoredClick('red');\r\n  }\r\n  const handleYellowClick = () => {\r\n    props.handleColoredClick('yellow');\r\n  }\r\n  return (\r\n  <Paper>\r\n    <FormControl style={{backgroundColor: 'white', textAlign: 'center'}} component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Goal Selector</FormLabel>\r\n      <FormGroup aria-label=\"position\" row>\r\n        <FormControlLabel\r\n          value=\"Wildcard\"\r\n          control={<Checkbox onClick={handleWildCardClick} checked={wildchecked} color=\"primary\" />}\r\n          label=\"wildcard\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Blue\"\r\n          control={<Checkbox onClick={handleBlueClick} color=\"primary\" />}\r\n          label=\"blue\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Green\"\r\n          control={<Checkbox onClick={handleGreenClick} color=\"primary\" />}\r\n          label=\"green\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Red\"\r\n          control={<Checkbox onClick={handleRedClick} color=\"primary\" />}\r\n          label=\"red\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Yellow\"\r\n          control={<Checkbox onClick={handleYellowClick} color=\"primary\" />}\r\n          label=\"yellow\"\r\n          labelPlacement=\"top\"\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n    </Paper>\r\n  );\r\n}","import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function LearnGameItems(props) {\r\n    const handleClick = () => {\r\n        props.handleClickGame(props.index)\r\n    }\r\n    if (props.selected === props.index) {\r\n        return (\r\n            <Button\r\n                variant=\"contained\" color=\"primary\"\r\n                aria-label=\"vertical outlined primary button group\"\r\n                onClick={handleClick}\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={handleClick}\r\n                aria-label=\"vertical outlined primary button group\"\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div id=\"MainGameBoard\" style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleoutsidedraggable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var boxShadow = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        boxShadow = '0 0 0 3pt ' + SELECTED_ROBOT;\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        boxShadow: boxShadow,\r\n        backgroundSize: dim,\r\n        backgroundImage: \"url(\" + \"/static/images/astronaut.png\" + \")\",\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    onStopDragHandler = (e, position) => {\r\n        this.props.onStopDragHandler(position,this.props.index);\r\n    }\r\n\r\n\r\n    handleCreateMode = () => {\r\n        if (this.props.isCreateMode === 'Yes' && this.props.buildMode) {\r\n            return (\r\n            <Draggable position={{x: this.props.position.left * this.props.dimension, y:this.props.position.top*this.props.dimension}} grid={this.props.draggableGrid} onStop={this.onStopDragHandler} bounds=\"parent\">\r\n                <div onClick={this.handleClick} style={styleoutsidedraggable(this.props)}>\r\n                    <div style={styleinside(this.props)}>\r\n                        <div style={styleinside2(this.props)}/>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            this.handleCreateMode()\r\n        );\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE,ROBOT_GREEN,ROBOT_BLUE,ROBOT_RED,ROBOT_YELLOW,COLORED_GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none',\r\n        backgroundColor: color,\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none',\r\n        backgroundColor: color\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.position == null) {\r\n        return null\r\n    }\r\n    if (props.isCreateMode === 'Yes'  && props.buildMode) {\r\n        const onStopDragHandler = (e, position) => {\r\n            props.onStopDragHandler(position,props.color);\r\n        }\r\n        if (props.color == undefined) {\r\n            return(\r\n            <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n                <img src={GOAL_IMAGE} style={styledragable(props)}/>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n                <img src={COLORED_GOAL_IMAGE} style={styledragable(props)}/>\r\n            </Draggable>\r\n            )\r\n        }\r\n    }\r\n    else {\r\n        if (props.color == undefined) {\r\n            return(<img src={GOAL_IMAGE} style={style(props)}/>)\r\n        }\r\n        else {\r\n            return(<img src={COLORED_GOAL_IMAGE} style={style(props)}/>)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({buildMode,show,dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension + dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension + dimension;\r\n            left = position.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        opacity: show ? '0.5' : '0.0',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default (props) => {\r\n    const handleClick = () => {\r\n        props.handleClick(props.dir)\r\n    }\r\n    if (props.buildMode === 'undefined' || !props.buildMode)\r\n    {\r\n        return (\r\n            <div onClick={handleClick} style={style(props)}/>\r\n        );\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LearnGameItems from '../components/LearnGameItems';\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailySingleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Completed!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <Typography variant=\"body1\">\r\n                        You used {this.props.numMoves} Moves, for this puzzle.\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Total Moves: {this.props.totalMoves}\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Finish all puzzles to get submit your score!\r\n                    </Typography>\r\n                    <br/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailySingleModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailyFinalModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null\r\n        }\r\n    }\r\n\r\n    handleClickSubmitGame = () => {\r\n        if (document.getElementById(\"namesubmitHS\").value == '') {\r\n            this.setState({\r\n                error: <Alert severity=\"error\">You must choose a submit name</Alert>\r\n            })\r\n        }\r\n        else {\r\n            this.props.submitAnswer(this.props.newPlayerState);\r\n            this.setState({\r\n                error: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Completed the Challenge!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                    {this.state.error}\r\n                    {this.props.submitted}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    {this.props.submitted == null ? <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickSubmitGame}>Submit Highscore</Button> : null}\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailyFinalModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    campaignPuzzle = () => {\r\n        if (window.userInfo != null) {\r\n            if (window.userInfo.userID == 2 || window.userInfo.userID == 3 || window.userInfo.userID == 7) {\r\n                return <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzleCampaign}>Campaign Puzzle</Button>\r\n            }\r\n            else {\r\n                return null\r\n            }\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Submit Puzzle</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField id={\"namesubmit\"} label={\"Name of Puzzle\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                    {this.campaignPuzzle()}\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleModal;\r\n","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Path Indicators\"\r\n                    checked={this.props.showColoredLineDirections}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n\r\n    state = {\r\n            minutes: 5,\r\n            seconds: 0,\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.puzzleRushTimeUp();\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    timer = () => {\r\n        if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n            return (<h2>Time is up!</h2>)\r\n        }\r\n        else {\r\n            return(\r\n                <h2>Time Remaining: {this.state.minutes}:{this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds}</h2>)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            this.timer()\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ToggleSettings from \"../components/ToggleSettings\";\r\nimport Timer from \"../components/Timer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                        copyButtonText: \"Copy Puzzle Link\"\r\n                     };\r\n        this.state.uri = this.props.isDailyChallenge === 'Yes' ? 'dailychallenge' : this.props.uri;\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <div>\r\n                    <Button color=\"secondary\" variant={\"outlined\"} fullWidth={true} onClick={this.handleCreateBoardClick}>Modify Board</Button>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Switch color=\"primary\" checked={this.props.buildMode} onChange={this.props.toggleBuildMode}/>}\r\n                        label=\"Build Mode\"\r\n                            />\r\n                </div>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.state.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        document.getElementsByClassName(\"MuiSlider-thumb\")[0].blur();\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n    showPuzzleLink = () => {\r\n        if (this.props.createMode === 'Yes' || this.props.isPuzzleRush === 'Yes' || this.props.isLesson === 'Yes' || this.props.isDailyChallengeAnswers === 'Yes' || this.props.isDailyChallenge === 'Yes') {\r\n            return null;\r\n        }\r\n        else {\r\n                return(\r\n                     <div style={{paddingBottom: '10px'}}>\r\n                         <Button fullWidth={true} variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                                 onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                     </div>\r\n                    )\r\n        }\r\n    }\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                {this.showPuzzleLink()}\r\n                 <Divider />\r\n                 <Typography\r\n                     color=\"textSecondary\"\r\n                     display=\"block\"\r\n                     variant=\"caption\"\r\n                     style={{paddingBottom: '10px'}}\r\n                 >\r\n                     Board Actions\r\n                 </Typography>\r\n                 <ButtonGroup fullWidth={true} color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     <Button onClick={this.props.undoMove}>Undo</Button>\r\n                 </ButtonGroup>\r\n                 {this.isCreateMode(this.props.createMode)}\r\n                 <Divider />\r\n                 <ToggleSettings showColoredLineDirections={this.props.showColoredLineDirections} onClick={this.props.toggleLineIndicators}/>\r\n                 <div style={buttonPanel()}>\r\n                     <Typography id=\"discrete-slider-small-steps\"\r\n                                 color=\"textSecondary\"\r\n                                 display=\"inline\"\r\n                                 gutterBottom>\r\n                         Size Of Board\r\n                     </Typography>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={this.props.squareSizeValue}\r\n                         valueLabelDisplay=\"auto\"\r\n                         id=\"sliderelement\"\r\n                     />\r\n                 </div>\r\n                 <Divider/>\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n}\r\n\r\nconst paperstyle = () => {\r\n    return {\r\n        marginBottom: '15px'\r\n    }\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n                <Paper style={paperstyle()}elevation={3}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={9}>\r\n                            <Typography color={'primary'} style={{float: 'left'}}>\r\n                                {highscore.comment}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                                {highscore.userid != 1 ? <GoVerified/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'textSecondary'}>{highscore.numMoves}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.created}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Paper>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid item xs={12} style={styleouter()}>\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginTop: '30px',\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst CrownCounter = highscore => {\r\n    var crowns = []\r\n    var i;\r\n    for (i=0; i<highscore.wins;i++) {\r\n        crowns.push(<FaCrown/>);\r\n    }\r\n    return (\r\n        <div>\r\n            {crowns}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (<Grid item xs={12}>\r\n                <Paper elevation={3}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={9}>\r\n                            <Typography color={'primary'} style={{float: 'left'}}>\r\n                                {highscore.name}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                                {highscore.wins == 0 || highscore.wins == null ? null : CrownCounter(highscore) }\r\n                                {highscore.user_id != 1 ? <GoVerified/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'textSecondary'}>{highscore.score}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.submitted}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Paper>\r\n            </Grid>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid style={styleouter()} container direction={'column'} spacing={1}>\r\n        {\r\n                highscores.map(highscore =>\r\n                    highscorestyle(highscore)\r\n                )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nclass PuzzleRushWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Puzzle Rush - {this.props.difficulty}</DialogTitle>\r\n                <DialogContent dividers>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"h6\">\r\n                            Statistics\r\n                          </Typography>\r\n                          <div>\r\n                            <List dense={true}>\r\n\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Number of Puzzles Completed\"\r\n                                    secondary={this.props.numPuzzlesCompleted}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average time Per Puzzle\"\r\n                                    secondary={this.props.averageTime}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average Moves per Puzzle\"\r\n                                    secondary={this.props.averageMoves}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Efficiency Score: puzzles * 7 - redundant moves from best\"\r\n                                    secondary={(this.props.numPuzzlesCompleted * 7) - this.props.differenceOptimal}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Moves Per Second\"\r\n                                    secondary={this.props.movesPerSecond}\r\n                                  />\r\n                                </ListItem>\r\n                            </List>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.handleClickPlayAgain}>Play Again!</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushWinModal;\r\n\r\n","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../../constants/constants';\r\n\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass RandomGameStatsModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answers: null,\r\n        }\r\n    }\r\n\r\n    showStatsModal = () => {\r\n        this.props.handleShowRandomAnswers()\r\n        this.setState({\r\n            answers: this.props.lowestMoveSequence\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-random\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        lowest possible moves: {this.props.lowestMoves}\r\n                    </div>\r\n                    {this.state.answers}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.showStatsModal}>Show Puzzle Answers</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomGameStatsModal;","import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nexport default function CloseIconWithOnClick(props) {\r\n    const handleClose = () => {\r\n        props.handleClose(props.index);\r\n    }\r\n    return (<CloseIcon onMouseDown={handleClose}/>\r\n    )\r\n}","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport CloseIconWithOnClick from './CloseIconWithOnClick'\r\n\r\nexport default function Descriptionlist(props) {\r\n    return(\r\n            <List>\r\n              {\r\n                  props.tipsText.map((text,index) =>\r\n                    <ListItem>\r\n                      <div>\r\n                        {text}\r\n                      </div>\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                          <CloseIconWithOnClick index={index} handleClose={props.handleCloseToolTips}/>\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  )\r\n              }\r\n            </List>\r\n    )\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinLessonModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <Typography> You completed the Lesson! Move on to the next one!\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinLessonModal;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: '0 10px'\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 25,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function ShowDailyChallengeScoresCard(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {props.name}\r\n        </Typography>\r\n        <Typography style={{marginBottom: '30px'}} variant=\"h5\" component=\"h2\">\r\n          {props.bestScore}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.MovesforPuzzle}\r\n          <br/>\r\n          {props.MoveSequence}\r\n          <br />\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport MovesView from '../components/MovesView';\r\nimport ShowDailyChallengeScoreCard from '../components/ShowDailyChallengeScoresCard'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst stylebelow = () => {\r\n    return {\r\n        marginTop: '40px',\r\n        marginBottom: '20px'\r\n    }\r\n}\r\n\r\nclass DailyChallengeHistoryData extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography style={stylebelow()} variant=\"h4\"> {this.props.difficultyforPuzzle} </Typography>\r\n                <ShowDailyChallengeScoreCard\r\n                    name={\"Robot God\"}\r\n                    bestScore={this.props.bestScore}\r\n                    MovesforPuzzle={this.props.lowestMovesforPuzzle}\r\n                    MoveSequence={this.props.lowestMoveSequence}\r\n                />\r\n                <ShowDailyChallengeScoreCard\r\n                    name={this.props.nameSubmitted}\r\n                    bestScore={this.props.scoreSubmitted}\r\n                    MovesforPuzzle={null}\r\n                    MoveSequence={<MovesView\r\n                                        moveHistory={this.props.playerMovedSequence} playerState={[{colorSignifier: \"blue\"},{colorSignifier: \"green\"},{colorSignifier: \"red\"},{colorSignifier: \"yellow\"}]}\r\n                                  />}\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyChallengeHistoryData;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent,type) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    if (type === 'blank') {\r\n        var goal = {top: height-1, left: width-1};\r\n        var randompos1 = {top: 0,left: 0, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n        var randompos2 = {top: 0,left: 1, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n        var randompos3 = {top: 1,left: 0, color: ROBOT_RED, colorSignifier: 'red'};\r\n        var randompos4 = {top: 1,left: 1, color: ROBOT_YELLOW, colorSignifier:'yellow'};\r\n    }\r\n    else {\r\n        var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n        var randomPositions = [goal];\r\n        for (var i=0;i<5;i++) {\r\n            randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n        }\r\n        var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n        var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n        var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n        var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    }\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport DailyMovesView from '../components/DailyMovesView';\r\nimport CreateBoardGoalSelector from '../components/CreateBoardGoalSelector';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {withRouter} from 'react-router';\r\nimport Draggable from 'react-draggable';\r\nimport LearnGameItems from '../components/LearnGameItems';\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport YouWinDailySingleModal from '../components/YouWinDailySingleModal';\r\nimport YouWinDailyFinalModal from '../components/YouWinDailyFinalModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport PuzzleRushWinModal from '../containers/Modals/PuzzleRushFinishedModal';\r\nimport RandomGameStatsModal from '../containers/Modals/RandomGameStatsModal';\r\nimport DescriptionList from '../components/DescriptionList';\r\nimport YouWinLessonModal from '../components/YouWinLessonModal';\r\nimport DailyChallengeHistoryData from '../components/DailyChallengeHistoryData';\r\nimport Timer from \"../components/Timer\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR,\r\n    MOBILE_INNER_SCREEN_WIDTH\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if(e.keyCode == 32 && e.target == document.body) {\r\n    e.preventDefault();\r\n  }\r\n    if([37, 38, 39, 40, 9,13].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n    }\r\n}\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\nconst formatGeneratedMoveSequence = (moves) => {\r\n    var images = []\r\n    moves.map(move => {\r\n        var color = move.charAt(0);\r\n        var direction = move.charAt(1);\r\n        if (color == 'B') {\r\n            color = 'blue'\r\n        }\r\n        else if (color == 'R') {\r\n            color = 'red'\r\n        }\r\n        else if (color == 'Y') {\r\n            color = 'yellow'\r\n        }\r\n        else {\r\n            color = 'green'\r\n        }\r\n        if (direction == 'N') {\r\n            direction = UP\r\n        }\r\n        else if (direction == 'S') {\r\n            direction = DOWN\r\n        }\r\n        else if (direction == 'E') {\r\n            direction = RIGHT\r\n        }\r\n        else {\r\n            direction = LEFT\r\n        }\r\n        images.push(<img src={DIRECTION_MAP_IMAGES[color][direction]}/>)\r\n    });\r\n    return images\r\n}\r\n\r\n\r\nconst setDefaultSquareSize = (boardWidth,boardHeight) => {\r\n    const drawerWidth = document.getElementById(\"MainDrawer\") == null ? 140 : parseInt(getComputedStyle(document.getElementById(\"MainDrawer\")).width);\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n    var settingstop = windowHeight - 120;\r\n\r\n    settingstop = settingstop / boardHeight\r\n    settingstop = parseInt(settingstop);\r\n    settingstop = settingstop - (settingstop % 4)\r\n\r\n    var settings = ((windowWidth < MOBILE_INNER_SCREEN_WIDTH) ? windowWidth - 20 : (windowWidth - drawerWidth) / 1.75);\r\n    settings = settings / boardWidth;\r\n    settings = parseInt(settings);\r\n    settings = settings - (settings % 4);\r\n    var squarevalue = settings > settingstop ? settingstop : settings\r\n    if (squarevalue < 16) {\r\n        squarevalue = 16;\r\n    }\r\n    else if (squarevalue > 52) {\r\n        squarevalue = 52;\r\n    }\r\n    return squarevalue;\r\n};\r\n\r\nconst ColoredLineDirections = [LEFT,RIGHT,UP,DOWN]\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.puzzleRush === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.p_id = this.props.p_id;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = []\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            this.state.moveHistoryList=[];\r\n\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[0].g_solutiondata))\r\n            this.state.lowestMovesforPuzzle = this.props.games[0].g_moves\r\n            this.state.difficultyforPuzzle = this.props.games[0].g_difficulty\r\n            this.state.playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[0]\r\n\r\n            this.state.playerStateList = [];\r\n            this.state.tipsText = [];\r\n            this.state.highscores = [];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.dailyDayName = this.props.games[0].g_name\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            if (this.props.savedMoves != null) {\r\n                this.state.moveHistoryList = this.props.savedMoves\r\n                this.state.gamesWonDaily = [true,true,true,true]\r\n                this.state.moveHistory = this.props.savedMoves[0].slice()\r\n                this.state.playerState = this.props.playerStateList[0].slice()\r\n            }\r\n            else {\r\n                this.state.moveHistoryList=[];\r\n            }\r\n            this.state.playerStateList = this.props.playerStateList != null ? this.props.playerStateList : [];\r\n            this.state.tipsText = ['Winners who are Logged in will receive a Crown','See about page for details on the daily challenge difficulty','Puzzles reset at 3PM EST, the page will refresh automatically'];\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.dc_id = this.props.dc_id;\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.game.g_puzzledata)\r\n            this.state.lowestMoves = this.props.game.g_moves\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.game.g_solutiondata))\r\n            this.state.difficulty = this.props.game.g_difficulty\r\n            this.state.createMode = 'No';\r\n            this.state.gameWon = false;\r\n            this.state.buildMode = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = ['this game was randomly generated'];\r\n            this.state.uri = this.props.game.g_uri;\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n            window.history.pushState({id: 'Random Game'},'RobotsEvolved | Random Game','/play/' + this.props.game.g_uri)\r\n        }\r\n        else if (this.props.learnMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [this.props.games[0].description];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.votes = this.props.votes\r\n            this.state.hasVoted = this.props.hasVoted\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.buildMode = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n            window.history.pushState({id: 'Play Game'},'RobotsEvolved | Play Game','/play/'+ this.props.uri)\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,1,'blank');\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                buildMode: true,\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false,\r\n                tipsText: [\r\n                                        'Click on Wall spots to toggle',\r\n                                        'Click and Drag robots or goal to move robots',\r\n                                        'When you are ready, toggle build mode in order to solve the puzzle',\r\n                                        'You must solve the puzzle in order to submit.']\r\n            },board);\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.coloredGoals = [];\r\n        }\r\n        this.state.showColoredLineDirections = this.props.LineDirections;\r\n        if (this.state.coloredGoals == undefined) {\r\n            this.state.coloredGoals = [];\r\n        }\r\n    };\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                const highscoresdata = JSON.parse(res.data.highscores)\r\n                if (this.FindhighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    FindhighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.numMoves != check[index].numMoves) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n\r\n    DChighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.score != check[index].score) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n    updateDailyHighscores = () => {\r\n        axios.get('/dailychallengehighscores?dc_id=' + this.state.dc_id)\r\n            .then( res => {\r\n                if (res.data.dc_id != this.state.dc_id) {\r\n                    window.dailyChallengeSessionBestHistory = [[],[],[],[]];\r\n                    window.dailyChallengeSessionBestPlayerState = [[],[],[],[]];\r\n                    this.props.handleClickDailyChallenge();\r\n                    return\r\n                }\r\n                const highscoresdata = JSON.parse(res.data.highscores)//PoorMan's global redux implementation\r\n                if (this.DChighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                    window.dchighscores = JSON.parse(res.data.highscores)\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.updateHighscores();\r\n            var IntervalId = setInterval(this.updateHighscores, 8000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.updateDailyHighscores();\r\n            var IntervalId = setInterval(this.updateDailyHighscores, 6000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.tabSelector();\r\n                return;\r\n                break;\r\n            case 81:\r\n                if (!this.state.gameWon) {\r\n                    this.handleUndoMove();\r\n                }\r\n                break;\r\n                return;\r\n            case 87:\r\n                if (!this.state.gameWon) {\r\n                    this.resetPuzzle();\r\n                }\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n        }\r\n        this.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzleCampaign = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        var themoveHistory = this.state.moveHistory.slice()\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.userInfo !== null) {\r\n            username = window.userInfo.username\r\n        }\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username,moveHistory: themoveHistory,type: 'Campaign'}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        var themoveHistory = this.state.moveHistory.slice()\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.userInfo !== null) {\r\n            username = window.userInfo.username\r\n        }\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username,moveHistory: themoveHistory,type: 'type'}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.showColoredLineDirections === true) {\r\n            this.setState({\r\n                showColoredLineDirections: false,\r\n            });\r\n            this.props.handleLineDirections(false)\r\n        }\r\n        else {\r\n            this.setState({\r\n                showColoredLineDirections: true,\r\n            });\r\n            this.props.handleLineDirections(true)\r\n        }\r\n    };\r\n\r\n    toggleBuildMode = () => {\r\n        if (this.state.buildMode) {\r\n            this.setState({\r\n                buildMode: false,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n                buildMode: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length,solutiondata: this.state.moveHistory,name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            dailySubmittedSucessfully: null\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeRandomStatsModal = event => {\r\n        this.setState({\r\n            closeRandomStatsModal: false,\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    }\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushFinishedModal = event => {\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: false\r\n        });\r\n\r\n    }\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent, 'blank');\r\n        var squareSize = setDefaultSquareSize(width,height);\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n            squareSize: squareSize,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n    showStatsModal = () => {\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            showStatsModal: true,\r\n        });\r\n    }\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n    nextLessonPuzzle  = () => {\r\n        var puzzle = this.state.numPuzzleon;\r\n        puzzle += 1;\r\n        puzzle = puzzle == 4 ? 5 : puzzle;\r\n        puzzle = puzzle == 7 ? 8 : puzzle;\r\n        this.handleLearnClickGame(puzzle % 12);\r\n    }\r\n\r\n    puzzleRushTimeUp = () => {\r\n        var totalMovesDiff = 0;\r\n        this.state.solutiondifference.map(numMoves => {\r\n            totalMovesDiff += numMoves;\r\n        });\r\n        var averageTime = parseInt(300 / (this.state.numPuzzleon))\r\n        var totalMoves = 0;\r\n        this.state.totalMovesList.map(numMoves => {\r\n            totalMoves += numMoves\r\n        });\r\n        var avgMoves = parseInt(totalMoves / (this.state.numPuzzleon))\r\n        var movesPerSecond = totalMoves / 300;\r\n\r\n        axios.post('/puzzlerushend', {p_id: this.state.p_id,totalMoves: totalMoves,differenceFrom: totalMovesDiff})\r\n            .then( res => {\r\n                console.log(res.data);\r\n            });\r\n\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: true,\r\n            numPuzzlesCompleted: this.state.numPuzzleon,\r\n            percentile: 'TBD%',\r\n            averageTime: averageTime + 's',\r\n            averageMoves: avgMoves,\r\n            differenceOptimal: totalMovesDiff,\r\n            movesPerSecond: movesPerSecond\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    submitDailyAnswer = (LastRobotPosition) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            numMoves += moveHistory.length\r\n        });\r\n        var playerStateList = this.state.playerStateList.slice()\r\n        playerStateList[this.state.numPuzzleon] = LastRobotPosition.slice()\r\n        console.log(playerStateList);\r\n        axios.post('/dailychallenge', {score: numMoves, name: document.getElementById(\"namesubmitHS\").value, solutiondata: moveHistoryList, dc_id: this.state.dc_id, playerStateList: playerStateList})\r\n            .then( res => {\r\n                this.setState({\r\n                    dailySubmittedSucessfully: <Alert severity=\"success\">Submitted!</Alert>\r\n                });\r\n            });\r\n        window.dc_movesList = moveHistoryList;\r\n        window.dc_playerList = playerStateList;\r\n        this.state.gameWon = false;\r\n    }\r\n\r\n    checkwin = (newPlayerState) => {\r\n        if (this.state.goal != null && this.state.coloredGoals == null) {\r\n            var Won = false;\r\n            newPlayerState.map((player) => {\r\n                if (player.top === this.state.goal.top && player.left === this.state.goal.left) {\r\n                    Won = true;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            if (this.state.goal != null) {\r\n                var Won = false;\r\n                newPlayerState.map((player) => {\r\n                    if (player.top === this.state.goal.top && player.left === this.state.goal.left) {\r\n                        Won = true;\r\n                    }\r\n                });\r\n            }\r\n            else if (this.state.coloredGoals.length == 0) {\r\n                var Won = false;\r\n            }\r\n            else {\r\n                var Won = true;\r\n            }\r\n            var found = false;\r\n            var colorfound = false;\r\n            newPlayerState.map((player) => {\r\n                found = false\r\n                colorfound = false\r\n                this.state.coloredGoals.map(goal => {\r\n                    if (goal.colorSignifier == player.colorSignifier && goal.top === player.top && goal.left === player.left) {\r\n                        found = true;\r\n                    }\r\n                    if (goal.colorSignifier == player.colorSignifier) {\r\n                        colorfound = true;\r\n                    }\r\n                });\r\n                if (!found && colorfound) {\r\n                    Won = false;\r\n                }\r\n            });\r\n        }\r\n        if (Won) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No' && this.props.puzzleRush !== 'Yes') {\r\n                var username = '';\r\n                if (window.userInfo !== null) {\r\n                    username = window.userInfo.username\r\n                }\r\n                if (this.props.randomGame === 'Yes') {\r\n                    return (\r\n                        <RandomGameStatsModal\r\n                            show={this.state.gameWon}\r\n                            lowestMoves={this.state.lowestMoves}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            numMoves={this.state.moveHistory.length}\r\n                            difficulty={this.state.difficulty}\r\n                            resetPuzzle={this.resetPuzzle}\r\n                            handleShowRandomAnswers={this.handleShowRandomAnswers}\r\n                        />\r\n                    );\r\n                }\r\n                else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n                    return null\r\n                }\r\n                else if (this.props.dailyChallengeMode === 'Yes') {\r\n                    var Won=true\r\n                    if (window.dailyChallengeSessionBestHistory[this.state.numPuzzleon].length == 0 || this.state.moveHistory.length < window.dailyChallengeSessionBestHistory[this.state.numPuzzleon].length) {\r\n                        window.dailyChallengeSessionBestHistory[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n                        window.dailyChallengeSessionBestPlayerState[this.state.numPuzzleon] = this.state.playerState.slice()\r\n                    }\r\n                    this.state.gamesWonDaily.map((gameWon,index) => {\r\n                        if (!(index == this.state.numPuzzleon) && !gameWon) {\r\n                            Won = false\r\n                        }\r\n                    });\r\n                    var moveHistoryList = this.state.moveHistoryList\r\n                    moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory\r\n                    var numMoves = 0\r\n                    moveHistoryList.map(moveHistory => {\r\n                        numMoves += moveHistory.length\r\n                    });\r\n                    return (Won ? <YouWinDailyFinalModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={numMoves}\r\n                        submitAnswer={this.submitDailyAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                        undoMove={this.handleUndoMove}\r\n                        newPlayerState={newPlayerState}\r\n                        submitted={this.state.dailySubmittedSucessfully}\r\n                    /> : <YouWinDailySingleModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        totalMoves={numMoves}\r\n                        undoMove={this.handleUndoMove}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        games={this.state.games}\r\n                        handleClickGame={this.handleDailyClickGame}\r\n                        numPuzzleon={this.state.numPuzzleon}\r\n                        moveNextPuzzle={this.moveNextPuzzle}\r\n                    />);\r\n                }\r\n                else if (this.props.learnMode === 'Yes') {\r\n                    return  (<YouWinLessonModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        moveNextPuzzle={this.nextLessonPuzzle}\r\n                    />);\r\n                }\r\n                else {\r\n                    return  (<YouWinModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        submitAnswer={this.submitAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                    />);\r\n                }\r\n            }\r\n            else if (this.props.puzzleRush === 'Yes'){\r\n                axios.post('/puzzlerushsubmit', {p_id: this.state.p_id,g_id:this.state.games[this.state.numPuzzleon].g_id, moveHistory: this.state.moveHistory})\r\n                    .then( res => {\r\n                        console.log(res.data);\r\n                    });\r\n                var totalMoves = this.state.moveHistory.slice().length\r\n                var totalMovesList = this.state.totalMovesList\r\n                totalMovesList.push(totalMoves)\r\n                var solutionmoves = totalMoves - this.state.games[this.state.numPuzzleon].g_moves\r\n                var solutiondifference = this.state.solutiondifference\r\n                solutiondifference.push(solutionmoves)\r\n                var puzzledata = JSON.parse(this.state.games[this.state.numPuzzleon + 1].g_puzzledata)\r\n                if (this.state.numPuzzleon + 10 > this.state.games.length) {\r\n                    axios.get('/puzzlerushgetmore?p_id=' + this.props.p_id + '&difficulty=' + this.props.difficulty)\r\n                        .then( res => {\r\n                                var games = JSON.parse(res.data.games);\r\n                                var stategames = this.state.games\r\n                                var newarray = stategames.concat(games)\r\n                                this.setState({\r\n                                    games: newarray\r\n                                });\r\n                        });\r\n                }\r\n                this.setState(\r\n                    extend(puzzledata,{numPuzzleon: this.state.numPuzzleon + 1, playerState: puzzledata.playerStart.slice(), gameWon: false, solutiondifference: solutiondifference, totalMovesList: totalMovesList})\r\n                );\r\n\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                    submitPuzzleCampaign={this.submitPuzzleCampaign}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handleShowRandomAnswers = () => {\r\n        this.setState({\r\n            tipsText: [this.state.lowestMoveSequence]\r\n        })\r\n    }\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false && !this.state.buildMode) {\r\n            var oldPositon = {left: this.state.playerState[this.state.robotSelected].left, top: this.state.playerState[this.state.robotSelected].top};\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left) && !this.state.buildMode) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier,\r\n                    prevPosition: oldPositon\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseToolTips = (index) => {\r\n        this.state.tipsText.splice(index,1);\r\n        this.setState({\r\n            tipsText: this.state.tipsText,\r\n        });\r\n    }\r\n\r\n    moveNextPuzzle = () => {\r\n        this.handleDailyClickGame((this.state.numPuzzleon + 1) % 4)\r\n    }\r\n\r\n    handleLearnClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].puzzledata);\r\n        var squareSize = setDefaultSquareSize(puzzledata.width,puzzledata.height);\r\n        this.setState(\r\n            extend(puzzledata,{buildMode: false,squareSize: squareSize, numPuzzleon: index, moveHistory: [], gameWon: false, playerState: puzzledata.playerStart.slice(),tipsText: [this.props.games[index].description]})\r\n        );\r\n    }\r\n\r\n    handleDailyClickAnswersGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n        var lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[index].g_solutiondata))\r\n        var lowestMovesforPuzzle = this.props.games[index].g_moves\r\n        var difficultyforPuzzle = this.props.games[index].g_difficulty\r\n        var playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[index]\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory,\r\n                    gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily,\r\n                    lowestMoveSequence: lowestMoveSequence, lowestMovesforPuzzle: lowestMovesforPuzzle, difficultyforPuzzle: difficultyforPuzzle,\r\n                    playerMovedSequence: playerMovedSequence})\r\n        );\r\n    }\r\n\r\n    handleDailyClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily})\r\n        );\r\n    }\r\n\r\n\r\n    handleWildCardClick = () => {\r\n        if (this.state.goal == null) {\r\n            this.setState({\r\n                goal: {top: this.state.height - 1, left: this.state.width - 1}\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                goal: null\r\n            });\r\n        }\r\n        this.resetPuzzle();\r\n    }\r\n\r\n    resetToBest = (moveHistory, playerState) => {\r\n        this.setState({\r\n            moveHistory: moveHistory,\r\n            playerState: playerState,\r\n        });\r\n    }\r\n\r\n    handleColoredClick = (colorSignifier) => {\r\n        var goal = null;\r\n        this.state.coloredGoals.map(goalItem => {\r\n            if (colorSignifier == goalItem.colorSignifier) {\r\n                goal = goalItem;\r\n            }\r\n        })\r\n        if (goal == null) {\r\n            var newColoredGoals = this.state.coloredGoals;\r\n            var newgoal\r\n            switch (colorSignifier) {\r\n                case 'blue':\r\n                    newgoal = {top: this.state.height - 2, left: this.state.width - 2, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n                    break;\r\n                case 'green':\r\n                    newgoal = {top: this.state.height - 1, left: this.state.width - 2, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n                    break;\r\n                case 'red':\r\n                    newgoal = {top: this.state.height - 2, left: this.state.width - 1, color: ROBOT_RED, colorSignifier: 'red'};\r\n                    break;\r\n                case 'yellow':\r\n                    newgoal = {top: this.state.height - 3, left: this.state.width - 3, color: ROBOT_YELLOW, colorSignifier: 'yellow'};\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            newColoredGoals.push(newgoal);\r\n            this.setState({\r\n                coloredGoals: newColoredGoals\r\n            });\r\n        }\r\n        else {\r\n            var newColoredGoals = this.state.coloredGoals.filter(goalItem =>\r\n                colorSignifier != goalItem.colorSignifier\r\n            );\r\n            console.log(newColoredGoals);\r\n            this.setState({\r\n                coloredGoals: newColoredGoals\r\n            });\r\n        }\r\n        this.resetPuzzle();\r\n    }\r\n\r\n    trimName = name => {\r\n        var separated = (name + '').split(\" \")\r\n        var toreturn = '';\r\n        separated.map((word) => {\r\n            if (word.length > 17)\r\n                toreturn += word.substring(0, 17) + \"...\" + ' ';\r\n            else {\r\n                toreturn += word + ' '\r\n            }\r\n        });\r\n        return toreturn.substring(0, toreturn.length - 1);\r\n    };\r\n\r\n    loadSidebar = () => {\r\n        if (this.props.learnMode == 'Yes') {\r\n            return (\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\">\r\n                        <Divider/>\r\n                        <Typography\r\n                             color=\"textSecondary\"\r\n                             display=\"block\"\r\n                             variant=\"caption\"\r\n                             style={{paddingBottom: '10px'}}\r\n                         >\r\n                             Beginner Lessons\r\n                         </Typography>\r\n                        {\r\n                            this.state.games.map((game,index) => {\r\n                                    if (index === 4) {\r\n                                        return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Intermediate Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    else if (index === 7) {\r\n                                            return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Advanced Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    return(\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={game.name} index={index} handleClickGame={this.handleLearnClickGame}/>\r\n                                    )\r\n                                }\r\n\r\n                            )\r\n                        }\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickAnswersGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeHistoryData\r\n                            lowestMovesforPuzzle={this.state.lowestMovesforPuzzle}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            difficultyforPuzzle={this.state.difficultyforPuzzle}\r\n                            nameSubmitted={this.props.nameSubmitted}\r\n                            playerMovedSequence={this.state.playerMovedSequence}\r\n                            bestScore={this.props.bestScore}\r\n                            scoreSubmitted={this.props.scoreSubmitted}\r\n                         />\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <DailyMovesView\r\n                            moveHistory={window.dailyChallengeSessionBestHistory[this.state.numPuzzleon]}\r\n                            playerState={window.dailyChallengeSessionBestPlayerState[this.state.numPuzzleon]}\r\n                            resetToBest={this.resetToBest}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            color=\"secondary\"\r\n                            display=\"block\"\r\n                            variant={\"h4\"}\r\n\r\n                        >\r\n                            {this.state.dailyDayName}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeScores highscores={this.state.highscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.state.createMode === 'Yes') {\r\n            return (\r\n                <CreateBoardGoalSelector\r\n                    handleWildCardClick={this.handleWildCardClick}\r\n                    handleColoredClick={this.handleColoredClick}\r\n                />\r\n            );\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.puzzleRush) {\r\n            return (\r\n                     <div>\r\n                        <Timer puzzleRushTimeUp={this.puzzleRushTimeUp}>\r\n                        </Timer>\r\n                        <Typography id=\"discrete-slider-small-steps\"\r\n                                     color=\"Primary\"\r\n                                     variant=\"h3\"\r\n                                     display=\"inline\"\r\n                                     gutterBottom>\r\n                             {this.state.numPuzzleon}\r\n                         </Typography>\r\n                     </div>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n            <div style={{display: 'grid'}}>\r\n                <Typography\r\n                    color=\"secondary\"\r\n                    display=\"block\"\r\n                    variant={\"h4\"}\r\n\r\n                >\r\n                    {this.trimName(this.props.name)}\r\n                </Typography>\r\n                <div style={{paddingBottom: '10px', display: 'inline-flex', alignItems: \"center\"}}>\r\n                    <Typography variant=\"caption\" style={{paddingRight: \"5%\"}}>\r\n                        By: {this.trimName(this.props.author)}\r\n                    </Typography>\r\n                    <div>\r\n                        <div style={{display: \"inline-flex\"}}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                style={{borderTopRightRadius: \"0px\", borderBottomRightRadius: \"0px\"}}\r\n                                startIcon={this.state.hasVoted ? <StarIcon/> : <StarBorderIcon/>}\r\n                                onClick={this.updateLike}\r\n                                size={\"small\"}\r\n                            >\r\n                                {this.state.hasVoted ? \"Unlike\" : \"Like\"}\r\n                            </Button>\r\n                            <Paper variant=\"contained\"  style={{borderTopLeftRadius: \"0px\", borderBottomLeftRadius: \"0px\"}} >\r\n                                <Typography style={{marginLeft: \"5px\", marginRight: \"5px\"}} variant=\"h6\">{this.state.votes ? this.state.votes : 0}</Typography>\r\n                            </Paper>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Grid container xs={12} direction=\"column\">\r\n                <HighScores highscores={this.state.highscores}/>\r\n                </Grid>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    updateLike = () => {\r\n        const action = this.state.hasVoted ? \"remove\" : \"create\"\r\n        axios.post('/likepuzzle', {uri: this.state.uri, action: action, vote: \"voting\"})\r\n            .then( res => {\r\n                var newHasVoted = \"Y\"\r\n                var newVotes = this.state.votes\r\n                if (this.state.hasVoted)\r\n                    newHasVoted = null\r\n                if (!isNaN(res.data.votes))\r\n                    newVotes = res.data.votes\r\n\r\n                this.setState({\r\n                    hasVoted: newHasVoted,\r\n                    votes: newVotes\r\n                });\r\n            }).catch(_ => {\r\n                this.props.signInModalOpen(\"Sign in\")\r\n            });\r\n    }\r\n\r\n    handlePlayerMovementFromMouse = (direction) => {\r\n        this.handlePlayerMovement({dir: direction})\r\n    };\r\n\r\n    handleUndoMove = () => {\r\n        var moveHistory = this.state.moveHistory;\r\n        var playerState = this.state.playerState;\r\n        if (moveHistory.length !== 0) {\r\n            var moveObj = moveHistory.pop();\r\n            playerState[moveObj.robot].left = moveObj.prevPosition.left;\r\n            playerState[moveObj.robot].top = moveObj.prevPosition.top;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n                gameWon: false,\r\n                dailySubmittedSucessfully: null\r\n            });\r\n        }\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes' && this.state.buildMode) {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onStopDragHandlerGoal = (position,color) => {\r\n        if (color == undefined) {\r\n            this.setState({\r\n                goal: {top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize)},\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            })\r\n        }\r\n        else {\r\n            var coloredGoals = this.state.coloredGoals;\r\n            var newGoals = [];\r\n            coloredGoals.map(goal => {\r\n                if (goal.color == color) {\r\n                    newGoals.push({top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize), color: color, colorSignifier: goal.colorSignifier});\r\n                }\r\n                else {\r\n                    newGoals.push(goal);\r\n                }\r\n            });\r\n            this.setState({\r\n                coloredGoals: newGoals,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    onStopDragHandler = (position,index) => {\r\n        var playerState = this.state.playerState.slice();\r\n        var lastX = position.lastX / this.state.squareSize;\r\n        var lastY = position.lastY / this.state.squareSize;\r\n        playerState[index].top = Math.round(lastY);\r\n        playerState[index].left = Math.round(lastX);\r\n        this.setState({\r\n            playerStart: playerState.slice(),\r\n            playerState: playerState,\r\n            moveHistory: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        puzzleRushTimeUp={this.puzzleRushTimeUp}\r\n                        isPuzzleRush={this.props.puzzleRush}\r\n                        numPuzzleRush={this.state.numPuzzleon}\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                        toggleLineIndicators = {this.toggleLineIndicators}\r\n                        showColoredLineDirections={this.state.showColoredLineDirections}\r\n                        toggleBuildMode = {this.toggleBuildMode}\r\n                        undoMove = {this.handleUndoMove}\r\n                        buildMode = {this.state.buildMode}\r\n                        squareSizeValue = {parseInt((this.state.squareSize/4))}\r\n                        isLesson = {this.props.learnMode}\r\n                        isDailyChallenge = {this.props.dailyChallengeMode}\r\n                        isDailyChallengeAnswers = {this.props.dailyChallengeModeAnswers}\r\n                    />\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? null : <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>}\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8} zeroMinWidth>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal\r\n                            dimension={this.state.squareSize}\r\n                            position={this.state.goal}\r\n                            onStopDragHandler={this.onStopDragHandlerGoal}\r\n                            draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                            isCreateMode={this.state.createMode}\r\n                            buildMode={this.state.buildMode}\r\n                        />\r\n                        {\r\n                            this.state.coloredGoals.map(goal =>\r\n                                <Goal\r\n                                    dimension={this.state.squareSize}\r\n                                    position={goal}\r\n                                    onStopDragHandler={this.onStopDragHandlerGoal}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    color={goal.color}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    onStopDragHandler={this.onStopDragHandler}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={this.state.playerState[this.state.robotSelected].color}\r\n                                    show={this.state.showColoredLineDirections}\r\n                                    handleClick={this.handlePlayerMovementFromMouse}\r\n                                    buildMode={this.state.buildMode}\r\n                                />\r\n                            )\r\n                        }\r\n                    </Board>\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/> : null}\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DescriptionList\r\n                        handleCloseToolTips={this.handleCloseToolTips}\r\n                        tipsText={this.state.tipsText}\r\n                    />\r\n                    {this.loadSidebar()}\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                {\r\n                    this.checkwin(this.state.playerState)\r\n                }\r\n                <PuzzleRushWinModal\r\n                    show={this.state.showPuzzleRushFinishedModal}\r\n                    closeModal={this.closePuzzleRushFinishedModal}\r\n                    numPuzzlesCompleted={this.state.numPuzzlesCompleted}\r\n                    percentile={this.state.puzzleRushPercentileCompleted}\r\n                    averageTime={this.state.averageTime}\r\n                    averageMoves={this.state.averageMoves}\r\n                    differenceOptimal={this.state.differenceOptimal}\r\n                    movesPerSecond={this.state.movesPerSecond}\r\n                    difficulty={this.props.difficulty}\r\n                    handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport axios from 'axios';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        maxWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 360,\r\n        minWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 235,\r\n        height: 225,\r\n        position: 'relative',\r\n        background: 'linear-gradient(100deg, #ffd34d 55%, #fff178 55%)'\r\n    },\r\n\r\n    item: {\r\n        padding: 0\r\n    },\r\n\r\n    upperPadding: {\r\n        paddingTop: 3\r\n    },\r\n    upperPaddingButton: {\r\n        paddingTop: 3,\r\n        position: 'absolute',\r\n        bottom: 15,\r\n        left: 25\r\n    },\r\n\r\n    lowerPadding: {\r\n        paddingBottom: 3\r\n    },\r\n\r\n    rightSideText: {\r\n        textAlign: \"right\",\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    },\r\n\r\n    leftSideText: {\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(ComplexGrid)\r\n\r\nfunction ComplexGrid(props) {\r\n    const { classes } = props;\r\n    const handleClick = () => {\r\n        axios.get('/getFindGameData?uri=' + props.game.uri)\r\n                .then( res => {\r\n                    var game = JSON.parse(res.data.game);\r\n                    props.handleGameClick(game.name, game.puzzledata,props.highscores,game.uri,props.game.authorname,\r\n                        props.game.votes, props.game.hasVoted);\r\n                });\r\n    };\r\n\r\n    var numberOfHighScores = 0;\r\n\r\n    const highscorestyle = highscore => {\r\n        if (numberOfHighScores === 6) return \"\";\r\n        numberOfHighScores++;\r\n        return (\r\n            <ListItem disableGutters={true} classes={{ root: classes.item }}>\r\n                <ListItemText primary={trimNameShort(highscore.comment)} classes={{ root: classes.leftSideText }} />\r\n                <ListItemText secondary={highscore.numMoves} classes={{ root: classes.rightSideText }} />\r\n            </ListItem>\r\n        )\r\n    };\r\n\r\n    const contentDivStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        };\r\n\r\n    };\r\n\r\n    const trimName = name => {\r\n        var separated = (name + '').split(\" \")\r\n        var toreturn = '';\r\n        separated.map((word) => {\r\n            if (word.length > 17)\r\n                toreturn += word.substring(0, 17) + \"...\" + ' ';\r\n            else {\r\n                toreturn += word + ' '\r\n            }\r\n        });\r\n        return toreturn.substring(0, toreturn.length - 1);\r\n    };\r\n\r\n    const trimNameShort = name => {\r\n        if (name.length > 10)\r\n            name = name.substring(0, 10) + \"...\";\r\n        return name\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid item xs={12} md={3} sm={6}>\r\n            <Card variant=\"outlined\" className={classes.root}>\r\n                <CardContent>\r\n                    <div style={contentDivStyle()}>\r\n                        <div style={{width: '150px'}}>\r\n                            <Tooltip title={props.game.name}>\r\n                                <Typography variant=\"h6\" classes={{ root: classes.lowerPadding }}>\r\n                                    {trimName(props.game.name)}\r\n                                </Typography>\r\n                            </Tooltip>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    By: {trimName(props.game.authorname)}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    {props.game.created}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Plays: {props.game.plays}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Likes: {props.game.votes}\r\n                                </Typography>\r\n                            </div>\r\n                            <br/>\r\n                            <Button onClick={handleClick} classes={{ root: classes.upperPaddingButton }} variant=\"contained\" color=\"primary\">Play</Button>\r\n                        </div>\r\n                        <div style={{width: '105px'}}>\r\n                            <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                Top Scores\r\n                            </Typography>\r\n                            <List>\r\n                                {\r\n                                    props.highscores.map(highscore =>\r\n                                        highscorestyle(highscore)\r\n                                    )\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from 'axios';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport extend from '../constants/extend';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center'\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 400,\r\n    },\r\n    input: {\r\n        marginLeft: 5,\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n        marginLeft: 8,\r\n        marginRight: 8,\r\n    },\r\n});\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = this.props.gameslist;\r\n        var highscoreslist = this.props.highscoreslist;\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n            anchorEl: null,\r\n            hasMore: true,\r\n            lastSearch: 'None',\r\n            offsetSearch: gameslist.length,\r\n            isLoadingSearch: false,\r\n        }\r\n\r\n    }\r\n\r\n    handleGameClick = (name,gamedata,highscores,uri,authorname,votes,hasVoted) => {\r\n        this.props.handleGameClick(name,gamedata,highscores,uri,authorname,votes,hasVoted);\r\n    };\r\n\r\n    handleFilterMenuOpen = event => {\r\n        this.setState( {\r\n          anchorEl: event.currentTarget\r\n      });\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.keycode == 13) {\r\n            this.handleSearchSubmit(e);\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        window.scrollTo(0,this.props.findWindowHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.props.setFindWindow(window.scrollY)\r\n    }\r\n\r\n    handleCloseFilterMenuMostPlayed = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'MostPlayed', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'MostPlayed', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'MostPlayed',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleCloseFilterMenuMostLiked = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'MostLiked', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'MostLiked', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'MostLiked',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleCloseFilterMenuHighest = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'Highest', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'Highest', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'Highest',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleSearchSubmit = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n\r\n        axios.post('/search', {search: searchTerm, filter: 'None', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'None', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'None',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    hasMore = () => {\r\n        return ( this.state.hasMore ? null : <Grid item alignItems=\"center\" justify=\"center\" xs={12}><Typography style={{textAlign: 'center', display: 'block'}} variant=\"caption\">No More Puzzles</Typography></Grid>)\r\n    }\r\n\r\n    loadMoreItems = () => {\r\n        var searchTerm = this.searchRef.value;\r\n        if (!this.state.isLoadingSearch) {\r\n            this.state.isLoadingSearch = true;\r\n            axios.post('/search', {search: searchTerm, filter: 'None', offset: this.state.offsetSearch})\r\n                .then( res => {\r\n                    var gameslist = JSON.parse(res.data.gameslist);\r\n                    this.state.offsetSearch = gameslist.length + this.state.gameslist.length;\r\n                    var highscoreslist = JSON.parse(res.data.highscoreslist);\r\n                    this.props.setNumFindGames(gameslist.length + this.state.gameslist.length, this.state.lastSearch, searchTerm);\r\n                    this.setState({\r\n                        highscoreslist: this.state.highscoreslist.concat(highscoreslist),\r\n                        gameslist: this.state.gameslist.concat(gameslist),\r\n                        hasMore: gameslist.length == 0 ? false : true,\r\n                        isLoadingSearch: false,\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    handleCloseFilterMenu = () => {\r\n        this.setState({\r\n            anchorEl: null\r\n        });\r\n    };\r\n\r\n    render () {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <div id='MainFindPage' style={gamepanel()}>\r\n                <Paper component=\"form\" className={classes.root} >\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        inputRef={ref => this.searchRef = ref}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                this.handleSearchSubmit();\r\n                                event.preventDefault()\r\n                            }\r\n                        }}\r\n                    />\r\n                    <IconButton onClick={this.handleSearchSubmit} className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <Divider className={classes.divider} orientation=\"vertical\" />\r\n                    <Button\r\n                        onClick={this.handleFilterMenuOpen}\r\n                        startIcon={<FilterListIcon />}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        Sort\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(this.state.anchorEl)}\r\n                        onClose={this.handleCloseFilterMenu}\r\n                        getContentAnchorEl={null}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'center',\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center',\r\n                        }}\r\n                    >\r\n                        <MenuItem onClick={this.handleSearchSubmit}>Recently Created</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuMostPlayed}>Most Played</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuMostLiked}>Most Liked</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuHighest}>Highest Scores</MenuItem>\r\n                    </Menu>\r\n                </Paper>\r\n                <br/>\r\n                <Grid container alignItems={\"stretch\"} spacing={2}>\r\n                    {\r\n                        this.state.gameslist.map((game,index)=>\r\n                            <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                        )\r\n                    }\r\n                    <InfiniteScroll\r\n                        pageStart={1}\r\n                        loadMore={this.loadMoreItems.bind(this)}\r\n                        hasMore={this.state.hasMore}\r\n                        loader={<Grid item alignItems=\"center\" justify=\"center\" xs={12}><CircularProgress style={{textAlign: 'center',alignItems: 'center', marginLeft: 'auto', marginRight: 'auto'}} size={40} color=\"secondary\" /></Grid>}\r\n                        threshold={200}\r\n                        >\r\n                    </InfiniteScroll>\r\n                    {this.hasMore()}\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(FindGame);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  loadedGame={'Yes'}\r\n                  name={this.props.name}\r\n                  author={this.props.authorname}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n                  votes={this.props.votes}\r\n                  hasVoted={this.props.hasVoted}\r\n                  signInModalOpen={this.props.signInModalOpen}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  homepage: {\r\n    marginTop: '40px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  baseExpansion: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: '10px'\r\n  },\r\n  darkmode: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      marginTop: '150px',\r\n  },\r\n  iconcards: {\r\n    width: '250px',\r\n    display: 'inline-block',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  iconcardsDaily: {\r\n    maxWidth: 345,\r\n    minWidth: 250,\r\n    float: 'left',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  titlehome: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '30px',\r\n  },\r\n  titledailyroto: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '10px',\r\n  },\r\n  iconfonts: {\r\n    fontFamily: \"'Arvo', serif\",\r\n  },\r\n  createboardcard: {\r\n    ':hover': {\r\n        content: '/static/images/CreateBoardCardIconPlaced.png',\r\n    }\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  centeredProfile: {\r\n    marginTop: '20px',\r\n    display: 'inline-block',\r\n  },\r\n  expandedPanelDCH: {\r\n    background: 'linear-gradient(70deg, #fff810  30%, rgba(0,0,0,0) 30%), linear-gradient(30deg, #63e89e 60%, #ff7ee3 60%)'\r\n  },\r\n  table: {\r\n    width: '33%'\r\n  }\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport FindGameElements from \"../containers/FindGameElements\";\r\nimport {GOAL_IMAGE} from '../constants/constants';\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n\r\n    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n        return (<div className={classes.homepage} >\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                        </Typography>\r\n                        <Typography variant=\"p1\" paragraph={true}>Puzzle game for anyone to play! Create your own custom boards or play a random Solved game. <br/>Goal is to get ANY piece to stop on the  <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                        </Typography>\r\n                        <br/>\r\n                        <img width=\"300\" height=\"300\" src='/static/videos/basic2.gif'/>\r\n                        <br/>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                        <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                        </Typography>\r\n                        <Typography> 8/23/2020 Personal Best saving feature added to Daily Challenge, Also Added Like feature to custom puzzles.\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography> 8/18/2020 New textures, Soon to be released: Color Specific Goals!\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography> 8/5/2020 Scaled down the Difficulty for the Daily Challenge rotations, also modified the classic algorithm to be less cluttered\r\n                        </Typography>\r\n\r\n                    </Grid>\r\n                    <Grid container item alignItems={\"stretch\"} spacing={2} alignItems=\"center\" justify=\"center\" >\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickFindGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Find a Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/FindAGameCardIcon.png\"\r\n                                        title=\"Find a Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Find a Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/DailyChallengeIcon.png\"\r\n                                        title=\"Daily Challenge\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Daily Challenge\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickCreateGame}>\r\n                                    <CardMedia\r\n                                        className={classes.createboardcard}\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                        title=\"Create Board\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Create Board\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickRandomGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Play a Random Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/puzzle.png\"\r\n                                        title=\"Play a Random Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Play a Random Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickLearnGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                        title=\"Learn\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Learn\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Contemplative Reptile\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/PuzzleRushIcon.png\"\r\n                                        title=\"Contemplative Reptile\"\r\n                                    />\r\n                                    <CardContent style={{textAlign: 'center'}}>\r\n                                        <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            Puzzle Rush\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                    <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                    </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            Medium Mondays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Trouble Tuesday <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Wild Wednesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Tryhard Thursdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">easy puzzles</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                        </Typography>\r\n                        <Typography style={{marginTop: '30px'}} className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                        </Typography>\r\n                        <DailyChallengeScores highscores={window.dchighscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (<div className={classes.homepage}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> Controls\r\n                    </Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Movement\r\n                        </Typography>\r\n                    <img width={'20%'} height={'auto'} src={\"/static/images/keyboard.png\"}/>\r\n                    <Typography>Pieces Move until they hit a wall or another piece</Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Selecting robots\r\n                        </Typography>\r\n                        <img width={'20%'} height={'auto'} src={\"/static/images/tab.png\"}/>\r\n\r\n                    <Typography>Or click</Typography>\r\n                    <Divider/>\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            HotKeys\r\n                        </Typography>\r\n                        <Typography variant=\"h6\">Undo</Typography> <img width={'20%'} height={'auto'} src={\"/static/images/Qkey.png\"}/>\r\n                        <Typography variant=\"h6\">Reset</Typography> <img width={'20%'} height={'auto'} src={\"/static/images/Wkey.png\"}/>\r\n                    <Divider />\r\n                    <div style={{marginTop:'100px'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                    </Typography>\r\n                    <Typography> 8/5/2020 Scaled down the Difficulty for the Daily Challenges, also modified the classic algorithm to be less cluttered\r\n                    </Typography>\r\n                    <Typography> 8/18/2020 New textures, Soon to be released: Color Specific Goals!\r\n                    </Typography>\r\n                    <Typography> 8/23/2020 Personal Best saving feature added to Daily Challenge, Also Added Like feature to custom puzzles.\r\n                    </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={8} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                    </Typography>\r\n                    <Typography paragraph={true} variant=\"p1\">Puzzle game for anyone to play! Create your own custom boards or play a random Solved game.<br/>Goal is to get ANY piece to stop on the  <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                    </Typography>\r\n                    <br/>\r\n                        <img width=\"300\" height=\"300\" src='/static/videos/basic2.gif'/>\r\n                    <br/>\r\n                    <Card className={classes.iconcards}>\r\n                      <CardActionArea onClick={props.handleClickFindGame}>\r\n                        <CardMedia\r\n                          component=\"img\"\r\n                          alt=\"Find a Game\"\r\n                          height=\"140\"\r\n                          image=\"/static/images/FindAGameCardIcon.png\"\r\n                          title=\"Find a Game\"\r\n                        />\r\n                        <CardContent>\r\n                          <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                            Find a Game\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                      <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                        <CardMedia\r\n                          component=\"img\"\r\n                          alt=\"Create Board\"\r\n                          height=\"140\"\r\n                          image=\"/static/images/DailyChallengeIcon.png\"\r\n                          title=\"Daily Challenge\"\r\n                        />\r\n                        <CardContent>\r\n                          <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                            Daily Challenge\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickCreateGame}>\r\n                            <CardMedia\r\n                                className={classes.createboardcard}\r\n                                component=\"img\"\r\n                                alt=\"Create Board\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                title=\"Create Board\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Create Board\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickRandomGame}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Play a Random Game\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/puzzle.png\"\r\n                                title=\"Play a Random Game\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Play a Random Game\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickLearnGame}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Create Board\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                title=\"Learn\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Learn\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Contemplative Reptile\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/PuzzleRushIcon.png\"\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent style={{textAlign: 'center'}}>\r\n                                <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Puzzle Rush\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                            Medium Mondays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Trouble Tuesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Wild Wednesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Tryhard Thursdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">easy puzzles</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                        </Typography>\r\n                <Typography className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                </Typography>\r\n                <DailyChallengeScores highscores={window.dchighscores}/>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst stylecol = () => {\r\n    return({\r\n            float: 'left',\r\n            width: '50%',\r\n            margin: 'auto',\r\n            padding: '0 50px',\r\n            marginTop: '6px',\r\n    });\r\n}\r\n\r\nconst spacing = () => {\r\n    return({\r\n            marginBottom: '10px',\r\n    });\r\n}\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    };\r\n\r\n    loginFacebook = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/facebook\";\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeLoginModal}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>Login to RobotsEvolved</DialogTitle>\r\n                <DialogContent dividers>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                           • Gain <FaCrown/>s when winning the Daily Challenge (stacks)\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                            • Be able to give a like to your favorite puzzles\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                            • Saving settings and your moves in the daily challenge\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography variant=\"body2\" display=\"inline\">\r\n                            • Profile Page to keep track of your submissions.\r\n                        </Typography>\r\n                    <div class=\"col\">\r\n                        <a href=\"#\" onClick={this.loginFacebook} id={\"buttonfb\"}>\r\n                          <i class=\"fa fa-facebook fa-fw\"></i> Login with Facebook\r\n                         </a>\r\n                        <a onClick={this.loginGoogle} href=\"#\" id={\"buttongoogle\"}><i class=\"fa fa-google fa-fw\">\r\n                          </i> Login with Google\r\n                        </a>\r\n                    </div>\r\n                    <Typography variant=\"caption\" display=\"block\">\r\n                            We will NEVER distribute/sell your facebook or google email address.\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeLoginModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <Button color=\"black\" onClick={this.handleClick}><b>{textToShow}</b></Button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport SignInButton from './SignInButton';\r\n\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '40px',\r\n        width: '40px',\r\n        marginTop: '5px',\r\n    };\r\n};\r\n\r\nconst divStyle = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        width: '200px',\r\n    };\r\n};\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    SignInButtonPressed = () => {\r\n        this.props.handleClick('Sign in');\r\n    }\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return <SignInButton onClick={this.SignInButtonPressed}/>\r\n        }\r\n        else {\r\n            return (\r\n                <div style={divStyle()}>\r\n                    <div>{window.userInfo.username}</div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic v2',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty) => {\r\n        console.log(difficulty)\r\n        axios.post('/puzzlerush', {difficulty: difficulty, action: 'start',type: this.state.value})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            isLoading: false,\r\n                        });\r\n                        this.props.handleClickPuzzleRush(difficulty,games,p_id);\r\n                });\r\n    };\r\n\r\n    handleClickEasyPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMediumPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                                {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                                                        ) : (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                         <Grid item xs={6}>\r\n                                         <ButtonGroup\r\n                                            orientation=\"vertical\"\r\n                                            color=\"primary\"\r\n                                            aria-label=\"vertical outlined primary button group\"\r\n                                          >\r\n                                            <Button onClick={this.handleClickEasyPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Easy\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickMediumPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Medium\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Hard\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickExHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Exteremely Hard\r\n                                            </Button>\r\n                                          </ButtonGroup>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                              <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                              <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                                <FormControlLabel value=\"classic v2\" control={<Radio />} label=\"Classic V2\" />\r\n                                                <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                                <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                              </RadioGroup>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic v2',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickRandomGameModal = (difficulty,type) => {\r\n        axios.get('/randomgame?difficulty=' + difficulty + '&type=' + type)\r\n            .then( res => {\r\n                var game = JSON.parse(res.data.game);\r\n                this.setState({\r\n                    isLoading: false,\r\n                });\r\n                this.props.handleClickRandomGame(game,difficulty);\r\n            })\r\n    }\r\n\r\n    handleClickEasy = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMedium = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHard = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHard = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickGodMode = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('GodTeir',this.state.value)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                            {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                            ) : (\r\n                            <Grid\r\n                                container xs={12}\r\n                                spacing={4}\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n                                wrap=\"nowrap\"\r\n                            >\r\n                                <Grid item xs={6}>\r\n                                    <ButtonGroup\r\n                                        orientation=\"vertical\"\r\n                                        color=\"primary\"\r\n                                        aria-label=\"vertical outlined primary button group\"\r\n                                      >\r\n                                        <Button onClick={this.handleClickEasy} variant=\"contained\" color=\"primary\">\r\n                                            Easy\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickMedium} variant=\"contained\" color=\"primary\">\r\n                                            Medium\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickHard} variant=\"contained\" color=\"primary\">\r\n                                            Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickExHard} variant=\"contained\" color=\"primary\">\r\n                                            Extremely Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickGodMode} variant=\"contained\" color=\"primary\">\r\n                                            God Tier\r\n                                        </Button>\r\n                                     </ButtonGroup>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl component=\"fieldset\">\r\n                                      <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                      <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                        <FormControlLabel value=\"classic v2\" control={<Radio />} label=\"Classic V2\" />\r\n                                        <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                        <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                      </RadioGroup>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageCreatedGamesDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.game.name,props.game.puzzledata,[],props.game.uri, props.game.authorname, props.game.votes, props.game.hasVoted);\r\n    }\r\n\r\n    return (<div>\r\n            <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography> Highscore Holder: </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.game.username} - {props.game.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageSolutionDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.solution.name,props.solution.puzzledata,[],props.solution.uri);\r\n    }\r\n    return (<div>\r\n              <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography color={'secondary'} variant={'body2'}> {props.solution.WinnerCreated} </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.solution.WinnerUsername} - {props.solution.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Table,TableContainer,TableHead,TableRow,TableCell,TableBody} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useStyles from '../Material-UI/themes';\r\nimport ProfilePageCreatedGamesDetails from '../components/ProfilePageComponents/ProfilePageCreatedGamesDetails';\r\nimport ProfilePageSolutionDetails from '../components/ProfilePageComponents/ProfilePageSolutionDetails';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\n\r\nexport default function ProfilePage(props) {\r\n    const classes = useStyles();\r\n    const submitAnswer = () => {\r\n        axios.post('/userUpdate',{newuser: document.getElementById(\"ProfileName\").value})\r\n            .then( res => {\r\n                if (res.data == 'OK') {\r\n                    window.location.href = '/';\r\n                }\r\n                else {\r\n                    setError(res.data);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const createData = (name,col1,col2) => {\r\n        return {name,col1,col2}\r\n    }\r\n\r\n    const columns = [\r\n          { id: 'difficulty', label: 'Difficulty', maxWidth: 75 },\r\n          { id: 'classic', label: 'Classic', maxWidth: 75 },\r\n          { id: 'random', label: 'Random', maxWidth: 75 },\r\n        ];\r\n\r\n    const rows = [\r\n        createData('Easy', props.puzzlerushview.maxeasyc,props.puzzlerushview.maxeasyp),\r\n        createData('Medium', props.puzzlerushview.maxmediumc,props.puzzlerushview.maxmediump),\r\n        createData('Hard', props.puzzlerushview.maxhardc,props.puzzlerushview.maxhardp),\r\n        createData('Extremely Hard', props.puzzlerushview.maxexhardc,props.puzzlerushview.maxexhardp)\r\n    ]\r\n\r\n    const rowseff = [\r\n        createData('Easy', props.puzzlerushview.maxeffec,props.puzzlerushview.maxeffep),\r\n        createData('Medium', props.puzzlerushview.maxeffmc,props.puzzlerushview.maxeffmp),\r\n        createData('Hard', props.puzzlerushview.maxeffhc,props.puzzlerushview.maxeffhp),\r\n        createData('Extremely Hard', props.puzzlerushview.maxeffexc,props.puzzlerushview.maxeffexp)\r\n    ]\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [expandedGame, setExpandedGame] = React.useState(false);\r\n    const [expandedHighscores, setExpandedHighscores] = React.useState(false);\r\n    const handleChangeGame = (panel) => (event, isExpandedGame) => {\r\n        setExpandedGame(isExpandedGame ? panel : false);\r\n    };\r\n    const handleChangeHighscores = (panel) => (event, isExpandedHighScores) => {\r\n        setExpandedHighscores(isExpandedHighScores ? panel : false);\r\n    };\r\n    return (\r\n            <div style={gamepanel()}>\r\n                <Grid container spacing={4}>\r\n                    <Grid item xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <TextField className={classes.centeredProfile} id={\"ProfileName\"} label={\"Username\"} defaultValue={window.userInfo.username}/>\r\n                        <Button className={classes.centeredProfile} variant=\"contained\" color=\"secondary\" onClick={submitAnswer}>Change Username</Button>\r\n                        <Typography color={\"secondary\"}>{error}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Created</Typography>\r\n                        {\r\n                            props.gamesview.map((game,index) =>\r\n                                    <ExpansionPanel expanded={expandedGame === 'panelgame' + index} onChange={handleChangeGame('panelgame' + index)}>\r\n                                        <ExpansionPanelSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls={\"panel\" + index + \"-content\"}\r\n                                          id={\"panel\" + index + \"-header\"}\r\n                                        >\r\n                                          <Typography className={classes.heading}>{game.name}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Plays: {game.plays}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Likes: {game.votes}</Typography>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                          <ProfilePageCreatedGamesDetails\r\n                                            game={game}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                          />\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Solved</Typography>\r\n                        {\r\n                            props.solutionsview.map((solution,index) =>\r\n                                <ExpansionPanel expanded={expandedHighscores === 'panelhigh' + index} onChange={handleChangeHighscores('panelhigh' + index)}>\r\n                                    <ExpansionPanelSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls={\"panel\" + index + \"-content\"}\r\n                                      id={\"panel\" + index + \"-header\"}\r\n                                    >\r\n                                      <Typography className={classes.heading}>{solution.name}</Typography>\r\n                                      <Typography className={classes.secondaryHeading}>Best: {solution.numMoves}</Typography>\r\n                                      {solution.WinnerUserId == window.userInfo.userID ? <FaCrown style={{marginLeft: '30px'}}/> : null}\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <ProfilePageSolutionDetails\r\n                                            solution={solution}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                        />\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Puzzle Rush Records</Typography>\r\n                        <Typography variant=\"body1\">Most Puzzles Solved</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ maxWidth: column.maxWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rows.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                        <Typography style={{marginTop: '40px'}} variant=\"body1\">Highest Efficiency Scores</Typography>\r\n                        <Typography variant=\"caption\">Calculated by (total puzzles completed) * 7 - (total redundany moves from best score)</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ maxWidth: column.maxWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rowseff.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nexport default function RandomGamePage(props) {\r\n    return (\r\n        <Game\r\n              handleLineDirections={props.handleLineDirections}\r\n              LineDirections={props.LineDirections}\r\n              randomGame={'Yes'}\r\n              game={props.game}\r\n              difficulty={props.difficulty}\r\n         />\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PuzzleRushPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  puzzleRush={'Yes'}\r\n                  p_id={this.props.p_id}\r\n                  games={this.props.games}\r\n                  difficulty={this.props.difficulty}\r\n             />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PuzzleRushPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass LessonsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                learnMode={'Yes'}\r\n                games={window.learngameslist}/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default LessonsPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game handleClickDailyChallenge={this.props.handleClickDailyChallenge} handleLineDirections={this.props.handleLineDirections} LineDirections={this.props.LineDirections} dailyChallengeMode={'Yes'} playerStateList={this.props.playerStateList} savedMoves={this.props.savedMoves} games={this.props.dailyChallengeGameslist} dc_id={this.props.dc_id} highscores={this.props.dchighscores}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengePage;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Card,CardActions,Button,Avatar} from \"@material-ui/core\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function AboutUs(props) {\r\n    const facebookclick = () => {\r\n        window.open('https://www.facebook.com/RobotsEvolved-105278561284154')\r\n    }\r\n    const discordclick = () => {\r\n        window.open('https://discord.gg/VKMRQuE')\r\n    }\r\n    return (<div style={gamepanel()}>\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item spacing={4} xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card style={{display: 'inline-block', width: '100%'}}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    About\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    RobotsEvolved.com is based on the board game Ricochet Robots by Alex Randolph.\r\n                                    We have several game modes and variants that are inspired by the several Chess variants on the internet.\r\n                                    If you find any bugs or have any feature requests for RobotsEvolved please let me know by emailing robotsevolved@gmail.com or contacting me on FB from our FB page, I would love to hear some of the ideas people have. Ill get to developing the feature/fixing annoying bugs ASAP\r\n                                    If you use Google Login or Facebook Login I will NEVER email you or sell your information, it is strictly for user-identification.\r\n                                    Tell your friends about the site and get people on here!\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button onClick={facebookclick}>\r\n                                    <Avatar alt=\"Facebook\" src=\"https://facebookbrand.com/wp-content/uploads/2019/04/f_logo_RGB-Hex-Blue_512.png?w=512&h=512\" />\r\n                                </Button>\r\n                                <Button onClick={discordclick}>\r\n                                    <Avatar alt=\"Discord\" src=\"https://cdn.discordapp.com/attachments/675768013731135518/740251382862577694/icons8-discord-new-logo-48.png\" />\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Daily Challenge Rotation\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    The Daily Challenge rotates its difficulty every day as specified below with 2 x Random and 2 x Classic Type puzzles.\r\n                                    <br/>\r\n                                    Medium Mondays - 4 x Medium\r\n                                    <br/>\r\n                                    Trouble Tuesdays - 4 x Hard\r\n                                    <br/>\r\n                                    Wild Wednesdays - 4 x Medium\r\n                                    <br/>\r\n                                    Tryhard Thursdays -4 x Hard\r\n                                    <br/>\r\n                                    Flyin Fridays - 4 x Medium\r\n                                    <br/>\r\n                                    Sleepy Saturdays - 4 x Easy\r\n                                    <br/>\r\n                                    Standard Sundays - 4 x Hard\r\n                                </Typography>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Classic Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Classic puzzles are based on the original Game. These Puzzles only have walls that are L shaped and a goal is in the center of one of the L puzzles.\r\n                                </Typography>\r\n                                <Typography variant={\"h4\"} display={\"inline\"}>\r\n                                    Random Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Random Puzzles are created by having a 10% chance for a wall to spawn in location possible, Goals and Robot placements are completely random also.\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Easy\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 5-8 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Medium\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 9-13 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 14-17 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"} >\r\n                                    Extremely Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 18-22 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    God Tier\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 23+ Moves, Note: there are a low number of these puzzles due to the CPU required to create them\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Paper class=\"card3\">\r\n                          <img src={\"/static/images/284457_10151211078621477_839164197_n.jpg\"} alt=\"Jane\"/>\r\n                          <div class=\"container3\">\r\n                            <h2>Kyle Kwasniewski</h2>\r\n                            <p class=\"title3\">Creator &amp; FullStack Dev.</p>\r\n                            <p>I work in Software Development and Dev-Ops in New York and consider myself a Ricochet Robots enthusiast so I decided to make this application as a way to better hone my skill in web frameworks as well as pass the time during the quarantine. I play Frisbee and Ski alot as well as play my fair share of Steam games.</p>\r\n                            <p>Thanks for playing!</p>\r\n                            <p>robotsevolved@gmail.com</p>\r\n                          </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/284f909d-0d5c-4ae1-b100-76c9d46ae7d4.png\"} alt=\"Mike\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Jonah Tollefson</h2>\r\n                                <p className=\"title3\">Front-End Dev.</p>\r\n                                <p>Went to college with these other goobers in the US and now I work professionally as a\r\n                                    software engineer in Germany. For RobotsEvolved, I mainly worked on the frontend\r\n                                    using React. Cats and Ultimate Frisbee are life.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/derekschultz.jpg\"} alt=\"John\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Derek Schultz</h2>\r\n                                <p className=\"title3\">Back-End Dev.</p>\r\n                                <p>Full time Software Engineer. Graduated from University of Wisconsin Platteville\r\n                                    with a BS in Computer Science and Minor in Business Administration. Worked on\r\n                                    most of the database aspect of RobotsEvolved and some back end functionality. I\r\n                                    enjoy video games, beer, and playing darts.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n\r\n\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nexport default function ShowDailyPuzzleHistory(props) {\r\n    const handleDailyPuzzleHistoryClick = event => {\r\n        console.log(props.history)\r\n        props.handleDailyPuzzleHistoryClick(props.history)\r\n    }\r\n    return (\r\n            <Button style={window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? {marginLeft: '5px'} : {marginLeft: '60px'}} variant=\"contained\" size=\"small\" color=\"primary\" onClick={handleDailyPuzzleHistoryClick}>\r\n                 show answers\r\n            </Button>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport ShowDailyPuzzleHistory from '../components/ShowDailyPuzzleHistory';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ProfilePageCreatedGamesDetails from \"../components/ProfilePageComponents/ProfilePageCreatedGamesDetails\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function DailyChallengeHistory(props) {\r\n    const [expandedPanel, setExpandedPanel] = React.useState(false);\r\n    const handleChangePanel = (panel) => (event, isExpanded) => {\r\n        setExpandedPanel(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles();\r\n    return (<div style={gamepanel()}>\r\n                <Typography className={classes.titlehome} variant=\"h3\">Daily Challenge History</Typography>\r\n                {\r\n                    props.dailychallengehistory.map((history, index) =>\r\n                        <ExpansionPanel expanded={expandedPanel === 'panelgame' + index} onChange={handleChangePanel('panelgame' + index)}>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={\"panel\" + index + \"-content\"}\r\n                                id={\"panel\" + index + \"-header\"}\r\n                            >\r\n                                <Typography className={classes.heading}>{history.created}</Typography>\r\n                                <Typography style={{width: '15%'}} className={classes.secondaryHeading}>Winner: {history.nameSubmitted}</Typography>\r\n                                <ShowDailyPuzzleHistory history={history} handleDailyPuzzleHistoryClick={props.handleDailyPuzzleHistoryClick}/>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        <FaCrown/> {history.nameSubmitted} - {history.scoreSubmitted} <FaCrown/>\r\n                                    </Typography>\r\n                                    <Typography className={classes.secondaryHeading}>Lowest possible solution: {history.bestScore}</Typography>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                    )\r\n                }\r\n           </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengeHistoryAnswersPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        console.log(this.props.history);\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                dailyChallengeModeAnswers={'Yes'}\r\n                nameSubmitted={this.props.history.nameSubmitted}\r\n                bestScore={this.props.history.bestScore}\r\n                created={this.props.history.created}\r\n                games={this.props.history.games}\r\n                playerStateList={this.props.history.playerStateList}\r\n                scoreSubmitted={this.props.history.scoreSubmitted}\r\n                solutionDataSubmitted={this.props.history.solutionDataSubmitted}\r\n                submitted={this.props.history.submitted}\r\n                user_id={this.props.user_id}\r\n                />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengeHistoryAnswersPage;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n  },\r\n}));\r\n\r\nexport default function LoadingPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress size={120} color=\"secondary\" />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport clsx from 'clsx';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport Home from './Pages/Home';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\nimport axios from 'axios';\r\nimport Game from './containers/Game';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport BrushIcon from '@material-ui/icons/Brush';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"./constants/constants\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport PuzzleRushDifficultyModal from \"./containers/Modals/PuzzleRushDifficultyModal\";\r\nimport RandomGameDifficultyModal from \"./containers/Modals/RandomGameDifficultyModal\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport RandomGamePage from \"./Pages/RandomGamePage\";\r\nimport PuzzleRushPage from \"./Pages/PuzzleRushPage\";\r\nimport LessonsPage from \"./Pages/LessonsPage\";\r\nimport DailyChallengePage from \"./Pages/DailyChallenge\";\r\nimport AboutUs from \"./Pages/AboutUs\";\r\nimport DailyChallengeHistory from \"./Pages/DailyChallengeHistory\";\r\nimport DailyChallengeHistoryAnswersPage from \"./Pages/DailyChallengeHistoryAnswersPage\";\r\nimport { FaMedal } from 'react-icons/fa';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport Popover from \"@material-ui/core/Popover\";\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    drawerHeaderRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerHeaderLeft: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    toolbar1: {\r\n        backgroundColor: '#14A76C',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    dividerFullWidth: {\r\n        margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    darkmode: {\r\n          body: '#363537',\r\n          text: '#FAFAFA',\r\n          toggleBorder: '#6B8096',\r\n          gradient: 'linear-gradient(#091236, #1E215D)',\r\n    },\r\n});\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (window.uri === '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n                dailychallengehistoryloaded: false,\r\n                profileDataloaded: false,\r\n            };\r\n        }\r\n        else {\r\n            if (window.token.g_id == undefined) {\r\n                const linedir = window.userInfo == undefined ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={linedir} name={window.token.name} gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri} authorname={window.token.authorname} votes={window.token.votes} hasVoted={window.token.hasVoted} signInModalOpen={this.SignInButtonPressed}/>, //when uri is entered to play specific game\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                };\r\n            }\r\n            else {\r\n                const linedir = window.userInfo == undefined ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={linedir} randomGame={'Yes'} game={window.token} difficulty={window.token.g_difficulty}/>,\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                }\r\n            }\r\n        }\r\n        this.state.openChat = false;\r\n        this.state.chatAnchor = null;\r\n        this.state.open = window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? false : true;\r\n        this.state.mobileAnchorEl = null;\r\n        this.state.mobileMenuOpen = false;\r\n        this.state.showLoginModal = false;\r\n        this.state.showPuzzleRushModal = false;\r\n        this.state.loadingPage = false;\r\n        this.state.filterTerm = 'None'\r\n        this.state.searchTerm = ''\r\n        this.state.findWindowHeight = 0;\r\n        this.state.numFindGames = window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? 8 : 20;\r\n         if (window.loggedin === 'Yes') {\r\n            this.state.LineDirections = window.userInfo.LineDirFlag === 'Y';\r\n         }\r\n         else {\r\n            this.state.LineDirections = true;\r\n         }\r\n    }\r\n\r\n    handleChatOpen = (event) => {\r\n        this.setState({\r\n            openChat: true,\r\n            chatAnchor: event.currentTarget\r\n        })\r\n    };\r\n\r\n    handleChatClose = () => {\r\n      this.setState({\r\n          openChat: false\r\n      })\r\n    };\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState( {\r\n            open: false\r\n        })\r\n    };\r\n\r\n    handleLineDirections = (boolean) => {\r\n        if (window.loggedin === 'Yes') {\r\n            axios.post('/settingsChange', {LineDirections: boolean ? 'Y' : 'N'})\r\n                .then( res => {\r\n                    console.log('changed');\r\n                });\r\n        }\r\n        this.setState({\r\n            LineDirections: boolean\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallenge = () => {\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeData')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    const dc_movesList = res.data.dc_movesList == null ? null : JSON.parse(res.data.dc_movesList)\r\n                    const dc_playerList = res.data.dc_playerList == null ? null : JSON.parse(res.data.dc_playerList)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                                        PageSelected: <DailyChallengePage\r\n                                                            handleClickDailyChallenge={this.handleClickDailyChallenge}\r\n                                                            dailyChallengeGameslist={JSON.parse(res.data.dailyChallengeGameslist)}\r\n                                                            dc_id={res.data.dc_id}\r\n                                                            dchighscores={JSON.parse(res.data.dchighscores)}\r\n                                                            handleLineDirections={this.handleLineDirections}\r\n                                                            LineDirections={this.state.LineDirections}\r\n                                                            savedMoves={dc_movesList}\r\n                                                            playerStateList={dc_playerList}\r\n                                        />,\r\n                                        open: isOpen,\r\n                                        loadingPage: false,\r\n                                    });\r\n                        }\r\n                    });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState( {\r\n            open: true\r\n        });\r\n    };\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type === 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    };\r\n\r\n    handleClickRandomGameModal = (game,difficulty) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showRandomGameModal: false,\r\n            PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} randomGame={'Yes'} game={game} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickRandomGame = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: true,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickPuzzleRush = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: true,\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallengeHistory = (event) => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeHistory')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    var historydata = JSON.parse(res.data)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                            PageSelected: <DailyChallengeHistory handleDailyPuzzleHistoryClick={this.handleDailyPuzzleHistoryClick} dailychallengehistory={historydata}/>,\r\n                            challengeHistoryData: historydata,\r\n                            dailychallengehistoryloaded: true,\r\n                            open: isOpen,\r\n                            loadingPage: false,\r\n                        });\r\n                    }\r\n            });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleDailyPuzzleHistoryClick = history => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <DailyChallengeHistoryAnswersPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} history={history}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty,games,p_id) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showPuzzleRushModal: false,\r\n            PageSelected: <PuzzleRushPage handleClickPlayAgain={this.handleClickPuzzleRush} handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: false\r\n        });\r\n    };\r\n\r\n    closeRandomGameLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: false\r\n        });\r\n    };\r\n\r\n    handleGameClick = (name, gamedata, highscores, uri, authorname, votes, hasVoted) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} name={name} highscores={highscores} gamedata={gamedata} uri={uri} authorname={authorname} votes={votes} hasVoted={hasVoted} signInModalOpen={this.SignInButtonPressed}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <CreateGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} state={\"new\"}/>,\r\n             open: isOpen,\r\n             loadingPage: false,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickProfile = event => {\r\n        if (window.loggedin === 'Yes') {\r\n            this.state.loadingPage = true;\r\n                    axios.get('/getProfileData')\r\n                        .then( res => {\r\n                            var isOpen = this.state.open;\r\n                            if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                                isOpen = false\r\n                            }\r\n                            var profileData = res.data;\r\n                            var gamesview = JSON.parse(profileData.gamesview)\r\n                            var solutionsview = JSON.parse(profileData.solutionsview)\r\n                            var puzzlerushview = JSON.parse(profileData.puzzlerushview)\r\n                            if (this.state.loadingPage) {\r\n                                this.setState({\r\n                                    PageSelected: <ProfilePage handleClickPlayGame={this.handleGameClick} gamesview={gamesview} solutionsview={solutionsview} puzzlerushview={puzzlerushview}/>,\r\n                                    gamesview: gamesview,\r\n                                    solutionsview: solutionsview,\r\n                                    puzzlerushview: puzzlerushview,\r\n                                    profileDataloaded: true,\r\n                                    open: isOpen,\r\n                                    loadingPage: false,\r\n                                });\r\n                            }\r\n                        });\r\n                    this.setState({\r\n                        PageSelected: <LoadingPage/>,\r\n                    });\r\n                }\r\n        else {\r\n            this.SignInButtonPressed('Sign in');\r\n        }\r\n    };\r\n\r\n    setNumFindGames = (num,filterTerm,searchTerm) => {\r\n        this.setState({\r\n            numFindGames: num,\r\n            searchTerm: searchTerm,\r\n            filterTerm: filterTerm,\r\n        })\r\n    }\r\n\r\n    setFindWindow = height => {\r\n        this.setState({\r\n            findWindowHeight: height\r\n        })\r\n    }\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.post('/search', {search: this.state.searchTerm, filter: this.state.filterTerm, offset: 0, numGames: this.state.numFindGames})\r\n            .then( res => {\r\n                const gameslist = JSON.parse(res.data.gameslist);\r\n                const highscoreslist = JSON.parse(res.data.highscoreslist);\r\n                var isOpen = this.state.open;\r\n                if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                    isOpen = false\r\n                }\r\n                if (this.state.loadingPage) {\r\n                    this.setState({\r\n                        PageSelected: <FindGame findWindowHeight={this.state.findWindowHeight} setFindWindow={this.setFindWindow} setNumFindGames={this.setNumFindGames} gameslist={gameslist} highscoreslist={highscoreslist} handleGameClick={this.handleGameClick}/>,\r\n                        open: isOpen,\r\n                        loadingPage: false,\r\n                    });\r\n                }\r\n        });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleHomePageClick = () => {\r\n        this.setState({\r\n            PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickAboutUs = event => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <AboutUs/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickLearnGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <LessonsPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileAnchorEl: null,\r\n            mobileMenuOpen: false\r\n        });\r\n    };\r\n\r\n    showPage = () => {\r\n        return(\r\n            this.state.PageSelected\r\n        )\r\n    };\r\n\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({\r\n            mobileAnchorEl: event.currentTarget,\r\n            mobileMenuOpen: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const theme = createMuiTheme({\r\n            palette: {\r\n                primary: teal,\r\n                secondary: {\r\n                    main: '#e65100',\r\n                },\r\n            }\r\n        });\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <AppBar\r\n                        position=\"fixed\"\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: this.state.open,\r\n                        })}\r\n                     >\r\n                        <Toolbar className={classes.toolbar1}>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={this.handleDrawerOpen}\r\n                                edge=\"start\"\r\n                                className={clsx(classes.menuButton, this.state.open && classes.hide)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <img onClick={this.handleHomePageClick} width={50} height={50} src=\"/static/images/logo150.png\"/>\r\n                            <Typography variant=\"h6\" className={classes.title} noWrap>\r\n                                <a href=\"/\" style={{color: 'white'}}>RobotsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </Typography>\r\n                            <div className={classes.grow} />\r\n                            <div className={classes.sectionDesktop}>\r\n                                <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.sectionMobile}>\r\n                                <IconButton\r\n                                    aria-label=\"show more\"\r\n                                    aria-controls={\"primary-search-account-menu-mobile\"}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.handleMobileMenuOpen}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <MoreIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Menu\r\n                        anchorEl={this.state.mobileAnchorEl}\r\n                        anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        id={\"primary-search-account-menu-mobile\"}\r\n                        keepMounted\r\n                        transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        open={this.state.mobileMenuOpen}\r\n                        onClose={this.handleMobileMenuClose}\r\n                    >\r\n                        <MenuItem>\r\n                            <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                    <Drawer\r\n                        id=\"MainDrawer\"\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.state.open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div className={classes.drawerHeader}>\r\n                            <div className={classes.drawerHeaderLeft}>\r\n                                <SignInButton onClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.drawerHeaderRight}>\r\n                                <IconButton onClick={this.handleDrawerClose}>\r\n                                    {useTheme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Play\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Find a Game'} onClick={this.handleClickFindGame}>\r\n                                <ListItemIcon><SearchIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Find a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge'} onClick={this.handleClickDailyChallenge}>\r\n                                <ListItemIcon><TodayIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Create a Game'} onClick={this.handleClickCreateGame}>\r\n                                <ListItemIcon><BrushIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Create a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Random Game'} onClick={this.handleClickRandomGame}>\r\n                                <ListItemIcon><CasinoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Random Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Puzzle Rush'} onClick={this.handleClickPuzzleRush}>\r\n                                <ListItemIcon><TimerIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Puzzle Rush'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Learn\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Lessons'} onClick={this.handleClickLearnGame}>\r\n                                <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Lessons'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Community\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Profile'} onClick={this.handleClickProfile}>\r\n                                <ListItemIcon><AccountBoxIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Profile'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge History'} onClick={this.handleClickDailyChallengeHistory}>\r\n                                <ListItemIcon><FaMedal /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge History'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Tools\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'About'} onClick={this.handleClickAboutUs}>\r\n                                <ListItemIcon><InfoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'About'} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n                    <main className={clsx(classes.content, {\r\n                        [classes.contentShift]: this.state.open,\r\n                    })}>\r\n                        <div className={classes.drawerHeader} />\r\n                        {this.showPage()}\r\n                    </main>\r\n                    <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n                    <PuzzleRushDifficultyModal\r\n                        closeModal={this.closePuzzleRushLoginModal}\r\n                        show={this.state.showPuzzleRushModal}\r\n                        handleClickPuzzleRush={this.handleClickPuzzleRushModal}\r\n                    />\r\n                    <RandomGameDifficultyModal\r\n                        closeModal={this.closeRandomGameLoginModal}\r\n                        show={this.state.showRandomGameModal}\r\n                        handleClickRandomGame={this.handleClickRandomGameModal}\r\n                    />\r\n                </div>\r\n                <div style={{position: \"fixed\", bottom: \"10px\", right: \"10px\"}}>\r\n                    <IconButton\r\n                        style = {{backgroundColor: \"#14a76c\"}}\r\n                        onClick={this.handleChatOpen}\r\n                    >\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n                    <Popover\r\n                        open={this.state.openChat}\r\n                        anchorEl={this.state.chatAnchor}\r\n                        onClose={this.handleChatClose}\r\n                        anchorOrigin={{\r\n                            vertical: \"top\",\r\n                            horizontal: \"left\"\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"right\"\r\n                        }}\r\n                    >\r\n                        <iframe\r\n                            src=\"https://titanembeds.com/embed/740127738345554021?css=140&username=guest&defaultchannel=740270339900178583\"\r\n                            height= {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? (parseInt(window.innerHeight/2)) + '': \"600\"}\r\n                            width= {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? (window.innerWidth - 40) + '': \"400\"}\r\n                            frameBorder=\"0\"\r\n                        />\r\n                    </Popover>\r\n                </div>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}