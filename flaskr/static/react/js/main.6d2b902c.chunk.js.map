{"version":3,"sources":["components/LearnGameItems.js","constants/constants.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinModal.jsx","components/YouWinDailySingleModal.js","components/YouWinDailyFinalModal.js","components/AddPuzzleModal.jsx","components/ToggleSettings.js","components/Timer.js","containers/DisplayView.js","components/HighScores.jsx","components/DailyChallengeScores.jsx","containers/Modals/PuzzleRushFinishedModal.js","containers/Modals/RandomGameStatsModal.jsx","components/CloseIconWithOnClick.jsx","components/DescriptionList.jsx","components/YouWinLessonModal.js","components/ShowDailyChallengeScoresCard.jsx","components/DailyChallengeHistoryData.js","components/boardgenerator.js","containers/Modals/BoardResetModal.js","containers/Game.js","Pages/CreateGame.js","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","Material-UI/themes.jsx","Pages/Home.js","containers/Modals/LoginModal.js","components/SignInButton.js","components/LoggedInUser.js","containers/Modals/PuzzleRushDifficultyModal.js","containers/Modals/RandomGameDifficultyModal.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","components/ProfilePageComponents/ProfilePageCreatedGamesDetails.js","components/ProfilePageComponents/ProfilePageSolutionDetails.js","Pages/ProfilePage.js","Pages/RandomGamePage.js","Pages/PuzzleRushPage.js","Pages/LessonsPage.js","Pages/DailyChallenge.js","Pages/AboutUs.js","components/ShowDailyPuzzleHistory.js","Pages/DailyChallengeHistory.js","Pages/DailyChallengeHistoryAnswersPage.js","components/LoadingPage.jsx","App.js","serviceWorker.js","index.js"],"names":["LearnGameItems","props","handleClick","handleClickGame","index","selected","Button","variant","color","aria-label","onClick","name","UP","GOAL_IMAGE","DIRECTION_MAP_IMAGES","yellow","DOWN","LEFT","RIGHT","red","green","blue","MovesView","style","width","float","display","this","moveHistory","length","map","move","src","playerState","robot","colorSignifier","dir","React","Component","styleoutside","dimension","position","dim","height","backgroundColor","top","left","styleinside","styleinside2","Square","border","margin","overflow","children","id","transition","styleoutsidedraggable","selectedColor","undefined","borderStyle","borderColor","borderRadius","Robot","onStopDragHandler","e","handleCreateMode","isCreateMode","buildMode","x","y","grid","draggableGrid","onStop","bounds","onTouchStart","orientation","opacity","wallThickness","wallOffset","Wall","userSelect","styledragable","Goal","show","endPosition","obj","key","hasOwnProperty","YouWinModal","Dialog","onClose","handleClose","container","document","getElementById","BackdropProps","aria-labelledby","open","maxWidth","DialogTitle","DialogContent","dividers","numMoves","TextField","label","defaultValue","username","DialogActions","submitAnswer","resetPuzzle","YouWinDailySingleModal","disableAutoFocus","disableEnforceFocus","Typography","totalMoves","undoMove","moveNextPuzzle","YouWinDailyFinalModal","handleClickSubmitGame","newPlayerState","submitted","AddPuzzleModal","submitPuzzle","ToggleSettings","event","FormControlLabel","value","control","Switch","onChange","checked","showColoredLineDirections","Timer","state","minutes","seconds","timer","myInterval","setInterval","setState","puzzleRushTimeUp","clearInterval","valuetext","DisplayView","createMode","fullWidth","handleCreateBoardClick","toggleBuildMode","createBoardPressed","copyToClipboard","dummy","createElement","body","appendChild","window","location","host","uri","select","execCommand","removeChild","copiedClipboard","thisThing","copyButtonText","setTimeout","handleDimensionChange","getElementsByClassName","blur","parseInt","toString","DimensionChanged","showPuzzleLink","isPuzzleRush","isLesson","isDailyChallengeAnswers","isDailyChallenge","paddingBottom","marginRight","marginTop","marginBottom","Divider","ButtonGroup","toggleLineIndicators","gutterBottom","Slider","onChangeCommitted","getAriaValueText","step","marks","min","max","squareSizeValue","valueLabelDisplay","highscores","Grid","item","xs","marginleft","highscore","Paper","elevation","spacing","comment","userid","created","highscorestyle","wins","i","crowns","push","CrownCounter","user_id","score","direction","PuzzleRushWinModal","closeModal","onBackdropClick","difficulty","md","List","dense","ListItem","ListItemText","primary","secondary","numPuzzlesCompleted","averageTime","averageMoves","differenceOptimal","movesPerSecond","handleClickPlayAgain","RandomGameStatsModal","showStatsModal","handleShowRandomAnswers","answers","lowestMoveSequence","lowestMoves","CloseIconWithOnClick","onMouseDown","Descriptionlist","tipsText","text","ListItemSecondaryAction","IconButton","edge","handleCloseToolTips","YouWinLessonModal","useStyles","makeStyles","root","minWidth","bullet","transform","title","fontSize","pos","ShowDailyChallengeScoresCard","classes","Card","className","CardContent","component","bestScore","MovesforPuzzle","MoveSequence","DailyChallengeHistoryData","difficultyforPuzzle","lowestMovesforPuzzle","nameSubmitted","scoreSubmitted","playerMovedSequence","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","type","boardState","wallVerticle","wallHorizontal","goal","randompos1","randompos2","randompos3","randompos4","randomPositions","extend","j","gameWon","playerStart","slice","BoardResetModal","createBoardHandler","preventDefault","percent","createBoard","textAlign","paddingRight","Input","inputProps","placeholder","addEventListener","keyCode","target","indexOf","formatGeneratedMoveSequence","moves","images","charAt","setDefaultSquareSize","boardWidth","boardHeight","drawerWidth","getComputedStyle","windowWidth","innerWidth","settingstop","innerHeight","settings","squarevalue","ColoredLineDirections","Game","updateHighscores","axios","get","then","res","highscoresdata","JSON","parse","data","FindhighscoreIsDiff","squareSize","copiedToClipboard","check","tocheck","toreturn","DChighscoreIsDiff","updateDailyHighscores","dc_id","dchighscores","handleClickDailyChallenge","componentDidMount","onkeydown","handleKeyDown","loadedGame","IntervalId","dailyChallengeMode","componentWillUnmount","newDirection","tabSelector","handleUndoMove","handlePlayerMovement","robotSelect","robotSelected","namesubmit","userInfo","console","log","post","puzzledata","authorname","history","handleLineDirections","dailySubmittedSucessfully","showBoardResetPanelModal","closeRandomStatsModal","closeCreateBoardModal","closePuzzleRushFinishedModal","showPuzzleRushFinishedModal","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","totalMovesDiff","solutiondifference","numPuzzleon","totalMovesList","avgMoves","p_id","differenceFrom","percentile","submitDailyAnswer","LastRobotPosition","moveHistoryList","playerStateList","solutiondata","Alert","severity","dc_movesList","dc_playerList","checkwin","Won","player","puzzleRush","randomGame","dailyChallengeModeAnswers","gamesWonDaily","games","handleDailyClickGame","learnMode","g_id","solutionmoves","g_moves","g_puzzledata","newarray","concat","oldPositon","prevPosition","splice","handleLearnClickGame","description","handleDailyClickAnswersGame","g_solutiondata","g_difficulty","solutionDataSubmitted","loadSidebar","game","paddingTop","DailyChallengeScores","HighScores","handlePlayerMovementFromMouse","moveObj","pop","createModeWallClick","indexToChange","newWallHorizontal","wallH","newWallVerticle","wallV","onStopDragHandlerGoal","round","lastY","lastX","goals","gamedata","savedMoves","g_uri","pushState","settingsWidth","settingsHeight","percentWall","settingsPercent","LineDirections","paddingLeft","alignItems","sm","numPuzzleRush","zeroMinWidth","Board","square","ColoredLineDirection","ColoredLine","puzzleRushPercentileCompleted","withRouter","CreateGame","withStyles","theme","background","padding","upperPadding","upperPaddingButton","bottom","lowerPadding","rightSideText","leftSideText","numberOfHighScores","trimName","separated","split","word","substring","trimNameShort","justifyContent","Tooltip","plays","handleGameClick","disableGutters","FindGame","handleFilterMenuOpen","anchorEl","currentTarget","handleCloseFilterMenuMostPlayed","searchTerm","searchRef","search","filter","offset","highscoreslist","gameslist","handleCloseFilterMenuHighest","handleSearchSubmit","align","InputBase","input","inputRef","ref","onKeyPress","iconButton","divider","startIcon","Menu","keepMounted","Boolean","handleCloseFilterMenu","MenuItem","FindGameElements","marginLeft","flex","PlayGame","flexGrow","homepage","griditems","paper","Width","image","img","maxHeight","baseExpansion","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","darkmode","iconcards","marginBotton","iconcardsDaily","titlehome","fontFamily","titledailyroto","iconfonts","createboardcard","content","demo","centeredProfile","expandedPanelDCH","table","ComplexGrid","justify","paragraph","CardActionArea","handleClickCreateGame","CardMedia","alt","handleClickFindGame","handleClickRandomGame","handleClickLearnGame","handleClickPuzzleRush","dividerFullWidth","LoginModal","loginGoogle","href","closeLoginModal","class","SignInButton","loggedin","textToShow","LoggedInUser","SignInButtonPressed","profilePicture","PuzzleRushDifficultyModal","handleClickPuzzleRushModal","action","isLoading","handleClickEasyPuzzleRush","handleClickMediumPuzzleRush","handleClickHardPuzzleRush","handleClickExHardPuzzleRush","handleChange","wrap","CircularProgress","FormControl","FormLabel","RadioGroup","Radio","handleClickRandomGameModal","handleClickEasy","handleClickMedium","handleClickHard","handleClickExHard","handleClickGodMode","ProfilePageCreatedGamesDetails","handleClickPlayGame","ProfilePageSolutionDetails","solution","WinnerCreated","WinnerUsername","ProfilePage","createData","col1","col2","columns","rows","puzzlerushview","maxeasyc","maxeasyp","maxmediumc","maxmediump","maxhardc","maxhardp","maxexhardc","maxexhardp","rowseff","maxeffec","maxeffep","maxeffmc","maxeffmp","maxeffhc","maxeffhp","maxeffexc","maxeffexp","useState","error","setError","expandedGame","setExpandedGame","expandedHighscores","setExpandedHighscores","newuser","gamesview","ExpansionPanel","expanded","panel","isExpandedGame","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","solutionsview","isExpandedHighScores","WinnerUserId","userID","TableContainer","Table","size","TableHead","TableRow","column","TableCell","TableBody","row","RandomGamePage","PuzzleRushPage","LessonsPage","learngameslist","DailyChallengePage","dailyChallengeGameslist","AboutUs","CardActions","Avatar","ShowDailyPuzzleHistory","handleDailyPuzzleHistoryClick","DailyChallengeHistory","expandedPanel","setExpandedPanel","dailychallengehistory","isExpanded","DailyChallengeHistoryAnswersPage","LoadingPage","App","handleDrawerClose","boolean","loadingPage","isOpen","PageSelected","DailyChallenge","handleDrawerOpen","showLoginModal","showRandomGameModal","showPuzzleRushModal","handleClickDailyChallengeHistory","historydata","challengeHistoryData","dailychallengehistoryloaded","closePuzzleRushLoginModal","closeRandomGameLoginModal","handleClickProfile","profileData","profileDataloaded","handleHomePageClick","handleClickAboutUs","handleMobileMenuClose","mobileAnchorEl","mobileMenuOpen","showPage","handleMobileMenuOpen","token","linedir","LineDirFlag","createMuiTheme","teal","main","AppBar","clsx","appBar","appBarShift","Toolbar","toolbar1","menuButton","hide","noWrap","grow","sectionDesktop","sectionMobile","aria-haspopup","anchorOrigin","vertical","horizontal","transformOrigin","Drawer","drawer","anchor","drawerPaper","drawerHeader","drawerHeaderLeft","drawerHeaderRight","useTheme","button","ListItemIcon","contentShift","RandomGameDifficultyModal","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","mixins","toolbar","breakpoints","up","toggleBorder","gradient","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"js/main.6d2b902c.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function LearnGameItems(props) {\r\n    const handleClick = () => {\r\n        props.handleClickGame(props.index)\r\n    }\r\n    if (props.selected === props.index) {\r\n        return (\r\n            <Button\r\n                variant=\"contained\" color=\"primary\"\r\n                aria-label=\"vertical outlined primary button group\"\r\n                onClick={handleClick}\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={handleClick}\r\n                aria-label=\"vertical outlined primary button group\"\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n}","export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const MOBILE_INNER_SCREEN_WIDTH = '960';\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div id=\"MainGameBoard\" style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleoutsidedraggable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var selectedColor = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        selectedColor = SELECTED_ROBOT;\r\n        borderStyle = \"solid\";\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        borderStyle: borderStyle,\r\n        borderColor: selectedColor,\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    onStopDragHandler = (e, position) => {\r\n        this.props.onStopDragHandler(position,this.props.index);\r\n    }\r\n\r\n\r\n    handleCreateMode = () => {\r\n        if (this.props.isCreateMode === 'Yes' && this.props.buildMode) {\r\n            return (\r\n            <Draggable position={{x: this.props.position.left * this.props.dimension, y:this.props.position.top*this.props.dimension}} grid={this.props.draggableGrid} onStop={this.onStopDragHandler} bounds=\"parent\">\r\n                <div onTouchStart={this.handleClick} onClick={this.handleClick} style={styleoutsidedraggable(this.props)}>\r\n                    <div style={styleinside(this.props)}>\r\n                        <div style={styleinside2(this.props)}/>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <div onTouchStart={this.handleClick} onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            this.handleCreateMode()\r\n        );\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.isCreateMode === 'Yes'  && props.buildMode) {\r\n        const onStopDragHandler = (e, position) => {\r\n            props.onStopDragHandler(position);\r\n        }\r\n        return(\r\n        <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n            <img src={GOAL_IMAGE} style={styledragable(props)}/>\r\n        </Draggable>\r\n        )\r\n    }\r\n    else {\r\n        return(<img src={GOAL_IMAGE} style={style(props)}/>)\r\n    }\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({buildMode,show,dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension + dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension + dimension;\r\n            left = position.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        opacity: show ? '0.5' : '0.0',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default (props) => {\r\n    const handleClick = () => {\r\n        props.handleClick(props.dir)\r\n    }\r\n    if (props.buildMode === 'undefined' || !props.buildMode)\r\n    {\r\n        return (\r\n            <div onClick={handleClick} style={style(props)}/>\r\n        );\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LearnGameItems from '../components/LearnGameItems';\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailySingleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Completed!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <Typography variant=\"body1\">\r\n                        You used {this.props.numMoves} Moves, for this puzzle.\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Total Moves: {this.props.totalMoves}\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Finish all puzzles to get submit your score!\r\n                    </Typography>\r\n                    <br/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailySingleModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailyFinalModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClickSubmitGame = () => {\r\n        this.props.submitAnswer(this.props.newPlayerState)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Completed the Challenge!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                    {this.props.submitted}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickSubmitGame}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailyFinalModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Submit Puzzle</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField id={\"namesubmit\"} label={\"Name of Puzzle\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleModal;\r\n","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Path Indicators\"\r\n                    checked={this.props.showColoredLineDirections}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n\r\n    state = {\r\n            minutes: 5,\r\n            seconds: 0,\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.puzzleRushTimeUp();\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    timer = () => {\r\n        if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n            return (<h2>Time is up!</h2>)\r\n        }\r\n        else {\r\n            return(\r\n                <h2>Time Remaining: {this.state.minutes}:{this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds}</h2>)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            this.timer()\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ToggleSettings from \"../components/ToggleSettings\";\r\nimport Timer from \"../components/Timer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                        copyButtonText: \"Copy Puzzle Link\"\r\n                     };\r\n        this.state.uri = this.props.isDailyChallenge === 'Yes' ? 'dailychallenge' : this.props.uri;\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <div>\r\n                    <Button color=\"secondary\" variant={\"outlined\"} fullWidth={true} onClick={this.handleCreateBoardClick}>Modify Board</Button>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Switch color=\"primary\" checked={this.props.buildMode} onChange={this.props.toggleBuildMode}/>}\r\n                        label=\"Build Mode\"\r\n                            />\r\n                </div>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.state.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        document.getElementsByClassName(\"MuiSlider-thumb\")[0].blur();\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n    showPuzzleLink = () => {\r\n        if (this.props.createMode === 'Yes' || this.props.isPuzzleRush === 'Yes' || this.props.isLesson === 'Yes' || this.props.isDailyChallengeAnswers === 'Yes' || this.props.isDailyChallenge === 'Yes') {\r\n            return null;\r\n        }\r\n        else {\r\n                return(\r\n                     <div style={{paddingBottom: '10px'}}>\r\n                         <Button fullWidth={true} variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                                 onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                     </div>\r\n                    )\r\n        }\r\n    }\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                {this.showPuzzleLink()}\r\n                 <Divider />\r\n                 <Typography\r\n                     color=\"textSecondary\"\r\n                     display=\"block\"\r\n                     variant=\"caption\"\r\n                     style={{paddingBottom: '10px'}}\r\n                 >\r\n                     Board Actions\r\n                 </Typography>\r\n                 <ButtonGroup fullWidth={true} color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     <Button onClick={this.props.undoMove}>Undo</Button>\r\n                 </ButtonGroup>\r\n                 {this.isCreateMode(this.props.createMode)}\r\n                 <Divider />\r\n                 <ToggleSettings showColoredLineDirections={this.props.showColoredLineDirections} onClick={this.props.toggleLineIndicators}/>\r\n                 <div style={buttonPanel()}>\r\n                     <Typography id=\"discrete-slider-small-steps\"\r\n                                 color=\"textSecondary\"\r\n                                 display=\"inline\"\r\n                                 gutterBottom>\r\n                         Size Of Board\r\n                     </Typography>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={this.props.squareSizeValue}\r\n                         valueLabelDisplay=\"auto\"\r\n                         id=\"sliderelement\"\r\n                     />\r\n                 </div>\r\n                 <Divider/>\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n}\r\n\r\nconst paperstyle = () => {\r\n    return {\r\n        marginBottom: '15px'\r\n    }\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n                <Paper style={paperstyle()}elevation={3}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={9}>\r\n                            <Typography color={'primary'} style={{float: 'left'}}>\r\n                                {highscore.comment}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                                {highscore.userid != 1 ? <GoVerified/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'textSecondary'}>{highscore.numMoves}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.created}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Paper>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid item xs={12} style={styleouter()}>\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginTop: '30px',\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst CrownCounter = highscore => {\r\n    var crowns = []\r\n    var i;\r\n    for (i=0; i<highscore.wins;i++) {\r\n        crowns.push(<FaCrown/>);\r\n    }\r\n    return (\r\n        <div>\r\n            {crowns}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (<Grid item xs={12}>\r\n                <Paper elevation={3}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={9}>\r\n                            <Typography color={'primary'} style={{float: 'left'}}>\r\n                                {highscore.name}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                                {highscore.wins == 0 || highscore.wins == null ? null : CrownCounter(highscore) }\r\n                                {highscore.user_id != 1 ? <GoVerified/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'textSecondary'}>{highscore.score}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.submitted}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Paper>\r\n            </Grid>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid style={styleouter()} container direction={'column'} spacing={1}>\r\n        {\r\n                highscores.map(highscore =>\r\n                    highscorestyle(highscore)\r\n                )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nclass PuzzleRushWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Puzzle Rush - {this.props.difficulty}</DialogTitle>\r\n                <DialogContent dividers>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"h6\">\r\n                            Statistics\r\n                          </Typography>\r\n                          <div>\r\n                            <List dense={true}>\r\n\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Number of Puzzles Completed\"\r\n                                    secondary={this.props.numPuzzlesCompleted}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average time Per Puzzle\"\r\n                                    secondary={this.props.averageTime}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average Moves per Puzzle\"\r\n                                    secondary={this.props.averageMoves}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Efficiency Score: puzzles * 7 - redundant moves from best\"\r\n                                    secondary={(this.props.numPuzzlesCompleted * 7) - this.props.differenceOptimal}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Moves Per Second\"\r\n                                    secondary={this.props.movesPerSecond}\r\n                                  />\r\n                                </ListItem>\r\n                            </List>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.handleClickPlayAgain}>Play Again!</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushWinModal;\r\n\r\n","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../../constants/constants';\r\n\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass RandomGameStatsModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answers: null,\r\n        }\r\n    }\r\n\r\n    showStatsModal = () => {\r\n        this.props.handleShowRandomAnswers()\r\n        this.setState({\r\n            answers: this.props.lowestMoveSequence\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-random\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        lowest possible moves: {this.props.lowestMoves}\r\n                    </div>\r\n                    {this.state.answers}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.showStatsModal}>Show Puzzle Answers</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomGameStatsModal;","import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nexport default function CloseIconWithOnClick(props) {\r\n    const handleClose = () => {\r\n        props.handleClose(props.index);\r\n    }\r\n    return (<CloseIcon onMouseDown={handleClose}/>\r\n    )\r\n}","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport CloseIconWithOnClick from './CloseIconWithOnClick'\r\n\r\nexport default function Descriptionlist(props) {\r\n    return(\r\n            <List>\r\n              {\r\n                  props.tipsText.map((text,index) =>\r\n                    <ListItem>\r\n                      <div>\r\n                        {text}\r\n                      </div>\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                          <CloseIconWithOnClick index={index} handleClose={props.handleCloseToolTips}/>\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  )\r\n              }\r\n            </List>\r\n    )\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinLessonModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <Typography> You completed the Lesson! Move on to the next one!\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinLessonModal;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 25,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function ShowDailyChallengeScoresCard(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {props.name}\r\n        </Typography>\r\n        <Typography style={{marginBottom: '30px'}} variant=\"h5\" component=\"h2\">\r\n          {props.bestScore}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.MovesforPuzzle}\r\n          <br/>\r\n          {props.MoveSequence}\r\n          <br />\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport MovesView from '../components/MovesView';\r\nimport ShowDailyChallengeScoreCard from '../components/ShowDailyChallengeScoresCard'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst stylebelow = () => {\r\n    return {\r\n        marginTop: '40px',\r\n        marginBottom: '20px'\r\n    }\r\n}\r\n\r\nclass DailyChallengeHistoryData extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography style={stylebelow()} variant=\"h4\"> {this.props.difficultyforPuzzle} </Typography>\r\n                <ShowDailyChallengeScoreCard\r\n                    name={\"Robot God\"}\r\n                    bestScore={this.props.bestScore}\r\n                    MovesforPuzzle={this.props.lowestMovesforPuzzle}\r\n                    MoveSequence={this.props.lowestMoveSequence}\r\n                />\r\n                <ShowDailyChallengeScoreCard\r\n                    name={this.props.nameSubmitted}\r\n                    bestScore={this.props.scoreSubmitted}\r\n                    MovesforPuzzle={null}\r\n                    MoveSequence={<MovesView\r\n                                        moveHistory={this.props.playerMovedSequence} playerState={[{colorSignifier: \"blue\"},{colorSignifier: \"green\"},{colorSignifier: \"red\"},{colorSignifier: \"yellow\"}]}\r\n                                  />}\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyChallengeHistoryData;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent,type) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    if (type === 'blank') {\r\n        var goal = {top: height-1, left: width-1};\r\n        var randompos1 = {top: 0,left: 0, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n        var randompos2 = {top: 0,left: 1, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n        var randompos3 = {top: 1,left: 0, color: ROBOT_RED, colorSignifier: 'red'};\r\n        var randompos4 = {top: 1,left: 1, color: ROBOT_YELLOW, colorSignifier:'yellow'};\r\n    }\r\n    else {\r\n        var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n        var randomPositions = [goal];\r\n        for (var i=0;i<5;i++) {\r\n            randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n        }\r\n        var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n        var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n        var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n        var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    }\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {withRouter} from 'react-router';\r\nimport Draggable from 'react-draggable';\r\nimport LearnGameItems from '../components/LearnGameItems';\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport YouWinDailySingleModal from '../components/YouWinDailySingleModal';\r\nimport YouWinDailyFinalModal from '../components/YouWinDailyFinalModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport PuzzleRushWinModal from '../containers/Modals/PuzzleRushFinishedModal';\r\nimport RandomGameStatsModal from '../containers/Modals/RandomGameStatsModal';\r\nimport DescriptionList from '../components/DescriptionList';\r\nimport YouWinLessonModal from '../components/YouWinLessonModal';\r\nimport DailyChallengeHistoryData from '../components/DailyChallengeHistoryData';\r\nimport Timer from \"../components/Timer\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR,\r\n    MOBILE_INNER_SCREEN_WIDTH\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if(e.keyCode == 32 && e.target == document.body) {\r\n    e.preventDefault();\r\n  }\r\n    if([37, 38, 39, 40, 9,13].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n    }\r\n}\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\nconst formatGeneratedMoveSequence = (moves) => {\r\n    var images = []\r\n    moves.map(move => {\r\n        var color = move.charAt(0);\r\n        var direction = move.charAt(1);\r\n        if (color == 'B') {\r\n            color = 'blue'\r\n        }\r\n        else if (color == 'R') {\r\n            color = 'red'\r\n        }\r\n        else if (color == 'Y') {\r\n            color = 'yellow'\r\n        }\r\n        else {\r\n            color = 'green'\r\n        }\r\n        if (direction == 'N') {\r\n            direction = UP\r\n        }\r\n        else if (direction == 'S') {\r\n            direction = DOWN\r\n        }\r\n        else if (direction == 'E') {\r\n            direction = RIGHT\r\n        }\r\n        else {\r\n            direction = LEFT\r\n        }\r\n        images.push(<img src={DIRECTION_MAP_IMAGES[color][direction]}/>)\r\n    });\r\n    return images\r\n}\r\n\r\n\r\nconst setDefaultSquareSize = (boardWidth,boardHeight) => {\r\n    const drawerWidth = document.getElementById(\"MainDrawer\") == null ? 140 : parseInt(getComputedStyle(document.getElementById(\"MainDrawer\")).width);\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n    var settingstop = windowHeight - 120;\r\n\r\n    settingstop = settingstop / boardHeight\r\n    settingstop = parseInt(settingstop);\r\n    settingstop = settingstop - (settingstop % 4)\r\n\r\n    var settings = ((windowWidth < MOBILE_INNER_SCREEN_WIDTH) ? windowWidth - 20 : (windowWidth - drawerWidth) / 1.75);\r\n    settings = settings / boardWidth;\r\n    settings = parseInt(settings);\r\n    settings = settings - (settings % 4);\r\n    var squarevalue = settings > settingstop ? settingstop : settings\r\n    if (squarevalue < 16) {\r\n        squarevalue = 16;\r\n    }\r\n    else if (squarevalue > 52) {\r\n        squarevalue = 52;\r\n    }\r\n    return squarevalue;\r\n};\r\n\r\nconst ColoredLineDirections = [LEFT,RIGHT,UP,DOWN]\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.puzzleRush === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.p_id = this.props.p_id;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = []\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            this.state.moveHistoryList=[];\r\n\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[0].g_solutiondata))\r\n            this.state.lowestMovesforPuzzle = this.props.games[0].g_moves\r\n            this.state.difficultyforPuzzle = this.props.games[0].g_difficulty\r\n            this.state.playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[0]\r\n\r\n            this.state.playerStateList = [];\r\n            this.state.tipsText = [];\r\n            this.state.highscores = [];\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            if (this.props.savedMoves != null) {\r\n                this.state.moveHistoryList = this.props.savedMoves\r\n                this.state.gamesWonDaily = [true,true,true,true]\r\n                this.state.moveHistory = this.props.savedMoves[0].slice()\r\n                this.state.playerState = this.props.playerStateList[0].slice()\r\n            }\r\n            else {\r\n                this.state.moveHistoryList=[];\r\n            }\r\n            this.state.playerStateList = this.props.playerStateList != null ? this.props.playerStateList : [];\r\n            this.state.tipsText = ['Winners who are Logged in will receive a Crown','See about page for details on the daily challenge difficulty','Puzzles reset at 3PM EST, the page will refresh automatically'];\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.dc_id = this.props.dc_id;\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.game.g_puzzledata)\r\n            this.state.lowestMoves = this.props.game.g_moves\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.game.g_solutiondata))\r\n            this.state.difficulty = this.props.game.g_difficulty\r\n            this.state.createMode = 'No';\r\n            this.state.gameWon = false;\r\n            this.state.buildMode = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = ['this game was randomly generated'];\r\n            this.state.uri = this.props.game.g_uri;\r\n            window.history.pushState({id: 'Random Game'},'RobotsEvolved | Random Game','/play/' + this.props.game.g_uri)\r\n        }\r\n        else if (this.props.learnMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [this.props.games[0].description];\r\n        }\r\n        else if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.buildMode = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = []\r\n            window.history.pushState({id: 'Play Game'},'RobotsEvolved | Play Game','/play/'+ this.props.uri)\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,1,'blank');\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                buildMode: true,\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false,\r\n                tipsText: [\r\n                                        'Click on Wall spots to toggle',\r\n                                        'Click and Drag robots or goal to move robots',\r\n                                        'When you are ready, toggle build mode in order to solve the puzzle',\r\n                                        'You must solve the puzzle in order to submit.']\r\n            },board);\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n        }\r\n        this.state.showColoredLineDirections = this.props.LineDirections;\r\n    };\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                const highscoresdata = JSON.parse(res.data.highscores)\r\n                if (this.FindhighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    FindhighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.numMoves != check[index].numMoves) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n\r\n    DChighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.score != check[index].score) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n    updateDailyHighscores = () => {\r\n        axios.get('/dailychallengehighscores?dc_id=' + this.state.dc_id)\r\n            .then( res => {\r\n                if (res.data.dc_id != this.state.dc_id) {\r\n                    this.props.handleClickDailyChallenge();\r\n                    return\r\n                }\r\n                const highscoresdata = JSON.parse(res.data.highscores)//PoorMan's global redux implementation\r\n                if (this.DChighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                    window.dchighscores = JSON.parse(res.data.highscores)\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.updateHighscores();\r\n            var IntervalId = setInterval(this.updateHighscores, 8000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.updateDailyHighscores();\r\n            var IntervalId = setInterval(this.updateDailyHighscores, 6000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.tabSelector();\r\n                return;\r\n                break;\r\n            case 32:\r\n                if (!this.state.gameWon) {\r\n                    this.handleUndoMove();\r\n                }\r\n                break;\r\n                return;\r\n            case 13:\r\n                if (!this.state.gameWon) {\r\n                    this.resetPuzzle();\r\n                }\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n        }\r\n        this.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.userInfo !== null) {\r\n            username = window.userInfo.username\r\n        }\r\n        console.log(state);\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.showColoredLineDirections === true) {\r\n            this.setState({\r\n                showColoredLineDirections: false,\r\n            });\r\n            this.props.handleLineDirections(false)\r\n        }\r\n        else {\r\n            this.setState({\r\n                showColoredLineDirections: true,\r\n            });\r\n            this.props.handleLineDirections(true)\r\n        }\r\n    };\r\n\r\n    toggleBuildMode = () => {\r\n        if (this.state.buildMode) {\r\n            this.setState({\r\n                buildMode: false,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n                buildMode: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length, name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            dailySubmittedSucessfully: null\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeRandomStatsModal = event => {\r\n        this.setState({\r\n            closeRandomStatsModal: false,\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    }\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushFinishedModal = event => {\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: false\r\n        });\r\n\r\n    }\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent, 'blank');\r\n        var squareSize = setDefaultSquareSize(width,height);\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n            squareSize: squareSize,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n    showStatsModal = () => {\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            showStatsModal: true,\r\n        });\r\n    }\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n\r\n    puzzleRushTimeUp = () => {\r\n        var totalMovesDiff = 0;\r\n        this.state.solutiondifference.map(numMoves => {\r\n            totalMovesDiff += numMoves;\r\n        });\r\n        var averageTime = parseInt(300 / (this.state.numPuzzleon))\r\n        var totalMoves = 0;\r\n        this.state.totalMovesList.map(numMoves => {\r\n            totalMoves += numMoves\r\n        });\r\n        var avgMoves = parseInt(totalMoves / (this.state.numPuzzleon))\r\n        var movesPerSecond = totalMoves / 300;\r\n\r\n        axios.post('/puzzlerushend', {p_id: this.state.p_id,totalMoves: totalMoves,differenceFrom: totalMovesDiff})\r\n            .then( res => {\r\n                console.log(res.data);\r\n            });\r\n\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: true,\r\n            numPuzzlesCompleted: this.state.numPuzzleon,\r\n            percentile: 'TBD%',\r\n            averageTime: averageTime + 's',\r\n            averageMoves: avgMoves,\r\n            differenceOptimal: totalMovesDiff,\r\n            movesPerSecond: movesPerSecond\r\n        });\r\n    }\r\n\r\n    submitDailyAnswer = (LastRobotPosition) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            numMoves += moveHistory.length\r\n        });\r\n        var playerStateList = this.state.playerStateList.slice()\r\n        playerStateList[this.state.numPuzzleon] = LastRobotPosition.slice()\r\n        console.log(playerStateList);\r\n        axios.post('/dailychallenge', {score: numMoves, name: document.getElementById(\"namesubmitHS\").value, solutiondata: moveHistoryList, dc_id: this.state.dc_id, playerStateList: playerStateList})\r\n            .then( res => {\r\n                this.setState({\r\n                    dailySubmittedSucessfully: <Alert severity=\"success\">Submitted!</Alert>\r\n                });\r\n            });\r\n        window.dc_movesList = moveHistoryList;\r\n        window.dc_playerList = playerStateList;\r\n        this.state.gameWon = false;\r\n    }\r\n\r\n    checkwin = (newPlayerState) => {\r\n        var Won = false;\r\n        newPlayerState.map((player) => {\r\n            if (player.top === this.state.goal.top && player.left === this.state.goal.left) {\r\n                Won = true;\r\n            }\r\n        });\r\n        if (Won) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No' && this.props.puzzleRush !== 'Yes') {\r\n                var username = '';\r\n                if (window.userInfo !== null) {\r\n                    username = window.userInfo.username\r\n                }\r\n                if (this.props.randomGame === 'Yes') {\r\n                    return (\r\n                        <RandomGameStatsModal\r\n                            show={this.state.gameWon}\r\n                            lowestMoves={this.state.lowestMoves}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            numMoves={this.state.moveHistory.length}\r\n                            difficulty={this.state.difficulty}\r\n                            resetPuzzle={this.resetPuzzle}\r\n                            handleShowRandomAnswers={this.handleShowRandomAnswers}\r\n                        />\r\n                    );\r\n                }\r\n                else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n                    return null\r\n                }\r\n                else if (this.props.dailyChallengeMode === 'Yes') {\r\n                    var Won=true\r\n                    this.state.gamesWonDaily.map((gameWon,index) => {\r\n                        if (!(index == this.state.numPuzzleon) && !gameWon) {\r\n                            Won = false\r\n                        }\r\n                    });\r\n                    var moveHistoryList = this.state.moveHistoryList\r\n                    moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory\r\n                    var numMoves = 0\r\n                    moveHistoryList.map(moveHistory => {\r\n                        numMoves += moveHistory.length\r\n                    });\r\n                    return (Won ? <YouWinDailyFinalModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={numMoves}\r\n                        submitAnswer={this.submitDailyAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                        undoMove={this.handleUndoMove}\r\n                        newPlayerState={newPlayerState}\r\n                        submitted={this.state.dailySubmittedSucessfully}\r\n                    /> : <YouWinDailySingleModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        totalMoves={numMoves}\r\n                        undoMove={this.handleUndoMove}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        games={this.state.games}\r\n                        handleClickGame={this.handleDailyClickGame}\r\n                        numPuzzleon={this.state.numPuzzleon}\r\n                        moveNextPuzzle={this.moveNextPuzzle}\r\n                    />);\r\n                }\r\n                else if (this.props.learnMode === 'Yes') {\r\n                    return  (<YouWinLessonModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                    />);\r\n                }\r\n                else {\r\n                    return  (<YouWinModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        submitAnswer={this.submitAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                    />);\r\n                }\r\n            }\r\n            else if (this.props.puzzleRush === 'Yes'){\r\n                axios.post('/puzzlerushsubmit', {p_id: this.state.p_id,g_id:this.state.games[this.state.numPuzzleon].g_id, moveHistory: this.state.moveHistory})\r\n                    .then( res => {\r\n                        console.log(res.data);\r\n                    });\r\n                var totalMoves = this.state.moveHistory.slice().length\r\n                var totalMovesList = this.state.totalMovesList\r\n                totalMovesList.push(totalMoves)\r\n                var solutionmoves = totalMoves - this.state.games[this.state.numPuzzleon].g_moves\r\n                var solutiondifference = this.state.solutiondifference\r\n                solutiondifference.push(solutionmoves)\r\n                var puzzledata = JSON.parse(this.state.games[this.state.numPuzzleon + 1].g_puzzledata)\r\n                if (this.state.numPuzzleon + 10 > this.state.games.length) {\r\n                    axios.get('/puzzlerushgetmore?p_id=' + this.props.p_id + '&difficulty=' + this.props.difficulty)\r\n                        .then( res => {\r\n                                var games = JSON.parse(res.data.games);\r\n                                var stategames = this.state.games\r\n                                var newarray = stategames.concat(games)\r\n                                this.setState({\r\n                                    games: newarray\r\n                                });\r\n                        });\r\n                }\r\n                this.setState(\r\n                    extend(puzzledata,{numPuzzleon: this.state.numPuzzleon + 1, playerState: puzzledata.playerStart.slice(), gameWon: false, solutiondifference: solutiondifference, totalMovesList: totalMovesList})\r\n                );\r\n\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handleShowRandomAnswers = () => {\r\n        this.setState({\r\n            tipsText: [this.state.lowestMoveSequence]\r\n        })\r\n    }\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false && !this.state.buildMode) {\r\n            var oldPositon = {left: this.state.playerState[this.state.robotSelected].left, top: this.state.playerState[this.state.robotSelected].top};\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left) && !this.state.buildMode) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier,\r\n                    prevPosition: oldPositon\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseToolTips = (index) => {\r\n        this.state.tipsText.splice(index,1);\r\n        this.setState({\r\n            tipsText: this.state.tipsText,\r\n        });\r\n    }\r\n\r\n    moveNextPuzzle = () => {\r\n        this.handleDailyClickGame((this.state.numPuzzleon + 1) % 4)\r\n    }\r\n\r\n    handleLearnClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].puzzledata);\r\n        var squareSize = setDefaultSquareSize(puzzledata.width,puzzledata.height);\r\n        this.setState(\r\n            extend(puzzledata,{buildMode: false,squareSize: squareSize, numPuzzleon: index, moveHistory: [], gameWon: false, playerState: puzzledata.playerStart.slice(),tipsText: [this.props.games[index].description]})\r\n        );\r\n    }\r\n\r\n    handleDailyClickAnswersGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n        var lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[index].g_solutiondata))\r\n        var lowestMovesforPuzzle = this.props.games[index].g_moves\r\n        var difficultyforPuzzle = this.props.games[index].g_difficulty\r\n        var playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[index]\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory,\r\n                    gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily,\r\n                    lowestMoveSequence: lowestMoveSequence, lowestMovesforPuzzle: lowestMovesforPuzzle, difficultyforPuzzle: difficultyforPuzzle,\r\n                    playerMovedSequence: playerMovedSequence})\r\n        );\r\n    }\r\n\r\n    handleDailyClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily})\r\n        );\r\n    }\r\n\r\n\r\n    loadSidebar = () => {\r\n        if (this.props.learnMode == 'Yes') {\r\n            return (\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\">\r\n                        <Divider/>\r\n                        <Typography\r\n                             color=\"textSecondary\"\r\n                             display=\"block\"\r\n                             variant=\"caption\"\r\n                             style={{paddingBottom: '10px'}}\r\n                         >\r\n                             Beginner Lessons\r\n                         </Typography>\r\n                        {\r\n                            this.state.games.map((game,index) => {\r\n                                    if (index === 4) {\r\n                                        return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Intermediate Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    else if (index === 7) {\r\n                                            return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Advanced Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    return(\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={game.name} index={index} handleClickGame={this.handleLearnClickGame}/>\r\n                                    )\r\n                                }\r\n\r\n                            )\r\n                        }\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickAnswersGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeHistoryData\r\n                            lowestMovesforPuzzle={this.state.lowestMovesforPuzzle}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            difficultyforPuzzle={this.state.difficultyforPuzzle}\r\n                            nameSubmitted={this.props.nameSubmitted}\r\n                            playerMovedSequence={this.state.playerMovedSequence}\r\n                            bestScore={this.props.bestScore}\r\n                            scoreSubmitted={this.props.scoreSubmitted}\r\n                         />\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeScores highscores={this.state.highscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.state.createMode === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.puzzleRush) {\r\n            return (\r\n                     <div>\r\n                        <Timer puzzleRushTimeUp={this.puzzleRushTimeUp}>\r\n                        </Timer>\r\n                        <Typography id=\"discrete-slider-small-steps\"\r\n                                     color=\"Primary\"\r\n                                     variant=\"h3\"\r\n                                     display=\"inline\"\r\n                                     gutterBottom>\r\n                             {this.state.numPuzzleon}\r\n                         </Typography>\r\n                     </div>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n            <div style={{display: 'grid'}}>\r\n                <Typography\r\n                    color=\"secondary\"\r\n                    display=\"block\"\r\n                    variant={\"h4\"}\r\n\r\n                >\r\n                    {this.props.name}\r\n                </Typography>\r\n                <br/>\r\n                <Grid container xs={12} direction=\"column\">\r\n                <HighScores highscores={this.state.highscores}/>\r\n                </Grid>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    handlePlayerMovementFromMouse = (direction) => {\r\n        this.handlePlayerMovement({dir: direction})\r\n    };\r\n\r\n    handleUndoMove = () => {\r\n        var moveHistory = this.state.moveHistory;\r\n        var playerState = this.state.playerState;\r\n        if (moveHistory.length !== 0) {\r\n            var moveObj = moveHistory.pop();\r\n            playerState[moveObj.robot].left = moveObj.prevPosition.left;\r\n            playerState[moveObj.robot].top = moveObj.prevPosition.top;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n                gameWon: false,\r\n                dailySubmittedSucessfully: null\r\n            });\r\n        }\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes' && this.state.buildMode) {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onStopDragHandlerGoal = (position) => {\r\n        this.setState({\r\n            goal: {top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize)},\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n        })\r\n    };\r\n\r\n\r\n    onStopDragHandler = (position,index) => {\r\n        var playerState = this.state.playerState.slice();\r\n        var lastX = position.lastX / this.state.squareSize;\r\n        var lastY = position.lastY / this.state.squareSize;\r\n        playerState[index].top = Math.round(lastY);\r\n        playerState[index].left = Math.round(lastX);\r\n        this.setState({\r\n            playerStart: playerState.slice(),\r\n            playerState: playerState,\r\n            moveHistory: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        puzzleRushTimeUp={this.puzzleRushTimeUp}\r\n                        isPuzzleRush={this.props.puzzleRush}\r\n                        numPuzzleRush={this.state.numPuzzleon}\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                        toggleLineIndicators = {this.toggleLineIndicators}\r\n                        showColoredLineDirections={this.state.showColoredLineDirections}\r\n                        toggleBuildMode = {this.toggleBuildMode}\r\n                        undoMove = {this.handleUndoMove}\r\n                        buildMode = {this.state.buildMode}\r\n                        squareSizeValue = {parseInt((this.state.squareSize/4))}\r\n                        isLesson = {this.props.learnMode}\r\n                        isDailyChallenge = {this.props.dailyChallengeMode}\r\n                        isDailyChallengeAnswers = {this.props.dailyChallengeModeAnswers}\r\n                    />\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? null : <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>}\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8} zeroMinWidth>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal\r\n                            dimension={this.state.squareSize}\r\n                            position={this.state.goal}\r\n                            onStopDragHandler={this.onStopDragHandlerGoal}\r\n                            draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                            isCreateMode={this.state.createMode}\r\n                            buildMode={this.state.buildMode}\r\n                        />\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    onStopDragHandler={this.onStopDragHandler}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={this.state.playerState[this.state.robotSelected].color}\r\n                                    show={this.state.showColoredLineDirections}\r\n                                    handleClick={this.handlePlayerMovementFromMouse}\r\n                                    buildMode={this.state.buildMode}\r\n                                />\r\n                            )\r\n                        }\r\n                    </Board>\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/> : null}\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DescriptionList\r\n                        handleCloseToolTips={this.handleCloseToolTips}\r\n                        tipsText={this.state.tipsText}\r\n                    />\r\n                    {this.loadSidebar()}\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                {\r\n                    this.checkwin(this.state.playerState)\r\n                }\r\n                <PuzzleRushWinModal\r\n                    show={this.state.showPuzzleRushFinishedModal}\r\n                    closeModal={this.closePuzzleRushFinishedModal}\r\n                    numPuzzlesCompleted={this.state.numPuzzlesCompleted}\r\n                    percentile={this.state.puzzleRushPercentileCompleted}\r\n                    averageTime={this.state.averageTime}\r\n                    averageMoves={this.state.averageMoves}\r\n                    differenceOptimal={this.state.differenceOptimal}\r\n                    movesPerSecond={this.state.movesPerSecond}\r\n                    difficulty={this.props.difficulty}\r\n                    handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        maxWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 360,\r\n        minWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 235,\r\n        height: 225,\r\n        position: 'relative',\r\n        background: 'linear-gradient(100deg, #ffd34d 55%, #fff178 55%)'\r\n    },\r\n\r\n    item: {\r\n        padding: 0\r\n    },\r\n\r\n    upperPadding: {\r\n        paddingTop: 3\r\n    },\r\n    upperPaddingButton: {\r\n        paddingTop: 3,\r\n        position: 'absolute',\r\n        bottom: 15,\r\n        left: 25\r\n    },\r\n\r\n    lowerPadding: {\r\n        paddingBottom: 3\r\n    },\r\n\r\n    rightSideText: {\r\n        textAlign: \"right\",\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    },\r\n\r\n    leftSideText: {\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(ComplexGrid)\r\n\r\nfunction ComplexGrid(props) {\r\n    const { classes } = props;\r\n    const handleClick = () => {\r\n        props.handleGameClick(props.game.name, props.game.puzzledata,props.highscores,props.game.uri);\r\n    };\r\n\r\n    var numberOfHighScores = 0;\r\n\r\n    const highscorestyle = highscore => {\r\n        if (numberOfHighScores === 6) return \"\";\r\n        numberOfHighScores++;\r\n        return (\r\n            <ListItem disableGutters={true} classes={{ root: classes.item }}>\r\n                <ListItemText primary={trimNameShort(highscore.comment)} classes={{ root: classes.leftSideText }} />\r\n                <ListItemText secondary={highscore.numMoves} classes={{ root: classes.rightSideText }} />\r\n            </ListItem>\r\n        )\r\n    };\r\n\r\n    const contentDivStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        };\r\n\r\n    };\r\n\r\n    const trimName = name => {\r\n        var separated = (name + '').split(\" \")\r\n        var toreturn = '';\r\n        separated.map((word) => {\r\n            if (word.length > 17)\r\n                toreturn += word.substring(0, 17) + \"...\" + ' ';\r\n            else {\r\n                toreturn += word + ' '\r\n            }\r\n        });\r\n        return toreturn.substring(0, toreturn.length - 1);\r\n    };\r\n\r\n    const trimNameShort = name => {\r\n        if (name.length > 10)\r\n            name = name.substring(0, 10) + \"...\";\r\n        return name\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid item xs={12} md={3} sm={6}>\r\n            <Card variant=\"outlined\" className={classes.root}>\r\n                <CardContent>\r\n                    <div style={contentDivStyle()}>\r\n                        <div style={{width: '150px'}}>\r\n                            <Tooltip title={props.game.name}>\r\n                                <Typography variant=\"h6\" classes={{ root: classes.lowerPadding }}>\r\n                                    {trimName(props.game.name)}\r\n                                </Typography>\r\n                            </Tooltip>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    By: {trimName(props.game.authorname)}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    {props.game.created}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Plays: {props.game.plays}\r\n                                </Typography>\r\n                            </div>\r\n                            <br/>\r\n                            <Button onClick={handleClick} classes={{ root: classes.upperPaddingButton }} variant=\"contained\" color=\"primary\">Play</Button>\r\n                        </div>\r\n                        <div style={{width: '105px'}}>\r\n                            <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                Top Scores\r\n                            </Typography>\r\n                            <List>\r\n                                {\r\n                                    props.highscores.map(highscore =>\r\n                                        highscorestyle(highscore)\r\n                                    )\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from 'axios';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 400,\r\n    },\r\n    input: {\r\n        marginLeft: 5,\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n        marginLeft: 8,\r\n        marginRight: 8,\r\n    },\r\n});\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = this.props.gameslist;\r\n        var highscoreslist = this.props.highscoreslist;\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n            anchorEl: null\r\n        }\r\n    }\r\n\r\n    handleGameClick = (name,gamedata,highscores,uri) => {\r\n        this.props.handleGameClick(name,gamedata,highscores,uri);\r\n    };\r\n\r\n    handleFilterMenuOpen = event => {\r\n        this.setState( {\r\n          anchorEl: event.currentTarget\r\n      });\r\n    };\r\n\r\n    handleCloseFilterMenuMostPlayed = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'MostPlayed', offset: 0})\r\n            .then( res => {\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    };\r\n\r\n    handleCloseFilterMenuHighest = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'Highest', offset: 0})\r\n            .then( res => {\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    };\r\n\r\n    handleSearchSubmit = event => {\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'None', offset: 0})\r\n            .then( res => {\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    };\r\n\r\n    render () {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <div style={gamepanel()}>\r\n                <Paper component=\"form\" className={classes.root} >\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        inputRef={ref => this.searchRef = ref}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                this.handleSearchSubmit();\r\n                                event.preventDefault()\r\n                            }\r\n                        }}\r\n                    />\r\n                    <IconButton onClick={this.handleSearchSubmit} className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <Divider className={classes.divider} orientation=\"vertical\" />\r\n                    <Button\r\n                        onClick={this.handleFilterMenuOpen}\r\n                        startIcon={<FilterListIcon />}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        Sort\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(this.state.anchorEl)}\r\n                        onClose={this.handleCloseFilterMenu}\r\n                    >\r\n                        <MenuItem onClick={this.handleCloseFilterMenuMostPlayed}>Most Played</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuHighest}>Highest Scores</MenuItem>\r\n                    </Menu>\r\n                </Paper>\r\n                <br/>\r\n                <Grid container alignItems={\"stretch\"} spacing={2}>\r\n                    {\r\n                        this.state.gameslist.map((game,index)=>\r\n                            <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(FindGame);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  loadedGame={'Yes'}\r\n                  name={this.props.name}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  homepage: {\r\n    marginTop: '40px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  baseExpansion: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: '10px'\r\n  },\r\n  darkmode: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      marginTop: '150px',\r\n  },\r\n  iconcards: {\r\n    width: '250px',\r\n    display: 'inline-block',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  iconcardsDaily: {\r\n    maxWidth: 345,\r\n    minWidth: 250,\r\n    float: 'left',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  titlehome: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '30px',\r\n  },\r\n  titledailyroto: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '10px',\r\n  },\r\n  iconfonts: {\r\n    fontFamily: \"'Arvo', serif\",\r\n  },\r\n  createboardcard: {\r\n    ':hover': {\r\n        content: '/static/images/CreateBoardCardIconPlaced.png',\r\n    }\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  centeredProfile: {\r\n    marginTop: '20px',\r\n    display: 'inline-block',\r\n  },\r\n  expandedPanelDCH: {\r\n    background: 'linear-gradient(70deg, #fff810  30%, rgba(0,0,0,0) 30%), linear-gradient(30deg, #63e89e 60%, #ff7ee3 60%)'\r\n  },\r\n  table: {\r\n    width: '33%'\r\n  }\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport FindGameElements from \"../containers/FindGameElements\";\r\nimport {GOAL_IMAGE} from '../constants/constants';\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n\r\n    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n        return (<div className={classes.homepage} >\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                        </Typography>\r\n                        <Typography variant=\"p1\" paragraph={true}>Puzzle Game for anyone to play! Create your own custom boards or play a random Solved game. <br/>Goal is to get ANY piece to stop on the  <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                        </Typography>\r\n                        <br/>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                        <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                        </Typography>\r\n                        <Typography> Robots Evolved New Homepage!!! <br/>Almost Done with the project expect a release date of 8/1/2020\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container item alignItems={\"stretch\"} spacing={2} alignItems=\"center\" justify=\"center\" >\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickCreateGame}>\r\n                                    <CardMedia\r\n                                        className={classes.createboardcard}\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                        title=\"Create Board\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Create Board\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickFindGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Find a Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/FindAGameCardIcon.png\"\r\n                                        title=\"Find a Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Find a Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/DailyChallengeIcon.png\"\r\n                                        title=\"Daily Challenge\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Daily Challenge\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickRandomGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Play a Random Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/puzzle.png\"\r\n                                        title=\"Play a Random Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Play a Random Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickLearnGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                        title=\"Learn\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Learn\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Contemplative Reptile\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/PuzzleRushIcon.png\"\r\n                                        title=\"Contemplative Reptile\"\r\n                                    />\r\n                                    <CardContent style={{textAlign: 'center'}}>\r\n                                        <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            Puzzle Rush\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                    <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                    </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            Medium Mondays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles only</Typography>\r\n                            Trouble Teusdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">extremly hard puzzles only</Typography>\r\n                            Wild Wednesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles only</Typography>\r\n                            Tryhard Thursdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">extremly hard puzzles + 1 god teir</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles only</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">easy puzzles only</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles only</Typography>\r\n                        </Typography>\r\n                        <Typography style={{marginTop: '30px'}} className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                        </Typography>\r\n                        <DailyChallengeScores highscores={window.dchighscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (<div className={classes.homepage}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> Controls\r\n                    </Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Movement\r\n                        </Typography>\r\n                    <img width={'20%'} height={'auto'} src={\"/static/images/keyboard.png\"}/>\r\n                    <Typography>Pieces Move until they hit a wall or another piece</Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Selecting robots\r\n                        </Typography>\r\n                        <img width={'20%'} height={'auto'} src={\"/static/images/tab.png\"}/>\r\n\r\n                    <Typography>Or click</Typography>\r\n                    <Divider/>\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            HotKeys\r\n                        </Typography>\r\n                        <img width={'20%'} height={'auto'} src={\"/static/images/spacebar.png\"}/> <Typography display={'block'}>Undo</Typography>\r\n                        <img width={'20%'} height={'auto'} src={\"/static/images/enterkey.png\"}/> <Typography>Reset</Typography>\r\n                    <Divider />\r\n                    <div style={{marginTop:'100px'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                    </Typography>\r\n                    <Typography> Robots Evolved New Homepage!!! <br/>Almost Done with the project expect a release date of 8/7/2020\r\n                    </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={8} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                    </Typography>\r\n                    <Typography paragraph={true} variant=\"p1\">Puzzle Game for anyone to play! Create your own custom boards or play a random Solved game.<br/>Goal is to get ANY piece to stop on the  <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                    </Typography>\r\n                    <br/>\r\n                        <img width=\"300\" height=\"300\" src='/static/videos/basic2.gif'/>\r\n                    <br/>\r\n                    <Card className={classes.iconcards}>\r\n                              <CardActionArea onClick={props.handleClickCreateGame}>\r\n                                <CardMedia\r\n                                  className={classes.createboardcard}\r\n                                  component=\"img\"\r\n                                  alt=\"Create Board\"\r\n                                  height=\"140\"\r\n                                  image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                  title=\"Create Board\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Create Board\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </Card>\r\n                            <Card className={classes.iconcards}>\r\n                              <CardActionArea onClick={props.handleClickFindGame}>\r\n                                <CardMedia\r\n                                  component=\"img\"\r\n                                  alt=\"Find a Game\"\r\n                                  height=\"140\"\r\n                                  image=\"/static/images/FindAGameCardIcon.png\"\r\n                                  title=\"Find a Game\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Find a Game\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </Card>\r\n                            <Card className={classes.iconcards}>\r\n                              <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                                <CardMedia\r\n                                  component=\"img\"\r\n                                  alt=\"Create Board\"\r\n                                  height=\"140\"\r\n                                  image=\"/static/images/DailyChallengeIcon.png\"\r\n                                  title=\"Daily Challenge\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Daily Challenge\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </Card>\r\n                            <Card className={classes.iconcards}>\r\n                    <CardActionArea onClick={props.handleClickRandomGame}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\"Play a Random Game\"\r\n                            height=\"140\"\r\n                            image=\"/static/images/puzzle.png\"\r\n                            title=\"Play a Random Game\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                Play a Random Game\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickLearnGame}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Create Board\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                title=\"Learn\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Learn\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Contemplative Reptile\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/PuzzleRushIcon.png\"\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent style={{textAlign: 'center'}}>\r\n                                <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Puzzle Rush\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                            Medium Mondays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles only</Typography>\r\n                            Trouble Teusdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">extremly hard puzzles only</Typography>\r\n                            Wild Wednesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles only</Typography>\r\n                            Tryhard Thursdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">extremly hard puzzles + 1 god teir</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles only</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">easy puzzles only</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles only</Typography>\r\n                        </Typography>\r\n                <Typography className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                </Typography>\r\n                <DailyChallengeScores highscores={window.dchighscores}/>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst stylecol = () => {\r\n    return({\r\n            float: 'left',\r\n            width: '50%',\r\n            margin: 'auto',\r\n            padding: '0 50px',\r\n            marginTop: '6px',\r\n    });\r\n}\r\n\r\nconst spacing = () => {\r\n    return({\r\n            marginBottom: '10px',\r\n    });\r\n}\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeLoginModal}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>Login to RobotsEvolved</DialogTitle>\r\n                <DialogContent dividers>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                           • Gain <FaCrown/>s when winning the Daily Challenge (stacks)\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                            • Saving settings and your moves in the daily challenge\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography variant=\"body2\" display=\"inline\">\r\n                            • Profile Page to keep track of your submissions.\r\n                        </Typography>\r\n                    <div class=\"col\">\r\n                        <a href=\"#\" id={\"buttonfb\"}>\r\n                          <i class=\"fa fa-facebook fa-fw\"></i> Login with Facebook\r\n                         </a>\r\n                        <a onClick={this.loginGoogle} href=\"#\" id={\"buttongoogle\"}><i class=\"fa fa-google fa-fw\">\r\n                          </i> Login with Google\r\n                        </a>\r\n                    </div>\r\n                    <Typography variant=\"caption\" display=\"block\">\r\n                            We will NEVER distribute/sell your email or profileID.\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeLoginModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <Button color=\"black\" onClick={this.handleClick}><b>{textToShow}</b></Button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport SignInButton from './SignInButton';\r\n\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '40px',\r\n        width: '40px',\r\n        marginTop: '5px',\r\n    };\r\n};\r\n\r\nconst divStyle = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        width: '200px',\r\n    };\r\n};\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    SignInButtonPressed = () => {\r\n        this.props.handleClick('Sign in');\r\n    }\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return <SignInButton onClick={this.SignInButtonPressed}/>\r\n        }\r\n        else {\r\n            return (\r\n                <div style={divStyle()}>\r\n                    <div>{window.userInfo.username}</div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty) => {\r\n        console.log(difficulty)\r\n        axios.post('/puzzlerush', {difficulty: difficulty, action: 'start',type: this.state.value})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            isLoading: false,\r\n                        });\r\n                        this.props.handleClickPuzzleRush(difficulty,games,p_id);\r\n                });\r\n    };\r\n\r\n    handleClickEasyPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMediumPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                                {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                                                        ) : (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                         <Grid item xs={6}>\r\n                                         <ButtonGroup\r\n                                            orientation=\"vertical\"\r\n                                            color=\"primary\"\r\n                                            aria-label=\"vertical outlined primary button group\"\r\n                                          >\r\n                                            <Button onClick={this.handleClickEasyPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Easy\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickMediumPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Medium\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Hard\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickExHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Exteremely Hard\r\n                                            </Button>\r\n                                          </ButtonGroup>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                              <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                              <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                                <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                                <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                              </RadioGroup>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickRandomGameModal = (difficulty,type) => {\r\n        axios.get('/randomgame?difficulty=' + difficulty + '&type=' + type)\r\n            .then( res => {\r\n                var game = JSON.parse(res.data.game);\r\n                this.setState({\r\n                    isLoading: false,\r\n                });\r\n                this.props.handleClickRandomGame(game,difficulty);\r\n            })\r\n    }\r\n\r\n    handleClickEasy = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMedium = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHard = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHard = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickGodMode = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('GodTeir',this.state.value)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                            {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                            ) : (\r\n                            <Grid\r\n                                container xs={12}\r\n                                spacing={4}\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n                                wrap=\"nowrap\"\r\n                            >\r\n                                <Grid item xs={6}>\r\n                                    <ButtonGroup\r\n                                        orientation=\"vertical\"\r\n                                        color=\"primary\"\r\n                                        aria-label=\"vertical outlined primary button group\"\r\n                                      >\r\n                                        <Button onClick={this.handleClickEasy} variant=\"contained\" color=\"primary\">\r\n                                            Easy\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickMedium} variant=\"contained\" color=\"primary\">\r\n                                            Medium\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickHard} variant=\"contained\" color=\"primary\">\r\n                                            Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickExHard} variant=\"contained\" color=\"primary\">\r\n                                            Extremely Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickGodMode} variant=\"contained\" color=\"primary\">\r\n                                            God Tier\r\n                                        </Button>\r\n                                     </ButtonGroup>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl component=\"fieldset\">\r\n                                      <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                      <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                        <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                        <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                      </RadioGroup>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageCreatedGamesDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.game.name,props.game.puzzledata,[],props.game.uri);\r\n    }\r\n\r\n    return (<div>\r\n            <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography> Highscore Holder: </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.game.username} - {props.game.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageSolutionDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.solution.name,props.solution.puzzledata,[],props.solution.uri);\r\n    }\r\n    return (<div>\r\n              <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography color={'secondary'} variant={'body2'}> {props.solution.WinnerCreated} </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.solution.WinnerUsername} - {props.solution.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Table,TableContainer,TableHead,TableRow,TableCell,TableBody} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useStyles from '../Material-UI/themes';\r\nimport ProfilePageCreatedGamesDetails from '../components/ProfilePageComponents/ProfilePageCreatedGamesDetails';\r\nimport ProfilePageSolutionDetails from '../components/ProfilePageComponents/ProfilePageSolutionDetails';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\n\r\nexport default function ProfilePage(props) {\r\n    const classes = useStyles();\r\n    const submitAnswer = () => {\r\n        axios.post('/userUpdate',{newuser: document.getElementById(\"ProfileName\").value})\r\n            .then( res => {\r\n                if (res.data == 'OK') {\r\n                    window.location.href = '/';\r\n                }\r\n                else {\r\n                    setError(res.data);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const createData = (name,col1,col2) => {\r\n        return {name,col1,col2}\r\n    }\r\n\r\n    const columns = [\r\n          { id: 'difficulty', label: 'Difficulty', minWidth: 50 },\r\n          { id: 'classic', label: 'Classic', minWidth: 50 },\r\n          { id: 'random', label: 'Random', minWidth: 50 },\r\n        ];\r\n\r\n    const rows = [\r\n        createData('Easy', props.puzzlerushview.maxeasyc,props.puzzlerushview.maxeasyp),\r\n        createData('Medium', props.puzzlerushview.maxmediumc,props.puzzlerushview.maxmediump),\r\n        createData('Hard', props.puzzlerushview.maxhardc,props.puzzlerushview.maxhardp),\r\n        createData('Extremely Hard', props.puzzlerushview.maxexhardc,props.puzzlerushview.maxexhardp)\r\n    ]\r\n\r\n    const rowseff = [\r\n        createData('Easy', props.puzzlerushview.maxeffec,props.puzzlerushview.maxeffep),\r\n        createData('Medium', props.puzzlerushview.maxeffmc,props.puzzlerushview.maxeffmp),\r\n        createData('Hard', props.puzzlerushview.maxeffhc,props.puzzlerushview.maxeffhp),\r\n        createData('Extremely Hard', props.puzzlerushview.maxeffexc,props.puzzlerushview.maxeffexp)\r\n    ]\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [expandedGame, setExpandedGame] = React.useState(false);\r\n    const [expandedHighscores, setExpandedHighscores] = React.useState(false);\r\n    const handleChangeGame = (panel) => (event, isExpandedGame) => {\r\n        setExpandedGame(isExpandedGame ? panel : false);\r\n    };\r\n    const handleChangeHighscores = (panel) => (event, isExpandedHighScores) => {\r\n        setExpandedHighscores(isExpandedHighScores ? panel : false);\r\n    };\r\n    console.log(props.puzzlerushview);\r\n    return (\r\n            <div style={gamepanel()}>\r\n                <Grid container spacing={4}>\r\n                    <Grid item xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <TextField className={classes.centeredProfile} id={\"ProfileName\"} label={\"Username\"} defaultValue={window.userInfo.username}/>\r\n                        <Button className={classes.centeredProfile} variant=\"contained\" color=\"secondary\" onClick={submitAnswer}>Change Username</Button>\r\n                        <Typography color={\"secondary\"}>{error}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Created</Typography>\r\n                        {\r\n                            props.gamesview.map((game,index) =>\r\n                                    <ExpansionPanel expanded={expandedGame === 'panelgame' + index} onChange={handleChangeGame('panelgame' + index)}>\r\n                                        <ExpansionPanelSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls={\"panel\" + index + \"-content\"}\r\n                                          id={\"panel\" + index + \"-header\"}\r\n                                        >\r\n                                          <Typography className={classes.heading}>{game.name}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Plays: {game.plays}</Typography>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                          <ProfilePageCreatedGamesDetails\r\n                                            game={game}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                          />\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Solved</Typography>\r\n                        {\r\n                            props.solutionsview.map((solution,index) =>\r\n                                <ExpansionPanel expanded={expandedHighscores === 'panelhigh' + index} onChange={handleChangeHighscores('panelhigh' + index)}>\r\n                                    <ExpansionPanelSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls={\"panel\" + index + \"-content\"}\r\n                                      id={\"panel\" + index + \"-header\"}\r\n                                    >\r\n                                      <Typography className={classes.heading}>{solution.name}</Typography>\r\n                                      <Typography className={classes.secondaryHeading}>Best: {solution.numMoves}</Typography>\r\n                                      {solution.WinnerUserId == window.userInfo.userID ? <FaCrown style={{marginLeft: '30px'}}/> : null}\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <ProfilePageSolutionDetails\r\n                                            solution={solution}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                        />\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Puzzle Rush Data</Typography>\r\n                        <Typography variant=\"body1\" paragraph={true}>Total number of puzzles solved</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ minWidth: column.minWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rows.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                        <Typography style={{marginTop: '40px'}} variant=\"body1\">Efficiency Score</Typography>\r\n                        <Typography variant=\"caption\">Calculated by (total puzzles completed) * 5 - (total redundany moves from best score)</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ minWidth: column.minWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rowseff.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nexport default function RandomGamePage(props) {\r\n    return (\r\n        <Game\r\n              handleLineDirections={props.handleLineDirections}\r\n              LineDirections={props.LineDirections}\r\n              randomGame={'Yes'}\r\n              game={props.game}\r\n              difficulty={props.difficulty}\r\n         />\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PuzzleRushPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  puzzleRush={'Yes'}\r\n                  p_id={this.props.p_id}\r\n                  games={this.props.games}\r\n                  difficulty={this.props.difficulty}\r\n             />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PuzzleRushPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass LessonsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                learnMode={'Yes'}\r\n                games={window.learngameslist}/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default LessonsPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game handleClickDailyChallenge={this.props.handleClickDailyChallenge} handleLineDirections={this.props.handleLineDirections} LineDirections={this.props.LineDirections} dailyChallengeMode={'Yes'} playerStateList={this.props.playerStateList} savedMoves={this.props.savedMoves} games={this.props.dailyChallengeGameslist} dc_id={this.props.dc_id} highscores={this.props.dchighscores}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengePage;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Card,CardActions,Button,Avatar} from \"@material-ui/core\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function AboutUs(props) {\r\n    const facebookclick = () => {\r\n        window.open('https://www.facebook.com/RobotsEvolved-105278561284154')\r\n    }\r\n    return (<div style={gamepanel()}>\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item spacing={4} xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card style={{display: 'inline-block', width: '33%'}}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    About\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    RobotsEvolved.com is based on the board game Ricochet Robots.\r\n                                    We have several game modes and variants that are inspired by the several Chess variants on the internet.\r\n                                    Big thanks to\r\n                                    If you use Google Login or Facebook Login we will never email or sell your information.\r\n                                    Tell your friends about the site and get people on here!\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button onClick={facebookclick}>\r\n                                    <Avatar alt=\"Facebook\" src=\"https://facebookbrand.com/wp-content/uploads/2019/04/f_logo_RGB-Hex-Blue_512.png?w=512&h=512\" />\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Daily Challenge Rotation\r\n                                </Typography>\r\n                                <Typography variant={\"body1\"} paragraph={true}>\r\n                                    The Daily Challenge rotates its difficulty every day as specified below with 2 x Random and 2 x Classic Type puzzles.\r\n                                    <br/>\r\n                                    Medium Mondays - 4 x Medium\r\n                                    <br/>\r\n                                    Trouble Teusdays - 4 x Extremely Hard\r\n                                    <br/>\r\n                                    Wild Wednesdays - 4 x Hard\r\n                                    <br/>\r\n                                    Tryhard Thursdays - 3 x Extremely Hard 1 x God Teir\r\n                                    <br/>\r\n                                    Flyin Fridays - 4 x Medium\r\n                                    <br/>\r\n                                    Sleepy Saturdays - 4 x Easy\r\n                                    <br/>\r\n                                    Standard Sundays - 4 x Hard\r\n                                </Typography>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Classic Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body1\"} paragraph={true}>\r\n                                    Classic puzzles are based on the original Game. These Puzzles only have walls that are L shaped and a goal is in the center of one of the L puzzles.\r\n                                </Typography>\r\n                                <Typography variant={\"h4\"} display={\"inline\"}>\r\n                                    Random Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body1\"} paragraph={true}>\r\n                                    Random Puzzles are created by having a 10% chance for a wall to spawn in Any location possible wall location, Goals and Robot placements are completely random also.\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Easy\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 5-8 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Medium\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 9-13 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 13-18 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"} >\r\n                                    Extremely Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 18-23 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    God Tier\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in over 23 Moves, Note: there are a low number of these puzzles due to the CPU required to create them\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Paper class=\"card3\">\r\n                          <img src={\"/static/images/284457_10151211078621477_839164197_n.jpg\"} alt=\"Jane\"/>\r\n                          <div class=\"container3\">\r\n                            <h2>Kyle Kwasniewski</h2>\r\n                            <p class=\"title3\">Creator &amp; FullStack Dev.</p>\r\n                            <p>I work in Software Development and Dev-Ops in New York and consider myself a Ricochet Robots enthusiast so I decided to make this application as a way to better hone my skill in web frameworks as well as pass the time during the quarantine. If you find any bugs or feature requests for RobotsEvolved please let me know by emailing me below I would love to hear some of the ideas people have. Ill get to developing the feature/fixing annoying bugs ASAP.</p>\r\n                            <p>Thanks for playing!</p>\r\n                            <p>robotsevolved@gmail.com</p>\r\n                          </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/284f909d-0d5c-4ae1-b100-76c9d46ae7d4.png\"} alt=\"Mike\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Jonah Tollefson</h2>\r\n                                <p className=\"title3\">Front-End Dev.</p>\r\n                                <p>Went to college with these other goobers in the US and now I work professionally as a\r\n                                    software engineer in Germany. For RobotsEvolved, I mainly worked on the frontend\r\n                                    using React. Cats and Ultimate Frisbee are life.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/derekschultz.jpg\"} alt=\"John\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Derek Schultz</h2>\r\n                                <p className=\"title3\">Back-End Dev.</p>\r\n                                <p>Full time Software Engineer. Graduated from University of Wisconsin Platteville\r\n                                    with a BS in Computer Science and Minor in Business Administration. Worked on\r\n                                    most of the database aspect of RobotsEvolved and some back end functionality. I\r\n                                    enjoy video games, beer, and playing darts.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n\r\n\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nexport default function ShowDailyPuzzleHistory(props) {\r\n    const handleDailyPuzzleHistoryClick = event => {\r\n        console.log(props.history)\r\n        props.handleDailyPuzzleHistoryClick(props.history)\r\n    }\r\n    return (\r\n            <Button style={window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? {marginLeft: '5px'} : {marginLeft: '60px'}} variant=\"contained\" size=\"small\" color=\"primary\" onClick={handleDailyPuzzleHistoryClick}>\r\n                 show answers\r\n            </Button>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport ShowDailyPuzzleHistory from '../components/ShowDailyPuzzleHistory';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ProfilePageCreatedGamesDetails from \"../components/ProfilePageComponents/ProfilePageCreatedGamesDetails\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function DailyChallengeHistory(props) {\r\n    const [expandedPanel, setExpandedPanel] = React.useState(false);\r\n    const handleChangePanel = (panel) => (event, isExpanded) => {\r\n        setExpandedPanel(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles();\r\n    return (<div style={gamepanel()}>\r\n                <Typography className={classes.titlehome} variant=\"h3\">Daily Challenge History</Typography>\r\n                {\r\n                    props.dailychallengehistory.map((history, index) =>\r\n                        <ExpansionPanel expanded={expandedPanel === 'panelgame' + index} onChange={handleChangePanel('panelgame' + index)}>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={\"panel\" + index + \"-content\"}\r\n                                id={\"panel\" + index + \"-header\"}\r\n                            >\r\n                                <Typography className={classes.heading}>{history.created}</Typography>\r\n                                <Typography className={classes.secondaryHeading}>Winner: {history.nameSubmitted}</Typography>\r\n                                <ShowDailyPuzzleHistory history={history} handleDailyPuzzleHistoryClick={props.handleDailyPuzzleHistoryClick}/>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        <FaCrown/> {history.nameSubmitted} - {history.scoreSubmitted} <FaCrown/>\r\n                                    </Typography>\r\n                                    <Typography className={classes.secondaryHeading}>Lowest possible solution: {history.bestScore}</Typography>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                    )\r\n                }\r\n           </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengeHistoryAnswersPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        console.log(this.props.history);\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                dailyChallengeModeAnswers={'Yes'}\r\n                nameSubmitted={this.props.history.nameSubmitted}\r\n                bestScore={this.props.history.bestScore}\r\n                created={this.props.history.created}\r\n                games={this.props.history.games}\r\n                playerStateList={this.props.history.playerStateList}\r\n                scoreSubmitted={this.props.history.scoreSubmitted}\r\n                solutionDataSubmitted={this.props.history.solutionDataSubmitted}\r\n                submitted={this.props.history.submitted}\r\n                user_id={this.props.user_id}\r\n                />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengeHistoryAnswersPage;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n  },\r\n}));\r\n\r\nexport default function LoadingPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress size={120} color=\"secondary\" />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport clsx from 'clsx';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport Home from './Pages/Home';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\nimport axios from 'axios';\r\nimport Game from './containers/Game';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"./constants/constants\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport PuzzleRushDifficultyModal from \"./containers/Modals/PuzzleRushDifficultyModal\";\r\nimport RandomGameDifficultyModal from \"./containers/Modals/RandomGameDifficultyModal\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport RandomGamePage from \"./Pages/RandomGamePage\";\r\nimport PuzzleRushPage from \"./Pages/PuzzleRushPage\";\r\nimport LessonsPage from \"./Pages/LessonsPage\";\r\nimport DailyChallengePage from \"./Pages/DailyChallenge\";\r\nimport AboutUs from \"./Pages/AboutUs\";\r\nimport DailyChallengeHistory from \"./Pages/DailyChallengeHistory\";\r\nimport DailyChallengeHistoryAnswersPage from \"./Pages/DailyChallengeHistoryAnswersPage\";\r\nimport { FaMedal } from 'react-icons/fa';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport LoadingPage from './components/LoadingPage';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    drawerHeaderRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerHeaderLeft: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    toolbar1: {\r\n        backgroundColor: '#14A76C',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    dividerFullWidth: {\r\n        margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    darkmode: {\r\n          body: '#363537',\r\n          text: '#FAFAFA',\r\n          toggleBorder: '#6B8096',\r\n          gradient: 'linear-gradient(#091236, #1E215D)',\r\n    },\r\n});\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (window.uri === '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n                dailychallengehistoryloaded: false,\r\n                profileDataloaded: false,\r\n            };\r\n        }\r\n        else {\r\n            if (window.token.g_id == undefined) {\r\n                const linedir = window.userInfo == undefined ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={linedir} name={window.token.name} gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri}/>, //when uri is entered to play specific game\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                };\r\n            }\r\n            else {\r\n                const linedir = window.userInfo == undefined ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={linedir} randomGame={'Yes'} game={window.token} difficulty={window.token.g_difficulty}/>,\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                }\r\n            }\r\n        }\r\n        this.state.open = false;\r\n        this.state.mobileAnchorEl = null;\r\n        this.state.mobileMenuOpen = false;\r\n        this.state.showLoginModal = false;\r\n        this.state.showPuzzleRushModal = false;\r\n        this.state.loadingPage = false;\r\n         if (window.loggedin === 'Yes') {\r\n            this.state.LineDirections = window.userInfo.LineDirFlag === 'Y';\r\n         }\r\n         else {\r\n            this.state.LineDirections = true;\r\n         }\r\n    }\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState( {\r\n            open: false\r\n        })\r\n    };\r\n\r\n    handleLineDirections = (boolean) => {\r\n        if (window.loggedin === 'Yes') {\r\n            axios.post('/settingsChange', {LineDirections: boolean ? 'Y' : 'N'})\r\n                .then( res => {\r\n                    console.log('changed');\r\n                });\r\n        }\r\n        this.setState({\r\n            LineDirections: boolean\r\n        });\r\n    }\r\n\r\n    handleClickDailyChallenge = () => {\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeData')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    const dc_movesList = res.data.dc_movesList == null ? null : JSON.parse(res.data.dc_movesList)\r\n                    const dc_playerList = res.data.dc_playerList == null ? null : JSON.parse(res.data.dc_playerList)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                                        PageSelected: <DailyChallengePage\r\n                                                            handleClickDailyChallenge={this.handleClickDailyChallenge}\r\n                                                            dailyChallengeGameslist={JSON.parse(res.data.dailyChallengeGameslist)}\r\n                                                            dc_id={res.data.dc_id}\r\n                                                            dchighscores={JSON.parse(res.data.dchighscores)}\r\n                                                            handleLineDirections={this.handleLineDirections}\r\n                                                            LineDirections={this.state.LineDirections}\r\n                                                            savedMoves={dc_movesList}\r\n                                                            playerStateList={dc_playerList}\r\n                                        />,\r\n                                        open: isOpen,\r\n                                        loadingPage: false,\r\n                                    });\r\n                        }\r\n                    });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState( {\r\n            open: true\r\n        });\r\n    };\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type === 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    };\r\n\r\n    handleClickRandomGameModal = (game,difficulty) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showRandomGameModal: false,\r\n            PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} randomGame={'Yes'} game={game} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    }\r\n\r\n    handleClickRandomGame = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: true,\r\n        });\r\n    }\r\n\r\n\r\n    handleClickPuzzleRush = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: true,\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallengeHistory = (event) => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeHistory')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    var historydata = JSON.parse(res.data)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                            PageSelected: <DailyChallengeHistory handleDailyPuzzleHistoryClick={this.handleDailyPuzzleHistoryClick} dailychallengehistory={historydata}/>,\r\n                            challengeHistoryData: historydata,\r\n                            dailychallengehistoryloaded: true,\r\n                            open: isOpen,\r\n                            loadingPage: false,\r\n                        });\r\n                    }\r\n            });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    }\r\n\r\n    handleDailyPuzzleHistoryClick = history => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <DailyChallengeHistoryAnswersPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} history={history}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    }\r\n\r\n    handleClickPuzzleRushModal = (difficulty,games,p_id) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showPuzzleRushModal: false,\r\n            PageSelected: <PuzzleRushPage handleClickPlayAgain={this.handleClickPuzzleRush} handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: false\r\n        });\r\n    }\r\n\r\n    closeRandomGameLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: false\r\n        });\r\n    }\r\n\r\n    handleGameClick = (name, gamedata,highscores,uri) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} name={name} highscores={highscores} gamedata={gamedata} uri={uri}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <CreateGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} state={\"new\"}/>,\r\n             open: isOpen,\r\n             loadingPage: false,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickProfile = event => {\r\n        if (window.loggedin === 'Yes') {\r\n            this.state.loadingPage = true;\r\n                    axios.get('/getProfileData')\r\n                        .then( res => {\r\n                            var isOpen = this.state.open;\r\n                            if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                                isOpen = false\r\n                            }\r\n                            var profileData = res.data;\r\n                            var gamesview = JSON.parse(profileData.gamesview)\r\n                            var solutionsview = JSON.parse(profileData.solutionsview)\r\n                            var puzzlerushview = JSON.parse(profileData.puzzlerushview)\r\n                            if (this.state.loadingPage) {\r\n                                this.setState({\r\n                                    PageSelected: <ProfilePage handleClickPlayGame={this.handleGameClick} gamesview={gamesview} solutionsview={solutionsview} puzzlerushview={puzzlerushview}/>,\r\n                                    gamesview: gamesview,\r\n                                    solutionsview: solutionsview,\r\n                                    puzzlerushview: puzzlerushview,\r\n                                    profileDataloaded: true,\r\n                                    open: isOpen,\r\n                                    loadingPage: false,\r\n                                });\r\n                            }\r\n                        });\r\n                    this.setState({\r\n                        PageSelected: <LoadingPage/>,\r\n                    });\r\n                }\r\n        else {\r\n            this.SignInButtonPressed('Sign in');\r\n        }\r\n    };\r\n\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.get('/getFindGames')\r\n            .then( res => {\r\n                const gameslist = JSON.parse(res.data.gameslist)\r\n                const highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                var isOpen = this.state.open;\r\n                if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                    isOpen = false\r\n                }\r\n                if (this.state.loadingPage) {\r\n                    this.setState({\r\n                        PageSelected: <FindGame gameslist={gameslist} highscoreslist={highscoreslist} handleGameClick={this.handleGameClick}/>,\r\n                        open: isOpen,\r\n                        loadingPage: false,\r\n                    });\r\n                }\r\n        });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleHomePageClick = () => {\r\n        this.setState({\r\n            PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n            loadingPage: false,\r\n        });\r\n    }\r\n\r\n\r\n    handleClickAboutUs = event => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <AboutUs/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    }\r\n\r\n    handleClickLearnGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <LessonsPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileAnchorEl: null,\r\n            mobileMenuOpen: false\r\n        });\r\n    };\r\n\r\n    showPage = () => {\r\n        return(\r\n            this.state.PageSelected\r\n        )\r\n    }\r\n\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({\r\n            mobileAnchorEl: event.currentTarget,\r\n            mobileMenuOpen: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const theme = createMuiTheme({\r\n            palette: {\r\n                primary: teal,\r\n                secondary: {\r\n                    main: '#e65100',\r\n                },\r\n            }\r\n        });\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <AppBar\r\n                        position=\"fixed\"\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: this.state.open,\r\n                        })}\r\n                     >\r\n                        <Toolbar className={classes.toolbar1}>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={this.handleDrawerOpen}\r\n                                edge=\"start\"\r\n                                className={clsx(classes.menuButton, this.state.open && classes.hide)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <img onClick={this.handleHomePageClick} width={50} height={50} src=\"/static/images/logo150.png\"/>\r\n                            <Typography variant=\"h6\" className={classes.title} noWrap>\r\n                                <a href=\"/\" style={{color: 'white'}}>RobotsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </Typography>\r\n                            <div className={classes.grow} />\r\n                            <div className={classes.sectionDesktop}>\r\n                                <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.sectionMobile}>\r\n                                <IconButton\r\n                                    aria-label=\"show more\"\r\n                                    aria-controls={\"primary-search-account-menu-mobile\"}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.handleMobileMenuOpen}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <MoreIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Menu\r\n                        anchorEl={this.state.mobileAnchorEl}\r\n                        anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        id={\"primary-search-account-menu-mobile\"}\r\n                        keepMounted\r\n                        transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        open={this.state.mobileMenuOpen}\r\n                        onClose={this.handleMobileMenuClose}\r\n                    >\r\n                        <MenuItem>\r\n                            <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                    <Drawer\r\n                        id=\"MainDrawer\"\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.state.open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div className={classes.drawerHeader}>\r\n                            <div className={classes.drawerHeaderLeft}>\r\n                                <SignInButton onClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.drawerHeaderRight}>\r\n                                <IconButton onClick={this.handleDrawerClose}>\r\n                                    {useTheme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Play\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Create a Game'} onClick={this.handleClickCreateGame}>\r\n                                <ListItemIcon><PlayArrowIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Create a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Find a Game'} onClick={this.handleClickFindGame}>\r\n                                <ListItemIcon><SearchIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Find a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge'} onClick={this.handleClickDailyChallenge}>\r\n                                <ListItemIcon><TodayIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Random Game'} onClick={this.handleClickRandomGame}>\r\n                                <ListItemIcon><CasinoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Random Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Puzzle Rush'} onClick={this.handleClickPuzzleRush}>\r\n                                <ListItemIcon><TimerIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Puzzle Rush'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Learn\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Lessons'} onClick={this.handleClickLearnGame}>\r\n                                <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Lessons'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Community\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Profile'} onClick={this.handleClickProfile}>\r\n                                <ListItemIcon><AccountBoxIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Profile'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge History'} onClick={this.handleClickDailyChallengeHistory}>\r\n                                <ListItemIcon><FaMedal /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge History'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Tools\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'About'} onClick={this.handleClickAboutUs}>\r\n                                <ListItemIcon><InfoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'About'} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n                    <main className={clsx(classes.content, {\r\n                        [classes.contentShift]: this.state.open,\r\n                    })}>\r\n                        <div className={classes.drawerHeader} />\r\n                        {this.showPage()}\r\n                    </main>\r\n                    <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n                    <PuzzleRushDifficultyModal\r\n                        closeModal={this.closePuzzleRushLoginModal}\r\n                        show={this.state.showPuzzleRushModal}\r\n                        handleClickPuzzleRush={this.handleClickPuzzleRushModal}\r\n                    />\r\n                    <RandomGameDifficultyModal\r\n                        closeModal={this.closeRandomGameLoginModal}\r\n                        show={this.state.showRandomGameModal}\r\n                        handleClickRandomGame={this.handleClickRandomGameModal}\r\n                    />\r\n                </div>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}