{"version":3,"sources":["constants/constants.js","components/DailyMovesView.jsx","components/CreateBoardGoalSelector.jsx","components/LearnGameItems.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinModal.jsx","components/YouWinDailySingleModal.js","components/YouWinDailyFinalModal.js","components/AddPuzzleModal.jsx","components/ToggleSettings.js","components/Timer.js","containers/DisplayView.js","components/HighScores.jsx","components/DailyChallengeScores.jsx","containers/Modals/PuzzleRushFinishedModal.js","containers/Modals/RandomGameStatsModal.jsx","components/CloseIconWithOnClick.jsx","components/DescriptionList.jsx","components/YouWinLessonModal.js","components/ShowDailyChallengeScoresCard.jsx","components/DailyChallengeHistoryData.js","components/boardgenerator.js","containers/Modals/BoardResetModal.js","containers/Game.js","Pages/CreateGame.js","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","Material-UI/themes.jsx","Pages/Home.js","containers/Modals/LoginModal.js","components/SignInButton.js","components/LoggedInUser.js","containers/Modals/PuzzleRushDifficultyModal.js","containers/Modals/RandomGameDifficultyModal.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","components/ProfilePageComponents/ProfilePageCreatedGamesDetails.js","components/ProfilePageComponents/ProfilePageSolutionDetails.js","Pages/ProfilePage.js","Pages/RandomGamePage.js","Pages/PuzzleRushPage.js","Pages/LessonsPage.js","Pages/DailyChallenge.js","Pages/AboutUs.js","components/ShowDailyPuzzleHistory.js","Pages/DailyChallengeHistory.js","Pages/DailyChallengeHistoryAnswersPage.js","components/LoadingPage.jsx","App.js","serviceWorker.js","index.js"],"names":["UP","GOAL_IMAGE","DIRECTION_MAP_IMAGES","yellow","DOWN","LEFT","RIGHT","red","green","blue","DailyMovesView","props","resetToBest","moveHistory","playerState","this","length","style","width","float","display","Typography","Divider","map","move","src","robot","colorSignifier","dir","Button","color","onClick","React","Component","CreateBoardGoalSelector","useState","wildchecked","setWildChecked","Paper","FormControl","backgroundColor","textAlign","component","FormLabel","FormGroup","aria-label","row","FormControlLabel","value","control","Checkbox","handleWildCardClick","checked","label","labelPlacement","handleColoredClick","LearnGameItems","handleClick","handleClickGame","index","selected","variant","name","MovesView","styleoutside","dimension","position","dim","height","top","left","styleinside","styleinside2","Square","border","margin","overflow","children","id","transition","styleoutsidedraggable","boxShadow","undefined","backgroundSize","backgroundImage","borderRadius","Robot","onStopDragHandler","e","handleCreateMode","isCreateMode","buildMode","x","y","grid","draggableGrid","onStop","bounds","orientation","opacity","wallThickness","wallOffset","Wall","userSelect","styledragable","Goal","show","endPosition","obj","key","hasOwnProperty","YouWinModal","Dialog","disableAutoFocus","disableEnforceFocus","onClose","handleClose","container","document","getElementById","BackdropProps","aria-labelledby","open","maxWidth","DialogTitle","DialogContent","dividers","numMoves","TextField","defaultValue","username","DialogActions","submitAnswer","resetPuzzle","YouWinDailySingleModal","totalMoves","undoMove","moveNextPuzzle","YouWinDailyFinalModal","handleClickSubmitGame","setState","error","Alert","severity","newPlayerState","state","submitted","AddPuzzleModal","submitPuzzle","ToggleSettings","event","Switch","onChange","showColoredLineDirections","Timer","minutes","seconds","timer","myInterval","setInterval","puzzleRushTimeUp","clearInterval","valuetext","DisplayView","createMode","fullWidth","handleCreateBoardClick","toggleBuildMode","createBoardPressed","copyToClipboard","dummy","createElement","body","appendChild","window","location","host","uri","select","execCommand","removeChild","copiedClipboard","thisThing","copyButtonText","setTimeout","handleDimensionChange","getElementsByClassName","blur","parseInt","toString","DimensionChanged","showPuzzleLink","isPuzzleRush","isLesson","isDailyChallengeAnswers","isDailyChallenge","paddingBottom","marginRight","marginTop","marginBottom","ButtonGroup","toggleLineIndicators","gutterBottom","Slider","onChangeCommitted","getAriaValueText","step","marks","min","max","squareSizeValue","valueLabelDisplay","highscores","Grid","item","xs","marginleft","highscore","elevation","spacing","comment","userid","created","highscorestyle","wins","i","crowns","push","CrownCounter","user_id","score","direction","PuzzleRushWinModal","closeModal","onBackdropClick","difficulty","md","List","dense","ListItem","ListItemText","primary","secondary","numPuzzlesCompleted","averageTime","averageMoves","differenceOptimal","movesPerSecond","handleClickPlayAgain","RandomGameStatsModal","showStatsModal","handleShowRandomAnswers","answers","lowestMoveSequence","lowestMoves","CloseIconWithOnClick","onMouseDown","Descriptionlist","tipsText","text","ListItemSecondaryAction","IconButton","edge","handleCloseToolTips","YouWinLessonModal","useStyles","makeStyles","root","bullet","transform","title","fontSize","pos","ShowDailyChallengeScoresCard","classes","Card","className","CardContent","bestScore","MovesforPuzzle","MoveSequence","DailyChallengeHistoryData","difficultyforPuzzle","lowestMovesforPuzzle","nameSubmitted","scoreSubmitted","playerMovedSequence","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","type","boardState","wallVerticle","wallHorizontal","goal","randompos1","randompos2","randompos3","randompos4","randomPositions","extend","j","gameWon","playerStart","slice","BoardResetModal","createBoardHandler","preventDefault","percent","createBoard","paddingRight","Input","inputProps","placeholder","addEventListener","keyCode","target","indexOf","formatGeneratedMoveSequence","moves","images","charAt","setDefaultSquareSize","boardWidth","boardHeight","drawerWidth","getComputedStyle","windowWidth","innerWidth","settingstop","innerHeight","settings","squarevalue","ColoredLineDirections","Game","updateHighscores","axios","get","then","res","highscoresdata","JSON","parse","data","FindhighscoreIsDiff","squareSize","copiedToClipboard","check","tocheck","toreturn","DChighscoreIsDiff","updateDailyHighscores","dc_id","dchighscores","handleClickDailyChallenge","componentDidMount","onkeydown","handleKeyDown","loadedGame","IntervalId","dailyChallengeMode","componentWillUnmount","newDirection","tabSelector","handleUndoMove","handlePlayerMovement","robotSelect","robotSelected","namesubmit","themoveHistory","userInfo","post","puzzledata","authorname","history","handleLineDirections","solutiondata","dailySubmittedSucessfully","showBoardResetPanelModal","closeRandomStatsModal","closeCreateBoardModal","closePuzzleRushFinishedModal","showPuzzleRushFinishedModal","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","nextLessonPuzzle","puzzle","numPuzzleon","handleLearnClickGame","totalMovesDiff","solutiondifference","totalMovesList","avgMoves","p_id","differenceFrom","console","log","percentile","submitDailyAnswer","LastRobotPosition","moveHistoryList","playerStateList","dc_movesList","dc_playerList","checkwin","coloredGoals","Won","player","found","colorfound","puzzleRush","randomGame","dailyChallengeModeAnswers","dailyChallengeSessionBestHistory","dailyChallengeSessionBestPlayerState","gamesWonDaily","games","handleDailyClickGame","learnMode","g_id","solutionmoves","g_moves","g_puzzledata","newarray","concat","oldPositon","prevPosition","splice","description","handleDailyClickAnswersGame","g_solutiondata","g_difficulty","solutionDataSubmitted","goalItem","newgoal","newColoredGoals","filter","trimName","separated","split","word","substring","loadSidebar","game","paddingTop","dailyDayName","DailyChallengeScores","alignItems","author","startIcon","hasVoted","updateLike","votes","HighScores","action","vote","newHasVoted","newVotes","isNaN","catch","_","signInModalOpen","handlePlayerMovementFromMouse","moveObj","pop","createModeWallClick","indexToChange","newWallHorizontal","wallH","newWallVerticle","wallV","onStopDragHandlerGoal","round","lastY","lastX","newGoals","goals","gamedata","g_name","savedMoves","g_uri","pushState","settingsWidth","settingsHeight","percentWall","settingsPercent","LineDirections","paddingLeft","sm","numPuzzleRush","zeroMinWidth","Board","square","ColoredLineDirection","ColoredLine","puzzleRushPercentileCompleted","withRouter","CreateGame","withStyles","theme","minWidth","background","padding","upperPadding","upperPaddingButton","bottom","lowerPadding","rightSideText","leftSideText","numberOfHighScores","trimNameShort","justifyContent","Tooltip","plays","handleGameClick","disableGutters","FindGame","handleFilterMenuOpen","anchorEl","currentTarget","keycode","handleSearchSubmit","scrollTo","findWindowHeight","setFindWindow","scrollY","handleCloseFilterMenuMostPlayed","searchTerm","searchRef","search","offset","gameslist","highscoreslist","setNumFindGames","lastSearch","hasMore","handleCloseFilterMenuHighest","justify","loadMoreItems","offsetSearch","isLoadingSearch","handleCloseFilterMenu","align","InputBase","input","inputRef","ref","onKeyPress","iconButton","divider","Menu","keepMounted","Boolean","MenuItem","FindGameElements","pageStart","loadMore","bind","loader","CircularProgress","marginLeft","size","threshold","flex","PlayGame","flexGrow","homepage","griditems","paper","Width","image","img","maxHeight","baseExpansion","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","darkmode","iconcards","marginBotton","iconcardsDaily","titlehome","fontFamily","titledailyroto","iconfonts","createboardcard","content","demo","centeredProfile","expandedPanelDCH","table","ComplexGrid","paragraph","CardActionArea","handleClickFindGame","CardMedia","alt","handleClickCreateGame","handleClickRandomGame","handleClickLearnGame","handleClickPuzzleRush","dividerFullWidth","LoginModal","loginGoogle","href","loginFacebook","closeLoginModal","class","SignInButton","loggedin","textToShow","LoggedInUser","SignInButtonPressed","profilePicture","PuzzleRushDifficultyModal","handleClickPuzzleRushModal","isLoading","handleClickEasyPuzzleRush","handleClickMediumPuzzleRush","handleClickHardPuzzleRush","handleClickExHardPuzzleRush","handleChange","wrap","RadioGroup","Radio","handleClickRandomGameModal","handleClickEasy","handleClickMedium","handleClickHard","handleClickExHard","handleClickGodMode","ProfilePageCreatedGamesDetails","handleClickPlayGame","ProfilePageSolutionDetails","solution","WinnerCreated","WinnerUsername","ProfilePage","createData","col1","col2","columns","rows","puzzlerushview","maxeasyc","maxeasyp","maxmediumc","maxmediump","maxhardc","maxhardp","maxexhardc","maxexhardp","rowseff","maxeffec","maxeffep","maxeffmc","maxeffmp","maxeffhc","maxeffhp","maxeffexc","maxeffexp","setError","expandedGame","setExpandedGame","expandedHighscores","setExpandedHighscores","gamesview","solutionsview","newuser","ExpansionPanel","expanded","panel","isExpandedGame","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","isExpandedHighScores","WinnerUserId","userID","TableContainer","Table","TableHead","TableRow","column","TableCell","TableBody","RandomGamePage","PuzzleRushPage","LessonsPage","learngameslist","DailyChallengePage","dailyChallengeGameslist","AboutUs","CardActions","Avatar","ShowDailyPuzzleHistory","handleDailyPuzzleHistoryClick","DailyChallengeHistory","expandedPanel","setExpandedPanel","dailychallengehistory","isExpanded","DailyChallengeHistoryAnswersPage","LoadingPage","App","handleChatOpen","openChat","chatAnchor","handleChatClose","handleDrawerClose","boolean","loadingPage","isOpen","PageSelected","DailyChallenge","handleDrawerOpen","showLoginModal","showRandomGameModal","showPuzzleRushModal","handleClickDailyChallengeHistory","historydata","challengeHistoryData","dailychallengehistoryloaded","closePuzzleRushLoginModal","closeRandomGameLoginModal","handleClickProfile","profileData","profileDataloaded","num","filterTerm","numFindGames","numGames","handleHomePageClick","handleClickAboutUs","handleMobileMenuClose","mobileAnchorEl","mobileMenuOpen","showPage","handleMobileMenuOpen","token","linedir","LineDirFlag","createMuiTheme","teal","main","AppBar","clsx","appBar","appBarShift","Toolbar","toolbar1","menuButton","hide","noWrap","grow","sectionDesktop","sectionMobile","aria-haspopup","anchorOrigin","vertical","horizontal","transformOrigin","Drawer","drawer","anchor","drawerPaper","drawerHeader","drawerHeaderLeft","drawerHeaderRight","useTheme","button","ListItemIcon","contentShift","RandomGameDifficultyModal","right","Popover","frameBorder","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","mixins","toolbar","breakpoints","up","toggleBorder","gradient","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"js/main.b8192a94.chunk.js","sourcesContent":["export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const MOBILE_INNER_SCREEN_WIDTH = '960';\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const COLORED_GOAL_IMAGE = '/static/images/targetbullseye.png';\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass DailyMovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    resetToBest = () => {\r\n        this.props.resetToBest(this.props.moveHistory,this.props.playerState)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.moveHistory.length == 0 ?\r\n            <div style={style()}>\r\n                <Typography>Personal Best</Typography>\r\n                <Divider />\r\n                <Typography>None</Typography>\r\n            </div> :\r\n            <div style={style()}>\r\n                <Typography>Personal Best</Typography>\r\n                <Divider />\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n                <Divider />\r\n                <Button color=\"secondary\" onClick={this.resetToBest}>Reset to best</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyMovesView;","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function CreateBoardGoalSelector(props) {\r\n  const [wildchecked, setWildChecked] = React.useState(true);\r\n  const handleWildCardClick = () => {\r\n    props.handleWildCardClick();\r\n    setWildChecked(wildchecked ? false : true);\r\n  }\r\n\r\n  const handleBlueClick = () => {\r\n    props.handleColoredClick('blue');\r\n  }\r\n  const handleGreenClick = () => {\r\n    props.handleColoredClick('green');\r\n  }\r\n  const handleRedClick = () => {\r\n    props.handleColoredClick('red');\r\n  }\r\n  const handleYellowClick = () => {\r\n    props.handleColoredClick('yellow');\r\n  }\r\n  return (\r\n  <Paper>\r\n    <FormControl style={{backgroundColor: 'white', textAlign: 'center'}} component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Goal Selector</FormLabel>\r\n      <FormGroup aria-label=\"position\" row>\r\n        <FormControlLabel\r\n          value=\"Wildcard\"\r\n          control={<Checkbox onClick={handleWildCardClick} checked={wildchecked} color=\"primary\" />}\r\n          label=\"wildcard\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Blue\"\r\n          control={<Checkbox onClick={handleBlueClick} color=\"primary\" />}\r\n          label=\"blue\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Green\"\r\n          control={<Checkbox onClick={handleGreenClick} color=\"primary\" />}\r\n          label=\"green\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Red\"\r\n          control={<Checkbox onClick={handleRedClick} color=\"primary\" />}\r\n          label=\"red\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Yellow\"\r\n          control={<Checkbox onClick={handleYellowClick} color=\"primary\" />}\r\n          label=\"yellow\"\r\n          labelPlacement=\"top\"\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n    </Paper>\r\n  );\r\n}","import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function LearnGameItems(props) {\r\n    const handleClick = () => {\r\n        props.handleClickGame(props.index)\r\n    }\r\n    if (props.selected === props.index) {\r\n        return (\r\n            <Button\r\n                variant=\"contained\" color=\"primary\"\r\n                aria-label=\"vertical outlined primary button group\"\r\n                onClick={handleClick}\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={handleClick}\r\n                aria-label=\"vertical outlined primary button group\"\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div id=\"MainGameBoard\" style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleoutsidedraggable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var boxShadow = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        boxShadow = '0 0 0 3pt ' + SELECTED_ROBOT;\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        boxShadow: boxShadow,\r\n        backgroundSize: dim,\r\n        backgroundImage: \"url(\" + \"/static/images/astronaut.png\" + \")\",\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    onStopDragHandler = (e, position) => {\r\n        this.props.onStopDragHandler(position,this.props.index);\r\n    }\r\n\r\n\r\n    handleCreateMode = () => {\r\n        if (this.props.isCreateMode === 'Yes' && this.props.buildMode) {\r\n            return (\r\n            <Draggable position={{x: this.props.position.left * this.props.dimension, y:this.props.position.top*this.props.dimension}} grid={this.props.draggableGrid} onStop={this.onStopDragHandler} bounds=\"parent\">\r\n                <div onClick={this.handleClick} style={styleoutsidedraggable(this.props)}>\r\n                    <div style={styleinside(this.props)}>\r\n                        <div style={styleinside2(this.props)}/>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            this.handleCreateMode()\r\n        );\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE,ROBOT_GREEN,ROBOT_BLUE,ROBOT_RED,ROBOT_YELLOW,COLORED_GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none',\r\n        backgroundColor: color,\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none',\r\n        backgroundColor: color\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.position == null) {\r\n        return null\r\n    }\r\n    if (props.isCreateMode === 'Yes'  && props.buildMode) {\r\n        const onStopDragHandler = (e, position) => {\r\n            props.onStopDragHandler(position,props.color);\r\n        }\r\n        if (props.color == undefined) {\r\n            return(\r\n            <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n                <img src={GOAL_IMAGE} style={styledragable(props)}/>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n                <img src={COLORED_GOAL_IMAGE} style={styledragable(props)}/>\r\n            </Draggable>\r\n            )\r\n        }\r\n    }\r\n    else {\r\n        if (props.color == undefined) {\r\n            return(<img src={GOAL_IMAGE} style={style(props)}/>)\r\n        }\r\n        else {\r\n            return(<img src={COLORED_GOAL_IMAGE} style={style(props)}/>)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({buildMode,show,dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension + dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension + dimension;\r\n            left = position.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        opacity: show ? '0.5' : '0.0',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default (props) => {\r\n    const handleClick = () => {\r\n        props.handleClick(props.dir)\r\n    }\r\n    if (props.buildMode === 'undefined' || !props.buildMode)\r\n    {\r\n        return (\r\n            <div onClick={handleClick} style={style(props)}/>\r\n        );\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LearnGameItems from '../components/LearnGameItems';\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailySingleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Completed!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <Typography variant=\"body1\">\r\n                        You used {this.props.numMoves} Moves, for this puzzle.\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Total Moves: {this.props.totalMoves}\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Finish all puzzles to get submit your score!\r\n                    </Typography>\r\n                    <br/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailySingleModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailyFinalModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null\r\n        }\r\n    }\r\n\r\n    handleClickSubmitGame = () => {\r\n        if (document.getElementById(\"namesubmitHS\").value == '') {\r\n            this.setState({\r\n                error: <Alert severity=\"error\">You must choose a submit name</Alert>\r\n            })\r\n        }\r\n        else {\r\n            this.props.submitAnswer(this.props.newPlayerState);\r\n            this.setState({\r\n                error: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Completed the Challenge!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                    {this.state.error}\r\n                    {this.props.submitted}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    {this.props.submitted == null ? <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickSubmitGame}>Submit Highscore</Button> : null}\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailyFinalModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Submit Puzzle</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField id={\"namesubmit\"} label={\"Name of Puzzle\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleModal;\r\n","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Path Indicators\"\r\n                    checked={this.props.showColoredLineDirections}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n\r\n    state = {\r\n            minutes: 5,\r\n            seconds: 0,\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.puzzleRushTimeUp();\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    timer = () => {\r\n        if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n            return (<h2>Time is up!</h2>)\r\n        }\r\n        else {\r\n            return(\r\n                <h2>Time Remaining: {this.state.minutes}:{this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds}</h2>)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            this.timer()\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ToggleSettings from \"../components/ToggleSettings\";\r\nimport Timer from \"../components/Timer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                        copyButtonText: \"Copy Puzzle Link\"\r\n                     };\r\n        this.state.uri = this.props.isDailyChallenge === 'Yes' ? 'dailychallenge' : this.props.uri;\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <div>\r\n                    <Button color=\"secondary\" variant={\"outlined\"} fullWidth={true} onClick={this.handleCreateBoardClick}>Modify Board</Button>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Switch color=\"primary\" checked={this.props.buildMode} onChange={this.props.toggleBuildMode}/>}\r\n                        label=\"Build Mode\"\r\n                            />\r\n                </div>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.state.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        document.getElementsByClassName(\"MuiSlider-thumb\")[0].blur();\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n    showPuzzleLink = () => {\r\n        if (this.props.createMode === 'Yes' || this.props.isPuzzleRush === 'Yes' || this.props.isLesson === 'Yes' || this.props.isDailyChallengeAnswers === 'Yes' || this.props.isDailyChallenge === 'Yes') {\r\n            return null;\r\n        }\r\n        else {\r\n                return(\r\n                     <div style={{paddingBottom: '10px'}}>\r\n                         <Button fullWidth={true} variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                                 onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                     </div>\r\n                    )\r\n        }\r\n    }\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                {this.showPuzzleLink()}\r\n                 <Divider />\r\n                 <Typography\r\n                     color=\"textSecondary\"\r\n                     display=\"block\"\r\n                     variant=\"caption\"\r\n                     style={{paddingBottom: '10px'}}\r\n                 >\r\n                     Board Actions\r\n                 </Typography>\r\n                 <ButtonGroup fullWidth={true} color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     <Button onClick={this.props.undoMove}>Undo</Button>\r\n                 </ButtonGroup>\r\n                 {this.isCreateMode(this.props.createMode)}\r\n                 <Divider />\r\n                 <ToggleSettings showColoredLineDirections={this.props.showColoredLineDirections} onClick={this.props.toggleLineIndicators}/>\r\n                 <div style={buttonPanel()}>\r\n                     <Typography id=\"discrete-slider-small-steps\"\r\n                                 color=\"textSecondary\"\r\n                                 display=\"inline\"\r\n                                 gutterBottom>\r\n                         Size Of Board\r\n                     </Typography>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={this.props.squareSizeValue}\r\n                         valueLabelDisplay=\"auto\"\r\n                         id=\"sliderelement\"\r\n                     />\r\n                 </div>\r\n                 <Divider/>\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n}\r\n\r\nconst paperstyle = () => {\r\n    return {\r\n        marginBottom: '15px'\r\n    }\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n                <Paper style={paperstyle()}elevation={3}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={9}>\r\n                            <Typography color={'primary'} style={{float: 'left'}}>\r\n                                {highscore.comment}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                                {highscore.userid != 1 ? <GoVerified/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'textSecondary'}>{highscore.numMoves}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.created}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Paper>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid item xs={12} style={styleouter()}>\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginTop: '30px',\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst CrownCounter = highscore => {\r\n    var crowns = []\r\n    var i;\r\n    for (i=0; i<highscore.wins;i++) {\r\n        crowns.push(<FaCrown/>);\r\n    }\r\n    return (\r\n        <div>\r\n            {crowns}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (<Grid item xs={12}>\r\n                <Paper elevation={3}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={9}>\r\n                            <Typography color={'primary'} style={{float: 'left'}}>\r\n                                {highscore.name}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                                {highscore.wins == 0 || highscore.wins == null ? null : CrownCounter(highscore) }\r\n                                {highscore.user_id != 1 ? <GoVerified/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'textSecondary'}>{highscore.score}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.submitted}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Paper>\r\n            </Grid>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid style={styleouter()} container direction={'column'} spacing={1}>\r\n        {\r\n                highscores.map(highscore =>\r\n                    highscorestyle(highscore)\r\n                )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nclass PuzzleRushWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Puzzle Rush - {this.props.difficulty}</DialogTitle>\r\n                <DialogContent dividers>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"h6\">\r\n                            Statistics\r\n                          </Typography>\r\n                          <div>\r\n                            <List dense={true}>\r\n\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Number of Puzzles Completed\"\r\n                                    secondary={this.props.numPuzzlesCompleted}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average time Per Puzzle\"\r\n                                    secondary={this.props.averageTime}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average Moves per Puzzle\"\r\n                                    secondary={this.props.averageMoves}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Efficiency Score: puzzles * 7 - redundant moves from best\"\r\n                                    secondary={(this.props.numPuzzlesCompleted * 7) - this.props.differenceOptimal}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Moves Per Second\"\r\n                                    secondary={this.props.movesPerSecond}\r\n                                  />\r\n                                </ListItem>\r\n                            </List>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.handleClickPlayAgain}>Play Again!</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushWinModal;\r\n\r\n","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../../constants/constants';\r\n\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass RandomGameStatsModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answers: null,\r\n        }\r\n    }\r\n\r\n    showStatsModal = () => {\r\n        this.props.handleShowRandomAnswers()\r\n        this.setState({\r\n            answers: this.props.lowestMoveSequence\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-random\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        lowest possible moves: {this.props.lowestMoves}\r\n                    </div>\r\n                    {this.state.answers}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.showStatsModal}>Show Puzzle Answers</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomGameStatsModal;","import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nexport default function CloseIconWithOnClick(props) {\r\n    const handleClose = () => {\r\n        props.handleClose(props.index);\r\n    }\r\n    return (<CloseIcon onMouseDown={handleClose}/>\r\n    )\r\n}","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport CloseIconWithOnClick from './CloseIconWithOnClick'\r\n\r\nexport default function Descriptionlist(props) {\r\n    return(\r\n            <List>\r\n              {\r\n                  props.tipsText.map((text,index) =>\r\n                    <ListItem>\r\n                      <div>\r\n                        {text}\r\n                      </div>\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                          <CloseIconWithOnClick index={index} handleClose={props.handleCloseToolTips}/>\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  )\r\n              }\r\n            </List>\r\n    )\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinLessonModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <Typography> You completed the Lesson! Move on to the next one!\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinLessonModal;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: '0 10px'\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 25,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function ShowDailyChallengeScoresCard(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {props.name}\r\n        </Typography>\r\n        <Typography style={{marginBottom: '30px'}} variant=\"h5\" component=\"h2\">\r\n          {props.bestScore}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.MovesforPuzzle}\r\n          <br/>\r\n          {props.MoveSequence}\r\n          <br />\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport MovesView from '../components/MovesView';\r\nimport ShowDailyChallengeScoreCard from '../components/ShowDailyChallengeScoresCard'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst stylebelow = () => {\r\n    return {\r\n        marginTop: '40px',\r\n        marginBottom: '20px'\r\n    }\r\n}\r\n\r\nclass DailyChallengeHistoryData extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography style={stylebelow()} variant=\"h4\"> {this.props.difficultyforPuzzle} </Typography>\r\n                <ShowDailyChallengeScoreCard\r\n                    name={\"Robot God\"}\r\n                    bestScore={this.props.bestScore}\r\n                    MovesforPuzzle={this.props.lowestMovesforPuzzle}\r\n                    MoveSequence={this.props.lowestMoveSequence}\r\n                />\r\n                <ShowDailyChallengeScoreCard\r\n                    name={this.props.nameSubmitted}\r\n                    bestScore={this.props.scoreSubmitted}\r\n                    MovesforPuzzle={null}\r\n                    MoveSequence={<MovesView\r\n                                        moveHistory={this.props.playerMovedSequence} playerState={[{colorSignifier: \"blue\"},{colorSignifier: \"green\"},{colorSignifier: \"red\"},{colorSignifier: \"yellow\"}]}\r\n                                  />}\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyChallengeHistoryData;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent,type) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    if (type === 'blank') {\r\n        var goal = {top: height-1, left: width-1};\r\n        var randompos1 = {top: 0,left: 0, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n        var randompos2 = {top: 0,left: 1, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n        var randompos3 = {top: 1,left: 0, color: ROBOT_RED, colorSignifier: 'red'};\r\n        var randompos4 = {top: 1,left: 1, color: ROBOT_YELLOW, colorSignifier:'yellow'};\r\n    }\r\n    else {\r\n        var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n        var randomPositions = [goal];\r\n        for (var i=0;i<5;i++) {\r\n            randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n        }\r\n        var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n        var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n        var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n        var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    }\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport DailyMovesView from '../components/DailyMovesView';\r\nimport CreateBoardGoalSelector from '../components/CreateBoardGoalSelector';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {withRouter} from 'react-router';\r\nimport Draggable from 'react-draggable';\r\nimport LearnGameItems from '../components/LearnGameItems';\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport YouWinDailySingleModal from '../components/YouWinDailySingleModal';\r\nimport YouWinDailyFinalModal from '../components/YouWinDailyFinalModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport PuzzleRushWinModal from '../containers/Modals/PuzzleRushFinishedModal';\r\nimport RandomGameStatsModal from '../containers/Modals/RandomGameStatsModal';\r\nimport DescriptionList from '../components/DescriptionList';\r\nimport YouWinLessonModal from '../components/YouWinLessonModal';\r\nimport DailyChallengeHistoryData from '../components/DailyChallengeHistoryData';\r\nimport Timer from \"../components/Timer\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR,\r\n    MOBILE_INNER_SCREEN_WIDTH\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport {Star} from \"@material-ui/icons\";\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if(e.keyCode == 32 && e.target == document.body) {\r\n    e.preventDefault();\r\n  }\r\n    if([37, 38, 39, 40, 9,13].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n    }\r\n}\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\nconst formatGeneratedMoveSequence = (moves) => {\r\n    var images = []\r\n    moves.map(move => {\r\n        var color = move.charAt(0);\r\n        var direction = move.charAt(1);\r\n        if (color == 'B') {\r\n            color = 'blue'\r\n        }\r\n        else if (color == 'R') {\r\n            color = 'red'\r\n        }\r\n        else if (color == 'Y') {\r\n            color = 'yellow'\r\n        }\r\n        else {\r\n            color = 'green'\r\n        }\r\n        if (direction == 'N') {\r\n            direction = UP\r\n        }\r\n        else if (direction == 'S') {\r\n            direction = DOWN\r\n        }\r\n        else if (direction == 'E') {\r\n            direction = RIGHT\r\n        }\r\n        else {\r\n            direction = LEFT\r\n        }\r\n        images.push(<img src={DIRECTION_MAP_IMAGES[color][direction]}/>)\r\n    });\r\n    return images\r\n}\r\n\r\n\r\nconst setDefaultSquareSize = (boardWidth,boardHeight) => {\r\n    const drawerWidth = document.getElementById(\"MainDrawer\") == null ? 140 : parseInt(getComputedStyle(document.getElementById(\"MainDrawer\")).width);\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n    var settingstop = windowHeight - 120;\r\n\r\n    settingstop = settingstop / boardHeight\r\n    settingstop = parseInt(settingstop);\r\n    settingstop = settingstop - (settingstop % 4)\r\n\r\n    var settings = ((windowWidth < MOBILE_INNER_SCREEN_WIDTH) ? windowWidth - 20 : (windowWidth - drawerWidth) / 1.75);\r\n    settings = settings / boardWidth;\r\n    settings = parseInt(settings);\r\n    settings = settings - (settings % 4);\r\n    var squarevalue = settings > settingstop ? settingstop : settings\r\n    if (squarevalue < 16) {\r\n        squarevalue = 16;\r\n    }\r\n    else if (squarevalue > 52) {\r\n        squarevalue = 52;\r\n    }\r\n    return squarevalue;\r\n};\r\n\r\nconst ColoredLineDirections = [LEFT,RIGHT,UP,DOWN]\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.puzzleRush === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.p_id = this.props.p_id;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = []\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            this.state.moveHistoryList=[];\r\n\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[0].g_solutiondata))\r\n            this.state.lowestMovesforPuzzle = this.props.games[0].g_moves\r\n            this.state.difficultyforPuzzle = this.props.games[0].g_difficulty\r\n            this.state.playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[0]\r\n\r\n            this.state.playerStateList = [];\r\n            this.state.tipsText = [];\r\n            this.state.highscores = [];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.dailyDayName = this.props.games[0].g_name\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            if (this.props.savedMoves != null) {\r\n                this.state.moveHistoryList = this.props.savedMoves\r\n                this.state.gamesWonDaily = [true,true,true,true]\r\n                this.state.moveHistory = this.props.savedMoves[0].slice()\r\n                this.state.playerState = this.props.playerStateList[0].slice()\r\n            }\r\n            else {\r\n                this.state.moveHistoryList=[];\r\n            }\r\n            this.state.playerStateList = this.props.playerStateList != null ? this.props.playerStateList : [];\r\n            this.state.tipsText = ['Winners who are Logged in will receive a Crown','See about page for details on the daily challenge difficulty','Puzzles reset at 3PM EST, the page will refresh automatically'];\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.dc_id = this.props.dc_id;\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.game.g_puzzledata)\r\n            this.state.lowestMoves = this.props.game.g_moves\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.game.g_solutiondata))\r\n            this.state.difficulty = this.props.game.g_difficulty\r\n            this.state.createMode = 'No';\r\n            this.state.gameWon = false;\r\n            this.state.buildMode = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = ['this game was randomly generated'];\r\n            this.state.uri = this.props.game.g_uri;\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n            window.history.pushState({id: 'Random Game'},'RobotsEvolved | Random Game','/play/' + this.props.game.g_uri)\r\n        }\r\n        else if (this.props.learnMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [this.props.games[0].description];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.votes = this.props.votes\r\n            this.state.hasVoted = this.props.hasVoted\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.buildMode = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n            window.history.pushState({id: 'Play Game'},'RobotsEvolved | Play Game','/play/'+ this.props.uri)\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,1,'blank');\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                buildMode: true,\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false,\r\n                tipsText: [\r\n                                        'Click on Wall spots to toggle',\r\n                                        'Click and Drag robots or goal to move robots',\r\n                                        'When you are ready, toggle build mode in order to solve the puzzle',\r\n                                        'You must solve the puzzle in order to submit.']\r\n            },board);\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.coloredGoals = [];\r\n        }\r\n        this.state.showColoredLineDirections = this.props.LineDirections;\r\n        if (this.state.coloredGoals == undefined) {\r\n            this.state.coloredGoals = [];\r\n        }\r\n    };\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                const highscoresdata = JSON.parse(res.data.highscores)\r\n                if (this.FindhighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    FindhighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.numMoves != check[index].numMoves) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n\r\n    DChighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.score != check[index].score) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n    updateDailyHighscores = () => {\r\n        axios.get('/dailychallengehighscores?dc_id=' + this.state.dc_id)\r\n            .then( res => {\r\n                if (res.data.dc_id != this.state.dc_id) {\r\n                    this.props.handleClickDailyChallenge();\r\n                    return\r\n                }\r\n                const highscoresdata = JSON.parse(res.data.highscores)//PoorMan's global redux implementation\r\n                if (this.DChighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                    window.dchighscores = JSON.parse(res.data.highscores)\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.updateHighscores();\r\n            var IntervalId = setInterval(this.updateHighscores, 8000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.updateDailyHighscores();\r\n            var IntervalId = setInterval(this.updateDailyHighscores, 6000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.tabSelector();\r\n                return;\r\n                break;\r\n            case 81:\r\n                if (!this.state.gameWon) {\r\n                    this.handleUndoMove();\r\n                }\r\n                break;\r\n                return;\r\n            case 87:\r\n                if (!this.state.gameWon) {\r\n                    this.resetPuzzle();\r\n                }\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n        }\r\n        this.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        var themoveHistory = this.state.moveHistory.slice()\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.userInfo !== null) {\r\n            username = window.userInfo.username\r\n        }\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username,moveHistory: themoveHistory}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.showColoredLineDirections === true) {\r\n            this.setState({\r\n                showColoredLineDirections: false,\r\n            });\r\n            this.props.handleLineDirections(false)\r\n        }\r\n        else {\r\n            this.setState({\r\n                showColoredLineDirections: true,\r\n            });\r\n            this.props.handleLineDirections(true)\r\n        }\r\n    };\r\n\r\n    toggleBuildMode = () => {\r\n        if (this.state.buildMode) {\r\n            this.setState({\r\n                buildMode: false,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n                buildMode: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length,solutiondata: this.state.moveHistory,name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            dailySubmittedSucessfully: null\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeRandomStatsModal = event => {\r\n        this.setState({\r\n            closeRandomStatsModal: false,\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    }\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushFinishedModal = event => {\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: false\r\n        });\r\n\r\n    }\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent, 'blank');\r\n        var squareSize = setDefaultSquareSize(width,height);\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n            squareSize: squareSize,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n    showStatsModal = () => {\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            showStatsModal: true,\r\n        });\r\n    }\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n    nextLessonPuzzle  = () => {\r\n        var puzzle = this.state.numPuzzleon;\r\n        puzzle += 1;\r\n        puzzle = puzzle == 4 ? 5 : puzzle;\r\n        puzzle = puzzle == 7 ? 8 : puzzle;\r\n        this.handleLearnClickGame(puzzle % 12);\r\n    }\r\n\r\n    puzzleRushTimeUp = () => {\r\n        var totalMovesDiff = 0;\r\n        this.state.solutiondifference.map(numMoves => {\r\n            totalMovesDiff += numMoves;\r\n        });\r\n        var averageTime = parseInt(300 / (this.state.numPuzzleon))\r\n        var totalMoves = 0;\r\n        this.state.totalMovesList.map(numMoves => {\r\n            totalMoves += numMoves\r\n        });\r\n        var avgMoves = parseInt(totalMoves / (this.state.numPuzzleon))\r\n        var movesPerSecond = totalMoves / 300;\r\n\r\n        axios.post('/puzzlerushend', {p_id: this.state.p_id,totalMoves: totalMoves,differenceFrom: totalMovesDiff})\r\n            .then( res => {\r\n                console.log(res.data);\r\n            });\r\n\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: true,\r\n            numPuzzlesCompleted: this.state.numPuzzleon,\r\n            percentile: 'TBD%',\r\n            averageTime: averageTime + 's',\r\n            averageMoves: avgMoves,\r\n            differenceOptimal: totalMovesDiff,\r\n            movesPerSecond: movesPerSecond\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    submitDailyAnswer = (LastRobotPosition) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            numMoves += moveHistory.length\r\n        });\r\n        var playerStateList = this.state.playerStateList.slice()\r\n        playerStateList[this.state.numPuzzleon] = LastRobotPosition.slice()\r\n        console.log(playerStateList);\r\n        axios.post('/dailychallenge', {score: numMoves, name: document.getElementById(\"namesubmitHS\").value, solutiondata: moveHistoryList, dc_id: this.state.dc_id, playerStateList: playerStateList})\r\n            .then( res => {\r\n                this.setState({\r\n                    dailySubmittedSucessfully: <Alert severity=\"success\">Submitted!</Alert>\r\n                });\r\n            });\r\n        window.dc_movesList = moveHistoryList;\r\n        window.dc_playerList = playerStateList;\r\n        this.state.gameWon = false;\r\n    }\r\n\r\n    checkwin = (newPlayerState) => {\r\n        if (this.state.goal != null && this.state.coloredGoals == null) {\r\n            var Won = false;\r\n            newPlayerState.map((player) => {\r\n                if (player.top === this.state.goal.top && player.left === this.state.goal.left) {\r\n                    Won = true;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            if (this.state.goal != null) {\r\n                var Won = false;\r\n                newPlayerState.map((player) => {\r\n                    if (player.top === this.state.goal.top && player.left === this.state.goal.left) {\r\n                        Won = true;\r\n                    }\r\n                });\r\n            }\r\n            else if (this.state.coloredGoals.length == 0) {\r\n                var Won = false;\r\n            }\r\n            else {\r\n                var Won = true;\r\n            }\r\n            var found = false;\r\n            var colorfound = false;\r\n            newPlayerState.map((player) => {\r\n                found = false\r\n                colorfound = false\r\n                this.state.coloredGoals.map(goal => {\r\n                    if (goal.colorSignifier == player.colorSignifier && goal.top === player.top && goal.left === player.left) {\r\n                        found = true;\r\n                    }\r\n                    if (goal.colorSignifier == player.colorSignifier) {\r\n                        colorfound = true;\r\n                    }\r\n                });\r\n                if (!found && colorfound) {\r\n                    Won = false;\r\n                }\r\n            });\r\n        }\r\n        if (Won) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No' && this.props.puzzleRush !== 'Yes') {\r\n                var username = '';\r\n                if (window.userInfo !== null) {\r\n                    username = window.userInfo.username\r\n                }\r\n                if (this.props.randomGame === 'Yes') {\r\n                    return (\r\n                        <RandomGameStatsModal\r\n                            show={this.state.gameWon}\r\n                            lowestMoves={this.state.lowestMoves}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            numMoves={this.state.moveHistory.length}\r\n                            difficulty={this.state.difficulty}\r\n                            resetPuzzle={this.resetPuzzle}\r\n                            handleShowRandomAnswers={this.handleShowRandomAnswers}\r\n                        />\r\n                    );\r\n                }\r\n                else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n                    return null\r\n                }\r\n                else if (this.props.dailyChallengeMode === 'Yes') {\r\n                    var Won=true\r\n                    if (window.dailyChallengeSessionBestHistory[this.state.numPuzzleon].length == 0 || this.state.moveHistory.length < window.dailyChallengeSessionBestHistory[this.state.numPuzzleon].length) {\r\n                        window.dailyChallengeSessionBestHistory[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n                        window.dailyChallengeSessionBestPlayerState[this.state.numPuzzleon] = this.state.playerState.slice()\r\n                    }\r\n                    this.state.gamesWonDaily.map((gameWon,index) => {\r\n                        if (!(index == this.state.numPuzzleon) && !gameWon) {\r\n                            Won = false\r\n                        }\r\n                    });\r\n                    var moveHistoryList = this.state.moveHistoryList\r\n                    moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory\r\n                    var numMoves = 0\r\n                    moveHistoryList.map(moveHistory => {\r\n                        numMoves += moveHistory.length\r\n                    });\r\n                    return (Won ? <YouWinDailyFinalModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={numMoves}\r\n                        submitAnswer={this.submitDailyAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                        undoMove={this.handleUndoMove}\r\n                        newPlayerState={newPlayerState}\r\n                        submitted={this.state.dailySubmittedSucessfully}\r\n                    /> : <YouWinDailySingleModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        totalMoves={numMoves}\r\n                        undoMove={this.handleUndoMove}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        games={this.state.games}\r\n                        handleClickGame={this.handleDailyClickGame}\r\n                        numPuzzleon={this.state.numPuzzleon}\r\n                        moveNextPuzzle={this.moveNextPuzzle}\r\n                    />);\r\n                }\r\n                else if (this.props.learnMode === 'Yes') {\r\n                    return  (<YouWinLessonModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        moveNextPuzzle={this.nextLessonPuzzle}\r\n                    />);\r\n                }\r\n                else {\r\n                    return  (<YouWinModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        submitAnswer={this.submitAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                    />);\r\n                }\r\n            }\r\n            else if (this.props.puzzleRush === 'Yes'){\r\n                axios.post('/puzzlerushsubmit', {p_id: this.state.p_id,g_id:this.state.games[this.state.numPuzzleon].g_id, moveHistory: this.state.moveHistory})\r\n                    .then( res => {\r\n                        console.log(res.data);\r\n                    });\r\n                var totalMoves = this.state.moveHistory.slice().length\r\n                var totalMovesList = this.state.totalMovesList\r\n                totalMovesList.push(totalMoves)\r\n                var solutionmoves = totalMoves - this.state.games[this.state.numPuzzleon].g_moves\r\n                var solutiondifference = this.state.solutiondifference\r\n                solutiondifference.push(solutionmoves)\r\n                var puzzledata = JSON.parse(this.state.games[this.state.numPuzzleon + 1].g_puzzledata)\r\n                if (this.state.numPuzzleon + 10 > this.state.games.length) {\r\n                    axios.get('/puzzlerushgetmore?p_id=' + this.props.p_id + '&difficulty=' + this.props.difficulty)\r\n                        .then( res => {\r\n                                var games = JSON.parse(res.data.games);\r\n                                var stategames = this.state.games\r\n                                var newarray = stategames.concat(games)\r\n                                this.setState({\r\n                                    games: newarray\r\n                                });\r\n                        });\r\n                }\r\n                this.setState(\r\n                    extend(puzzledata,{numPuzzleon: this.state.numPuzzleon + 1, playerState: puzzledata.playerStart.slice(), gameWon: false, solutiondifference: solutiondifference, totalMovesList: totalMovesList})\r\n                );\r\n\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handleShowRandomAnswers = () => {\r\n        this.setState({\r\n            tipsText: [this.state.lowestMoveSequence]\r\n        })\r\n    }\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false && !this.state.buildMode) {\r\n            var oldPositon = {left: this.state.playerState[this.state.robotSelected].left, top: this.state.playerState[this.state.robotSelected].top};\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left) && !this.state.buildMode) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier,\r\n                    prevPosition: oldPositon\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseToolTips = (index) => {\r\n        this.state.tipsText.splice(index,1);\r\n        this.setState({\r\n            tipsText: this.state.tipsText,\r\n        });\r\n    }\r\n\r\n    moveNextPuzzle = () => {\r\n        this.handleDailyClickGame((this.state.numPuzzleon + 1) % 4)\r\n    }\r\n\r\n    handleLearnClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].puzzledata);\r\n        var squareSize = setDefaultSquareSize(puzzledata.width,puzzledata.height);\r\n        this.setState(\r\n            extend(puzzledata,{buildMode: false,squareSize: squareSize, numPuzzleon: index, moveHistory: [], gameWon: false, playerState: puzzledata.playerStart.slice(),tipsText: [this.props.games[index].description]})\r\n        );\r\n    }\r\n\r\n    handleDailyClickAnswersGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n        var lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[index].g_solutiondata))\r\n        var lowestMovesforPuzzle = this.props.games[index].g_moves\r\n        var difficultyforPuzzle = this.props.games[index].g_difficulty\r\n        var playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[index]\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory,\r\n                    gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily,\r\n                    lowestMoveSequence: lowestMoveSequence, lowestMovesforPuzzle: lowestMovesforPuzzle, difficultyforPuzzle: difficultyforPuzzle,\r\n                    playerMovedSequence: playerMovedSequence})\r\n        );\r\n    }\r\n\r\n    handleDailyClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily})\r\n        );\r\n    }\r\n\r\n\r\n    handleWildCardClick = () => {\r\n        if (this.state.goal == null) {\r\n            this.setState({\r\n                goal: {top: this.state.height - 1, left: this.state.width - 1}\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                goal: null\r\n            });\r\n        }\r\n        this.resetPuzzle();\r\n    }\r\n\r\n    resetToBest = (moveHistory, playerState) => {\r\n        this.setState({\r\n            moveHistory: moveHistory,\r\n            playerState: playerState,\r\n        });\r\n    }\r\n\r\n    handleColoredClick = (colorSignifier) => {\r\n        var goal = null;\r\n        this.state.coloredGoals.map(goalItem => {\r\n            if (colorSignifier == goalItem.colorSignifier) {\r\n                goal = goalItem;\r\n            }\r\n        })\r\n        if (goal == null) {\r\n            var newColoredGoals = this.state.coloredGoals;\r\n            var newgoal\r\n            switch (colorSignifier) {\r\n                case 'blue':\r\n                    newgoal = {top: this.state.height - 2, left: this.state.width - 2, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n                    break;\r\n                case 'green':\r\n                    newgoal = {top: this.state.height - 1, left: this.state.width - 2, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n                    break;\r\n                case 'red':\r\n                    newgoal = {top: this.state.height - 2, left: this.state.width - 1, color: ROBOT_RED, colorSignifier: 'red'};\r\n                    break;\r\n                case 'yellow':\r\n                    newgoal = {top: this.state.height - 3, left: this.state.width - 3, color: ROBOT_YELLOW, colorSignifier: 'yellow'};\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            newColoredGoals.push(newgoal);\r\n            this.setState({\r\n                coloredGoals: newColoredGoals\r\n            });\r\n        }\r\n        else {\r\n            var newColoredGoals = this.state.coloredGoals.filter(goalItem =>\r\n                colorSignifier != goalItem.colorSignifier\r\n            );\r\n            console.log(newColoredGoals);\r\n            this.setState({\r\n                coloredGoals: newColoredGoals\r\n            });\r\n        }\r\n        this.resetPuzzle();\r\n    }\r\n\r\n    trimName = name => {\r\n        var separated = (name + '').split(\" \")\r\n        var toreturn = '';\r\n        separated.map((word) => {\r\n            if (word.length > 17)\r\n                toreturn += word.substring(0, 17) + \"...\" + ' ';\r\n            else {\r\n                toreturn += word + ' '\r\n            }\r\n        });\r\n        return toreturn.substring(0, toreturn.length - 1);\r\n    };\r\n\r\n    loadSidebar = () => {\r\n        if (this.props.learnMode == 'Yes') {\r\n            return (\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\">\r\n                        <Divider/>\r\n                        <Typography\r\n                             color=\"textSecondary\"\r\n                             display=\"block\"\r\n                             variant=\"caption\"\r\n                             style={{paddingBottom: '10px'}}\r\n                         >\r\n                             Beginner Lessons\r\n                         </Typography>\r\n                        {\r\n                            this.state.games.map((game,index) => {\r\n                                    if (index === 4) {\r\n                                        return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Intermediate Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    else if (index === 7) {\r\n                                            return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Advanced Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    return(\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={game.name} index={index} handleClickGame={this.handleLearnClickGame}/>\r\n                                    )\r\n                                }\r\n\r\n                            )\r\n                        }\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickAnswersGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeHistoryData\r\n                            lowestMovesforPuzzle={this.state.lowestMovesforPuzzle}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            difficultyforPuzzle={this.state.difficultyforPuzzle}\r\n                            nameSubmitted={this.props.nameSubmitted}\r\n                            playerMovedSequence={this.state.playerMovedSequence}\r\n                            bestScore={this.props.bestScore}\r\n                            scoreSubmitted={this.props.scoreSubmitted}\r\n                         />\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <DailyMovesView\r\n                            moveHistory={window.dailyChallengeSessionBestHistory[this.state.numPuzzleon]}\r\n                            playerState={window.dailyChallengeSessionBestPlayerState[this.state.numPuzzleon]}\r\n                            resetToBest={this.resetToBest}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            color=\"secondary\"\r\n                            display=\"block\"\r\n                            variant={\"h4\"}\r\n\r\n                        >\r\n                            {this.state.dailyDayName}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeScores highscores={this.state.highscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.state.createMode === 'Yes') {\r\n            return (\r\n                <CreateBoardGoalSelector\r\n                    handleWildCardClick={this.handleWildCardClick}\r\n                    handleColoredClick={this.handleColoredClick}\r\n                />\r\n            );\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.puzzleRush) {\r\n            return (\r\n                     <div>\r\n                        <Timer puzzleRushTimeUp={this.puzzleRushTimeUp}>\r\n                        </Timer>\r\n                        <Typography id=\"discrete-slider-small-steps\"\r\n                                     color=\"Primary\"\r\n                                     variant=\"h3\"\r\n                                     display=\"inline\"\r\n                                     gutterBottom>\r\n                             {this.state.numPuzzleon}\r\n                         </Typography>\r\n                     </div>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n            <div style={{display: 'grid'}}>\r\n                <Typography\r\n                    color=\"secondary\"\r\n                    display=\"block\"\r\n                    variant={\"h4\"}\r\n\r\n                >\r\n                    {this.trimName(this.props.name)}\r\n                </Typography>\r\n                <div style={{paddingBottom: '10px', display: 'inline-flex', alignItems: \"center\"}}>\r\n                    <Typography variant=\"caption\" style={{paddingRight: \"5%\"}}>\r\n                        By: {this.trimName(this.props.author)}\r\n                    </Typography>\r\n                    <div>\r\n                        <Button startIcon={<StarIcon/>} variant={this.state.hasVoted ? \"outlined\" : \"contained\"} color=\"secondary\"\r\n                                onClick={this.updateLike}>{this.state.votes ? this.state.votes : 0}</Button>\r\n                    </div>\r\n                </div>\r\n                <Grid container xs={12} direction=\"column\">\r\n                <HighScores highscores={this.state.highscores}/>\r\n                </Grid>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    updateLike = () => {\r\n        const action = this.state.hasVoted ? \"remove\" : \"create\"\r\n        axios.post('/likepuzzle', {uri: this.state.uri, action: action, vote: \"voting\"})\r\n            .then( res => {\r\n                var newHasVoted = \"Y\"\r\n                var newVotes = this.state.votes\r\n                if (this.state.hasVoted)\r\n                    newHasVoted = null\r\n                if (!isNaN(res.data.votes))\r\n                    newVotes = res.data.votes\r\n\r\n                this.setState({\r\n                    hasVoted: newHasVoted,\r\n                    votes: newVotes\r\n                });\r\n            }).catch(_ => {\r\n                this.props.signInModalOpen(\"Sign in\")\r\n            });\r\n    }\r\n\r\n    handlePlayerMovementFromMouse = (direction) => {\r\n        this.handlePlayerMovement({dir: direction})\r\n    };\r\n\r\n    handleUndoMove = () => {\r\n        var moveHistory = this.state.moveHistory;\r\n        var playerState = this.state.playerState;\r\n        if (moveHistory.length !== 0) {\r\n            var moveObj = moveHistory.pop();\r\n            playerState[moveObj.robot].left = moveObj.prevPosition.left;\r\n            playerState[moveObj.robot].top = moveObj.prevPosition.top;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n                gameWon: false,\r\n                dailySubmittedSucessfully: null\r\n            });\r\n        }\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes' && this.state.buildMode) {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onStopDragHandlerGoal = (position,color) => {\r\n        if (color == undefined) {\r\n            this.setState({\r\n                goal: {top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize)},\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            })\r\n        }\r\n        else {\r\n            var coloredGoals = this.state.coloredGoals;\r\n            var newGoals = [];\r\n            coloredGoals.map(goal => {\r\n                if (goal.color == color) {\r\n                    newGoals.push({top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize), color: color, colorSignifier: goal.colorSignifier});\r\n                }\r\n                else {\r\n                    newGoals.push(goal);\r\n                }\r\n            });\r\n            this.setState({\r\n                coloredGoals: newGoals,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    onStopDragHandler = (position,index) => {\r\n        var playerState = this.state.playerState.slice();\r\n        var lastX = position.lastX / this.state.squareSize;\r\n        var lastY = position.lastY / this.state.squareSize;\r\n        playerState[index].top = Math.round(lastY);\r\n        playerState[index].left = Math.round(lastX);\r\n        this.setState({\r\n            playerStart: playerState.slice(),\r\n            playerState: playerState,\r\n            moveHistory: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        puzzleRushTimeUp={this.puzzleRushTimeUp}\r\n                        isPuzzleRush={this.props.puzzleRush}\r\n                        numPuzzleRush={this.state.numPuzzleon}\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                        toggleLineIndicators = {this.toggleLineIndicators}\r\n                        showColoredLineDirections={this.state.showColoredLineDirections}\r\n                        toggleBuildMode = {this.toggleBuildMode}\r\n                        undoMove = {this.handleUndoMove}\r\n                        buildMode = {this.state.buildMode}\r\n                        squareSizeValue = {parseInt((this.state.squareSize/4))}\r\n                        isLesson = {this.props.learnMode}\r\n                        isDailyChallenge = {this.props.dailyChallengeMode}\r\n                        isDailyChallengeAnswers = {this.props.dailyChallengeModeAnswers}\r\n                    />\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? null : <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>}\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8} zeroMinWidth>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal\r\n                            dimension={this.state.squareSize}\r\n                            position={this.state.goal}\r\n                            onStopDragHandler={this.onStopDragHandlerGoal}\r\n                            draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                            isCreateMode={this.state.createMode}\r\n                            buildMode={this.state.buildMode}\r\n                        />\r\n                        {\r\n                            this.state.coloredGoals.map(goal =>\r\n                                <Goal\r\n                                    dimension={this.state.squareSize}\r\n                                    position={goal}\r\n                                    onStopDragHandler={this.onStopDragHandlerGoal}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    color={goal.color}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    onStopDragHandler={this.onStopDragHandler}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={this.state.playerState[this.state.robotSelected].color}\r\n                                    show={this.state.showColoredLineDirections}\r\n                                    handleClick={this.handlePlayerMovementFromMouse}\r\n                                    buildMode={this.state.buildMode}\r\n                                />\r\n                            )\r\n                        }\r\n                    </Board>\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/> : null}\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DescriptionList\r\n                        handleCloseToolTips={this.handleCloseToolTips}\r\n                        tipsText={this.state.tipsText}\r\n                    />\r\n                    {this.loadSidebar()}\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                {\r\n                    this.checkwin(this.state.playerState)\r\n                }\r\n                <PuzzleRushWinModal\r\n                    show={this.state.showPuzzleRushFinishedModal}\r\n                    closeModal={this.closePuzzleRushFinishedModal}\r\n                    numPuzzlesCompleted={this.state.numPuzzlesCompleted}\r\n                    percentile={this.state.puzzleRushPercentileCompleted}\r\n                    averageTime={this.state.averageTime}\r\n                    averageMoves={this.state.averageMoves}\r\n                    differenceOptimal={this.state.differenceOptimal}\r\n                    movesPerSecond={this.state.movesPerSecond}\r\n                    difficulty={this.props.difficulty}\r\n                    handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport axios from 'axios';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        maxWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 360,\r\n        minWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 235,\r\n        height: 225,\r\n        position: 'relative',\r\n        background: 'linear-gradient(100deg, #ffd34d 55%, #fff178 55%)'\r\n    },\r\n\r\n    item: {\r\n        padding: 0\r\n    },\r\n\r\n    upperPadding: {\r\n        paddingTop: 3\r\n    },\r\n    upperPaddingButton: {\r\n        paddingTop: 3,\r\n        position: 'absolute',\r\n        bottom: 15,\r\n        left: 25\r\n    },\r\n\r\n    lowerPadding: {\r\n        paddingBottom: 3\r\n    },\r\n\r\n    rightSideText: {\r\n        textAlign: \"right\",\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    },\r\n\r\n    leftSideText: {\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(ComplexGrid)\r\n\r\nfunction ComplexGrid(props) {\r\n    const { classes } = props;\r\n    const handleClick = () => {\r\n        axios.get('/getFindGameData?uri=' + props.game.uri)\r\n                .then( res => {\r\n                    console.log(res.data);\r\n                    var game = JSON.parse(res.data.game);\r\n                    console.log(game);\r\n                    props.handleGameClick(game.name, game.puzzledata,props.highscores,game.uri,props.game.authorname,\r\n                        props.game.votes, props.game.hasVoted);\r\n                });\r\n    };\r\n\r\n    var numberOfHighScores = 0;\r\n\r\n    const highscorestyle = highscore => {\r\n        if (numberOfHighScores === 6) return \"\";\r\n        numberOfHighScores++;\r\n        return (\r\n            <ListItem disableGutters={true} classes={{ root: classes.item }}>\r\n                <ListItemText primary={trimNameShort(highscore.comment)} classes={{ root: classes.leftSideText }} />\r\n                <ListItemText secondary={highscore.numMoves} classes={{ root: classes.rightSideText }} />\r\n            </ListItem>\r\n        )\r\n    };\r\n\r\n    const contentDivStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        };\r\n\r\n    };\r\n\r\n    const trimName = name => {\r\n        var separated = (name + '').split(\" \")\r\n        var toreturn = '';\r\n        separated.map((word) => {\r\n            if (word.length > 17)\r\n                toreturn += word.substring(0, 17) + \"...\" + ' ';\r\n            else {\r\n                toreturn += word + ' '\r\n            }\r\n        });\r\n        return toreturn.substring(0, toreturn.length - 1);\r\n    };\r\n\r\n    const trimNameShort = name => {\r\n        if (name.length > 10)\r\n            name = name.substring(0, 10) + \"...\";\r\n        return name\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid item xs={12} md={3} sm={6}>\r\n            <Card variant=\"outlined\" className={classes.root}>\r\n                <CardContent>\r\n                    <div style={contentDivStyle()}>\r\n                        <div style={{width: '150px'}}>\r\n                            <Tooltip title={props.game.name}>\r\n                                <Typography variant=\"h6\" classes={{ root: classes.lowerPadding }}>\r\n                                    {trimName(props.game.name)}\r\n                                </Typography>\r\n                            </Tooltip>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    By: {trimName(props.game.authorname)}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    {props.game.created}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Plays: {props.game.plays}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Likes: {props.game.votes}\r\n                                </Typography>\r\n                            </div>\r\n                            <br/>\r\n                            <Button onClick={handleClick} classes={{ root: classes.upperPaddingButton }} variant=\"contained\" color=\"primary\">Play</Button>\r\n                        </div>\r\n                        <div style={{width: '105px'}}>\r\n                            <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                Top Scores\r\n                            </Typography>\r\n                            <List>\r\n                                {\r\n                                    props.highscores.map(highscore =>\r\n                                        highscorestyle(highscore)\r\n                                    )\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from 'axios';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport extend from '../constants/extend';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center'\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 400,\r\n    },\r\n    input: {\r\n        marginLeft: 5,\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n        marginLeft: 8,\r\n        marginRight: 8,\r\n    },\r\n});\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = this.props.gameslist;\r\n        var highscoreslist = this.props.highscoreslist;\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n            anchorEl: null,\r\n            hasMore: true,\r\n            lastSearch: 'None',\r\n            offsetSearch: gameslist.length,\r\n            isLoadingSearch: false,\r\n        }\r\n\r\n    }\r\n\r\n    handleGameClick = (name,gamedata,highscores,uri,authorname,votes,hasVoted) => {\r\n        this.props.handleGameClick(name,gamedata,highscores,uri,authorname,votes,hasVoted);\r\n    };\r\n\r\n    handleFilterMenuOpen = event => {\r\n        this.setState( {\r\n          anchorEl: event.currentTarget\r\n      });\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.keycode == 13) {\r\n            this.handleSearchSubmit(e);\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        window.scrollTo(0,this.props.findWindowHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.props.setFindWindow(window.scrollY)\r\n    }\r\n\r\n    handleCloseFilterMenuMostPlayed = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'MostPlayed', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'MostPlayed', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'MostPlayed',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleCloseFilterMenuHighest = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'Highest', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'Highest', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'Highest',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleSearchSubmit = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n\r\n        axios.post('/search', {search: searchTerm, filter: 'None', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'None', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'None',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    hasMore = () => {\r\n        return ( this.state.hasMore ? null : <Grid item alignItems=\"center\" justify=\"center\" xs={12}><Typography style={{textAlign: 'center', display: 'block'}} variant=\"caption\">No More Puzzles</Typography></Grid>)\r\n    }\r\n\r\n    loadMoreItems = () => {\r\n        var searchTerm = this.searchRef.value;\r\n        console.log(this.state.gameslist.length);\r\n        console.log(this.state.offsetSearch);\r\n        if (!this.state.isLoadingSearch) {\r\n            this.state.isLoadingSearch = true;\r\n            axios.post('/search', {search: searchTerm, filter: 'None', offset: this.state.offsetSearch})\r\n                .then( res => {\r\n                    var gameslist = JSON.parse(res.data.gameslist);\r\n                    this.state.offsetSearch = gameslist.length + this.state.gameslist.length;\r\n                    var highscoreslist = JSON.parse(res.data.highscoreslist);\r\n                    this.props.setNumFindGames(gameslist.length + this.state.gameslist.length, this.state.lastSearch, searchTerm);\r\n                    this.setState({\r\n                        highscoreslist: this.state.highscoreslist.concat(highscoreslist),\r\n                        gameslist: this.state.gameslist.concat(gameslist),\r\n                        hasMore: gameslist.length == 0 ? false : true,\r\n                        isLoadingSearch: false,\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    handleCloseFilterMenu = () => {\r\n        this.setState({\r\n            anchorEl: null\r\n        });\r\n    };\r\n\r\n    render () {\r\n        const  { classes } = this.props;\r\n        console.log(this.state.highscoreslist)\r\n        console.log(this.state.gameslist)\r\n        return (\r\n            <div id='MainFindPage' style={gamepanel()}>\r\n                <Paper component=\"form\" className={classes.root} >\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        inputRef={ref => this.searchRef = ref}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                this.handleSearchSubmit();\r\n                                event.preventDefault()\r\n                            }\r\n                        }}\r\n                    />\r\n                    <IconButton onClick={this.handleSearchSubmit} className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <Divider className={classes.divider} orientation=\"vertical\" />\r\n                    <Button\r\n                        onClick={this.handleFilterMenuOpen}\r\n                        startIcon={<FilterListIcon />}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        Sort\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(this.state.anchorEl)}\r\n                        onClose={this.handleCloseFilterMenu}\r\n                    >\r\n                        <MenuItem onClick={this.handleSearchSubmit}>Recently Created</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuMostPlayed}>Most Played</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuHighest}>Highest Scores</MenuItem>\r\n                    </Menu>\r\n                </Paper>\r\n                <br/>\r\n                <Grid container alignItems={\"stretch\"} spacing={2}>\r\n                    {\r\n                        this.state.gameslist.map((game,index)=>\r\n                            <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                        )\r\n                    }\r\n                    <InfiniteScroll\r\n                        pageStart={1}\r\n                        loadMore={this.loadMoreItems.bind(this)}\r\n                        hasMore={this.state.hasMore}\r\n                        loader={<Grid item alignItems=\"center\" justify=\"center\" xs={12}><CircularProgress style={{textAlign: 'center',alignItems: 'center', marginLeft: 'auto', marginRight: 'auto'}} size={40} color=\"secondary\" /></Grid>}\r\n                        threshold={200}\r\n                        >\r\n                    </InfiniteScroll>\r\n                    {this.hasMore()}\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(FindGame);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  loadedGame={'Yes'}\r\n                  name={this.props.name}\r\n                  author={this.props.authorname}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n                  votes={this.props.votes}\r\n                  hasVoted={this.props.hasVoted}\r\n                  signInModalOpen={this.props.signInModalOpen}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  homepage: {\r\n    marginTop: '40px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  baseExpansion: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: '10px'\r\n  },\r\n  darkmode: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      marginTop: '150px',\r\n  },\r\n  iconcards: {\r\n    width: '250px',\r\n    display: 'inline-block',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  iconcardsDaily: {\r\n    maxWidth: 345,\r\n    minWidth: 250,\r\n    float: 'left',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  titlehome: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '30px',\r\n  },\r\n  titledailyroto: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '10px',\r\n  },\r\n  iconfonts: {\r\n    fontFamily: \"'Arvo', serif\",\r\n  },\r\n  createboardcard: {\r\n    ':hover': {\r\n        content: '/static/images/CreateBoardCardIconPlaced.png',\r\n    }\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  centeredProfile: {\r\n    marginTop: '20px',\r\n    display: 'inline-block',\r\n  },\r\n  expandedPanelDCH: {\r\n    background: 'linear-gradient(70deg, #fff810  30%, rgba(0,0,0,0) 30%), linear-gradient(30deg, #63e89e 60%, #ff7ee3 60%)'\r\n  },\r\n  table: {\r\n    width: '33%'\r\n  }\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport FindGameElements from \"../containers/FindGameElements\";\r\nimport {GOAL_IMAGE} from '../constants/constants';\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n\r\n    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n        return (<div className={classes.homepage} >\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                        </Typography>\r\n                        <Typography variant=\"p1\" paragraph={true}>Puzzle game for anyone to play! Create your own custom boards or play a random Solved game. <br/>Goal is to get ANY piece to stop on the  <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                        </Typography>\r\n                        <br/>\r\n                        <img width=\"300\" height=\"300\" src='/static/videos/basic2.gif'/>\r\n                        <br/>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                        <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                        </Typography>\r\n                        <Typography> 8/5/2020 Scaled down the Difficulty for the Daily Challenge rotations, also modified the classic algorithm to be less cluttered\r\n                        </Typography>\r\n                        <Typography> 8/18/2020 New textures, Soon to be released: Color Specific Goals!\r\n                        </Typography>\r\n                        <Typography> 8/23/2020 Personal Best saving feature added to Daily Challenge, Also Added Like feature to custom puzzles.\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container item alignItems={\"stretch\"} spacing={2} alignItems=\"center\" justify=\"center\" >\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickFindGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Find a Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/FindAGameCardIcon.png\"\r\n                                        title=\"Find a Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Find a Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/DailyChallengeIcon.png\"\r\n                                        title=\"Daily Challenge\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Daily Challenge\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickCreateGame}>\r\n                                    <CardMedia\r\n                                        className={classes.createboardcard}\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                        title=\"Create Board\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Create Board\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickRandomGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Play a Random Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/puzzle.png\"\r\n                                        title=\"Play a Random Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Play a Random Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickLearnGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                        title=\"Learn\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Learn\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Contemplative Reptile\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/PuzzleRushIcon.png\"\r\n                                        title=\"Contemplative Reptile\"\r\n                                    />\r\n                                    <CardContent style={{textAlign: 'center'}}>\r\n                                        <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            Puzzle Rush\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                    <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                    </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            Medium Mondays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Trouble Tuesday <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Wild Wednesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Tryhard Thursdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">easy puzzles</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                        </Typography>\r\n                        <Typography style={{marginTop: '30px'}} className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                        </Typography>\r\n                        <DailyChallengeScores highscores={window.dchighscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (<div className={classes.homepage}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> Controls\r\n                    </Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Movement\r\n                        </Typography>\r\n                    <img width={'20%'} height={'auto'} src={\"/static/images/keyboard.png\"}/>\r\n                    <Typography>Pieces Move until they hit a wall or another piece</Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Selecting robots\r\n                        </Typography>\r\n                        <img width={'20%'} height={'auto'} src={\"/static/images/tab.png\"}/>\r\n\r\n                    <Typography>Or click</Typography>\r\n                    <Divider/>\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            HotKeys\r\n                        </Typography>\r\n                        <Typography variant=\"h6\">Undo</Typography> <img width={'20%'} height={'auto'} src={\"/static/images/Qkey.png\"}/>\r\n                        <Typography variant=\"h6\">Reset</Typography> <img width={'20%'} height={'auto'} src={\"/static/images/Wkey.png\"}/>\r\n                    <Divider />\r\n                    <div style={{marginTop:'100px'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                    </Typography>\r\n                    <Typography> 8/5/2020 Scaled down the Difficulty for the Daily Challenges, also modified the classic algorithm to be less cluttered\r\n                    </Typography>\r\n                    <Typography> 8/18/2020 New textures, Soon to be released: Color Specific Goals!\r\n                    </Typography>\r\n                    <Typography> 8/23/2020 Personal Best saving feature added to Daily Challenge, Also Added Like feature to custom puzzles.\r\n                    </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={8} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                    </Typography>\r\n                    <Typography paragraph={true} variant=\"p1\">Puzzle game for anyone to play! Create your own custom boards or play a random Solved game.<br/>Goal is to get ANY piece to stop on the  <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                    </Typography>\r\n                    <br/>\r\n                        <img width=\"300\" height=\"300\" src='/static/videos/basic2.gif'/>\r\n                    <br/>\r\n                    <Card className={classes.iconcards}>\r\n                      <CardActionArea onClick={props.handleClickFindGame}>\r\n                        <CardMedia\r\n                          component=\"img\"\r\n                          alt=\"Find a Game\"\r\n                          height=\"140\"\r\n                          image=\"/static/images/FindAGameCardIcon.png\"\r\n                          title=\"Find a Game\"\r\n                        />\r\n                        <CardContent>\r\n                          <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                            Find a Game\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                      <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                        <CardMedia\r\n                          component=\"img\"\r\n                          alt=\"Create Board\"\r\n                          height=\"140\"\r\n                          image=\"/static/images/DailyChallengeIcon.png\"\r\n                          title=\"Daily Challenge\"\r\n                        />\r\n                        <CardContent>\r\n                          <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                            Daily Challenge\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickCreateGame}>\r\n                            <CardMedia\r\n                                className={classes.createboardcard}\r\n                                component=\"img\"\r\n                                alt=\"Create Board\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                title=\"Create Board\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Create Board\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickRandomGame}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Play a Random Game\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/puzzle.png\"\r\n                                title=\"Play a Random Game\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Play a Random Game\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickLearnGame}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Create Board\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                title=\"Learn\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Learn\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Contemplative Reptile\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/PuzzleRushIcon.png\"\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent style={{textAlign: 'center'}}>\r\n                                <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Puzzle Rush\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                            Medium Mondays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Trouble Tuesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Wild Wednesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Tryhard Thursdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">easy puzzles</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                        </Typography>\r\n                <Typography className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                </Typography>\r\n                <DailyChallengeScores highscores={window.dchighscores}/>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst stylecol = () => {\r\n    return({\r\n            float: 'left',\r\n            width: '50%',\r\n            margin: 'auto',\r\n            padding: '0 50px',\r\n            marginTop: '6px',\r\n    });\r\n}\r\n\r\nconst spacing = () => {\r\n    return({\r\n            marginBottom: '10px',\r\n    });\r\n}\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    };\r\n\r\n    loginFacebook = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/facebook\";\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeLoginModal}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>Login to RobotsEvolved</DialogTitle>\r\n                <DialogContent dividers>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                           • Gain <FaCrown/>s when winning the Daily Challenge (stacks)\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                            • Be able to give a like to your favorite puzzles\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                            • Saving settings and your moves in the daily challenge\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography variant=\"body2\" display=\"inline\">\r\n                            • Profile Page to keep track of your submissions.\r\n                        </Typography>\r\n                    <div class=\"col\">\r\n                        <a href=\"#\" onClick={this.loginFacebook} id={\"buttonfb\"}>\r\n                          <i class=\"fa fa-facebook fa-fw\"></i> Login with Facebook\r\n                         </a>\r\n                        <a onClick={this.loginGoogle} href=\"#\" id={\"buttongoogle\"}><i class=\"fa fa-google fa-fw\">\r\n                          </i> Login with Google\r\n                        </a>\r\n                    </div>\r\n                    <Typography variant=\"caption\" display=\"block\">\r\n                            We will NEVER distribute/sell your facebook or google email address.\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeLoginModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <Button color=\"black\" onClick={this.handleClick}><b>{textToShow}</b></Button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport SignInButton from './SignInButton';\r\n\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '40px',\r\n        width: '40px',\r\n        marginTop: '5px',\r\n    };\r\n};\r\n\r\nconst divStyle = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        width: '200px',\r\n    };\r\n};\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    SignInButtonPressed = () => {\r\n        this.props.handleClick('Sign in');\r\n    }\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return <SignInButton onClick={this.SignInButtonPressed}/>\r\n        }\r\n        else {\r\n            return (\r\n                <div style={divStyle()}>\r\n                    <div>{window.userInfo.username}</div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic v2',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty) => {\r\n        console.log(difficulty)\r\n        axios.post('/puzzlerush', {difficulty: difficulty, action: 'start',type: this.state.value})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            isLoading: false,\r\n                        });\r\n                        this.props.handleClickPuzzleRush(difficulty,games,p_id);\r\n                });\r\n    };\r\n\r\n    handleClickEasyPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMediumPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                                {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                                                        ) : (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                         <Grid item xs={6}>\r\n                                         <ButtonGroup\r\n                                            orientation=\"vertical\"\r\n                                            color=\"primary\"\r\n                                            aria-label=\"vertical outlined primary button group\"\r\n                                          >\r\n                                            <Button onClick={this.handleClickEasyPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Easy\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickMediumPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Medium\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Hard\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickExHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Exteremely Hard\r\n                                            </Button>\r\n                                          </ButtonGroup>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                              <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                              <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                                <FormControlLabel value=\"classic v2\" control={<Radio />} label=\"Classic V2\" />\r\n                                                <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                                <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                              </RadioGroup>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic v2',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickRandomGameModal = (difficulty,type) => {\r\n        axios.get('/randomgame?difficulty=' + difficulty + '&type=' + type)\r\n            .then( res => {\r\n                var game = JSON.parse(res.data.game);\r\n                this.setState({\r\n                    isLoading: false,\r\n                });\r\n                this.props.handleClickRandomGame(game,difficulty);\r\n            })\r\n    }\r\n\r\n    handleClickEasy = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMedium = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHard = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHard = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickGodMode = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('GodTeir',this.state.value)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                            {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                            ) : (\r\n                            <Grid\r\n                                container xs={12}\r\n                                spacing={4}\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n                                wrap=\"nowrap\"\r\n                            >\r\n                                <Grid item xs={6}>\r\n                                    <ButtonGroup\r\n                                        orientation=\"vertical\"\r\n                                        color=\"primary\"\r\n                                        aria-label=\"vertical outlined primary button group\"\r\n                                      >\r\n                                        <Button onClick={this.handleClickEasy} variant=\"contained\" color=\"primary\">\r\n                                            Easy\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickMedium} variant=\"contained\" color=\"primary\">\r\n                                            Medium\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickHard} variant=\"contained\" color=\"primary\">\r\n                                            Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickExHard} variant=\"contained\" color=\"primary\">\r\n                                            Extremely Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickGodMode} variant=\"contained\" color=\"primary\">\r\n                                            God Tier\r\n                                        </Button>\r\n                                     </ButtonGroup>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl component=\"fieldset\">\r\n                                      <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                      <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                        <FormControlLabel value=\"classic v2\" control={<Radio />} label=\"Classic V2\" />\r\n                                        <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                        <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                      </RadioGroup>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageCreatedGamesDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.game.name,props.game.puzzledata,[],props.game.uri, props.game.authorname, props.game.votes, props.game.hasVoted);\r\n    }\r\n\r\n    return (<div>\r\n            <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography> Highscore Holder: </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.game.username} - {props.game.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageSolutionDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.solution.name,props.solution.puzzledata,[],props.solution.uri);\r\n    }\r\n    return (<div>\r\n              <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography color={'secondary'} variant={'body2'}> {props.solution.WinnerCreated} </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.solution.WinnerUsername} - {props.solution.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Table,TableContainer,TableHead,TableRow,TableCell,TableBody} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useStyles from '../Material-UI/themes';\r\nimport ProfilePageCreatedGamesDetails from '../components/ProfilePageComponents/ProfilePageCreatedGamesDetails';\r\nimport ProfilePageSolutionDetails from '../components/ProfilePageComponents/ProfilePageSolutionDetails';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\n\r\nexport default function ProfilePage(props) {\r\n    const classes = useStyles();\r\n    const submitAnswer = () => {\r\n        axios.post('/userUpdate',{newuser: document.getElementById(\"ProfileName\").value})\r\n            .then( res => {\r\n                if (res.data == 'OK') {\r\n                    window.location.href = '/';\r\n                }\r\n                else {\r\n                    setError(res.data);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const createData = (name,col1,col2) => {\r\n        return {name,col1,col2}\r\n    }\r\n\r\n    const columns = [\r\n          { id: 'difficulty', label: 'Difficulty', maxWidth: 75 },\r\n          { id: 'classic', label: 'Classic', maxWidth: 75 },\r\n          { id: 'random', label: 'Random', maxWidth: 75 },\r\n        ];\r\n\r\n    const rows = [\r\n        createData('Easy', props.puzzlerushview.maxeasyc,props.puzzlerushview.maxeasyp),\r\n        createData('Medium', props.puzzlerushview.maxmediumc,props.puzzlerushview.maxmediump),\r\n        createData('Hard', props.puzzlerushview.maxhardc,props.puzzlerushview.maxhardp),\r\n        createData('Extremely Hard', props.puzzlerushview.maxexhardc,props.puzzlerushview.maxexhardp)\r\n    ]\r\n\r\n    const rowseff = [\r\n        createData('Easy', props.puzzlerushview.maxeffec,props.puzzlerushview.maxeffep),\r\n        createData('Medium', props.puzzlerushview.maxeffmc,props.puzzlerushview.maxeffmp),\r\n        createData('Hard', props.puzzlerushview.maxeffhc,props.puzzlerushview.maxeffhp),\r\n        createData('Extremely Hard', props.puzzlerushview.maxeffexc,props.puzzlerushview.maxeffexp)\r\n    ]\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [expandedGame, setExpandedGame] = React.useState(false);\r\n    const [expandedHighscores, setExpandedHighscores] = React.useState(false);\r\n    const handleChangeGame = (panel) => (event, isExpandedGame) => {\r\n        setExpandedGame(isExpandedGame ? panel : false);\r\n    };\r\n    const handleChangeHighscores = (panel) => (event, isExpandedHighScores) => {\r\n        setExpandedHighscores(isExpandedHighScores ? panel : false);\r\n    };\r\n    console.log(props.gamesview);\r\n    console.log(props.solutionsview);\r\n    return (\r\n            <div style={gamepanel()}>\r\n                <Grid container spacing={4}>\r\n                    <Grid item xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <TextField className={classes.centeredProfile} id={\"ProfileName\"} label={\"Username\"} defaultValue={window.userInfo.username}/>\r\n                        <Button className={classes.centeredProfile} variant=\"contained\" color=\"secondary\" onClick={submitAnswer}>Change Username</Button>\r\n                        <Typography color={\"secondary\"}>{error}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Created</Typography>\r\n                        {\r\n                            props.gamesview.map((game,index) =>\r\n                                    <ExpansionPanel expanded={expandedGame === 'panelgame' + index} onChange={handleChangeGame('panelgame' + index)}>\r\n                                        <ExpansionPanelSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls={\"panel\" + index + \"-content\"}\r\n                                          id={\"panel\" + index + \"-header\"}\r\n                                        >\r\n                                          <Typography className={classes.heading}>{game.name}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Plays: {game.plays}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Likes: {game.votes}</Typography>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                          <ProfilePageCreatedGamesDetails\r\n                                            game={game}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                          />\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Solved</Typography>\r\n                        {\r\n                            props.solutionsview.map((solution,index) =>\r\n                                <ExpansionPanel expanded={expandedHighscores === 'panelhigh' + index} onChange={handleChangeHighscores('panelhigh' + index)}>\r\n                                    <ExpansionPanelSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls={\"panel\" + index + \"-content\"}\r\n                                      id={\"panel\" + index + \"-header\"}\r\n                                    >\r\n                                      <Typography className={classes.heading}>{solution.name}</Typography>\r\n                                      <Typography className={classes.secondaryHeading}>Best: {solution.numMoves}</Typography>\r\n                                      {solution.WinnerUserId == window.userInfo.userID ? <FaCrown style={{marginLeft: '30px'}}/> : null}\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <ProfilePageSolutionDetails\r\n                                            solution={solution}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                        />\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Puzzle Rush Records</Typography>\r\n                        <Typography variant=\"body1\">Most Puzzles Solved</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ maxWidth: column.maxWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rows.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                        <Typography style={{marginTop: '40px'}} variant=\"body1\">Highest Efficiency Scores</Typography>\r\n                        <Typography variant=\"caption\">Calculated by (total puzzles completed) * 7 - (total redundany moves from best score)</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ maxWidth: column.maxWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rowseff.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nexport default function RandomGamePage(props) {\r\n    return (\r\n        <Game\r\n              handleLineDirections={props.handleLineDirections}\r\n              LineDirections={props.LineDirections}\r\n              randomGame={'Yes'}\r\n              game={props.game}\r\n              difficulty={props.difficulty}\r\n         />\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PuzzleRushPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  puzzleRush={'Yes'}\r\n                  p_id={this.props.p_id}\r\n                  games={this.props.games}\r\n                  difficulty={this.props.difficulty}\r\n             />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PuzzleRushPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass LessonsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                learnMode={'Yes'}\r\n                games={window.learngameslist}/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default LessonsPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game handleClickDailyChallenge={this.props.handleClickDailyChallenge} handleLineDirections={this.props.handleLineDirections} LineDirections={this.props.LineDirections} dailyChallengeMode={'Yes'} playerStateList={this.props.playerStateList} savedMoves={this.props.savedMoves} games={this.props.dailyChallengeGameslist} dc_id={this.props.dc_id} highscores={this.props.dchighscores}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengePage;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Card,CardActions,Button,Avatar} from \"@material-ui/core\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function AboutUs(props) {\r\n    const facebookclick = () => {\r\n        window.open('https://www.facebook.com/RobotsEvolved-105278561284154')\r\n    }\r\n    const discordclick = () => {\r\n        window.open('https://discord.gg/VKMRQuE')\r\n    }\r\n    return (<div style={gamepanel()}>\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item spacing={4} xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card style={{display: 'inline-block', width: '100%'}}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    About\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    RobotsEvolved.com is based on the board game Ricochet Robots by Alex Randolph.\r\n                                    We have several game modes and variants that are inspired by the several Chess variants on the internet.\r\n                                    If you find any bugs or have any feature requests for RobotsEvolved please let me know by emailing robotsevolved@gmail.com or contacting me on FB from our FB page, I would love to hear some of the ideas people have. Ill get to developing the feature/fixing annoying bugs ASAP\r\n                                    If you use Google Login or Facebook Login I will NEVER email you or sell your information, it is strictly for user-identification.\r\n                                    Tell your friends about the site and get people on here!\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button onClick={facebookclick}>\r\n                                    <Avatar alt=\"Facebook\" src=\"https://facebookbrand.com/wp-content/uploads/2019/04/f_logo_RGB-Hex-Blue_512.png?w=512&h=512\" />\r\n                                </Button>\r\n                                <Button onClick={discordclick}>\r\n                                    <Avatar alt=\"Discord\" src=\"https://cdn.discordapp.com/attachments/675768013731135518/740251382862577694/icons8-discord-new-logo-48.png\" />\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Daily Challenge Rotation\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    The Daily Challenge rotates its difficulty every day as specified below with 2 x Random and 2 x Classic Type puzzles.\r\n                                    <br/>\r\n                                    Medium Mondays - 4 x Medium\r\n                                    <br/>\r\n                                    Trouble Tuesdays - 4 x Hard\r\n                                    <br/>\r\n                                    Wild Wednesdays - 4 x Medium\r\n                                    <br/>\r\n                                    Tryhard Thursdays -4 x Hard\r\n                                    <br/>\r\n                                    Flyin Fridays - 4 x Medium\r\n                                    <br/>\r\n                                    Sleepy Saturdays - 4 x Easy\r\n                                    <br/>\r\n                                    Standard Sundays - 4 x Hard\r\n                                </Typography>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Classic Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Classic puzzles are based on the original Game. These Puzzles only have walls that are L shaped and a goal is in the center of one of the L puzzles.\r\n                                </Typography>\r\n                                <Typography variant={\"h4\"} display={\"inline\"}>\r\n                                    Random Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Random Puzzles are created by having a 10% chance for a wall to spawn in location possible, Goals and Robot placements are completely random also.\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Easy\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 5-8 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Medium\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 9-13 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 14-17 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"} >\r\n                                    Extremely Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 18-22 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    God Tier\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 23+ Moves, Note: there are a low number of these puzzles due to the CPU required to create them\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Paper class=\"card3\">\r\n                          <img src={\"/static/images/284457_10151211078621477_839164197_n.jpg\"} alt=\"Jane\"/>\r\n                          <div class=\"container3\">\r\n                            <h2>Kyle Kwasniewski</h2>\r\n                            <p class=\"title3\">Creator &amp; FullStack Dev.</p>\r\n                            <p>I work in Software Development and Dev-Ops in New York and consider myself a Ricochet Robots enthusiast so I decided to make this application as a way to better hone my skill in web frameworks as well as pass the time during the quarantine. I play Frisbee and Ski alot as well as play my fair share of Steam games.</p>\r\n                            <p>Thanks for playing!</p>\r\n                            <p>robotsevolved@gmail.com</p>\r\n                          </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/284f909d-0d5c-4ae1-b100-76c9d46ae7d4.png\"} alt=\"Mike\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Jonah Tollefson</h2>\r\n                                <p className=\"title3\">Front-End Dev.</p>\r\n                                <p>Went to college with these other goobers in the US and now I work professionally as a\r\n                                    software engineer in Germany. For RobotsEvolved, I mainly worked on the frontend\r\n                                    using React. Cats and Ultimate Frisbee are life.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/derekschultz.jpg\"} alt=\"John\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Derek Schultz</h2>\r\n                                <p className=\"title3\">Back-End Dev.</p>\r\n                                <p>Full time Software Engineer. Graduated from University of Wisconsin Platteville\r\n                                    with a BS in Computer Science and Minor in Business Administration. Worked on\r\n                                    most of the database aspect of RobotsEvolved and some back end functionality. I\r\n                                    enjoy video games, beer, and playing darts.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n\r\n\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nexport default function ShowDailyPuzzleHistory(props) {\r\n    const handleDailyPuzzleHistoryClick = event => {\r\n        console.log(props.history)\r\n        props.handleDailyPuzzleHistoryClick(props.history)\r\n    }\r\n    return (\r\n            <Button style={window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? {marginLeft: '5px'} : {marginLeft: '60px'}} variant=\"contained\" size=\"small\" color=\"primary\" onClick={handleDailyPuzzleHistoryClick}>\r\n                 show answers\r\n            </Button>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport ShowDailyPuzzleHistory from '../components/ShowDailyPuzzleHistory';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ProfilePageCreatedGamesDetails from \"../components/ProfilePageComponents/ProfilePageCreatedGamesDetails\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function DailyChallengeHistory(props) {\r\n    const [expandedPanel, setExpandedPanel] = React.useState(false);\r\n    const handleChangePanel = (panel) => (event, isExpanded) => {\r\n        setExpandedPanel(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles();\r\n    return (<div style={gamepanel()}>\r\n                <Typography className={classes.titlehome} variant=\"h3\">Daily Challenge History</Typography>\r\n                {\r\n                    props.dailychallengehistory.map((history, index) =>\r\n                        <ExpansionPanel expanded={expandedPanel === 'panelgame' + index} onChange={handleChangePanel('panelgame' + index)}>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={\"panel\" + index + \"-content\"}\r\n                                id={\"panel\" + index + \"-header\"}\r\n                            >\r\n                                <Typography className={classes.heading}>{history.created}</Typography>\r\n                                <Typography style={{width: '15%'}} className={classes.secondaryHeading}>Winner: {history.nameSubmitted}</Typography>\r\n                                <ShowDailyPuzzleHistory history={history} handleDailyPuzzleHistoryClick={props.handleDailyPuzzleHistoryClick}/>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        <FaCrown/> {history.nameSubmitted} - {history.scoreSubmitted} <FaCrown/>\r\n                                    </Typography>\r\n                                    <Typography className={classes.secondaryHeading}>Lowest possible solution: {history.bestScore}</Typography>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                    )\r\n                }\r\n           </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengeHistoryAnswersPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        console.log(this.props.history);\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                dailyChallengeModeAnswers={'Yes'}\r\n                nameSubmitted={this.props.history.nameSubmitted}\r\n                bestScore={this.props.history.bestScore}\r\n                created={this.props.history.created}\r\n                games={this.props.history.games}\r\n                playerStateList={this.props.history.playerStateList}\r\n                scoreSubmitted={this.props.history.scoreSubmitted}\r\n                solutionDataSubmitted={this.props.history.solutionDataSubmitted}\r\n                submitted={this.props.history.submitted}\r\n                user_id={this.props.user_id}\r\n                />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengeHistoryAnswersPage;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n  },\r\n}));\r\n\r\nexport default function LoadingPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress size={120} color=\"secondary\" />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport clsx from 'clsx';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport Home from './Pages/Home';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\nimport axios from 'axios';\r\nimport Game from './containers/Game';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport BrushIcon from '@material-ui/icons/Brush';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"./constants/constants\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport PuzzleRushDifficultyModal from \"./containers/Modals/PuzzleRushDifficultyModal\";\r\nimport RandomGameDifficultyModal from \"./containers/Modals/RandomGameDifficultyModal\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport RandomGamePage from \"./Pages/RandomGamePage\";\r\nimport PuzzleRushPage from \"./Pages/PuzzleRushPage\";\r\nimport LessonsPage from \"./Pages/LessonsPage\";\r\nimport DailyChallengePage from \"./Pages/DailyChallenge\";\r\nimport AboutUs from \"./Pages/AboutUs\";\r\nimport DailyChallengeHistory from \"./Pages/DailyChallengeHistory\";\r\nimport DailyChallengeHistoryAnswersPage from \"./Pages/DailyChallengeHistoryAnswersPage\";\r\nimport { FaMedal } from 'react-icons/fa';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport Popover from \"@material-ui/core/Popover\";\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    drawerHeaderRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerHeaderLeft: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    toolbar1: {\r\n        backgroundColor: '#14A76C',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    dividerFullWidth: {\r\n        margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    darkmode: {\r\n          body: '#363537',\r\n          text: '#FAFAFA',\r\n          toggleBorder: '#6B8096',\r\n          gradient: 'linear-gradient(#091236, #1E215D)',\r\n    },\r\n});\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (window.uri === '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n                dailychallengehistoryloaded: false,\r\n                profileDataloaded: false,\r\n            };\r\n        }\r\n        else {\r\n            if (window.token.g_id == undefined) {\r\n                const linedir = window.userInfo == undefined ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={linedir} name={window.token.name} gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri} authorname={window.token.authorname} votes={window.token.votes} hasVoted={window.token.hasVoted} signInModalOpen={this.SignInButtonPressed}/>, //when uri is entered to play specific game\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                };\r\n            }\r\n            else {\r\n                const linedir = window.userInfo == undefined ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={linedir} randomGame={'Yes'} game={window.token} difficulty={window.token.g_difficulty}/>,\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                }\r\n            }\r\n        }\r\n        this.state.openChat = false;\r\n        this.state.chatAnchor = null;\r\n        this.state.open = window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? false : true;\r\n        this.state.mobileAnchorEl = null;\r\n        this.state.mobileMenuOpen = false;\r\n        this.state.showLoginModal = false;\r\n        this.state.showPuzzleRushModal = false;\r\n        this.state.loadingPage = false;\r\n        this.state.filterTerm = 'None'\r\n        this.state.searchTerm = ''\r\n        this.state.findWindowHeight = 0;\r\n        this.state.numFindGames = window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? 8 : 20;\r\n         if (window.loggedin === 'Yes') {\r\n            this.state.LineDirections = window.userInfo.LineDirFlag === 'Y';\r\n         }\r\n         else {\r\n            this.state.LineDirections = true;\r\n         }\r\n    }\r\n\r\n    handleChatOpen = (event) => {\r\n        this.setState({\r\n            openChat: true,\r\n            chatAnchor: event.currentTarget\r\n        })\r\n    };\r\n\r\n    handleChatClose = () => {\r\n      this.setState({\r\n          openChat: false\r\n      })\r\n    };\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState( {\r\n            open: false\r\n        })\r\n    };\r\n\r\n    handleLineDirections = (boolean) => {\r\n        if (window.loggedin === 'Yes') {\r\n            axios.post('/settingsChange', {LineDirections: boolean ? 'Y' : 'N'})\r\n                .then( res => {\r\n                    console.log('changed');\r\n                });\r\n        }\r\n        this.setState({\r\n            LineDirections: boolean\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallenge = () => {\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeData')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    const dc_movesList = res.data.dc_movesList == null ? null : JSON.parse(res.data.dc_movesList)\r\n                    const dc_playerList = res.data.dc_playerList == null ? null : JSON.parse(res.data.dc_playerList)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                                        PageSelected: <DailyChallengePage\r\n                                                            handleClickDailyChallenge={this.handleClickDailyChallenge}\r\n                                                            dailyChallengeGameslist={JSON.parse(res.data.dailyChallengeGameslist)}\r\n                                                            dc_id={res.data.dc_id}\r\n                                                            dchighscores={JSON.parse(res.data.dchighscores)}\r\n                                                            handleLineDirections={this.handleLineDirections}\r\n                                                            LineDirections={this.state.LineDirections}\r\n                                                            savedMoves={dc_movesList}\r\n                                                            playerStateList={dc_playerList}\r\n                                        />,\r\n                                        open: isOpen,\r\n                                        loadingPage: false,\r\n                                    });\r\n                        }\r\n                    });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState( {\r\n            open: true\r\n        });\r\n    };\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type === 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    };\r\n\r\n    handleClickRandomGameModal = (game,difficulty) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showRandomGameModal: false,\r\n            PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} randomGame={'Yes'} game={game} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickRandomGame = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: true,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickPuzzleRush = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: true,\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallengeHistory = (event) => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeHistory')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    var historydata = JSON.parse(res.data)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                            PageSelected: <DailyChallengeHistory handleDailyPuzzleHistoryClick={this.handleDailyPuzzleHistoryClick} dailychallengehistory={historydata}/>,\r\n                            challengeHistoryData: historydata,\r\n                            dailychallengehistoryloaded: true,\r\n                            open: isOpen,\r\n                            loadingPage: false,\r\n                        });\r\n                    }\r\n            });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleDailyPuzzleHistoryClick = history => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <DailyChallengeHistoryAnswersPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} history={history}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty,games,p_id) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showPuzzleRushModal: false,\r\n            PageSelected: <PuzzleRushPage handleClickPlayAgain={this.handleClickPuzzleRush} handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: false\r\n        });\r\n    };\r\n\r\n    closeRandomGameLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: false\r\n        });\r\n    };\r\n\r\n    handleGameClick = (name, gamedata, highscores, uri, authorname, votes, hasVoted) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} name={name} highscores={highscores} gamedata={gamedata} uri={uri} authorname={authorname} votes={votes} hasVoted={hasVoted} signInModalOpen={this.SignInButtonPressed}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <CreateGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} state={\"new\"}/>,\r\n             open: isOpen,\r\n             loadingPage: false,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickProfile = event => {\r\n        if (window.loggedin === 'Yes') {\r\n            this.state.loadingPage = true;\r\n                    axios.get('/getProfileData')\r\n                        .then( res => {\r\n                            var isOpen = this.state.open;\r\n                            if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                                isOpen = false\r\n                            }\r\n                            var profileData = res.data;\r\n                            var gamesview = JSON.parse(profileData.gamesview)\r\n                            var solutionsview = JSON.parse(profileData.solutionsview)\r\n                            var puzzlerushview = JSON.parse(profileData.puzzlerushview)\r\n                            if (this.state.loadingPage) {\r\n                                this.setState({\r\n                                    PageSelected: <ProfilePage handleClickPlayGame={this.handleGameClick} gamesview={gamesview} solutionsview={solutionsview} puzzlerushview={puzzlerushview}/>,\r\n                                    gamesview: gamesview,\r\n                                    solutionsview: solutionsview,\r\n                                    puzzlerushview: puzzlerushview,\r\n                                    profileDataloaded: true,\r\n                                    open: isOpen,\r\n                                    loadingPage: false,\r\n                                });\r\n                            }\r\n                        });\r\n                    this.setState({\r\n                        PageSelected: <LoadingPage/>,\r\n                    });\r\n                }\r\n        else {\r\n            this.SignInButtonPressed('Sign in');\r\n        }\r\n    };\r\n\r\n    setNumFindGames = (num,filterTerm,searchTerm) => {\r\n        this.setState({\r\n            numFindGames: num,\r\n            searchTerm: searchTerm,\r\n            filterTerm: filterTerm,\r\n        })\r\n    }\r\n\r\n    setFindWindow = height => {\r\n        this.setState({\r\n            findWindowHeight: height\r\n        })\r\n    }\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.post('/search', {search: this.state.searchTerm, filter: this.state.filterTerm, offset: 0, numGames: this.state.numFindGames})\r\n            .then( res => {\r\n                const gameslist = JSON.parse(res.data.gameslist);\r\n                const highscoreslist = JSON.parse(res.data.highscoreslist);\r\n                var isOpen = this.state.open;\r\n                if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                    isOpen = false\r\n                }\r\n                if (this.state.loadingPage) {\r\n                    this.setState({\r\n                        PageSelected: <FindGame findWindowHeight={this.state.findWindowHeight} setFindWindow={this.setFindWindow} setNumFindGames={this.setNumFindGames} gameslist={gameslist} highscoreslist={highscoreslist} handleGameClick={this.handleGameClick}/>,\r\n                        open: isOpen,\r\n                        loadingPage: false,\r\n                    });\r\n                }\r\n        });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleHomePageClick = () => {\r\n        this.setState({\r\n            PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickAboutUs = event => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <AboutUs/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickLearnGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <LessonsPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileAnchorEl: null,\r\n            mobileMenuOpen: false\r\n        });\r\n    };\r\n\r\n    showPage = () => {\r\n        return(\r\n            this.state.PageSelected\r\n        )\r\n    };\r\n\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({\r\n            mobileAnchorEl: event.currentTarget,\r\n            mobileMenuOpen: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const theme = createMuiTheme({\r\n            palette: {\r\n                primary: teal,\r\n                secondary: {\r\n                    main: '#e65100',\r\n                },\r\n            }\r\n        });\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <AppBar\r\n                        position=\"fixed\"\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: this.state.open,\r\n                        })}\r\n                     >\r\n                        <Toolbar className={classes.toolbar1}>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={this.handleDrawerOpen}\r\n                                edge=\"start\"\r\n                                className={clsx(classes.menuButton, this.state.open && classes.hide)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <img onClick={this.handleHomePageClick} width={50} height={50} src=\"/static/images/logo150.png\"/>\r\n                            <Typography variant=\"h6\" className={classes.title} noWrap>\r\n                                <a href=\"/\" style={{color: 'white'}}>RobotsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </Typography>\r\n                            <div className={classes.grow} />\r\n                            <div className={classes.sectionDesktop}>\r\n                                <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.sectionMobile}>\r\n                                <IconButton\r\n                                    aria-label=\"show more\"\r\n                                    aria-controls={\"primary-search-account-menu-mobile\"}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.handleMobileMenuOpen}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <MoreIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Menu\r\n                        anchorEl={this.state.mobileAnchorEl}\r\n                        anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        id={\"primary-search-account-menu-mobile\"}\r\n                        keepMounted\r\n                        transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        open={this.state.mobileMenuOpen}\r\n                        onClose={this.handleMobileMenuClose}\r\n                    >\r\n                        <MenuItem>\r\n                            <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                    <Drawer\r\n                        id=\"MainDrawer\"\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.state.open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div className={classes.drawerHeader}>\r\n                            <div className={classes.drawerHeaderLeft}>\r\n                                <SignInButton onClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.drawerHeaderRight}>\r\n                                <IconButton onClick={this.handleDrawerClose}>\r\n                                    {useTheme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Play\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Find a Game'} onClick={this.handleClickFindGame}>\r\n                                <ListItemIcon><SearchIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Find a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge'} onClick={this.handleClickDailyChallenge}>\r\n                                <ListItemIcon><TodayIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Create a Game'} onClick={this.handleClickCreateGame}>\r\n                                <ListItemIcon><BrushIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Create a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Random Game'} onClick={this.handleClickRandomGame}>\r\n                                <ListItemIcon><CasinoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Random Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Puzzle Rush'} onClick={this.handleClickPuzzleRush}>\r\n                                <ListItemIcon><TimerIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Puzzle Rush'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Learn\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Lessons'} onClick={this.handleClickLearnGame}>\r\n                                <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Lessons'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Community\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Profile'} onClick={this.handleClickProfile}>\r\n                                <ListItemIcon><AccountBoxIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Profile'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge History'} onClick={this.handleClickDailyChallengeHistory}>\r\n                                <ListItemIcon><FaMedal /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge History'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Tools\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'About'} onClick={this.handleClickAboutUs}>\r\n                                <ListItemIcon><InfoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'About'} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n                    <main className={clsx(classes.content, {\r\n                        [classes.contentShift]: this.state.open,\r\n                    })}>\r\n                        <div className={classes.drawerHeader} />\r\n                        {this.showPage()}\r\n                    </main>\r\n                    <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n                    <PuzzleRushDifficultyModal\r\n                        closeModal={this.closePuzzleRushLoginModal}\r\n                        show={this.state.showPuzzleRushModal}\r\n                        handleClickPuzzleRush={this.handleClickPuzzleRushModal}\r\n                    />\r\n                    <RandomGameDifficultyModal\r\n                        closeModal={this.closeRandomGameLoginModal}\r\n                        show={this.state.showRandomGameModal}\r\n                        handleClickRandomGame={this.handleClickRandomGameModal}\r\n                    />\r\n                </div>\r\n                <div style={{position: \"fixed\", bottom: \"10px\", right: \"10px\"}}>\r\n                    <IconButton\r\n                        style = {{backgroundColor: \"#14a76c\"}}\r\n                        onClick={this.handleChatOpen}\r\n                    >\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n                    <Popover\r\n                        open={this.state.openChat}\r\n                        anchorEl={this.state.chatAnchor}\r\n                        onClose={this.handleChatClose}\r\n                        anchorOrigin={{\r\n                            vertical: \"top\",\r\n                            horizontal: \"left\"\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"right\"\r\n                        }}\r\n                    >\r\n                        <iframe\r\n                            src=\"https://titanembeds.com/embed/740127738345554021?css=140&username=guest&defaultchannel=740270339900178583\"\r\n                            height= {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? (parseInt(window.innerHeight/2)) + '': \"600\"}\r\n                            width= {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? (window.innerWidth - 40) + '': \"400\"}\r\n                            frameBorder=\"0\"\r\n                        />\r\n                    </Popover>\r\n                </div>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}