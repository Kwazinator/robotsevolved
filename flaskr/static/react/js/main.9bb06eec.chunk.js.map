{"version":3,"sources":["constants/constants.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","constants/extend.js","components/YouWinView.jsx","components/AddPuzzleView.jsx","components/HighScores.jsx","containers/DisplayView.js","components/boardgenerator.js","containers/Game.js","serviceWorker.js","index.js"],"names":["DIRECTION_MAP_IMAGES","yellow","UP","DOWN","LEFT","RIGHT","red","green","blue","MovesView","props","this","moveHistory","map","move","src","playerState","robot","colorSignifier","dir","React","Component","styleoutside","dimension","position","dim","width","height","backgroundColor","top","left","transition","styleinside","styleinside2","style","border","margin","overflow","float","marginRight","children","color","borderRadius","Robot","handleKeyDown","e","newDirection","keyCode","handlePlayerMovement","handleClick","onClick","index","window","onkeydown","orientation","obj","key","hasOwnProperty","YouWinView","numMoves","marginTop","marginBottom","id","type","placeholder","onSubmit","submitAnswer","AddPuzzleView","submitPuzzle","highscores","clear","highscore","comment","highscorestyle","DisplayView","location","host","uri","checkwin","resetPuzzle","HighScores","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","addEventListener","indexOf","preventDefault","Game","robotSelect","i","setState","robotSelected","event","console","log","namesubmit","document","getElementById","value","state","playerStart","slice","createMode","axios","post","extend","puzzledata","name","then","res","data","length","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","wallHorizontal","wall","checkRobot","MAX_WIDTH","wallVerticle","MAX_HEIGHT","robotPosition","goal","push","token","board","randomPercent","boardState","randomPositions","randompos1","randompos2","randompos3","randompos4","j","BoardGenerator","JSON","parse","Board","square","Square","Goal","player","wallH","Wall","wallV","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.9bb06eec.chunk.js","sourcesContent":["export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#009900';\r\nexport const ROBOT_BLUE = '#1a1aff';\r\nexport const ROBOT_YELLOW = '#fff70a';\r\nexport const ROBOT_RED = '#ff1a1a';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n        float: 'left'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>Moves:\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top + 'px',\r\n        left: position.left + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nexport default (props) =>\r\n    <div style={styleoutside(props)}>\r\n        <div style={styleinside(props)}>\r\n            <div style={styleinside2(props)}/>\r\n        </div>\r\n    </div>\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '25px auto',\r\n        overflow: 'hidden',\r\n        float: 'left',\r\n        marginRight: '30px',\r\n    };\r\n\r\n\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst styleoutside = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top + 'px',\r\n        left: position.left + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position,color}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position,color}) => {\r\n    const dim = (dimension-4)-8 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: 4 + 'px',\r\n        left: 4 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            /*case 65:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n\r\n\r\n        }\r\n        this.props.handlePlayerMovement(newDirection);\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onkeydown = this.handleKeyDown;\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position}) => {\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = '8px';\r\n    }\r\n    else {\r\n        var width = '8px';\r\n        var height = dimension + 'px'\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: position.top + 'px',\r\n        left: position.left + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nexport default (props) =>\r\n    <div style={style(props)}/>\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE} from '../constants/constants';\r\n\r\n\r\nconst style = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top + 'px',\r\n        left: position.left + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nexport default (props) =>\r\n    <img src={GOAL_IMAGE} style={style(props)}/>\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                You Win! with {this.props.numMoves} Moves!\r\n                </div>\r\n                <input style={buttonpanel()} id={\"namesubmitHS\"} type={\"text\"} placeholder={\"Username\"}>\r\n                </input>\r\n                <form onSubmit={this.props.submitAnswer} style={buttonpanel()}>\r\n                    <button type=\"submit\">Submit Highscore </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinView;","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitPuzzle} style={buttonpanel()}>\r\n                    <button type=\"submit\">Create Puzzle</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"namesubmit\"} type={\"text\"} placeholder={\"Name Of Puzzle?\"}>\r\n\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleView;\r\n","import React from 'react';\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginBottom: '10px',\r\n        clear: 'left'\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n        <div style={styleelements()}>{'By: ' + highscore.comment}\r\n            <div>\r\n                {'Moves: ' + highscore.numMoves}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <div style={styleouter()}>{'All Highscores:'}\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </div>\r\n)","import React from 'react';\r\nimport HighScores from '../components/HighScores';\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={'DisplayView'} style={controlpanel()}>\r\n                <div>\r\n                    {'http://' + window.location.host + '/play/' + this.props.uri}\r\n                </div>\r\n                {\r\n                    this.props.playerState.map(position =>\r\n                        this.props.checkwin(position)\r\n                    )\r\n                }\r\n                <form onSubmit={this.props.resetPuzzle} style={buttonpanel()}>\r\n                    <button type=\"submit\">Reset</button>\r\n                </form>\r\n                <HighScores highscores={this.props.highscores}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DisplayView;\r\n","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height/40));\r\n        X = Math.floor(Math.random() * Math.floor(width/40));\r\n        dontPlacePositions.map(position => {\r\n            if (Y*40 == position.top && X*40 == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y*40,left: X*40};\r\n};\r\n\r\nexport default (width,height,randomPercent) => {\r\n    var boardState = [];\r\n    var wallVerticle = [];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    var goal = {top:Math.floor(Math.random() * Math.floor(height/40))*40, left:Math.floor(Math.random() * Math.floor(width/40))*40};\r\n    var randomPositions = [goal];\r\n    for (var i=0;i<5;i++) {\r\n        randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n    }\r\n    var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n    var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n    var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n    var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=40) {\r\n        for (var j=0;j<height;j+=40) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n\r\n    for (var i=0;i<width;i+=40) {\r\n        for (var j=0;j<height;j+=40) {\r\n            if (Math.random() > randomPercent) {\r\n                wallVerticle.push({top: j,left: i-4});\r\n            }\r\n        }\r\n    }\r\n\r\n    for (var i=0;i<width;i+=40) {\r\n        for (var j=0;j<height;j+=40) {\r\n            if (Math.random() > randomPercent) {\r\n                wallHorizontal.push({top: j-4,left: i});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport extend from '../constants/extend';\r\nimport YouWinView from '../components/YouWinView';\r\nimport AddPuzzleView from '../components/AddPuzzleView';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n    };\r\n}\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(window.token);\r\n        if (window.token.uri == '') {\r\n            var board = BoardGenerator(MAX_WIDTH,MAX_HEIGHT,.90);\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                highscores: [],\r\n            },board);\r\n        }\r\n        else {\r\n            console.log(window.uri)\r\n            this.state = extend(JSON.parse(window.token.puzzledata),{createMode: 'No', uri: window.uri, highscores: window.highscores})\r\n        }\r\n    }\r\n\r\n    robotSelect = (i) => {\r\n        //add something here to make the selected robit be highlighted.\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    }\r\n\r\n    submitPuzzle = event => {\r\n        console.log('here')\r\n        event.preventDefault();\r\n        console.log('here2')\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit}))\r\n            .then( res => {\r\n                console.log(res);\r\n                console.log(res.data);\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                });\r\n                //window.location.href = window.location.host + '/play/' + res.data.uri;\r\n            });\r\n    }\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        console.log(this.state.uri);\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length, name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                console.log(res);\r\n                console.log(res.data);\r\n            });\r\n    }\r\n\r\n    resetPuzzle = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n        });\r\n    }\r\n\r\n\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left == robotX && wall.top < robotY && wall.top > minimumWall) {\r\n                        minimumWall = wall.top + 4;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left == robotX && checkRobot.top < robotY && checkRobot.top > minimumWall - 4) {\r\n                        minimumWall = checkRobot.top + 40;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = MAX_WIDTH - 40;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top == robotY && wall.left > robotX && wall.left < minimumWall) {\r\n                        minimumWall = wall.left - 36;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top == robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 36) {\r\n                        minimumWall = checkRobot.left - 40;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top == robotY && wall.left < robotX && wall.left > minimumWall) {\r\n                        minimumWall = wall.left + 4;\r\n\r\n                    }\r\n\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top == robotY && checkRobot.left < robotX && checkRobot.left > minimumWall - 4) {\r\n                        minimumWall = checkRobot.left + 40;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = MAX_HEIGHT - 40;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left == robotX && wall.top > robotY && wall.top < minimumWall)\r\n                        minimumWall = wall.top - 36;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left == robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 36) {\r\n                        minimumWall = checkRobot.top - 40;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    }\r\n\r\n    checkwin = (robotPosition) => {\r\n        if (robotPosition.top == this.state.goal.top && robotPosition.left == this.state.goal.left) {\r\n\r\n            if (this.state.createMode == 'No') {\r\n                return  (<YouWinView numMoves={this.state.moveHistory.length} submitAnswer={this.submitAnswer}/>);\r\n            }\r\n            else {\r\n                return (<AddPuzzleView submitPuzzle={this.submitPuzzle}/>);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        var newPosition = this.handleCollision(dirObj,this.state.robotSelected,this.state.playerState[this.state.robotSelected].color);\r\n        var playerState = this.state.playerState;\r\n        var moveHistory = this.state.moveHistory;\r\n        newPosition = extend(newPosition,{colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n        if (!(newPosition.top == playerState[this.state.robotSelected].top && newPosition.left == playerState[this.state.robotSelected].left)) {\r\n            moveHistory.push({dir: dirObj.dir, robot: this.state.robotSelected, colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n        }\r\n        playerState[this.state.robotSelected] = newPosition;\r\n        this.setState({\r\n            playerState: playerState,\r\n            moveHistory: moveHistory,\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>\r\n            <Board width={MAX_WIDTH} height={MAX_HEIGHT}>\r\n                {\r\n                    this.state.boardState.map(square =>\r\n                        <Square\r\n                            dimension={40}\r\n                            position={{top:square.top,left: square.left}}\r\n                        />\r\n                    )\r\n                }\r\n                <Goal dimension={40} position={this.state.goal}/>\r\n                {\r\n                    this.state.playerState.map((player, index) =>\r\n                        <Robot\r\n                            dimension={40}\r\n                            position={{top:player.top,left:player.left}}\r\n                            color={player.color}\r\n                            index={index}\r\n                            onClick={this.robotSelect}\r\n                            handlePlayerMovement={this.handlePlayerMovement}\r\n                        />\r\n                    )\r\n\r\n\r\n                }\r\n                {\r\n                    this.state.wallHorizontal.map(wallH =>\r\n                        <Wall\r\n                            orientation={'horizontal'}\r\n                            dimension={40}\r\n                            position={{top:wallH.top,left:wallH.left}}\r\n                        />\r\n                    )\r\n                }\r\n                {\r\n                    this.state.wallVerticle.map(wallV =>\r\n                        <Wall\r\n                            orientation={'verticle'}\r\n                            dimension={40}\r\n                            position={{top:wallV.top,left:wallV.left}}\r\n                        />\r\n                    )\r\n\r\n                }\r\n            </Board>\r\n            <DisplayView\r\n                playerState={this.state.playerState}\r\n                uri={this.state.uri}\r\n                resetPuzzle={this.resetPuzzle}\r\n                highscores={this.state.highscores}\r\n                checkwin={this.checkwin}\r\n            />\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Game from './containers/Game';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<Game />, document.getElementById('postscontainer'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}