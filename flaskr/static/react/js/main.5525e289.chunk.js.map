{"version":3,"sources":["constants/constants.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/GameWonOverlay.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinView.jsx","components/AddPuzzleView.jsx","components/ResetButton.jsx","components/BoardResetPanel.js","containers/DisplayView.js","components/HighScores.jsx","containers/GameWonDisplayView.js","components/ToggleSettings.js","components/boardgenerator.js","containers/Game.js","Pages/CreateGame.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","Pages/FindGame.js","Pages/PlayGame.js","containers/Modals/LoginModal.js","components/LoggedInUser.js","components/SignInButton.js","App.js","serviceWorker.js","index.js"],"names":["UP","DIRECTION_MAP_IMAGES","yellow","DOWN","LEFT","RIGHT","red","green","blue","MovesView","props","style","width","float","this","moveHistory","map","move","src","playerState","robot","colorSignifier","dir","React","Component","styleoutside","dimension","position","dim","height","backgroundColor","top","left","transition","styleinside","styleinside2","Square","handleClick","handlePlayerMovementFromMouse","onClick","border","margin","overflow","marginRight","children","color","selectedColor","undefined","borderStyle","index","selected","borderColor","borderRadius","Robot","handleKeyDown","e","newDirection","keyCode","tabSelector","handlePlayerMovement","window","onkeydown","orientation","mainStyle","visible","display","normalStyle","justifyContent","alignItems","opacityStyle","opacity","endPosition","obj","key","hasOwnProperty","YouWinView","numMoves","marginTop","marginBottom","id","type","placeholder","onSubmit","submitAnswer","AddPuzzleView","submitPuzzle","resetPuzzle","BoardResetPanel","createBoardHandler","event","preventDefault","parseInt","document","getElementById","value","percent","createBoard","for","min","max","DisplayView","isCreateMode","createMode","location","host","uri","ResetButton","highscores","marginleft","highscore","comment","highscorestyle","GameWonDisplayView","checkwin","ToggleSettings","class","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","boardState","wallVerticle","wallHorizontal","goal","randomPositions","i","push","randompos1","extend","randompos2","randompos3","randompos4","j","length","gameWon","playerStart","slice","addEventListener","indexOf","Game","updateHighscores","axios","get","state","then","res","setState","JSON","parse","data","componentDidMount","loadedGame","IntervalId","setInterval","componentWillUnmount","clearInterval","robotSelect","robotSelected","namesubmit","post","puzzledata","name","history","toggleLineIndicators","ColoredLineDirections","console","log","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","robotPosition","posObj","gamedata","settingsWidth","settingsHeight","percentWall","settingsPercent","Board","square","Goal","ColoredLineDirection","ColoredLine","player","wallH","Wall","wallV","GameWonOverlay","HighScores","withRouter","CreateGame","GameListItemView","handleGameClick","game","marginLeft","paddingRight","paddingLeft","paddingTop","paddingBottom","SearchBarFindGame","submitSearch","FindGame","handleSearchSubmit","searchTerm","search","highscoreslist","gameslist","PlayGame","LoginModal","loginGoogle","href","show","closeLoginModal","LoggedInUser","loggedin","userInfo","profilePicture","username","SignInButton","textToShow","App","SignInButtonPressed","showLoginModal","PageSelected","handleClickCreateGame","newGame","handleClickFindGame","token","aria-label","role","data-icon","spellcheck","autocomplete","title","Boolean","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.5525e289.chunk.js","sourcesContent":["export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves:</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top + 'px',\r\n        left: position.left + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.handlePlayerMovementFromMouse(this.props.position);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '25px auto',\r\n        overflow: 'hidden',\r\n        float: 'left',\r\n        marginRight: '30px',\r\n    };\r\n\r\n\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top + 'px',\r\n        left: position.left + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = (dimension-4)-8 + 'px';\r\n    var selectedColor = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        selectedColor = SELECTED_ROBOT;\r\n        borderStyle = \"solid\";\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        borderStyle: borderStyle,\r\n        borderColor: selectedColor,\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: 4 + 'px',\r\n        left: 4 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.props.tabSelector();\r\n                return;\r\n                break;\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n\r\n\r\n        }\r\n        this.props.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onkeydown = this.handleKeyDown;\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position}) => {\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = '8px';\r\n    }\r\n    else {\r\n        var width = '8px';\r\n        var height = dimension + 'px'\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: position.top + 'px',\r\n        left: position.left + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nexport default (props) =>\r\n    <div style={style(props)}/>\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE} from '../constants/constants';\r\n\r\n\r\nconst style = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top + 'px',\r\n        left: position.left + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nexport default (props) =>\r\n    <img src={GOAL_IMAGE} style={style(props)}/>\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from \"react\";\r\n\r\nconst mainStyle = (width,height,visible) => {\r\n    var display = 'block';\r\n    if (visible === false) {\r\n        display = 'none';\r\n    }\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        display: display,\r\n        width: widthset,\r\n        height: heightset,\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        float: 'left',\r\n        marginRight: '30px',\r\n        margin: 'auto',\r\n    };\r\n};\r\n\r\nconst normalStyle = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        display: 'flex',\r\n        width: widthset,\r\n        height: heightset,\r\n        position: 'absolute',\r\n        overflow: 'hidden',\r\n        float: 'center',\r\n        marginRight: '30px',\r\n        margin: 'auto',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    };\r\n};\r\n\r\nconst opacityStyle = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        backgroundColor: 'black',\r\n        opacity: 0.5,\r\n        width: widthset,\r\n        height: heightset,\r\n        position: 'absolute',\r\n        overflow: 'hidden',\r\n        float: 'left',\r\n        marginRight: '30px',\r\n        margin: 'auto',\r\n    };\r\n};\r\n\r\nexport default ({ width,height,visible,children }) => (\r\n    <div style={mainStyle(width, height,visible)}>\r\n        <div style={opacityStyle(width,height)}></div>\r\n        <div style={normalStyle(width, height)}>\r\n            {children}\r\n        </div>\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top;\r\n            left = endPosition.left;\r\n            width = position.left - endPosition.left + 'px';\r\n            height = '4px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top;\r\n            left = position.left;\r\n            width = endPosition.left - position.left + 'px';\r\n            height = '4px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top;\r\n            left = endPosition.left;\r\n            width = '4px';\r\n            height = position.top - endPosition.top + 'px';\r\n        } else {\r\n            top = position.top;\r\n            left = position.left;\r\n            width = '4px';\r\n            height = endPosition.top - position.top + 'px'\r\n        }\r\n    }\r\n    top+=18;\r\n    left+=18;\r\n\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\nexport default (props) => (\r\n    <div style={style(props)}/>\r\n);","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{color: 'white'}}>\r\n                You Win! with {this.props.numMoves} Moves!\r\n                </div>\r\n                <input style={buttonpanel()} id={\"namesubmitHS\"} type={\"text\"} placeholder={\"Username\"}>\r\n                </input>\r\n                <form onSubmit={this.props.submitAnswer} style={buttonpanel()}>\r\n                    <button type=\"submit\">Submit Highscore </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinView;","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitPuzzle} style={buttonpanel()}>\r\n                    <button type=\"submit\">Create Puzzle</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"namesubmit\"} type={\"text\"} placeholder={\"Name Of Puzzle?\"}>\r\n\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleView;\r\n","import React from \"react\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    };\r\n};\r\n\r\nexport default (props) =>\r\n    <div>\r\n        <form onSubmit={props.resetPuzzle} style={buttonpanel()}>\r\n            <button type=\"submit\">Reset</button>\r\n        </form>\r\n    </div>","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\n\r\n\r\nclass BoardResetPanel extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value)\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value)\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value)\r\n        if (width > 36) {\r\n            width = 36;\r\n        }\r\n        else if (width < 4) {\r\n            width = 4;\r\n        }\r\n        if (height > 36) {\r\n            height = 36;\r\n        }\r\n        else if (height < 4) {\r\n            height = 4;\r\n        }\r\n        if (percent < 0) {\r\n            percent = 0;\r\n        }\r\n        else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n}\r\n\r\n    render () {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <label for={\"boardWidthInput\"}>{'Board Width 4-36'}\r\n                    <input id={\"boardWidthInput\"} type={\"number\"} min={\"4\"} max={\"36\"}></input>\r\n                </label>\r\n                <br></br>\r\n                <label for={\"boardHeightInput\"}>{'Board Height 4-36'}\r\n                    <input id={\"boardHeightInput\"} type={\"number\"} min={\"4\"} max={\"36\"}></input>\r\n                </label>\r\n                <br></br>\r\n                <label for={\"boardRandomPercent\"}>{'% chance a Wall Spawns'}\r\n                    <input id={\"boardRandomPercent\"} type={\"number\"} min={\"0\"} max={\"100\"}></input>\r\n                </label>\r\n                <br></br>\r\n                <div>\r\n                    <form onClick={this.createBoardHandler} style={buttonpanel()}>\r\n                        <button type=\"submit\">Create New Board</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default BoardResetPanel;\r\n\r\n","import React from 'react';\r\nimport ResetButton from \"../components/ResetButton\";\r\nimport BoardResetPanel from '../components/BoardResetPanel';\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        float: 'left',\r\n        width: '15%',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode == 'Yes') {\r\n            return (\r\n                <BoardResetPanel\r\n                    createBoard={this.props.createBoard}\r\n                    width={this.props.width}\r\n                    height={this.props.height}\r\n                    percent={this.props.percent}\r\n                />);\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={controlpanel()}>\r\n                <div>\r\n                    {'http://' + window.location.host + '/play/' + this.props.uri}\r\n                </div>\r\n                <ResetButton\r\n                    resetPuzzle={this.props.resetPuzzle}\r\n                />\r\n                {this.isCreateMode(this.props.createMode)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DisplayView;\r\n","import React from 'react';\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n        <div style={styleelements()}>{'By: ' + highscore.comment}\r\n            <div>\r\n                {'Moves: ' + highscore.numMoves}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <div style={styleouter()}>{'All Highscores:'}\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </div>\r\n)","import React from 'react';\r\nimport ResetButton from \"../components/ResetButton\";\r\nimport HighScores from '../components/HighScores';\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        float: 'center',\r\n        width: '15%',\r\n        opacity: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    };\r\n};\r\n\r\nclass GameWonDisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={'DisplayView'} style={controlpanel()}>\r\n                {\r\n                    this.props.playerState.map(position =>\r\n                        this.props.checkwin(position)\r\n                    )\r\n                }\r\n                <ResetButton\r\n                    resetPuzzle={this.props.resetPuzzle}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameWonDisplayView;","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>Toggle Line Indicators:\r\n                <label class=\"switch\">\r\n                    <input id={\"toggleLineIndicators\"} onClick={this.handleClick} type=\"checkbox\" class=\"real-checkbox\"></input>\r\n                    <span class=\"slider round\"></span>\r\n                </label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY-4 && wall.left == indexX-40) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-44));\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-44 && wall.left == indexX) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-40 && (wall.left == indexX-4)) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-40 && (wall.left == indexX+36)) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    /*if ((isWallAbove && (isWallBesideLeft || isWallBesideRight) || (isWallBesideLeft && isWallBesideRight)) ) {\r\n        console.log('wall above');\r\n        console.log({top: indexY-44, left: indexX})\r\n        console.log(WallHorizToPlace)\r\n    }*/\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height/40));\r\n        X = Math.floor(Math.random() * Math.floor(width/40));\r\n        dontPlacePositions.map(position => {\r\n            if (Y*40 == position.top && X*40 == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y*40,left: X*40};\r\n};\r\n\r\nexport default (width,height,randomPercent) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: -4}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    var goal = {top:Math.floor(Math.random() * Math.floor(height/40))*40, left:Math.floor(Math.random() * Math.floor(width/40))*40};\r\n    var randomPositions = [goal];\r\n    for (var i=0;i<5;i++) {\r\n        randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n    }\r\n    var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n    var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n    var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n    var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=40) {\r\n        for (var j=0;j<height;j+=40) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=40) {\r\n        for (var i=0;i<width;i+=40) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i-4});\r\n            }\r\n            else if (i==(width-40)) {\r\n                wallVerticle.push({top: j, left: i+36});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j-4,left: i});\r\n            }\r\n            else if (j == (height-40)) {\r\n                wallHorizontal.push({top: j+36, left: i});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=40) {\r\n        for (var i=0;i<width;i+=40) {\r\n            if (i > 1 && i != (width-40) && Math.random() > randomPercent) {\r\n                if (checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                    wallVerticle.push({top: j,left: i-4});\r\n                }\r\n            }\r\n            if (j > 1 && j != (height-40) && Math.random() > randomPercent) {\r\n                if (checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                    wallHorizontal.push({top: j-4,left: i});\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router'\r\n\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport GameWonOverlay from \"../components/GameWonOverlay\";\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinView from '../components/YouWinView';\r\nimport AddPuzzleView from '../components/AddPuzzleView';\r\nimport DisplayView from './DisplayView';\r\nimport GameWonDisplayView from \"./GameWonDisplayView\";\r\nimport HighScores from '../components/HighScores';\r\nimport ToggleSettings from '../components/ToggleSettings';\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if([32, 37, 38, 39, 40,9].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n    };\r\n};\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n        }\r\n        else {\r\n            var board = BoardGenerator(this.props.settingsWidth * 40,this.props.settingsHeight * 40,.90);\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                highscores: [],\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n            },board);\r\n        }\r\n    }\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                this.setState({\r\n                    highscores: JSON.parse(res.data.highscores),\r\n                });\r\n            });\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            var IntervalId = setInterval(this.updateHighscores, 2000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.ColoredLineDirections.length === 0) {\r\n            this.setState({\r\n                ColoredLineDirections: [LEFT,RIGHT,UP,DOWN],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                ColoredLineDirections: [],\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        console.log(this.state.uri);\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length, name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoard = (width,height,percent) => {\r\n        console.log(width);\r\n        console.log(height);\r\n        console.log(percent)\r\n        var board = BoardGenerator(width*40,height*40,percent);\r\n           this.setState(extend({\r\n                width: width,\r\n                height: height,\r\n                percent: percent,\r\n           },board));\r\n    }\r\n\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top < robotY && wall.top > minimumWall) {\r\n                        minimumWall = wall.top + 4;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top > minimumWall - 4) {\r\n                        minimumWall = checkRobot.top + 40;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = (this.state.width * 40) - 40;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall) {\r\n                        minimumWall = wall.left - 36;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 36) {\r\n                        minimumWall = checkRobot.left - 40;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left < robotX && wall.left > minimumWall) {\r\n                        minimumWall = wall.left + 4;\r\n\r\n                    }\r\n\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left > minimumWall - 4) {\r\n                        minimumWall = checkRobot.left + 40;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = (this.state.width * 40) - 40;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall)\r\n                        minimumWall = wall.top - 36;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 36) {\r\n                        minimumWall = checkRobot.top - 40;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n    checkwin = (robotPosition) => {\r\n        if (robotPosition.top === this.state.goal.top && robotPosition.left === this.state.goal.left) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No') {\r\n                return  (<YouWinView numMoves={this.state.moveHistory.length} submitAnswer={this.submitAnswer}/>);\r\n            }\r\n            else {\r\n                return (<AddPuzzleView submitPuzzle={this.submitPuzzle}/>);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false) {\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left)) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n            this.checkwin(newPosition);\r\n        }\r\n    };\r\n\r\n    handlePlayerMovementFromMouse = (posObj) => {\r\n        var newDirection;\r\n        var robot = this.state.playerState[this.state.robotSelected];\r\n        if (posObj.top === robot.top && posObj.left < robot.left)\r\n            newDirection = { top: 0, left: -40, dir: LEFT};\r\n        else if (posObj.top === robot.top && posObj.left > robot.left)\r\n            newDirection = { top: 0, left: 40, dir: RIGHT};\r\n        else if (posObj.top < robot.top && posObj.left === robot.left)\r\n            newDirection = { top: -40, left: 0, dir: UP};\r\n        else if (posObj.top > robot.top && posObj.left === robot.left)\r\n            newDirection = { top: 40, left: 0, dir: DOWN};\r\n        else newDirection = { top: 0, left: 0, dir: undefined};\r\n        this.handlePlayerMovement(newDirection)\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n        <div id={'GameMain'} style={gamepanel()}>\r\n            <DisplayView\r\n                uri={this.state.uri}\r\n                resetPuzzle={this.resetPuzzle}\r\n                createBoard={this.createBoard}\r\n                width={this.state.width}\r\n                height={this.state.height}\r\n                percent={this.state.percent}\r\n                createMode={this.state.createMode}\r\n            />\r\n            <Board width={this.state.width * 40} height={this.state.height * 40}>\r\n                {\r\n                    this.state.boardState.map(square =>\r\n                        <Square dimension={40}\r\n                                position={{top:square.top,left: square.left}}\r\n                                handlePlayerMovementFromMouse={this.handlePlayerMovementFromMouse}\r\n                        />\r\n                    )\r\n                }\r\n                <Goal dimension={40} position={this.state.goal}/>\r\n                {\r\n                    this.state.ColoredLineDirections.map(ColoredLineDirection =>\r\n                        <ColoredLine\r\n                            dir={ColoredLineDirection}\r\n                            position={{\r\n                                top: this.state.playerState[this.state.robotSelected].top,\r\n                                left: this.state.playerState[this.state.robotSelected].left\r\n                            }}\r\n                            endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                            color={LINE_INDICATOR_COLOR}\r\n                        />\r\n                    )\r\n                }\r\n                {\r\n                    this.state.playerState.map((player, index) =>\r\n                        <Robot\r\n                            dimension={40}\r\n                            position={{top:player.top,left:player.left}}\r\n                            color={player.color}\r\n                            selected={this.state.robotSelected}\r\n                            index={index}\r\n                            onClick={this.robotSelect}\r\n                            handlePlayerMovement={this.handlePlayerMovement}\r\n                            tabSelector={this.tabSelector}\r\n                        />\r\n                    )\r\n                }\r\n\r\n                {\r\n                    this.state.wallHorizontal.map(wallH =>\r\n                        <Wall\r\n                            orientation={'horizontal'}\r\n                            dimension={40}\r\n                            position={{top:wallH.top,left:wallH.left}}\r\n                        />\r\n                    )\r\n                }\r\n                {\r\n                    this.state.wallVerticle.map(wallV =>\r\n                        <Wall\r\n                            orientation={'verticle'}\r\n                            dimension={40}\r\n                            position={{top:wallV.top,left:wallV.left}}\r\n                        />\r\n                    )\r\n\r\n                }\r\n                <GameWonOverlay\r\n                    width={this.state.width * 40}\r\n                    height={this.state.height * 40}\r\n                    visible={this.state.gameWon}\r\n                >\r\n                    <GameWonDisplayView\r\n                        playerState={this.state.playerState}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        highscores={this.state.highscores}\r\n                        checkwin={this.checkwin}\r\n                    />\r\n                </GameWonOverlay>\r\n            </Board>\r\n            <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>\r\n            <HighScores highscores={this.state.highscores}/>\r\n            <ToggleSettings onClick={this.toggleLineIndicators}/>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\n\r\nimport axios from 'axios';\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = window.gameslist;\r\n        var highscoreslist = window.highscoreslist;\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n        }\r\n    }\r\n\r\n    handleGameClick = (gamedata,highscores,uri) => {\r\n        this.props.handleGameClick(gamedata,highscores,uri);\r\n    }\r\n\r\n    handleSearchSubmit = event => {\r\n        event.preventDefault();\r\n        var searchTerm = document.getElementById(\"searchBarFindGame\").value;\r\n        axios.post('/search', {search: searchTerm})\r\n            .then( res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div id={'GameMain'}>\r\n                <SearchBarFindGame submitSearch={this.handleSearchSubmit}/>\r\n                {\r\n                    this.state.gameslist.map((game,index)=>\r\n                        <GameListItemView handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default FindGame;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame={'Yes'}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import React from \"react\";\r\nimport \"./modal.css\";\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    }\r\n\r\n    render () {\r\n        if (!this.props.show) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div class=\"modal\" id=\"modal\">\r\n                <h2>Login to Robits!</h2>\r\n                <img onClick={this.loginGoogle} src={\"/static/images/btn_google_signin_light_normal_web@2x.png\"}></img>\r\n                <button class=\"toggle-button\" onClick={this.props.closeLoginModal}>close</button>\r\n            </div>\r\n            )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '50px',\r\n        width: '50px',\r\n    };\r\n}\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return null\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                    <div>{window.userInfo.username}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <a onClick={this.handleClick} class=\"signin button button-empty\">{textToShow}</a>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(window.highscoreslist);\r\n        console.log(window.gameslist);\r\n        if (window.uri == '') {\r\n            this.state = {\r\n                PageSelected: <CreateGame/>, //default page for website\r\n            };\r\n        }\r\n        else {\r\n            this.state = {\r\n                PageSelected: <PlayGame gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri}/>, //when uri is entered to play specific game\r\n            };\r\n        }\r\n        this.state.showLoginModal = false;\r\n    }\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type == 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    }\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    }\r\n\r\n    handleGameClick = (gamedata,highscores,uri) => {\r\n        this.setState({\r\n            PageSelected: <PlayGame highscores={highscores} gamedata={gamedata} uri={uri}/>\r\n        });\r\n\r\n    }\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var newGame = <CreateGame state={\"new\"}/>; //KNOWN bug where if you create a game you have to refresh the page to cause a re-render of <CreateGame/>\r\n        this.setState({\r\n            PageSelected: newGame, //if selected page is already CreateGame it wont refresh known problem\r\n        });\r\n    }\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            PageSelected: <FindGame handleGameClick={this.handleGameClick}/>,\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header id=\"top\">\r\n                    <div class=\"site-title-nav\">\r\n                        <input type=\"checkbox\" id=\"tn-tg\" class=\"topnav-toggle fullscreen-toggle\" aria-label=\"Navigation\"/>\r\n                            <label for=\"tn-tg\" class=\"fullscreen-mask\"></label>\r\n                            <label for=\"tn-tg\" class=\"hbg\">\r\n                                <span class=\"hbg__in\"></span>\r\n                            </label>\r\n                            <h1 class=\"site-title\">\r\n                                <a href=\"/\">RobitsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </h1>\r\n                            <nav id=\"topnav\" class=\"hover\">\r\n                                <section>\r\n                                    <a href=\"/\">\r\n                                        <span class=\"play\">Play</span>\r\n                                        <span class=\"home\">robitsevolved</span>\r\n                                    </a>\r\n                                    <div role=\"group\">\r\n                                        <a onClick={this.handleClickCreateGame} href=\"/#createGame\">Create a game</a>\r\n                                        <a onClick={this.handleClickFindGame} href=\"/#findgame\">Find a game</a>\r\n                                        <a href=\"/simul\">Puzzle Rush</a>\r\n                                    </div>\r\n                                </section>\r\n                                <section>\r\n                                    <a href=\"/training\">Learn</a>\r\n                                    <div role=\"group\">\r\n                                        <a href=\"/learn\">Robits Basics</a>\r\n                                        <a href=\"/training\">Starter Puzzles</a>\r\n                                    </div>\r\n                                </section>\r\n                                <section>\r\n                                    <a href=\"/player\">Community</a>\r\n                                    <div role=\"group\">\r\n                                        <a href=\"/player\">Players</a>\r\n                                        <a href=\"/team\">Teams</a>\r\n                                        <a href=\"/forum\">Forum</a>\r\n                                    </div>\r\n                                </section>\r\n                                <section>\r\n                                    <a href=\"/analysis\">Tools</a>\r\n                                    <div role=\"group\">\r\n                                        <a href=\"/analysis\">Robits solver (test)</a>\r\n                                        <a href=\"/analysis#explorer\">Settings</a>\r\n                                    </div>\r\n                                </section>\r\n                            </nav>\r\n                    </div>\r\n                    <div class=\"site-buttons\">\r\n                        <div id=\"clinput\">\r\n                            <a class=\"link\">\r\n                                <span data-icon=\"y\"></span>\r\n                            </a>\r\n                            <input spellcheck=\"false\" autocomplete=\"false\" aria-label=\"Search\" placeholder=\"Search\"></input>\r\n                        </div>\r\n                        <div class=\"dasher\">\r\n                            <a class=\"toggle link anon\">\r\n                                <span title=\"Preferences\" data-icon=\"%\"></span>\r\n                            </a>\r\n                        </div>\r\n                        <LoggedInUser/>\r\n                        <SignInButton onClick={this.SignInButtonPressed}/>\r\n                    </div>\r\n                </header>\r\n                {this.state.PageSelected}\r\n                <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}