{"version":3,"sources":["constants/constants.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinModal.jsx","components/AddPuzzleModal.jsx","containers/DisplayView.js","components/HighScores.jsx","components/ToggleSettings.js","components/boardgenerator.js","containers/Modals/BoardResetModal.js","containers/Game.js","Pages/CreateGame.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","Material-UI/themes.jsx","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","Pages/Home.js","containers/Modals/LoginModal.js","components/LoggedInUser.js","components/SignInButton.js","App.js","serviceWorker.js","index.js"],"names":["UP","DIRECTION_MAP_IMAGES","yellow","DOWN","LEFT","RIGHT","red","green","blue","MovesView","props","style","width","float","display","this","moveHistory","length","map","move","src","playerState","robot","colorSignifier","dir","React","Component","styleoutside","dimension","position","dim","height","backgroundColor","top","left","styleinside","styleinside2","Square","handleClick","handlePlayerMovementFromMouse","onClick","border","margin","overflow","children","transition","color","selectedColor","undefined","borderStyle","index","selected","borderColor","borderRadius","Robot","handleKeyDown","e","newDirection","keyCode","tabSelector","resetPuzzle","handlePlayerMovement","window","onkeydown","orientation","opacity","wallThickness","wallOffset","Wall","endPosition","obj","key","hasOwnProperty","YouWinModal","Dialog","onClose","handleClose","aria-labelledby","open","show","maxWidth","DialogTitle","id","DialogContent","dividers","numMoves","Input","type","placeholder","DialogActions","Button","variant","submitAnswer","AddPuzzleModal","submitPuzzle","valuetext","value","DisplayView","isCreateMode","createMode","handleCreateBoardClick","event","createBoardPressed","copyToClipboard","dummy","document","createElement","body","appendChild","location","host","uri","select","execCommand","removeChild","copiedClipboard","thisThing","setState","copyButtonText","setTimeout","handleDimensionChange","parseInt","toString","DimensionChanged","state","marginRight","marginTop","marginBottom","paddingBottom","ButtonGroup","aria-label","Typography","gutterBottom","Slider","onChangeCommitted","getAriaValueText","step","marks","min","max","defaultValue","valueLabelDisplay","highscores","marginleft","highscore","comment","highscorestyle","ToggleSettings","FormControlLabel","control","Switch","onChange","label","labelPlacement","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","boardState","wallVerticle","wallHorizontal","goal","randomPositions","i","push","randompos1","extend","randompos2","randompos3","randompos4","j","gameWon","playerStart","slice","BoardResetModal","createBoardHandler","preventDefault","getElementById","percent","createBoard","fullWidth","textAlign","paddingRight","inputProps","title","closeModal","addEventListener","indexOf","Game","updateHighscores","axios","get","then","res","JSON","parse","data","squareSize","copiedToClipboard","componentDidMount","loadedGame","IntervalId","setInterval","componentWillUnmount","clearInterval","robotSelect","robotSelected","namesubmit","post","puzzledata","name","history","toggleLineIndicators","ColoredLineDirections","console","log","showBoardResetPanelModal","closeCreateBoardModal","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","checkwin","robotPosition","posObj","createModeWallClick","indexToChange","newWallHorizontal","wallH","newWallVerticle","wallV","gamedata","settingsWidth","settingsHeight","percentWall","settingsPercent","padding","Grid","container","alignItems","item","xs","sm","md","Board","square","Goal","ColoredLineDirection","ColoredLine","player","HighScores","withRouter","CreateGame","useStyles","makeStyles","theme","root","flexGrow","grid","griditems","paper","spacing","Width","image","img","maxHeight","ComplexGrid","classes","highscoreauthor","handleGameClick","game","cursor","Paper","className","ButtonBase","alt","direction","difficulty","authorname","FindGame","handleSearchSubmit","searchTerm","search","highscoreslist","gameslist","justify","PlayGame","wrap","handleClickCreateGame","handleClickFindGame","LoginModal","loginGoogle","href","class","closeLoginModal","LoggedInUser","loggedin","userInfo","profilePicture","username","SignInButton","textToShow","App","SignInButtonPressed","showLoginModal","PageSelected","newGame","token","for","role","data-icon","spellcheck","autocomplete","Boolean","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.df1a57c8.chunk.js","sourcesContent":["export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.handlePlayerMovementFromMouse(this.props.position);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var selectedColor = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        selectedColor = SELECTED_ROBOT;\r\n        borderStyle = \"solid\";\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        borderStyle: borderStyle,\r\n        borderColor: selectedColor,\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.props.tabSelector();\r\n                return;\r\n                break;\r\n            case 32:\r\n                this.props.resetPuzzle();\r\n                return;\r\n                break;\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n\r\n\r\n        }\r\n        this.props.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onkeydown = this.handleKeyDown;\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE} from '../constants/constants';\r\n\r\n\r\nconst style = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nexport default (props) =>\r\n    <img src={GOAL_IMAGE} style={style(props)}/>\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = '4px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = '4px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = '4px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension;\r\n            width = '4px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    top+=18;\r\n    left+=18;\r\n\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\nexport default (props) => (\r\n    <div style={style(props)}/>\r\n);","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div style={{color: 'white'}}>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <Input id={\"namesubmitHS\"} type={\"text\"} placeholder={\"Username\"}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Submit Puzzle</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <Input id={\"namesubmit\"} type={\"text\"} placeholder={\"Name of Puzzle\"}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleModal;\r\n","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { copyButtonText: \"Copy Puzzle Link\" };\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                    <Button onClick={this.handleCreateBoardClick}> Create New Board</Button>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.props.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                 <div style={{display: 'inline-flex', width: '200px', paddingBottom: '10px'}}>\r\n                     <Button variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                             onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                 </div>\r\n                 <ButtonGroup color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     {this.isCreateMode(this.props.createMode)}\r\n                 </ButtonGroup>\r\n                 <div style={buttonPanel()}>\r\n                     <Typography id=\"discrete-slider-small-steps\" gutterBottom>\r\n                         Size Of Board\r\n                     </Typography>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={10}\r\n                         valueLabelDisplay=\"auto\"\r\n                     />\r\n                 </div>\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n        <div style={styleelements()}>{'By: ' + highscore.comment}\r\n            <div>\r\n                {'Moves: ' + highscore.numMoves}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <div style={styleouter()}>{'All Highscores:'}\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </div>\r\n)","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Toggle Line Indicators\"\r\n                    labelPlacement=\"end\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n    var randomPositions = [goal];\r\n    for (var i=0;i<5;i++) {\r\n        randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n    }\r\n    var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n    var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n    var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n    var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router'\r\n\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport ToggleSettings from '../components/ToggleSettings';\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if([32, 37, 38, 39, 40,9].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        padding: '40px'\r\n    };\r\n};\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            console.log(this.state)\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,.90);\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false\r\n            },board);\r\n        }\r\n    }\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                this.setState({\r\n                    highscores: JSON.parse(res.data.highscores),\r\n                });\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            var IntervalId = setInterval(this.updateHighscores, 2000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.ColoredLineDirections.length === 0) {\r\n            this.setState({\r\n                ColoredLineDirections: [LEFT,RIGHT,UP,DOWN],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                ColoredLineDirections: [],\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        console.log(this.state.uri);\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length, name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent);\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        console.log(robotX);\r\n        console.log(robotY);\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n    checkwin = (robotPosition) => {\r\n        if (robotPosition.top === this.state.goal.top && robotPosition.left === this.state.goal.left) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No') {\r\n                return  (<YouWinModal\r\n                    show={this.state.gameWon}\r\n                    numMoves={this.state.moveHistory.length}\r\n                    submitAnswer={this.submitAnswer}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                />);\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false) {\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left)) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n            this.checkwin(newPosition);\r\n        }\r\n    };\r\n\r\n    handlePlayerMovementFromMouse = (posObj) => {\r\n        var newDirection;\r\n        var robot = this.state.playerState[this.state.robotSelected];\r\n        if (posObj.top === robot.top && posObj.left < robot.left)\r\n            newDirection = { top: 0, left: -(this.state.squareSize), dir: LEFT};\r\n        else if (posObj.top === robot.top && posObj.left > robot.left)\r\n            newDirection = { top: 0, left: this.state.squareSize, dir: RIGHT};\r\n        else if (posObj.top < robot.top && posObj.left === robot.left)\r\n            newDirection = { top: -(this.state.squareSize), left: 0, dir: UP};\r\n        else if (posObj.top > robot.top && posObj.left === robot.left)\r\n            newDirection = { top: this.state.squareSize, left: 0, dir: DOWN};\r\n        else newDirection = { top: 0, left: 0, dir: undefined};\r\n        this.handlePlayerMovement(newDirection)\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes') {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                console.log('clicking horizontal wall');\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                    />\r\n                    <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8}>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                        handlePlayerMovementFromMouse={this.handlePlayerMovementFromMouse}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal dimension={this.state.squareSize} position={this.state.goal}/>\r\n                        {\r\n                            this.state.ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={LINE_INDICATOR_COLOR}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                />\r\n                            )\r\n                        }\r\n\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n\r\n                        }\r\n                    </Board>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <div>\r\n                        <ToggleSettings onClick={this.toggleLineIndicators}/>\r\n                        <HighScores highscores={this.state.highscores}/>\r\n                    </div>\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                {\r\n                    this.state.playerState.map(position =>\r\n                        this.checkwin(position))\r\n                }\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport useStyles from '../Material-UI/themes';\r\n\r\nconst handleClick = (callback,puzzledata,highscores,uri) => {\r\n    callback(puzzledata,highscores,uri);\r\n}\r\n\r\n\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n    if (typeof props.highscore !== 'undefined') {\r\n        var highscore = props.highscore.numMoves;\r\n        var highscoreauthor = props.highscore.comment;\r\n    }\r\n    else {\r\n        var highscore = 'None'\r\n        var highscoreauthor = ''\r\n    }\r\n    const handleClick = () => {\r\n        props.handleGameClick(props.game.puzzledata,props.highscores,props.game.uri);\r\n    }\r\n\r\n    return (\r\n    <Grid onClick={handleClick} style={{ cursor: 'pointer' }} item>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <ButtonBase className={classes.image}>\r\n              <img className={classes.img} alt=\"complex\" src=\"https://scx1.b-cdn.net/csz/news/800/2019/3-robot.jpg\" />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={15} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={5}>\r\n              <Grid item xs>\r\n                <Typography gutterBottom variant=\"subtitle1\">\r\n                  {props.game.name}\r\n                </Typography>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  Type {props.game.type} • {props.game.difficulty}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {props.game.authorname}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                  Remove\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid spacing={2} item>\r\n              <Typography variant=\"body2\">\r\n                  {highscore}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {highscoreauthor}\r\n              </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios';\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = window.gameslist;\r\n        var highscoreslist = window.highscoreslist;\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n        }\r\n    }\r\n\r\n    handleGameClick = (gamedata,highscores,uri) => {\r\n        this.props.handleGameClick(gamedata,highscores,uri);\r\n    }\r\n\r\n    handleSearchSubmit = event => {\r\n        event.preventDefault();\r\n        var searchTerm = document.getElementById(\"searchBarFindGame\").value;\r\n        axios.post('/search', {search: searchTerm})\r\n            .then( res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div id={'GameMain'}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\" spacing={2}>\r\n                        {\r\n                            this.state.gameslist.map((game,index)=>\r\n                                <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n//<SearchBarFindGame submitSearch={this.handleSearchSubmit}/>\r\nexport default FindGame;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame={'Yes'}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n\r\n    return (<div className={classes.grid}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={4}>\r\n                </Grid>\r\n                <Grid\r\n                    container xs={4}\r\n                    spacing={4}\r\n                    direction=\"column\"\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    wrap=\"nowrap\"\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={props.handleClickCreateGame}variant=\"contained\" color=\"primary\">\r\n                            Create a Game\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={props.handleClickFindGame} variant=\"contained\" color=\"primary\">\r\n                            Find a Game\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\" color=\"primary\">\r\n                            Play a Random Game\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\" color=\"primary\">\r\n                            Puzzle Rush\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./modal.css\";\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    }\r\n\r\n    render () {\r\n        if (!this.props.show) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div class=\"modal\" id=\"modal\">\r\n                <h2>Login to Robits!</h2>\r\n                <img onClick={this.loginGoogle} src={\"/static/images/btn_google_signin_light_normal_web@2x.png\"}></img>\r\n                <button class=\"toggle-button\" onClick={this.props.closeLoginModal}>close</button>\r\n            </div>\r\n            )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '50px',\r\n        width: '50px',\r\n    };\r\n}\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return null\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                    <div>{window.userInfo.username}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <a onClick={this.handleClick} class=\"signin button button-empty\">{textToShow}</a>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport Home from './Pages/Home';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(window.highscoreslist);\r\n        console.log(window.gameslist);\r\n        if (window.uri == '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame}/>, //default page for website\r\n            };\r\n        }\r\n        else {\r\n            this.state = {\r\n                PageSelected: <PlayGame gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri}/>, //when uri is entered to play specific game\r\n            };\r\n        }\r\n        this.state.showLoginModal = false;\r\n    }\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type == 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    }\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    }\r\n\r\n    handleGameClick = (gamedata,highscores,uri) => {\r\n        this.setState({\r\n            PageSelected: <PlayGame highscores={highscores} gamedata={gamedata} uri={uri}/>\r\n        });\r\n    }\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var newGame = <CreateGame state={\"new\"}/>; //KNOWN bug where if you create a game you have to refresh the page to cause a re-render of <CreateGame/>\r\n        this.setState({\r\n            PageSelected: newGame, //if selected page is already CreateGame it wont refresh known problem\r\n        });\r\n    }\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        console.log('here');\r\n        this.setState({\r\n            PageSelected: <FindGame handleGameClick={this.handleGameClick}/>,\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header id=\"top\">\r\n                    <div class=\"site-title-nav\">\r\n                        <input type=\"checkbox\" id=\"tn-tg\" class=\"topnav-toggle fullscreen-toggle\" aria-label=\"Navigation\"/>\r\n                            <label for=\"tn-tg\" class=\"fullscreen-mask\"></label>\r\n                            <label for=\"tn-tg\" class=\"hbg\">\r\n                                <span class=\"hbg__in\"></span>\r\n                            </label>\r\n                            <h1 class=\"site-title\">\r\n                                <a href=\"/\">RobitsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </h1>\r\n                            <nav id=\"topnav\" class=\"hover\">\r\n                                <section>\r\n                                    <a href=\"/\">\r\n                                        <span class=\"play\">Play</span>\r\n                                        <span class=\"home\">robitsevolved</span>\r\n                                    </a>\r\n                                    <div role=\"group\">\r\n                                        <a onClick={this.handleClickCreateGame} href=\"/#createGame\">Create a game</a>\r\n                                        <a onClick={this.handleClickFindGame} href=\"/#findgame\">Find a game</a>\r\n                                        <a href=\"/simul\">Puzzle Rush</a>\r\n                                    </div>\r\n                                </section>\r\n                                <section>\r\n                                    <a href=\"/training\">Learn</a>\r\n                                    <div role=\"group\">\r\n                                        <a href=\"/learn\">Robits Basics</a>\r\n                                        <a href=\"/training\">Starter Puzzles</a>\r\n                                    </div>\r\n                                </section>\r\n                                <section>\r\n                                    <a href=\"/player\">Community</a>\r\n                                    <div role=\"group\">\r\n                                        <a href=\"/player\">Players</a>\r\n                                        <a href=\"/team\">Teams</a>\r\n                                        <a href=\"/forum\">Forum</a>\r\n                                    </div>\r\n                                </section>\r\n                                <section>\r\n                                    <a href=\"/analysis\">Tools</a>\r\n                                    <div role=\"group\">\r\n                                        <a href=\"/analysis\">Robits solver (test)</a>\r\n                                        <a href=\"/analysis#explorer\">Settings</a>\r\n                                    </div>\r\n                                </section>\r\n                            </nav>\r\n                    </div>\r\n                    <div class=\"site-buttons\">\r\n                        <div id=\"clinput\">\r\n                            <a class=\"link\">\r\n                                <span data-icon=\"y\"></span>\r\n                            </a>\r\n                            <input spellcheck=\"false\" autocomplete=\"false\" aria-label=\"Search\" placeholder=\"Search\"></input>\r\n                        </div>\r\n                        <div class=\"dasher\">\r\n                            <a class=\"toggle link anon\">\r\n                                <span title=\"Preferences\" data-icon=\"%\"></span>\r\n                            </a>\r\n                        </div>\r\n                        <LoggedInUser/>\r\n                        <SignInButton onClick={this.SignInButtonPressed}/>\r\n                    </div>\r\n                </header>\r\n                {this.state.PageSelected}\r\n                <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}