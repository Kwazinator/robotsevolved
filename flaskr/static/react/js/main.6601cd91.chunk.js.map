{"version":3,"sources":["components/Square.jsx","constants/constants.js","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","containers/Game.js","serviceWorker.js","index.js"],"names":["styleoutside","dimension","position","dim","width","height","backgroundColor","top","left","transition","styleinside","styleinside2","props","style","border","margin","overflow","children","color","borderRadius","Robot","handleKeyDown","e","newDirection","keyCode","dir","handlePlayerMovement","this","window","onkeydown","React","Component","orientation","addEventListener","indexOf","preventDefault","Game","handleCollision","dirObj","newPosition","robotX","state","playerState","robotY","minimumWall","wallHorizontal","map","wall","MAX_WIDTH","wallVerticle","MAX_HEIGHT","setState","boardSize","playerSize","boardState","push","i","j","Math","random","Board","square","Square","player","wallH","Wall","wallV","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kOAIMA,EAAe,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,UAAUC,EAAc,EAAdA,SACvBC,EAAMF,EAAY,KACxB,MAAO,CACHG,MAAOD,EACPE,OAAQF,EACRG,gBCA4B,UDC5BJ,SAAU,WACVK,IAAKL,EAASK,IAAM,KACpBC,KAAMN,EAASM,KAAO,KACtBC,WAAY,kBAIdC,EAAc,SAAC,GAA0B,IAAzBT,EAAwB,EAAxBA,UACZE,GADoC,EAAdD,SACfD,EAAY,EAAK,MAC9B,MAAO,CACHG,MAAOD,EACPE,OAAQF,EACRG,gBCd0B,UDe1BJ,SAAU,WACVK,IAAK,MACLC,KAAM,MACNC,WAAY,kBAIdE,EAAe,SAAC,GAA0B,IAAzBV,EAAwB,EAAxBA,UACbE,GADqC,EAAdD,UAChBD,EAAU,GAAG,EAAI,MAC9B,MAAO,CACHG,MAAOD,EACPE,OAAQF,EACRG,gBC5ByB,UD6BzBJ,SAAU,WACVK,KAAMN,EAAU,GAAG,EAAI,KACvBO,MAAOP,EAAU,GAAG,EAAI,KACxBQ,WAAY,kBAIL,WAACG,GAAD,OACX,yBAAKC,MAAOb,EAAaY,IACrB,yBAAKC,MAAOH,EAAYE,IACpB,yBAAKC,MAAOF,EAAaC,QE5C/BC,EAAQ,SAACT,EAAMC,GAGjB,MAAO,CACHD,MAHaA,EAAQ,KAIrBC,OAHcA,EAAS,KAIvBS,OAAQ,kBACRZ,SAAU,WACVa,OAAQ,YACRC,SAAU,WAMH,kBAAGZ,EAAH,EAAGA,MAAMC,EAAT,EAASA,OAAQY,EAAjB,EAAiBA,SAAjB,OACX,yBAAKJ,MAAOA,EAAMT,EAAMC,IACnBY,I,4PChBT,IAAMjB,EAAe,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,UAAUC,EAAoB,EAApBA,SACvBC,GAD2C,EAAXe,MAC1BjB,EAAY,MACxB,MAAO,CACHG,MAAOD,EACPE,OAAQF,EACRG,gBFC4B,UEA5BJ,SAAU,WACVK,IAAKL,EAASK,IAAM,KACpBC,KAAMN,EAASM,KAAO,KACtBC,WAAY,kBAIdC,EAAc,SAAC,GAAgC,IAA/BT,EAA8B,EAA9BA,UACZE,GAD0C,EAApBD,SAAoB,EAAXgB,MACxBjB,EAAY,EAAK,MAC9B,MAAO,CACHG,MAAOD,EACPE,OAAQF,EACRG,gBFb0B,UEc1BJ,SAAU,WACVK,IAAK,MACLC,KAAM,MACNC,WAAY,kBAIdE,EAAe,SAAC,GAAgC,IAA/BV,EAA8B,EAA9BA,UACbE,GAD2C,EAApBD,UAChBD,EAAU,GAAG,EAAI,MAC9B,MAAO,CACHG,MAAOD,EACPE,OAAQF,EACRG,gBAL6C,EAAXY,MAMlChB,SAAU,WACViB,aAAc,MACdZ,KAAMN,EAAU,GAAG,EAAI,KACvBO,MAAOP,EAAU,GAAG,EAAI,KACxBQ,WAAY,kBA8CLW,E,iXAvCXC,cAAgB,SAACC,GACb,IAAIC,EAEJ,OAAOD,EAAEE,SACL,KAAK,GACDD,EAAe,CAAEhB,IAAK,EAAGC,MAAO,GAAIiB,IFjDhC,QEkDJ,MACJ,KAAK,GACDF,EAAe,CAAEhB,KAAM,GAAIC,KAAM,EAAGiB,IFtDlC,MEuDF,MACJ,KAAK,GACDF,EAAe,CAAEhB,IAAK,EAAGC,KAAM,GAAIiB,IFtD9B,SEuDL,MACJ,KAAK,GACDF,EAAe,CAAEhB,IAAK,GAAIC,KAAM,EAAGiB,IF3D/B,QE4DJ,MACJ,QACI,OAIR,EAAKb,MAAMc,qBAAqBH,I,uDAIhC,OACI,yBAAKV,MAAOb,EAAa2B,KAAKf,QAC1B,yBAAKC,MAAOH,EAAYiB,KAAKf,QACzB,yBAAKC,MAAOF,EAAagB,KAAKf,a,0CAO1CgB,OAAOC,UAAYF,KAAKN,kB,GArCZS,IAAMC,WC1CpBlB,EAAQ,SAAC,GAAsC,IAArCmB,EAAoC,EAApCA,YAAY/B,EAAwB,EAAxBA,UAAUC,EAAc,EAAdA,SAClC,GAAiB,cAAb8B,EACA,IAAI5B,EAAQH,EAAY,KACpBI,EAAS,WAGTD,EAAQ,MACRC,EAASJ,EAAY,KAE7B,MAAO,CACHG,MAAOA,EACPC,OAAQA,EACRC,gBAAiB,QACjBJ,SAAU,WACVK,IAAKL,EAASK,IAAM,KACpBC,KAAMN,EAASM,KAAO,KACtBC,WAAY,kBAIL,WAACG,GAAD,OACX,yBAAKC,MAAOA,EAAMD,M,4PCftBgB,OAAOK,iBAAiB,WAAW,SAASX,GAErC,CAAC,GAAI,GAAI,GAAI,GAAI,IAAIY,QAAQZ,EAAEE,UAAY,GAC1CF,EAAEa,oBAEP,G,IA8JYC,E,uNAzJX,WAAYxB,GAAQ,IAAD,uBACf,cAAMA,IA8CVyB,gBAAkB,SAACC,GACf,IAAIC,EACJ,OAAOD,EAAOb,KACV,IJpEM,KIqEF,IAAIe,EAAS,EAAKC,MAAMC,YAAY,GAAGlC,KACnCmC,EAAS,EAAKF,MAAMC,YAAY,GAAGnC,IACnCqC,EAAc,EAClB,EAAKH,MAAMI,eAAeC,KAAI,SAAAC,GAEtBA,EAAKvC,MAAQgC,GAAUO,EAAKxC,IAAMoC,GAAUI,EAAKxC,IAAMqC,IACvDA,EAAcG,EAAKxC,IAAM,MAGjCgC,EAAc,CAAChC,IAAKqC,EAAapC,KAAMgC,EAAQtB,MAAO,QACtD,MACJ,IJ7ES,QI8EDsB,EAAS,EAAKC,MAAMC,YAAY,GAAGlC,KACnCmC,EAAS,EAAKF,MAAMC,YAAY,GAAGnC,IACnCqC,EAAcI,KAClB,EAAKP,MAAMQ,aAAaH,KAAI,SAAAC,GACpBA,EAAKxC,KAAOoC,GAAUI,EAAKvC,KAAOgC,GAAUO,EAAKvC,KAAOoC,IACxDA,EAAcG,EAAKvC,KAAO,OAMlC+B,EAAc,CAAChC,IAAKoC,EAAQnC,KAAKoC,EAAa1B,MAAO,QACrD,MACJ,IJ5FQ,OI6FAsB,EAAS,EAAKC,MAAMC,YAAY,GAAGlC,KACnCmC,EAAS,EAAKF,MAAMC,YAAY,GAAGnC,IACnCqC,EAAc,EAClB,EAAKH,MAAMQ,aAAaH,KAAI,SAAAC,GACpBA,EAAKxC,KAAOoC,GAAUI,EAAKvC,KAAOgC,GAAUO,EAAKvC,KAAOoC,IACxDA,EAAcG,EAAKvC,KAAO,MAMlC+B,EAAc,CAAChC,IAAKoC,EAAQnC,KAAKoC,EAAa1B,MAAO,QACrD,MACJ,IJ3GQ,OI4GAsB,EAAS,EAAKC,MAAMC,YAAY,GAAGlC,KACnCmC,EAAS,EAAKF,MAAMC,YAAY,GAAGnC,IACnCqC,EAAcM,IAClB,EAAKT,MAAMI,eAAeC,KAAI,SAAAC,GAEtBA,EAAKvC,MAAQgC,GAAUO,EAAKxC,IAAMoC,GAAUI,EAAKxC,IAAMqC,IACvDA,EAAcG,EAAKxC,IAAM,OAGjCgC,EAAc,CAAChC,IAAKqC,EAAapC,KAAMgC,EAAQtB,MAAO,QACtD,MACJ,QACI,OAER,OAAOqB,GAzGQ,EAgHnBb,qBAAuB,SAACY,GACpB,IAAIC,EAAc,EAAKF,gBAAgBC,GACnCI,EAAc,EAAKD,MAAMC,YAC7BA,EAAY,GAAKH,EACjB,EAAKY,SAAS,CACVT,YAAaA,KArHF,IAERU,EAA0BxC,EAA1BwC,UAAWC,EAAezC,EAAfyC,WACdC,EAAa,GAGbL,EAAe,GACfJ,EAAiB,GACjBH,EAAc,GAClBA,EAAYa,KAAK,CAAChD,IAAK,EAAGC,KAAM,EAAGU,MAAO,SAE1C,IAAK,IAAIsC,EAAE,EAAEA,EJzBI,KIyBIA,GAAG,GACpB,IAAK,IAAIC,EAAE,EAAEA,EJzBC,IIyBQA,GAAG,GACrBH,EAAWC,KAAK,CAAChD,IAAKkD,EAAEjD,KAAMgD,IAItC,IAASA,EAAE,EAAEA,EJ/BI,KI+BIA,GAAG,GACpB,IAASC,EAAE,EAAEA,EJ/BC,II+BQA,GAAG,GACjBC,KAAKC,SAAW,IAChBV,EAAaM,KAAK,CAAChD,IAAKkD,EAAEjD,KAAMgD,EAAE,IAK9C,IAASA,EAAE,EAAEA,EJvCI,KIuCIA,GAAG,GACpB,IAASC,EAAE,EAAEA,EJvCC,IIuCQA,GAAG,GACjBC,KAAKC,SAAW,IAChBd,EAAeU,KAAK,CAAChD,IAAKkD,EAAE,EAAEjD,KAAMgD,IA5BjC,OAqCf,EAAKf,MAAQ,CACTC,YAAaA,EACbU,UAAWA,EACXC,WAAYA,EACZC,WAAYA,EACZT,eAAgBA,EAChBI,aAAcA,GA3CH,E,qDA0HT,IAAD,OACL,OACA,kBAACW,EAAD,CAAOxD,MJ1IU,KI0IQC,OJzIP,KI2IVsB,KAAKc,MAAMa,WAAWR,KAAI,SAAAe,GAAM,OAC5B,kBAACC,EAAD,CAAQ7D,UAAW,GAAIC,SAAU,CAACK,IAAIsD,EAAOtD,IAAIC,KAAMqD,EAAOrD,WAIlEmB,KAAKc,MAAMC,YAAYI,KAAI,SAAAiB,GAAM,OAC7B,kBAAC,EAAD,CAAO9D,UAAW,GAAIC,SAAU,CAACK,IAAIwD,EAAOxD,IAAIC,KAAKuD,EAAOvD,MAAOU,MAAO6C,EAAO7C,MAAOQ,qBAAsB,EAAKA,0BAMvHC,KAAKc,MAAMI,eAAeC,KAAI,SAAAkB,GAAK,OAC/B,kBAACC,EAAD,CAAMjC,YAAa,aAAc/B,UAAW,GAAIC,SAAU,CAACK,IAAIyD,EAAMzD,IAAIC,KAAKwD,EAAMxD,WAIxFmB,KAAKc,MAAMQ,aAAaH,KAAI,SAAAoB,GAAK,OAC7B,kBAACD,EAAD,CAAMjC,YAAa,WAAY/B,UAAW,GAAIC,SAAU,CAACK,IAAI2D,EAAM3D,IAAIC,KAAK0D,EAAM1D,gB,GAlJnFsB,IAAMC,WCJLoC,QACW,cAA7BvC,OAAOwC,SAASC,UAEe,UAA7BzC,OAAOwC,SAASC,UAEhBzC,OAAOwC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,CAAMpB,UAAW,IAAKC,WAAY,KAAOoB,SAASC,eAAe,mBD4H3E,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"js/main.6601cd91.chunk.js","sourcesContent":["import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top + 'px',\r\n        left: position.left + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nexport default (props) =>\r\n    <div style={styleoutside(props)}>\r\n        <div style={styleinside(props)}>\r\n            <div style={styleinside2(props)}/>\r\n        </div>\r\n    </div>\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 1200;\r\nexport const MAX_HEIGHT = 680;\r\n\r\nexport const SQUARE_CORE_COLOR = '#ebd5c7';\r\nexport const SQUARE_INNER_COLOR = '#c2aea1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#59544f';","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '25px auto',\r\n        overflow: 'hidden'\r\n    };\r\n\r\n\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\nconst styleoutside = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top + 'px',\r\n        left: position.left + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position,color}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position,color}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            default:\r\n                return;\r\n\r\n\r\n        }\r\n        this.props.handlePlayerMovement(newDirection);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onkeydown = this.handleKeyDown;\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position}) => {\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = '8px';\r\n    }\r\n    else {\r\n        var width = '8px';\r\n        var height = dimension + 'px'\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: position.top + 'px',\r\n        left: position.left + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nexport default (props) =>\r\n    <div style={style(props)}/>\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","\r\nimport React from 'react';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT} from '../constants/constants';\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const {boardSize, playerSize } = props;\r\n        var boardState = [];\r\n        const width = MAX_WIDTH;\r\n        const height = MAX_HEIGHT;\r\n        var wallVerticle = [];\r\n        var wallHorizontal = [];\r\n        var playerState = [];\r\n        playerState.push({top: 0, left: 0, color: 'blue'})\r\n\r\n        for (var i=0;i<width;i+=40) {\r\n            for (var j=0;j<height;j+=40) {\r\n                boardState.push({top: j,left: i});\r\n            }\r\n        }\r\n\r\n        for (var i=0;i<width;i+=40) {\r\n            for (var j=0;j<height;j+=40) {\r\n                if (Math.random() > .90) {\r\n                    wallVerticle.push({top: j,left: i-4});\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var i=0;i<width;i+=40) {\r\n            for (var j=0;j<height;j+=40) {\r\n                if (Math.random() > .90) {\r\n                    wallHorizontal.push({top: j-4,left: i});\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        this.state = {\r\n            playerState: playerState,\r\n            boardSize: boardSize,\r\n            playerSize: playerSize,\r\n            boardState: boardState,\r\n            wallHorizontal: wallHorizontal,\r\n            wallVerticle: wallVerticle,\r\n        };\r\n    }\r\n\r\n    handleCollision = (dirObj) => {\r\n        var newPosition;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var robotX = this.state.playerState[0].left;\r\n                var robotY = this.state.playerState[0].top;\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left == robotX && wall.top < robotY && wall.top > minimumWall) {\r\n                        minimumWall = wall.top + 4;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: 'blue'};\r\n                break;\r\n            case RIGHT:\r\n                var robotX = this.state.playerState[0].left;\r\n                var robotY = this.state.playerState[0].top;\r\n                var minimumWall = MAX_WIDTH - 40;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top == robotY && wall.left > robotX && wall.left < minimumWall) {\r\n                        minimumWall = wall.left - 36;\r\n\r\n                    }\r\n\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: 'blue'};\r\n                break;\r\n            case LEFT:\r\n                var robotX = this.state.playerState[0].left;\r\n                var robotY = this.state.playerState[0].top;\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top == robotY && wall.left < robotX && wall.left > minimumWall) {\r\n                        minimumWall = wall.left + 4;\r\n\r\n                    }\r\n\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: 'blue'};\r\n                break;\r\n            case DOWN:\r\n                var robotX = this.state.playerState[0].left;\r\n                var robotY = this.state.playerState[0].top;\r\n                var minimumWall = MAX_HEIGHT - 40;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left == robotX && wall.top > robotY && wall.top < minimumWall)\r\n                        minimumWall = wall.top - 36;\r\n\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: 'blue'};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        var newPosition = this.handleCollision(dirObj);\r\n        var playerState = this.state.playerState;\r\n        playerState[0] = newPosition;\r\n        this.setState({\r\n            playerState: playerState,\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n        <Board width={MAX_WIDTH} height={MAX_HEIGHT}>\r\n            {\r\n                this.state.boardState.map(square =>\r\n                    <Square dimension={40} position={{top:square.top,left: square.left}}/>\r\n                )\r\n            }\r\n            {\r\n                this.state.playerState.map(player =>\r\n                    <Robot dimension={40} position={{top:player.top,left:player.left}} color={player.color} handlePlayerMovement={this.handlePlayerMovement}/>\r\n                )\r\n\r\n\r\n            }\r\n            {\r\n                this.state.wallHorizontal.map(wallH =>\r\n                    <Wall orientation={'horizontal'} dimension={40} position={{top:wallH.top,left:wallH.left}}/>\r\n                )\r\n            }\r\n            {\r\n                this.state.wallVerticle.map(wallV =>\r\n                    <Wall orientation={'verticle'} dimension={40} position={{top:wallV.top,left:wallV.left}}/>\r\n                )\r\n\r\n            }\r\n        </Board>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Game from './containers/Game';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<Game boardSize={640} playerSize={40}/>, document.getElementById('postscontainer'));\r\n//ReactDOM.render(<ChartZ type={'bar'}/>, document.getElementById('row2'));\r\n//ReactDOM.render(<ChartZ type={'line'}/>, document.getElementById('row3'));\r\n\r\n//ReactDOM.render(<Graph width={400} height={240}/>, document.getElementById('row3'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}