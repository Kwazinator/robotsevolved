{"version":3,"sources":["DarkMode/constants/constants.js","DarkMode/components/DailyMovesView.jsx","DarkMode/components/CreateBoardGoalSelector.jsx","DarkMode/components/LearnGameItems.js","DarkMode/components/MovesView.jsx","DarkMode/components/Square.jsx","DarkMode/components/Board.jsx","DarkMode/components/Robot.jsx","DarkMode/components/Wall.jsx","DarkMode/components/Goal.jsx","DarkMode/components/ColoredLine.jsx","DarkMode/constants/extend.js","DarkMode/components/YouWinModal.jsx","DarkMode/components/YouWinDailySingleModal.js","DarkMode/components/YouWinDailyFinalModal.js","DarkMode/components/AddPuzzleModal.jsx","DarkMode/components/ToggleSettings.js","DarkMode/components/Timer.js","DarkMode/containers/DisplayView.js","DarkMode/components/HighScores.jsx","DarkMode/components/DailyChallengeScores.jsx","DarkMode/containers/Modals/PuzzleRushFinishedModal.js","DarkMode/containers/Modals/RandomGameStatsModal.jsx","DarkMode/components/CloseIconWithOnClick.jsx","DarkMode/components/DescriptionList.jsx","DarkMode/components/YouWinLessonModal.js","DarkMode/components/ShowDailyChallengeScoresCard.jsx","DarkMode/components/DailyChallengeHistoryData.js","DarkMode/components/boardgenerator.js","DarkMode/containers/Modals/BoardResetModal.js","DarkMode/containers/Game.js","DarkMode/Material-UI/themes.jsx","DarkMode/containers/FindGameElements.js","DarkMode/Pages/Home.js","DarkMode/Pages/CreateGame.js","DarkMode/Pages/FindGame.js","DarkMode/Pages/PlayGame.js","DarkMode/containers/Modals/LoginModal.js","DarkMode/components/SignInButton.js","DarkMode/components/LoggedInUser.js","DarkMode/containers/Modals/PuzzleRushDifficultyModal.js","DarkMode/containers/Modals/RandomGameDifficultyPage.js","DarkMode/components/GameListItemView.jsx","DarkMode/components/SearchBarFindGame.jsx","DarkMode/components/ProfilePageComponents/ProfilePageCreatedGamesDetails.js","DarkMode/components/ProfilePageComponents/ProfilePageSolutionDetails.js","DarkMode/Pages/ProfilePage.js","DarkMode/Pages/RandomGamePage.js","DarkMode/Pages/PuzzleRushPage.js","DarkMode/Pages/LessonsPage.js","DarkMode/Pages/DailyChallenge.js","DarkMode/Pages/AboutUs.js","DarkMode/components/ShowDailyPuzzleHistory.js","DarkMode/Pages/DailyChallengeHistory.js","DarkMode/Pages/DailyChallengeHistoryAnswersPage.js","DarkMode/components/LoadingPage.jsx","DarkMode/App.js","constants/constants.js","components/DailyMovesView.jsx","components/CreateBoardGoalSelector.jsx","components/LearnGameItems.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinModal.jsx","components/YouWinDailySingleModal.js","components/YouWinDailyFinalModal.js","components/AddPuzzleModal.jsx","components/ToggleSettings.js","components/Timer.js","containers/DisplayView.js","components/HighScores.jsx","components/DailyChallengeScores.jsx","containers/Modals/PuzzleRushFinishedModal.js","containers/Modals/RandomGameStatsModal.jsx","components/CloseIconWithOnClick.jsx","components/DescriptionList.jsx","components/YouWinLessonModal.js","components/ShowDailyChallengeScoresCard.jsx","components/DailyChallengeHistoryData.js","components/boardgenerator.js","containers/Modals/BoardResetModal.js","containers/Game.js","Pages/CreateGame.js","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","Material-UI/themes.jsx","Pages/Home.js","containers/Modals/LoginModal.js","components/SignInButton.js","components/LoggedInUser.js","containers/Modals/PuzzleRushDifficultyModal.js","containers/Modals/RandomGameDifficultyModal.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","components/ProfilePageComponents/ProfilePageCreatedGamesDetails.js","components/ProfilePageComponents/ProfilePageSolutionDetails.js","Pages/ProfilePage.js","Pages/RandomGamePage.js","Pages/PuzzleRushPage.js","Pages/LessonsPage.js","Pages/DailyChallenge.js","Pages/AboutUs.js","components/ShowDailyPuzzleHistory.js","Pages/DailyChallengeHistory.js","Pages/DailyChallengeHistoryAnswersPage.js","components/LoadingPage.jsx","App.js","ContainerApplication.js","serviceWorker.js","index.js"],"names":["UP","GOAL_IMAGE","DIRECTION_MAP_IMAGES","yellow","DOWN","LEFT","RIGHT","red","green","blue","DailyMovesView","props","resetToBest","moveHistory","playerState","this","length","animate","levels","corners","style","margin","layer","Typography","map","move","src","robot","colorSignifier","dir","Divider","Button","color","variant","onClick","React","Component","CreateBoardGoalSelector","useState","wildchecked","setWildChecked","Paper","FormControl","backgroundColor","textAlign","component","FormLabel","FormGroup","aria-label","row","FormControlLabel","value","control","Checkbox","handleWildCardClick","checked","label","labelPlacement","handleColoredClick","LearnGameItems","handleClick","handleClickGame","index","selected","active","name","MovesView","width","float","display","styleoutside","dimension","position","dim","height","backgroundImage","boxShadow","top","left","Square","border","overflow","children","id","transition","styleoutsidedraggable","styleinside","styleinside2","undefined","backgroundSize","borderRadius","Robot","onStopDragHandler","e","handleCreateMode","isCreateMode","buildMode","x","y","grid","draggableGrid","onStop","bounds","orientation","opacity","wallThickness","wallOffset","Wall","userSelect","styledragable","Goal","show","endPosition","obj","key","hasOwnProperty","YouWinModal","classes","Dialog","PaperProps","overlayStyle","disableAutoFocus","disableEnforceFocus","onClose","handleClose","container","document","getElementById","BackdropProps","aria-labelledby","open","maxWidth","numMoves","TextField","InputProps","className","multilineColor","InputLabelProps","multilineColorLabel","defaultValue","username","DialogActions","submitAnswer","resetPuzzle","withStyles","theme","YouWinDailySingleModal","totalMoves","undoMove","moveNextPuzzle","YouWinDailyFinalModal","handleClickSubmitGame","setState","error","Alert","severity","newPlayerState","state","submitted","AddPuzzleModal","campaignPuzzle","window","userInfo","userID","submitPuzzleCampaign","submitPuzzle","ToggleSettings","event","Switch","onChange","showColoredLineDirections","Timer","minutes","seconds","timer","myInterval","setInterval","puzzleRushTimeUp","clearInterval","valuetext","DisplayView","createMode","fullWidth","handleCreateBoardClick","toggleBuildMode","createBoardPressed","copyToClipboard","dummy","createElement","body","appendChild","location","host","uri","select","execCommand","removeChild","copiedClipboard","thisThing","copyButtonText","setTimeout","handleDimensionChange","getElementsByClassName","blur","parseInt","toString","DimensionChanged","showPuzzleLink","isPuzzleRush","isLesson","isDailyChallengeAnswers","isDailyChallenge","paddingBottom","marginRight","marginTop","marginBottom","ButtonGroup","toggleLineIndicators","fontSize","Slider","onChangeCommitted","getAriaValueText","step","marks","min","max","squareSizeValue","valueLabelDisplay","highscores","Grid","item","xs","marginleft","highscore","level","spacing","comment","userid","created","highscorestyle","score","wins","i","crowns","push","CrownCounter","user_id","direction","PuzzleRushWinModal","closeModal","onBackdropClick","DialogTitle","difficulty","DialogContent","dividers","md","List","dense","ListItem","ListItemText","primary","secondary","numPuzzlesCompleted","averageTime","averageMoves","differenceOptimal","movesPerSecond","handleClickPlayAgain","RandomGameStatsModal","showStatsModal","handleShowRandomAnswers","answers","lowestMoveSequence","lowestMoves","CloseIconWithOnClick","onMouseDown","Descriptionlist","tipsText","text","ListItemSecondaryAction","IconButton","edge","handleCloseToolTips","YouWinLessonModal","useStyles","makeStyles","root","bullet","transform","title","pos","ShowDailyChallengeScoresCard","header","anim","CardContent","bestScore","MovesforPuzzle","MoveSequence","DailyChallengeHistoryData","difficultyforPuzzle","lowestMovesforPuzzle","nameSubmitted","scoreSubmitted","playerMovedSequence","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","type","boardState","wallVerticle","wallHorizontal","goal","randompos1","randompos2","randompos3","randompos4","randomPositions","extend","j","gameWon","playerStart","slice","BoardResetModal","createBoardHandler","preventDefault","percent","createBoard","paddingRight","Input","inputProps","placeholder","addEventListener","keyCode","target","indexOf","formatGeneratedMoveSequence","moves","images","charAt","setDefaultSquareSize","boardWidth","boardHeight","drawerWidth","getComputedStyle","windowWidth","innerWidth","settingstop","innerHeight","settings","squarevalue","ColoredLineDirections","Game","updateHighscores","axios","get","then","res","highscoresdata","JSON","parse","data","FindhighscoreIsDiff","squareSize","copiedToClipboard","check","tocheck","toreturn","DChighscoreIsDiff","updateDailyHighscores","dc_id","dailyChallengeSessionBestHistory","dailyChallengeSessionBestPlayerState","handleClickDailyChallenge","dchighscores","componentDidMount","onkeydown","handleKeyDown","loadedGame","IntervalId","dailyChallengeMode","componentWillUnmount","newDirection","tabSelector","handleUndoMove","handlePlayerMovement","robotSelect","robotSelected","namesubmit","themoveHistory","post","puzzledata","authorname","history","handleLineDirections","solutiondata","dailySubmittedSucessfully","showBoardResetPanelModal","closeRandomStatsModal","closeCreateBoardModal","closePuzzleRushFinishedModal","showPuzzleRushFinishedModal","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","nextLessonPuzzle","puzzle","numPuzzleon","handleLearnClickGame","totalMovesDiff","solutiondifference","totalMovesList","avgMoves","p_id","differenceFrom","console","log","percentile","submitDailyAnswer","LastRobotPosition","moveHistoryList","playerStateList","dc_movesList","dc_playerList","checkwin","coloredGoals","Won","player","found","colorfound","puzzleRush","randomGame","dailyChallengeModeAnswers","gamesWonDaily","games","handleDailyClickGame","learnMode","g_id","solutionmoves","g_moves","g_puzzledata","newarray","concat","oldPositon","prevPosition","splice","description","handleDailyClickAnswersGame","g_solutiondata","g_difficulty","solutionDataSubmitted","goalItem","newgoal","newColoredGoals","filter","trimName","separated","split","word","substring","loadSidebar","fontsize","game","paddingTop","dailyDayName","DailyChallengeScores","gutterBottom","alignItems","author","borderTopRightRadius","borderBottomRightRadius","startIcon","hasVoted","updateLike","size","borderTopLeftRadius","borderBottomLeftRadius","marginLeft","votes","HighScores","action","vote","newHasVoted","newVotes","isNaN","catch","_","signInModalOpen","handlePlayerMovementFromMouse","moveObj","pop","createModeWallClick","indexToChange","newWallHorizontal","wallH","newWallVerticle","wallV","onStopDragHandlerGoal","round","lastY","lastX","newGoals","goals","gamedata","g_name","savedMoves","g_uri","pushState","settingsWidth","settingsHeight","percentWall","settingsPercent","LineDirections","paddingLeft","sm","numPuzzleRush","zeroMinWidth","Board","square","ColoredLineDirection","ColoredLine","puzzleRushPercentileCompleted","withRouter","flexGrow","homepage","griditems","paper","padding","Width","image","img","maxHeight","baseExpansion","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","darkmode","iconcards","marginBotton","iconcardsDaily","minWidth","titlehome","fontFamily","titledailyroto","iconfonts","createboardcard","content","demo","background","centeredProfile","expandedPanelDCH","table","upperPadding","upperPaddingButton","bottom","lowerPadding","rightSideText","leftSideText","handleGameClick","numberOfHighScores","trimNameShort","justifyContent","plays","disableGutters","ComplexGrid","justify","entered","handleClickFindGame","handleClickCreateGame","handleClickRandomGame","handleClickLearnGame","handleClickPuzzleRush","handleClickProfile","handleClickDailyChallengeHistory","handleClickAbout","dividerFullWidth","CreateGame","FindGame","handleFilterMenuOpen","anchorEl","currentTarget","keycode","handleSearchSubmit","scrollTo","findWindowHeight","setFindWindow","scrollY","handleCloseFilterMenuMostPlayed","searchTerm","searchRef","search","offset","gameslist","highscoreslist","setNumFindGames","lastSearch","hasMore","handleCloseFilterMenuMostLiked","handleCloseFilterMenuHighest","loadMoreItems","isLoadingSearch","offsetSearch","handleCloseFilterMenu","align","InputBase","input","inputRef","ref","onKeyPress","iconButton","divider","Menu","keepMounted","Boolean","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","FindGameElements","pageStart","loadMore","bind","loader","CircularProgress","threshold","flex","PlayGame","LoginModal","loginGoogle","href","loginFacebook","closeLoginModal","class","SignInButton","loggedin","textToShow","LoggedInUser","SignInButtonPressed","profilePicture","PuzzleRushDifficultyModal","handleClickPuzzleRushModal","isLoading","handleClickEasyPuzzleRush","handleClickMediumPuzzleRush","handleClickHardPuzzleRush","handleClickExHardPuzzleRush","handleChange","wrap","RadioGroup","Radio","backButton","RandomGameDifficultyPage","handleClickRandomGameModal","handleClickEasy","handleClickMedium","handleClickHard","handleClickExHard","handleClickGodMode","ProfilePageCreatedGamesDetails","handleClickPlayGame","ProfilePageSolutionDetails","solution","WinnerCreated","WinnerUsername","ProfilePage","createData","col1","col2","columns","rows","puzzlerushview","maxeasyc","maxeasyp","maxmediumc","maxmediump","maxhardc","maxhardp","maxexhardc","maxexhardp","rowseff","maxeffec","maxeffep","maxeffmc","maxeffmp","maxeffhc","maxeffhp","maxeffexc","maxeffexp","setError","expandedGame","setExpandedGame","expandedHighscores","setExpandedHighscores","newuser","gamesview","ExpansionPanel","expanded","panel","isExpandedGame","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","solutionsview","isExpandedHighScores","WinnerUserId","TableContainer","Table","TableHead","TableRow","column","TableCell","TableBody","RandomGamePage","PuzzleRushPage","LessonsPage","learngameslist","DailyChallengePage","dailyChallengeGameslist","AboutUs","Card","CardActions","Avatar","alt","paragraph","ShowDailyPuzzleHistory","handleDailyPuzzleHistoryClick","DailyChallengeHistory","expandedPanel","setExpandedPanel","dailychallengehistory","isExpanded","DailyChallengeHistoryAnswersPage","LoadingPage","full","animTime","base","MyApp","handleChatOpen","openChat","chatAnchor","handleChatClose","handleDrawerClose","boolean","loadingPage","isOpen","PageSelected","DailyChallenge","handleDrawerOpen","showLoginModal","showRandomGameModal","closeRandomGameLoginModal","handleHomePageClick","closePuzzleRushLoginModal","showPuzzleRushModal","historydata","challengeHistoryData","dailychallengehistoryloaded","profileData","profileDataloaded","num","filterTerm","numFindGames","numGames","handleClickAboutUs","handleMobileMenuClose","mobileAnchorEl","mobileMenuOpen","showPage","handleMobileMenuOpen","token","linedir","LineDirFlag","getTheme","createTheme","theme2","createMuiTheme","teal","main","pattern","AppBar","clsx","appBar","appBarShift","Toolbar","toolbar1","grow","sectionDesktop","sectionMobile","aria-haspopup","Drawer","drawer","anchor","drawerPaper","drawerHeader","drawerHeaderLeft","drawerHeaderRight","useTheme","button","ListItemIcon","contentShift","right","Popover","frameBorder","withStyles2","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","menuButton","hide","mixins","toolbar","breakpoints","up","toggleBorder","gradient","elevation","Tooltip","CardActionArea","CardMedia","App","noWrap","handleClickDarkMode","RandomGameDifficultyModal","ContainerApplication","Page","render","hostname","match","ReactDOM","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"js/main.8690e73a.chunk.js","sourcesContent":["export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const MOBILE_INNER_SCREEN_WIDTH = '960';\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const COLORED_GOAL_IMAGE = '/static/images/targetbullseye.png';\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {Words,Line,Frame} from 'arwes';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass DailyMovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    resetToBest = () => {\r\n        this.props.resetToBest(this.props.moveHistory,this.props.playerState)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.moveHistory.length == 0 ?\r\n            <Frame animate levels={1} corners={3}>\r\n                <p style={{margin: '15px'}}>\r\n                <Words animate layer='control'>Personal Best</Words>\r\n                <Line animate/>\r\n                <Typography>None</Typography>\r\n                </p>\r\n            </Frame> :\r\n            <Frame animate levels={1} corners={3}>\r\n            <p style={{margin: '15px'}}>\r\n                <Words animate layer='control'>Personal Best</Words>\r\n                <Line animate/>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n                <Divider />\r\n                <Button color=\"secondary\" variant={\"outlined\"} onClick={this.resetToBest}>Reset to best</Button>\r\n                </p>\r\n            </Frame>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyMovesView;","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function CreateBoardGoalSelector(props) {\r\n  const [wildchecked, setWildChecked] = React.useState(true);\r\n  const handleWildCardClick = () => {\r\n    props.handleWildCardClick();\r\n    setWildChecked(wildchecked ? false : true);\r\n  }\r\n\r\n  const handleBlueClick = () => {\r\n    props.handleColoredClick('blue');\r\n  }\r\n  const handleGreenClick = () => {\r\n    props.handleColoredClick('green');\r\n  }\r\n  const handleRedClick = () => {\r\n    props.handleColoredClick('red');\r\n  }\r\n  const handleYellowClick = () => {\r\n    props.handleColoredClick('yellow');\r\n  }\r\n  return (\r\n  <Paper>\r\n    <FormControl style={{backgroundColor: 'white', textAlign: 'center'}} component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Goal Selector</FormLabel>\r\n      <FormGroup aria-label=\"position\" row>\r\n        <FormControlLabel\r\n          value=\"Wildcard\"\r\n          control={<Checkbox onClick={handleWildCardClick} checked={wildchecked} color=\"primary\" />}\r\n          label=\"wildcard\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Blue\"\r\n          control={<Checkbox onClick={handleBlueClick} color=\"primary\" />}\r\n          label=\"blue\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Green\"\r\n          control={<Checkbox onClick={handleGreenClick} color=\"primary\" />}\r\n          label=\"green\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Red\"\r\n          control={<Checkbox onClick={handleRedClick} color=\"primary\" />}\r\n          label=\"red\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Yellow\"\r\n          control={<Checkbox onClick={handleYellowClick} color=\"primary\" />}\r\n          label=\"yellow\"\r\n          labelPlacement=\"top\"\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n    </Paper>\r\n  );\r\n}","import React from 'react';\r\nimport {Button} from 'arwes';\r\n\r\nexport default function LearnGameItems(props) {\r\n    const handleClick = () => {\r\n        props.handleClickGame(props.index)\r\n    }\r\n    if (props.selected === props.index) {\r\n        return (\r\n            <Button animate active={true}\r\n                onClick={handleClick}\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Button animate\r\n                variant=\"contained\"\r\n                onClick={handleClick}\r\n                aria-label=\"vertical outlined primary button group\"\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundImage: '/static/images/background-space.jpg',\r\n        boxShadow: '0 0 0 0.5pt ' + SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundImage: '/static/images/background-space.jpg',\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={styleoutside(this.props)}>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div id=\"MainGameBoard\" style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleoutsidedraggable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var boxShadow = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        boxShadow = '0 0 0 3pt ' + SELECTED_ROBOT;\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        boxShadow: boxShadow,\r\n        backgroundSize: dim,\r\n        backgroundImage: \"url(\" + \"/static/images/astronaut.png\" + \")\",\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    onStopDragHandler = (e, position) => {\r\n        this.props.onStopDragHandler(position,this.props.index);\r\n    }\r\n\r\n\r\n    handleCreateMode = () => {\r\n        if (this.props.isCreateMode === 'Yes' && this.props.buildMode) {\r\n            return (\r\n            <Draggable position={{x: this.props.position.left * this.props.dimension, y:this.props.position.top*this.props.dimension}} grid={this.props.draggableGrid} onStop={this.onStopDragHandler} bounds=\"parent\">\r\n                <div onClick={this.handleClick} style={styleoutsidedraggable(this.props)}>\r\n                    <div style={styleinside(this.props)}>\r\n                        <div style={styleinside2(this.props)}/>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            this.handleCreateMode()\r\n        );\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundImage: 'url(/static/images/concrete2smallsized.jpg)',\r\n        boxShadow: '0 0 0 2pt black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE,ROBOT_GREEN,ROBOT_BLUE,ROBOT_RED,ROBOT_YELLOW,COLORED_GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none',\r\n        backgroundColor: color,\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none',\r\n        backgroundColor: color\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.position == null) {\r\n        return null\r\n    }\r\n    if (props.isCreateMode === 'Yes'  && props.buildMode) {\r\n        const onStopDragHandler = (e, position) => {\r\n            props.onStopDragHandler(position,props.color);\r\n        }\r\n        if (props.color == undefined) {\r\n            return(\r\n            <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n                <img src={GOAL_IMAGE} style={styledragable(props)}/>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n                <img src={COLORED_GOAL_IMAGE} style={styledragable(props)}/>\r\n            </Draggable>\r\n            )\r\n        }\r\n    }\r\n    else {\r\n        if (props.color == undefined) {\r\n            return(<img src={GOAL_IMAGE} style={style(props)}/>)\r\n        }\r\n        else {\r\n            return(<img src={COLORED_GOAL_IMAGE} style={style(props)}/>)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({buildMode,show,dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension + dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension + dimension;\r\n            left = position.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        opacity: show ? '0.5' : '0.0',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default (props) => {\r\n    const handleClick = () => {\r\n        props.handleClick(props.dir)\r\n    }\r\n    if (props.buildMode === 'undefined' || !props.buildMode)\r\n    {\r\n        return (\r\n            <div onClick={handleClick} style={style(props)}/>\r\n        );\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {Frame, Words, Line} from 'arwes';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nconst styles = theme => ({\r\n    multilineColor:{\r\n        color:'#12599b',\r\n    },\r\n    multilineColorLabel:{\r\n        color:'#12599b',\r\n    },\r\n\r\n});\r\n\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n              PaperProps={{\r\n                style: {\r\n                  backgroundColor: \"transparent\",\r\n                  boxShadow: \"none\",\r\n                },\r\n              }}\r\n              overlayStyle={{ backgroundColor: \"transparent\" }}\r\n              disableAutoFocus={true}\r\n              disableEnforceFocus={true}\r\n              onClose={this.handleClose}\r\n              container={() => document.getElementById(\"MainGameBoard\")}\r\n              style={{ position: \"absolute\" }}\r\n              BackdropProps={{ style: { position: \"absolute\" } }}\r\n              aria-labelledby=\"customized-dialog-title\"\r\n              open={this.props.show}\r\n              maxWidth={\"xs\"}\r\n            >\r\n              <div style={{ margin: \"20px\" }}>\r\n                <Frame animate levels={1} corners={3}>\r\n                  <p style={{ margin: \"10px\" }}>\r\n                    <Words animate layer=\"control\">\r\n                      You Win!\r\n                    </Words>\r\n                    <Line animate />\r\n                    <Words animate layer='primary'>{'You used ' + this.props.numMoves + ' Moves!'}</Words><br/>\r\n                    <TextField\r\n                      InputProps={{\r\n                        className: classes.multilineColor,\r\n                      }}\r\n                      InputLabelProps={{\r\n                        className: classes.multilineColorLabel,\r\n                      }}\r\n                      color=\"secondary\"\r\n                      id={\"namesubmitHS\"}\r\n                      label={\"Username\"}\r\n                      defaultValue={this.props.username == '' ? \"Anonymous\" : this.props.username}\r\n                    />\r\n                    <DialogActions>\r\n                      <Button variant=\"outlined\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                      <Button color='secondary' variant='outlined' onClick={this.props.resetPuzzle}>Reset</Button>\r\n                    </DialogActions>\r\n                  </p>\r\n                </Frame>\r\n              </div>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(YouWinModal);","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LearnGameItems from '../components/LearnGameItems';\r\nimport {Words,Line,Frame} from 'arwes';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailySingleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n              PaperProps={{\r\n                style: {\r\n                  backgroundColor: \"transparent\",\r\n                  boxShadow: \"none\",\r\n                },\r\n              }}\r\n              overlayStyle={{ backgroundColor: \"transparent\" }}\r\n              disableAutoFocus={true}\r\n              disableEnforceFocus={true}\r\n              onClose={this.handleClose}\r\n              container={() => document.getElementById(\"MainGameBoard\")}\r\n              style={{ position: \"absolute\" }}\r\n              BackdropProps={{ style: { position: \"absolute\" } }}\r\n              aria-labelledby=\"customized-dialog-title\"\r\n              open={this.props.show}\r\n              maxWidth={\"xs\"}\r\n            >\r\n              <div style={{ margin: \"20px\" }}>\r\n                <Frame animate levels={1} corners={3}>\r\n                  <p style={{ margin: \"10px\" }}>\r\n                    <Words animate layer=\"control\">\r\n                      Completed!\r\n                    </Words>\r\n                    <Line animate />\r\n                    <Words animate layer='primary'>{this.props.numMoves + \" Moves\"}</Words>\r\n                    <Words animate layer='primary'>{\"Total Moves: \" + this.props.totalMoves}</Words>\r\n                    <Words animate layer='alert'>Finish all puzzles to get submit your score!</Words>\r\n                    <Line animate />\r\n                    <DialogActions>\r\n                      <Button variant=\"outlined\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                      <Button variant=\"outlined\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                      <Button variant='outlined' color='secondary' onClick={this.props.resetPuzzle}>Reset</Button>\r\n                    </DialogActions>\r\n                  </p>\r\n                </Frame>\r\n              </div>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailySingleModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {Project, Words,Line,Frame} from 'arwes';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = theme => ({\r\n    multilineColor:{\r\n        color:'#12599b',\r\n    },\r\n    multilineColorLabel:{\r\n        color:'#12599b',\r\n    },\r\n\r\n});\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailyFinalModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null\r\n        }\r\n    }\r\n\r\n    handleClickSubmitGame = () => {\r\n        if (document.getElementById(\"namesubmitHS\").value == '') {\r\n            this.setState({\r\n                error: <Alert severity=\"error\">You must choose a submit name</Alert>\r\n            })\r\n        }\r\n        else {\r\n            this.props.submitAnswer(this.props.newPlayerState);\r\n            this.setState({\r\n                error: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n              PaperProps={{\r\n                style: {\r\n                  backgroundColor: \"transparent\",\r\n                  boxShadow: \"none\",\r\n                },\r\n              }}\r\n              overlayStyle={{ backgroundColor: \"transparent\" }}\r\n              disableAutoFocus={true}\r\n              disableEnforceFocus={true}\r\n              onClose={this.handleClose}\r\n              container={() => document.getElementById(\"MainGameBoard\")}\r\n              style={{ position: \"absolute\" }}\r\n              BackdropProps={{ style: { position: \"absolute\" } }}\r\n              aria-labelledby=\"customized-dialog-title\"\r\n              open={this.props.show}\r\n              maxWidth={\"xs\"}\r\n            >\r\n              <div style={{ margin: \"20px\" }}>\r\n                <Frame animate levels={1} corners={3}>\r\n                  <p style={{ margin: \"10px\" }}>\r\n                    <Words animate layer=\"control\">\r\n                      You Completed the Challenge!\r\n                    </Words>\r\n                    <Line animate />\r\n                    <Words animate layer='primary'>{\"You used \" + this.props.numMoves + \" Moves!\"}</Words>\r\n                    <Line animate />\r\n                    <TextField\r\n                      InputProps={{\r\n                        className: classes.multilineColor,\r\n                      }}\r\n                      InputLabelProps={{\r\n                        className: classes.multilineColorLabel,\r\n                      }}\r\n                      color=\"secondary\"\r\n                      id={\"namesubmitHS\"}\r\n                      label={\"Username\"}\r\n                      defaultValue={this.props.username == '' ? \"Anonymous\" : this.props.username}\r\n                    />\r\n                    {this.state.error}\r\n                    {this.props.submitted}\r\n                    <DialogActions>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={this.props.undoMove}\r\n                      >\r\n                        Undo Move\r\n                      </Button>\r\n                      {this.props.submitted == null ? (\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          color=\"secondary\"\r\n                          onClick={this.handleClickSubmitGame}\r\n                        >\r\n                          Submit Highscore\r\n                        </Button>\r\n                      ) : null}\r\n                      <Button\r\n                        color=\"secondary\"\r\n                        variant=\"outlined\"\r\n                        onClick={this.props.resetPuzzle}\r\n                      >\r\n                        Reset\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </p>\r\n                </Frame>\r\n              </div>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(YouWinDailyFinalModal);","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Frame,Words,Line} from 'arwes';\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nconst styles = theme => ({\r\n    multilineColor:{\r\n        color:'#12599b',\r\n    },\r\n    multilineColorLabel:{\r\n        color:'#12599b',\r\n    },\r\n\r\n});\r\n\r\n\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    campaignPuzzle = () => {\r\n        if (window.userInfo != null) {\r\n            if (window.userInfo.userID == 2 || window.userInfo.userID == 3 || window.userInfo.userID == 7 || window.userInfo.userID == 4) {\r\n                return <Button variant='outlined' color='secondary' onClick={this.props.submitPuzzleCampaign}>Campaign Puzzle</Button>\r\n            }\r\n            else {\r\n                return null\r\n            }\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n              PaperProps={{\r\n                style: {\r\n                  backgroundColor: \"transparent\",\r\n                  boxShadow: \"none\",\r\n                },\r\n              }}\r\n              overlayStyle={{ backgroundColor: \"transparent\" }}\r\n              disableAutoFocus={true}\r\n              disableEnforceFocus={true}\r\n              onClose={this.handleClose}\r\n              container={() => document.getElementById(\"MainGameBoard\")}\r\n              style={{ position: \"absolute\" }}\r\n              BackdropProps={{ style: { position: \"absolute\" } }}\r\n              aria-labelledby=\"customized-dialog-title\"\r\n              open={this.props.show}\r\n              maxWidth={\"xs\"}\r\n            >\r\n              <div style={{ margin: \"20px\" }}>\r\n                <Frame animate levels={1} corners={3}>\r\n                  <p style={{ margin: \"10px\" }}>\r\n                    <Words animate layer=\"control\">\r\n                      Submit Puzzle\r\n                    </Words>\r\n                    <Line animate />\r\n                    <TextField\r\n                      InputProps={{\r\n                        className: classes.multilineColor,\r\n                      }}\r\n                      InputLabelProps={{\r\n                        className: classes.multilineColorLabel,\r\n                      }}\r\n                      color=\"secondary\"\r\n                      id={\"namesubmit\"}\r\n                      label={\"Name of Puzzle\"}\r\n                      defaultValue={\"PuzzleName\"}\r\n                    />\r\n                    <DialogActions>\r\n                      <Button variant=\"outlined\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                      <Button variant='outlined' color='secondary' onClick={this.props.resetPuzzle}>Reset</Button>\r\n                      {this.campaignPuzzle()}\r\n                    </DialogActions>\r\n                  </p>\r\n                </Frame>\r\n              </div>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AddPuzzleModal);\r\n","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Path Indicators\"\r\n                    checked={this.props.showColoredLineDirections}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n\r\n    state = {\r\n            minutes: 5,\r\n            seconds: 0,\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.puzzleRushTimeUp();\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    timer = () => {\r\n        if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n            return (<h2>Time is up!</h2>)\r\n        }\r\n        else {\r\n            return(\r\n                <h2>Time Remaining: {this.state.minutes}:{this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds}</h2>)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            this.timer()\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Line,Project,Words,Arwes} from 'arwes';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ToggleSettings from \"../components/ToggleSettings\";\r\nimport Timer from \"../components/Timer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                        copyButtonText: \"Copy Puzzle Link\"\r\n                     };\r\n        this.state.uri = this.props.isDailyChallenge === 'Yes' ? 'dailychallenge' : this.props.uri;\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <div>\r\n                    <Button color=\"secondary\" variant={\"outlined\"} fullWidth={true} onClick={this.handleCreateBoardClick}>Modify Board</Button>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Switch color=\"primary\" checked={this.props.buildMode} onChange={this.props.toggleBuildMode}/>}\r\n                        label=\"Build Mode\"\r\n                            />\r\n                    <Line animate />\r\n                </div>\r\n\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.state.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        document.getElementsByClassName(\"MuiSlider-thumb\")[0].blur();\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n    showPuzzleLink = () => {\r\n        if (this.props.createMode === 'Yes' || this.props.isPuzzleRush === 'Yes' || this.props.isLesson === 'Yes' || this.props.isDailyChallengeAnswers === 'Yes' || this.props.isDailyChallenge === 'Yes') {\r\n            return null;\r\n        }\r\n        else {\r\n                return(\r\n                     <div style={{paddingBottom: '10px'}}>\r\n                         <Button fullWidth={true} variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                                 onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                     </div>\r\n                    )\r\n        }\r\n    }\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                {this.showPuzzleLink()}\r\n                 <Line animate />\r\n                 <Words animate layer='control'>\r\n                         Board Actions\r\n                 </Words>\r\n                 <ButtonGroup fullWidth={true} color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     <Button onClick={this.props.undoMove}>Undo</Button>\r\n                 </ButtonGroup>\r\n                 {this.isCreateMode(this.props.createMode)}\r\n                 <ToggleSettings showColoredLineDirections={this.props.showColoredLineDirections} onClick={this.props.toggleLineIndicators}/>\r\n                 <div style={buttonPanel()}>\r\n                     <Words animate style={{fontSize: '15px'}} layer='control'>\r\n                         Size Of Board\r\n                     </Words>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={this.props.squareSizeValue}\r\n                         valueLabelDisplay=\"auto\"\r\n                         id=\"sliderelement\"\r\n                     />\r\n                 </div>\r\n                 <Line animate />\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { GoVerified } from \"react-icons/go\";\r\nimport {Frame,Words} from 'arwes';\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n}\r\n\r\nconst paperstyle = () => {\r\n    return {\r\n        marginBottom: '15px'\r\n    }\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n                <Frame animate level={1} corners={3}>\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={12}>\r\n                        <Words animate layer='control'>{highscore.comment + ' - ' + highscore.numMoves}</Words>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                            {highscore.userid != 1 ? <GoVerified/> : null}\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.created}</Typography>\r\n                    </Grid>\r\n                 </Grid>\r\n                </Frame>\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid item xs={12} style={styleouter()}>\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { GoVerified } from \"react-icons/go\";\r\nimport {Frame, Words} from 'arwes';\r\n\r\n\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginTop: '30px',\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst CrownCounter = highscore => {\r\n    var crowns = []\r\n    var i;\r\n    for (i=0; i<highscore.wins;i++) {\r\n        crowns.push(<FaCrown/>);\r\n    }\r\n    return (\r\n        <div>\r\n            {crowns}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n                    <Grid item xs={12}>\r\n                        <Frame animate level={1} corners={3}>\r\n                            <Grid container spacing={0}>\r\n                                <Words animate layer='control'>{highscore.name + ' - ' + highscore.score}</Words>\r\n                                <Grid item xs={6}>\r\n                                        {highscore.wins == 0 || highscore.wins == null ? null : CrownCounter(highscore) }\r\n                                        {highscore.user_id != 1 ? <GoVerified/> : null}\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Typography color={'secondary'} variant={'body2'}>{highscore.submitted}</Typography>\r\n                                </Grid>\r\n                             </Grid>\r\n                        </Frame>\r\n                    </Grid>\r\n            )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid style={styleouter()} container direction={'column'} spacing={1}>\r\n        {\r\n                highscores.map(highscore =>\r\n                    highscorestyle(highscore)\r\n                )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nclass PuzzleRushWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Puzzle Rush - {this.props.difficulty}</DialogTitle>\r\n                <DialogContent dividers>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"h6\">\r\n                            Statistics\r\n                          </Typography>\r\n                          <div>\r\n                            <List dense={true}>\r\n\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Number of Puzzles Completed\"\r\n                                    secondary={this.props.numPuzzlesCompleted}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average time Per Puzzle\"\r\n                                    secondary={this.props.averageTime}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average Moves per Puzzle\"\r\n                                    secondary={this.props.averageMoves}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Efficiency Score: puzzles * 7 - redundant moves from best\"\r\n                                    secondary={(this.props.numPuzzlesCompleted * 7) - this.props.differenceOptimal}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Moves Per Second\"\r\n                                    secondary={this.props.movesPerSecond}\r\n                                  />\r\n                                </ListItem>\r\n                            </List>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.handleClickPlayAgain}>Play Again!</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushWinModal;\r\n\r\n","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../../constants/constants';\r\n\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass RandomGameStatsModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answers: null,\r\n        }\r\n    }\r\n\r\n    showStatsModal = () => {\r\n        this.props.handleShowRandomAnswers()\r\n        this.setState({\r\n            answers: this.props.lowestMoveSequence\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-random\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        lowest possible moves: {this.props.lowestMoves}\r\n                    </div>\r\n                    {this.state.answers}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.showStatsModal}>Show Puzzle Answers</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomGameStatsModal;","import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nexport default function CloseIconWithOnClick(props) {\r\n    const handleClose = () => {\r\n        props.handleClose(props.index);\r\n    }\r\n    return (<CloseIcon onMouseDown={handleClose}/>\r\n    )\r\n}","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport CloseIconWithOnClick from './CloseIconWithOnClick';\r\nimport {Words} from 'arwes';\r\n\r\nexport default function Descriptionlist(props) {\r\n    return(\r\n            <List>\r\n              {\r\n                  props.tipsText.map((text,index) =>\r\n                    <ListItem>\r\n                      <Words animate>\r\n                        {text}\r\n                      </Words>\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                          <CloseIconWithOnClick color='secondary' index={index} handleClose={props.handleCloseToolTips}/>\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  )\r\n              }\r\n            </List>\r\n    )\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Words,Line,Frame} from 'arwes';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinLessonModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n              PaperProps={{\r\n                style: {\r\n                  backgroundColor: \"transparent\",\r\n                  boxShadow: \"none\",\r\n                },\r\n              }}\r\n              overlayStyle={{ backgroundColor: \"transparent\" }}\r\n              disableAutoFocus={true}\r\n              disableEnforceFocus={true}\r\n              onClose={this.handleClose}\r\n              container={() => document.getElementById(\"MainGameBoard\")}\r\n              style={{ position: \"absolute\" }}\r\n              BackdropProps={{ style: { position: \"absolute\" } }}\r\n              aria-labelledby=\"customized-dialog-title\"\r\n              open={this.props.show}\r\n              maxWidth={\"xs\"}\r\n            >\r\n              <div style={{ margin: \"20px\" }}>\r\n                <Frame animate levels={1} corners={3}>\r\n                  <p style={{ margin: \"10px\" }}>\r\n                    <Words animate layer=\"control\">\r\n                      You Win!\r\n                    </Words>\r\n                    <Line animate />\r\n                    <Words animate layer='primary'>{'You used ' + this.props.numMoves + ' Moves!'}</Words><br/>\r\n                    <Words animate layer='primary'>Move on to the next one!</Words>\r\n                    <DialogActions>\r\n                      <Button variant=\"outlined\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                      <Button color='secondary' variant='outlined' onClick={this.props.resetPuzzle}>Reset</Button>\r\n                    </DialogActions>\r\n                  </p>\r\n                </Frame>\r\n              </div>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinLessonModal;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Project,Words} from 'arwes';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: '0 10px'\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 25,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function ShowDailyChallengeScoresCard(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n            <Project\r\n                        animate\r\n                        header={props.name}\r\n                    >\r\n                    {anim => (\r\n                        <p>\r\n                              <CardContent>\r\n                                <Typography style={{marginBottom: '30px'}} variant=\"h5\" component=\"h2\">\r\n                                  {props.bestScore}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" component=\"p\">\r\n                                  {props.MovesforPuzzle}\r\n                                  <br/>\r\n                                  {props.MoveSequence}\r\n                                  <br />\r\n                                </Typography>\r\n                              </CardContent>\r\n                        </p>\r\n                    )}\r\n            </Project>\r\n  );\r\n}","import React from 'react';\r\nimport MovesView from '../components/MovesView';\r\nimport ShowDailyChallengeScoreCard from '../components/ShowDailyChallengeScoresCard'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst stylebelow = () => {\r\n    return {\r\n        marginTop: '40px',\r\n        marginBottom: '20px'\r\n    }\r\n}\r\n\r\nclass DailyChallengeHistoryData extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography style={stylebelow()} variant=\"h4\"> {this.props.difficultyforPuzzle} </Typography>\r\n                <ShowDailyChallengeScoreCard\r\n                    name={\"Robot God\"}\r\n                    bestScore={this.props.bestScore}\r\n                    MovesforPuzzle={this.props.lowestMovesforPuzzle}\r\n                    MoveSequence={this.props.lowestMoveSequence}\r\n                />\r\n                <ShowDailyChallengeScoreCard\r\n                    name={this.props.nameSubmitted}\r\n                    bestScore={this.props.scoreSubmitted}\r\n                    MovesforPuzzle={null}\r\n                    MoveSequence={<MovesView\r\n                                        moveHistory={this.props.playerMovedSequence} playerState={[{colorSignifier: \"blue\"},{colorSignifier: \"green\"},{colorSignifier: \"red\"},{colorSignifier: \"yellow\"}]}\r\n                                  />}\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyChallengeHistoryData;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent,type) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    if (type === 'blank') {\r\n        var goal = {top: height-1, left: width-1};\r\n        var randompos1 = {top: 0,left: 0, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n        var randompos2 = {top: 0,left: 1, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n        var randompos3 = {top: 1,left: 0, color: ROBOT_RED, colorSignifier: 'red'};\r\n        var randompos4 = {top: 1,left: 1, color: ROBOT_YELLOW, colorSignifier:'yellow'};\r\n    }\r\n    else {\r\n        var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n        var randomPositions = [goal];\r\n        for (var i=0;i<5;i++) {\r\n            randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n        }\r\n        var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n        var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n        var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n        var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    }\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport DailyMovesView from '../components/DailyMovesView';\r\nimport CreateBoardGoalSelector from '../components/CreateBoardGoalSelector';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {withRouter} from 'react-router';\r\nimport Draggable from 'react-draggable';\r\nimport LearnGameItems from '../components/LearnGameItems';\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport YouWinDailySingleModal from '../components/YouWinDailySingleModal';\r\nimport YouWinDailyFinalModal from '../components/YouWinDailyFinalModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport PuzzleRushWinModal from '../containers/Modals/PuzzleRushFinishedModal';\r\nimport RandomGameStatsModal from '../containers/Modals/RandomGameStatsModal';\r\nimport DescriptionList from '../components/DescriptionList';\r\nimport YouWinLessonModal from '../components/YouWinLessonModal';\r\nimport DailyChallengeHistoryData from '../components/DailyChallengeHistoryData';\r\nimport Timer from \"../components/Timer\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR,\r\n    MOBILE_INNER_SCREEN_WIDTH\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport {Words} from 'arwes';\r\n\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if(e.keyCode == 32 && e.target == document.body) {\r\n    e.preventDefault();\r\n  }\r\n    if([37, 38, 39, 40, 9,13].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n    }\r\n}\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\nconst formatGeneratedMoveSequence = (moves) => {\r\n    var images = []\r\n    moves.map(move => {\r\n        var color = move.charAt(0);\r\n        var direction = move.charAt(1);\r\n        if (color == 'B') {\r\n            color = 'blue'\r\n        }\r\n        else if (color == 'R') {\r\n            color = 'red'\r\n        }\r\n        else if (color == 'Y') {\r\n            color = 'yellow'\r\n        }\r\n        else {\r\n            color = 'green'\r\n        }\r\n        if (direction == 'N') {\r\n            direction = UP\r\n        }\r\n        else if (direction == 'S') {\r\n            direction = DOWN\r\n        }\r\n        else if (direction == 'E') {\r\n            direction = RIGHT\r\n        }\r\n        else {\r\n            direction = LEFT\r\n        }\r\n        images.push(<img src={DIRECTION_MAP_IMAGES[color][direction]}/>)\r\n    });\r\n    return images\r\n}\r\n\r\n\r\nconst setDefaultSquareSize = (boardWidth,boardHeight) => {\r\n    const drawerWidth = document.getElementById(\"MainDrawer\") == null ? 140 : parseInt(getComputedStyle(document.getElementById(\"MainDrawer\")).width);\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n    var settingstop = windowHeight - 120;\r\n\r\n    settingstop = settingstop / boardHeight\r\n    settingstop = parseInt(settingstop);\r\n    settingstop = settingstop - (settingstop % 4)\r\n\r\n    var settings = ((windowWidth < MOBILE_INNER_SCREEN_WIDTH) ? windowWidth - 20 : (windowWidth - drawerWidth) / 1.75);\r\n    settings = settings / boardWidth;\r\n    settings = parseInt(settings);\r\n    settings = settings - (settings % 4);\r\n    var squarevalue = settings > settingstop ? settingstop : settings\r\n    if (squarevalue < 16) {\r\n        squarevalue = 16;\r\n    }\r\n    else if (squarevalue > 52) {\r\n        squarevalue = 52;\r\n    }\r\n    return squarevalue;\r\n};\r\n\r\nconst ColoredLineDirections = [LEFT,RIGHT,UP,DOWN]\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.puzzleRush === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.p_id = this.props.p_id;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = []\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            this.state.moveHistoryList=[];\r\n\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[0].g_solutiondata))\r\n            this.state.lowestMovesforPuzzle = this.props.games[0].g_moves\r\n            this.state.difficultyforPuzzle = this.props.games[0].g_difficulty\r\n            this.state.playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[0]\r\n\r\n            this.state.playerStateList = [];\r\n            this.state.tipsText = [];\r\n            this.state.highscores = [];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.dailyDayName = this.props.games[0].g_name\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            if (this.props.savedMoves != null) {\r\n                this.state.moveHistoryList = this.props.savedMoves\r\n                this.state.gamesWonDaily = [true,true,true,true]\r\n                this.state.moveHistory = this.props.savedMoves[0].slice()\r\n                this.state.playerState = this.props.playerStateList[0].slice()\r\n            }\r\n            else {\r\n                this.state.moveHistoryList=[];\r\n            }\r\n            this.state.playerStateList = this.props.playerStateList != null ? this.props.playerStateList : [];\r\n            this.state.tipsText = ['Winners who are Logged in will receive a Crown','See about page for details on the daily challenge difficulty','Puzzles reset at 3PM EST, the page will refresh automatically'];\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.dc_id = this.props.dc_id;\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.game.g_puzzledata)\r\n            this.state.lowestMoves = this.props.game.g_moves\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.game.g_solutiondata))\r\n            this.state.difficulty = this.props.game.g_difficulty\r\n            this.state.createMode = 'No';\r\n            this.state.gameWon = false;\r\n            this.state.buildMode = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = ['this game was randomly generated'];\r\n            this.state.uri = this.props.game.g_uri;\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n            window.history.pushState({id: 'Random Game'},'RobotsEvolved | Random Game','/play/' + this.props.game.g_uri)\r\n        }\r\n        else if (this.props.learnMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [this.props.games[0].description];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.votes = this.props.votes\r\n            this.state.hasVoted = this.props.hasVoted\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.buildMode = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n            window.history.pushState({id: 'Play Game'},'RobotsEvolved | Play Game','/play/'+ this.props.uri)\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,1,'blank');\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                buildMode: true,\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false,\r\n                tipsText: [\r\n                                        'Click on Wall spots to toggle',\r\n                                        'Click and Drag robots or goal to move robots',\r\n                                        'When you are ready, toggle build mode in order to solve the puzzle',\r\n                                        'You must solve the puzzle in order to submit.']\r\n            },board);\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.coloredGoals = [];\r\n        }\r\n        this.state.showColoredLineDirections = this.props.LineDirections;\r\n        if (this.state.coloredGoals == undefined) {\r\n            this.state.coloredGoals = [];\r\n        }\r\n    };\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                const highscoresdata = JSON.parse(res.data.highscores)\r\n                if (this.FindhighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    FindhighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.numMoves != check[index].numMoves) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n\r\n    DChighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.score != check[index].score) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n    updateDailyHighscores = () => {\r\n        axios.get('/dailychallengehighscores?dc_id=' + this.state.dc_id)\r\n            .then( res => {\r\n                if (res.data.dc_id != this.state.dc_id) {\r\n                    window.dailyChallengeSessionBestHistory = [[],[],[],[]];\r\n                    window.dailyChallengeSessionBestPlayerState = [[],[],[],[]];\r\n                    this.props.handleClickDailyChallenge();\r\n                    return\r\n                }\r\n                const highscoresdata = JSON.parse(res.data.highscores)//PoorMan's global redux implementation\r\n                if (this.DChighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                    window.dchighscores = JSON.parse(res.data.highscores)\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.updateHighscores();\r\n            var IntervalId = setInterval(this.updateHighscores, 8000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.updateDailyHighscores();\r\n            var IntervalId = setInterval(this.updateDailyHighscores, 6000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.tabSelector();\r\n                return;\r\n                break;\r\n            case 81:\r\n                if (!this.state.gameWon) {\r\n                    this.handleUndoMove();\r\n                }\r\n                break;\r\n                return;\r\n            case 87:\r\n                if (!this.state.gameWon) {\r\n                    this.resetPuzzle();\r\n                }\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n        }\r\n        this.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzleCampaign = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        var themoveHistory = this.state.moveHistory.slice()\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.userInfo !== null) {\r\n            username = window.userInfo.username\r\n        }\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username,moveHistory: themoveHistory,type: 'Campaign'}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        var themoveHistory = this.state.moveHistory.slice()\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.userInfo !== null) {\r\n            username = window.userInfo.username\r\n        }\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username,moveHistory: themoveHistory,type: 'type'}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.showColoredLineDirections === true) {\r\n            this.setState({\r\n                showColoredLineDirections: false,\r\n            });\r\n            this.props.handleLineDirections(false)\r\n        }\r\n        else {\r\n            this.setState({\r\n                showColoredLineDirections: true,\r\n            });\r\n            this.props.handleLineDirections(true)\r\n        }\r\n    };\r\n\r\n    toggleBuildMode = () => {\r\n        if (this.state.buildMode) {\r\n            this.setState({\r\n                buildMode: false,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n                buildMode: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length,solutiondata: this.state.moveHistory,name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            dailySubmittedSucessfully: null\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeRandomStatsModal = event => {\r\n        this.setState({\r\n            closeRandomStatsModal: false,\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    }\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushFinishedModal = event => {\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: false\r\n        });\r\n\r\n    }\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent, 'blank');\r\n        var squareSize = setDefaultSquareSize(width,height);\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n            squareSize: squareSize,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n    showStatsModal = () => {\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            showStatsModal: true,\r\n        });\r\n    }\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n    nextLessonPuzzle  = () => {\r\n        var puzzle = this.state.numPuzzleon;\r\n        puzzle += 1;\r\n        puzzle = puzzle == 4 ? 5 : puzzle;\r\n        puzzle = puzzle == 7 ? 8 : puzzle;\r\n        this.handleLearnClickGame(puzzle % 12);\r\n    }\r\n\r\n    puzzleRushTimeUp = () => {\r\n        var totalMovesDiff = 0;\r\n        this.state.solutiondifference.map(numMoves => {\r\n            totalMovesDiff += numMoves;\r\n        });\r\n        var averageTime = parseInt(300 / (this.state.numPuzzleon))\r\n        var totalMoves = 0;\r\n        this.state.totalMovesList.map(numMoves => {\r\n            totalMoves += numMoves\r\n        });\r\n        var avgMoves = parseInt(totalMoves / (this.state.numPuzzleon))\r\n        var movesPerSecond = totalMoves / 300;\r\n\r\n        axios.post('/puzzlerushend', {p_id: this.state.p_id,totalMoves: totalMoves,differenceFrom: totalMovesDiff})\r\n            .then( res => {\r\n                console.log(res.data);\r\n            });\r\n\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: true,\r\n            numPuzzlesCompleted: this.state.numPuzzleon,\r\n            percentile: 'TBD%',\r\n            averageTime: averageTime + 's',\r\n            averageMoves: avgMoves,\r\n            differenceOptimal: totalMovesDiff,\r\n            movesPerSecond: movesPerSecond\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    submitDailyAnswer = (LastRobotPosition) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            numMoves += moveHistory.length\r\n        });\r\n        var playerStateList = this.state.playerStateList.slice()\r\n        playerStateList[this.state.numPuzzleon] = LastRobotPosition.slice()\r\n        console.log(playerStateList);\r\n        axios.post('/dailychallenge', {score: numMoves, name: document.getElementById(\"namesubmitHS\").value, solutiondata: moveHistoryList, dc_id: this.state.dc_id, playerStateList: playerStateList})\r\n            .then( res => {\r\n                this.setState({\r\n                    dailySubmittedSucessfully: <Alert severity=\"success\">Submitted!</Alert>\r\n                });\r\n            });\r\n        window.dc_movesList = moveHistoryList;\r\n        window.dc_playerList = playerStateList;\r\n        this.state.gameWon = false;\r\n    }\r\n\r\n    checkwin = (newPlayerState) => {\r\n        if (this.state.goal != null && this.state.coloredGoals == null) {\r\n            var Won = false;\r\n            newPlayerState.map((player) => {\r\n                if (player.top === this.state.goal.top && player.left === this.state.goal.left) {\r\n                    Won = true;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            if (this.state.goal != null) {\r\n                var Won = false;\r\n                newPlayerState.map((player) => {\r\n                    if (player.top === this.state.goal.top && player.left === this.state.goal.left) {\r\n                        Won = true;\r\n                    }\r\n                });\r\n            }\r\n            else if (this.state.coloredGoals.length == 0) {\r\n                var Won = false;\r\n            }\r\n            else {\r\n                var Won = true;\r\n            }\r\n            var found = false;\r\n            var colorfound = false;\r\n            newPlayerState.map((player) => {\r\n                found = false\r\n                colorfound = false\r\n                this.state.coloredGoals.map(goal => {\r\n                    if (goal.colorSignifier == player.colorSignifier && goal.top === player.top && goal.left === player.left) {\r\n                        found = true;\r\n                    }\r\n                    if (goal.colorSignifier == player.colorSignifier) {\r\n                        colorfound = true;\r\n                    }\r\n                });\r\n                if (!found && colorfound) {\r\n                    Won = false;\r\n                }\r\n            });\r\n        }\r\n        if (Won) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No' && this.props.puzzleRush !== 'Yes') {\r\n                var username = '';\r\n                if (window.userInfo !== null) {\r\n                    username = window.userInfo.username\r\n                }\r\n                if (this.props.randomGame === 'Yes') {\r\n                    return (\r\n                        <RandomGameStatsModal\r\n                            show={this.state.gameWon}\r\n                            lowestMoves={this.state.lowestMoves}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            numMoves={this.state.moveHistory.length}\r\n                            difficulty={this.state.difficulty}\r\n                            resetPuzzle={this.resetPuzzle}\r\n                            handleShowRandomAnswers={this.handleShowRandomAnswers}\r\n                        />\r\n                    );\r\n                }\r\n                else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n                    return null\r\n                }\r\n                else if (this.props.dailyChallengeMode === 'Yes') {\r\n                    var Won=true\r\n                    if (window.dailyChallengeSessionBestHistory[this.state.numPuzzleon].length == 0 || this.state.moveHistory.length < window.dailyChallengeSessionBestHistory[this.state.numPuzzleon].length) {\r\n                        window.dailyChallengeSessionBestHistory[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n                        window.dailyChallengeSessionBestPlayerState[this.state.numPuzzleon] = this.state.playerState.slice()\r\n                    }\r\n                    this.state.gamesWonDaily.map((gameWon,index) => {\r\n                        if (!(index == this.state.numPuzzleon) && !gameWon) {\r\n                            Won = false\r\n                        }\r\n                    });\r\n                    var moveHistoryList = this.state.moveHistoryList\r\n                    moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory\r\n                    var numMoves = 0\r\n                    moveHistoryList.map(moveHistory => {\r\n                        numMoves += moveHistory.length\r\n                    });\r\n                    return (Won ? <YouWinDailyFinalModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={numMoves}\r\n                        submitAnswer={this.submitDailyAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                        undoMove={this.handleUndoMove}\r\n                        newPlayerState={newPlayerState}\r\n                        submitted={this.state.dailySubmittedSucessfully}\r\n                    /> : <YouWinDailySingleModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        totalMoves={numMoves}\r\n                        undoMove={this.handleUndoMove}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        games={this.state.games}\r\n                        handleClickGame={this.handleDailyClickGame}\r\n                        numPuzzleon={this.state.numPuzzleon}\r\n                        moveNextPuzzle={this.moveNextPuzzle}\r\n                    />);\r\n                }\r\n                else if (this.props.learnMode === 'Yes') {\r\n                    return  (<YouWinLessonModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        moveNextPuzzle={this.nextLessonPuzzle}\r\n                    />);\r\n                }\r\n                else {\r\n                    return  (<YouWinModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        submitAnswer={this.submitAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                    />);\r\n                }\r\n            }\r\n            else if (this.props.puzzleRush === 'Yes'){\r\n                axios.post('/puzzlerushsubmit', {p_id: this.state.p_id,g_id:this.state.games[this.state.numPuzzleon].g_id, moveHistory: this.state.moveHistory})\r\n                    .then( res => {\r\n                        console.log(res.data);\r\n                    });\r\n                var totalMoves = this.state.moveHistory.slice().length\r\n                var totalMovesList = this.state.totalMovesList\r\n                totalMovesList.push(totalMoves)\r\n                var solutionmoves = totalMoves - this.state.games[this.state.numPuzzleon].g_moves\r\n                var solutiondifference = this.state.solutiondifference\r\n                solutiondifference.push(solutionmoves)\r\n                var puzzledata = JSON.parse(this.state.games[this.state.numPuzzleon + 1].g_puzzledata)\r\n                if (this.state.numPuzzleon + 10 > this.state.games.length) {\r\n                    axios.get('/puzzlerushgetmore?p_id=' + this.props.p_id + '&difficulty=' + this.props.difficulty)\r\n                        .then( res => {\r\n                                var games = JSON.parse(res.data.games);\r\n                                var stategames = this.state.games\r\n                                var newarray = stategames.concat(games)\r\n                                this.setState({\r\n                                    games: newarray\r\n                                });\r\n                        });\r\n                }\r\n                this.setState(\r\n                    extend(puzzledata,{numPuzzleon: this.state.numPuzzleon + 1, playerState: puzzledata.playerStart.slice(), gameWon: false, solutiondifference: solutiondifference, totalMovesList: totalMovesList})\r\n                );\r\n\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                    submitPuzzleCampaign={this.submitPuzzleCampaign}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handleShowRandomAnswers = () => {\r\n        this.setState({\r\n            tipsText: [this.state.lowestMoveSequence]\r\n        })\r\n    }\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false && !this.state.buildMode) {\r\n            var oldPositon = {left: this.state.playerState[this.state.robotSelected].left, top: this.state.playerState[this.state.robotSelected].top};\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left) && !this.state.buildMode) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier,\r\n                    prevPosition: oldPositon\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseToolTips = (index) => {\r\n        this.state.tipsText.splice(index,1);\r\n        this.setState({\r\n            tipsText: this.state.tipsText,\r\n        });\r\n    }\r\n\r\n    moveNextPuzzle = () => {\r\n        this.handleDailyClickGame((this.state.numPuzzleon + 1) % 4)\r\n    }\r\n\r\n    handleLearnClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].puzzledata);\r\n        var squareSize = setDefaultSquareSize(puzzledata.width,puzzledata.height);\r\n        this.setState(\r\n            extend(puzzledata,{buildMode: false,squareSize: squareSize, numPuzzleon: index, moveHistory: [], gameWon: false, playerState: puzzledata.playerStart.slice(),tipsText: [this.props.games[index].description]})\r\n        );\r\n    }\r\n\r\n    handleDailyClickAnswersGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n        var lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[index].g_solutiondata))\r\n        var lowestMovesforPuzzle = this.props.games[index].g_moves\r\n        var difficultyforPuzzle = this.props.games[index].g_difficulty\r\n        var playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[index]\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory,\r\n                    gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily,\r\n                    lowestMoveSequence: lowestMoveSequence, lowestMovesforPuzzle: lowestMovesforPuzzle, difficultyforPuzzle: difficultyforPuzzle,\r\n                    playerMovedSequence: playerMovedSequence})\r\n        );\r\n    }\r\n\r\n    handleDailyClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily})\r\n        );\r\n    }\r\n\r\n\r\n    handleWildCardClick = () => {\r\n        if (this.state.goal == null) {\r\n            this.setState({\r\n                goal: {top: this.state.height - 1, left: this.state.width - 1}\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                goal: null\r\n            });\r\n        }\r\n        this.resetPuzzle();\r\n    }\r\n\r\n    resetToBest = (moveHistory, playerState) => {\r\n        this.setState({\r\n            moveHistory: moveHistory,\r\n            playerState: playerState,\r\n        });\r\n    }\r\n\r\n    handleColoredClick = (colorSignifier) => {\r\n        var goal = null;\r\n        this.state.coloredGoals.map(goalItem => {\r\n            if (colorSignifier == goalItem.colorSignifier) {\r\n                goal = goalItem;\r\n            }\r\n        })\r\n        if (goal == null) {\r\n            var newColoredGoals = this.state.coloredGoals;\r\n            var newgoal\r\n            switch (colorSignifier) {\r\n                case 'blue':\r\n                    newgoal = {top: this.state.height - 2, left: this.state.width - 2, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n                    break;\r\n                case 'green':\r\n                    newgoal = {top: this.state.height - 1, left: this.state.width - 2, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n                    break;\r\n                case 'red':\r\n                    newgoal = {top: this.state.height - 2, left: this.state.width - 1, color: ROBOT_RED, colorSignifier: 'red'};\r\n                    break;\r\n                case 'yellow':\r\n                    newgoal = {top: this.state.height - 3, left: this.state.width - 3, color: ROBOT_YELLOW, colorSignifier: 'yellow'};\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            newColoredGoals.push(newgoal);\r\n            this.setState({\r\n                coloredGoals: newColoredGoals\r\n            });\r\n        }\r\n        else {\r\n            var newColoredGoals = this.state.coloredGoals.filter(goalItem =>\r\n                colorSignifier != goalItem.colorSignifier\r\n            );\r\n            console.log(newColoredGoals);\r\n            this.setState({\r\n                coloredGoals: newColoredGoals\r\n            });\r\n        }\r\n        this.resetPuzzle();\r\n    }\r\n\r\n    trimName = name => {\r\n        var separated = (name + '').split(\" \")\r\n        var toreturn = '';\r\n        separated.map((word) => {\r\n            if (word.length > 17)\r\n                toreturn += word.substring(0, 17) + \"...\" + ' ';\r\n            else {\r\n                toreturn += word + ' '\r\n            }\r\n        });\r\n        return toreturn.substring(0, toreturn.length - 1);\r\n    };\r\n\r\n    loadSidebar = () => {\r\n        if (this.props.learnMode == 'Yes') {\r\n            return (\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\">\r\n                        <Divider/>\r\n                        <Words animate\r\n                             layer='control'\r\n                             style={{paddingBottom: '10px', fontsize: '12px'}}\r\n                         >\r\n                             Beginner Lessons\r\n                         </Words>\r\n                        {\r\n                            this.state.games.map((game,index) => {\r\n                                    if (index === 4) {\r\n                                        return(\r\n                                                <Words animate\r\n                                                     layer='control'\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px', fontsize: '12px'}}\r\n                                                 >\r\n                                                     Intermediate Lessons\r\n                                                 </Words>\r\n                                        )\r\n                                    }\r\n                                    else if (index === 7) {\r\n                                            return(\r\n                                                <Words animate\r\n                                                     layer='control'\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px', fontsize: '12px'}}\r\n                                                 >\r\n                                                     Advanced Lessons\r\n                                                 </Words>\r\n                                        )\r\n                                    }\r\n                                    return(\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={game.name} index={index} handleClickGame={this.handleLearnClickGame}/>\r\n                                    )\r\n                                }\r\n\r\n                            )\r\n                        }\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickAnswersGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeHistoryData\r\n                            lowestMovesforPuzzle={this.state.lowestMovesforPuzzle}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            difficultyforPuzzle={this.state.difficultyforPuzzle}\r\n                            nameSubmitted={this.props.nameSubmitted}\r\n                            playerMovedSequence={this.state.playerMovedSequence}\r\n                            bestScore={this.props.bestScore}\r\n                            scoreSubmitted={this.props.scoreSubmitted}\r\n                         />\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <DailyMovesView\r\n                            moveHistory={window.dailyChallengeSessionBestHistory[this.state.numPuzzleon]}\r\n                            playerState={window.dailyChallengeSessionBestPlayerState[this.state.numPuzzleon]}\r\n                            resetToBest={this.resetToBest}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            color=\"secondary\"\r\n                            display=\"block\"\r\n                            variant={\"h4\"}\r\n\r\n                        >\r\n                            {this.state.dailyDayName}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeScores highscores={this.state.highscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.state.createMode === 'Yes') {\r\n            return (\r\n                <CreateBoardGoalSelector\r\n                    handleWildCardClick={this.handleWildCardClick}\r\n                    handleColoredClick={this.handleColoredClick}\r\n                />\r\n            );\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.puzzleRush) {\r\n            return (\r\n                     <div>\r\n                        <Timer puzzleRushTimeUp={this.puzzleRushTimeUp}>\r\n                        </Timer>\r\n                        <Typography id=\"discrete-slider-small-steps\"\r\n                                     color=\"Primary\"\r\n                                     variant=\"h3\"\r\n                                     display=\"inline\"\r\n                                     gutterBottom>\r\n                             {this.state.numPuzzleon}\r\n                         </Typography>\r\n                     </div>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n            <div style={{display: 'grid'}}>\r\n                <Typography\r\n                    color=\"secondary\"\r\n                    display=\"block\"\r\n                    variant={\"h4\"}\r\n\r\n                >\r\n                    {this.trimName(this.props.name)}\r\n                </Typography>\r\n                <div style={{paddingBottom: '10px', display: 'inline-flex', alignItems: \"center\"}}>\r\n                    <Typography variant=\"caption\" style={{paddingRight: \"5%\"}}>\r\n                        By: {this.trimName(this.props.author)}\r\n                    </Typography>\r\n                    <div>\r\n                        <div style={{display: \"inline-flex\"}}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                style={{borderTopRightRadius: \"0px\", borderBottomRightRadius: \"0px\"}}\r\n                                startIcon={this.state.hasVoted ? <StarIcon/> : <StarBorderIcon/>}\r\n                                onClick={this.updateLike}\r\n                                size={\"small\"}\r\n                            >\r\n                                {this.state.hasVoted ? \"Unlike\" : \"Like\"}\r\n                            </Button>\r\n                            <Paper variant=\"contained\"  style={{borderTopLeftRadius: \"0px\", borderBottomLeftRadius: \"0px\"}} >\r\n                                <Typography style={{marginLeft: \"5px\", marginRight: \"5px\"}} variant=\"h6\">{this.state.votes ? this.state.votes : 0}</Typography>\r\n                            </Paper>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Grid container xs={12} direction=\"column\">\r\n                <HighScores highscores={this.state.highscores}/>\r\n                </Grid>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    updateLike = () => {\r\n        const action = this.state.hasVoted ? \"remove\" : \"create\"\r\n        axios.post('/likepuzzle', {uri: this.state.uri, action: action, vote: \"voting\"})\r\n            .then( res => {\r\n                var newHasVoted = \"Y\"\r\n                var newVotes = this.state.votes\r\n                if (this.state.hasVoted)\r\n                    newHasVoted = null\r\n                if (!isNaN(res.data.votes))\r\n                    newVotes = res.data.votes\r\n\r\n                this.setState({\r\n                    hasVoted: newHasVoted,\r\n                    votes: newVotes\r\n                });\r\n            }).catch(_ => {\r\n                this.props.signInModalOpen(\"Sign in\")\r\n            });\r\n    }\r\n\r\n    handlePlayerMovementFromMouse = (direction) => {\r\n        this.handlePlayerMovement({dir: direction})\r\n    };\r\n\r\n    handleUndoMove = () => {\r\n        var moveHistory = this.state.moveHistory;\r\n        var playerState = this.state.playerState;\r\n        if (moveHistory.length !== 0) {\r\n            var moveObj = moveHistory.pop();\r\n            playerState[moveObj.robot].left = moveObj.prevPosition.left;\r\n            playerState[moveObj.robot].top = moveObj.prevPosition.top;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n                gameWon: false,\r\n                dailySubmittedSucessfully: null\r\n            });\r\n        }\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes' && this.state.buildMode) {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onStopDragHandlerGoal = (position,color) => {\r\n        if (color == undefined) {\r\n            this.setState({\r\n                goal: {top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize)},\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            })\r\n        }\r\n        else {\r\n            var coloredGoals = this.state.coloredGoals;\r\n            var newGoals = [];\r\n            coloredGoals.map(goal => {\r\n                if (goal.color == color) {\r\n                    newGoals.push({top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize), color: color, colorSignifier: goal.colorSignifier});\r\n                }\r\n                else {\r\n                    newGoals.push(goal);\r\n                }\r\n            });\r\n            this.setState({\r\n                coloredGoals: newGoals,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    onStopDragHandler = (position,index) => {\r\n        var playerState = this.state.playerState.slice();\r\n        var lastX = position.lastX / this.state.squareSize;\r\n        var lastY = position.lastY / this.state.squareSize;\r\n        playerState[index].top = Math.round(lastY);\r\n        playerState[index].left = Math.round(lastX);\r\n        this.setState({\r\n            playerStart: playerState.slice(),\r\n            playerState: playerState,\r\n            moveHistory: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        puzzleRushTimeUp={this.puzzleRushTimeUp}\r\n                        isPuzzleRush={this.props.puzzleRush}\r\n                        numPuzzleRush={this.state.numPuzzleon}\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                        toggleLineIndicators = {this.toggleLineIndicators}\r\n                        showColoredLineDirections={this.state.showColoredLineDirections}\r\n                        toggleBuildMode = {this.toggleBuildMode}\r\n                        undoMove = {this.handleUndoMove}\r\n                        buildMode = {this.state.buildMode}\r\n                        squareSizeValue = {parseInt((this.state.squareSize/4))}\r\n                        isLesson = {this.props.learnMode}\r\n                        isDailyChallenge = {this.props.dailyChallengeMode}\r\n                        isDailyChallengeAnswers = {this.props.dailyChallengeModeAnswers}\r\n                    />\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? null : <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>}\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8} zeroMinWidth>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal\r\n                            dimension={this.state.squareSize}\r\n                            position={this.state.goal}\r\n                            onStopDragHandler={this.onStopDragHandlerGoal}\r\n                            draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                            isCreateMode={this.state.createMode}\r\n                            buildMode={this.state.buildMode}\r\n                        />\r\n                        {\r\n                            this.state.coloredGoals.map(goal =>\r\n                                <Goal\r\n                                    dimension={this.state.squareSize}\r\n                                    position={goal}\r\n                                    onStopDragHandler={this.onStopDragHandlerGoal}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    color={goal.color}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    onStopDragHandler={this.onStopDragHandler}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={this.state.playerState[this.state.robotSelected].color}\r\n                                    show={this.state.showColoredLineDirections}\r\n                                    handleClick={this.handlePlayerMovementFromMouse}\r\n                                    buildMode={this.state.buildMode}\r\n                                />\r\n                            )\r\n                        }\r\n                    {\r\n                        this.checkwin(this.state.playerState)\r\n                    }\r\n                    </Board>\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/> : null}\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DescriptionList\r\n                        handleCloseToolTips={this.handleCloseToolTips}\r\n                        tipsText={this.state.tipsText}\r\n                    />\r\n                    {this.loadSidebar()}\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                <PuzzleRushWinModal\r\n                    show={this.state.showPuzzleRushFinishedModal}\r\n                    closeModal={this.closePuzzleRushFinishedModal}\r\n                    numPuzzlesCompleted={this.state.numPuzzlesCompleted}\r\n                    percentile={this.state.puzzleRushPercentileCompleted}\r\n                    averageTime={this.state.averageTime}\r\n                    averageMoves={this.state.averageMoves}\r\n                    differenceOptimal={this.state.differenceOptimal}\r\n                    movesPerSecond={this.state.movesPerSecond}\r\n                    difficulty={this.props.difficulty}\r\n                    handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  homepage: {\r\n    marginTop: '40px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  baseExpansion: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: '10px'\r\n  },\r\n  darkmode: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      marginTop: '150px',\r\n  },\r\n  iconcards: {\r\n    width: '250px',\r\n    display: 'inline-block',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  iconcardsDaily: {\r\n    maxWidth: 345,\r\n    minWidth: 250,\r\n    float: 'left',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  titlehome: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '30px',\r\n  },\r\n  titledailyroto: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '10px',\r\n  },\r\n  iconfonts: {\r\n    fontFamily: \"'Arvo', serif\",\r\n  },\r\n  createboardcard: {\r\n    ':hover': {\r\n        content: '/static/images/CreateBoardCardIconPlaced.png',\r\n    }\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  centeredProfile: {\r\n    marginTop: '20px',\r\n    display: 'inline-block',\r\n  },\r\n  expandedPanelDCH: {\r\n    background: 'linear-gradient(70deg, #fff810  30%, rgba(0,0,0,0) 30%), linear-gradient(30deg, #63e89e 60%, #ff7ee3 60%)'\r\n  },\r\n  table: {\r\n    width: '33%'\r\n  }\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport axios from 'axios';\r\nimport {Project, Words, Button, Line} from 'arwes';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        maxWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 360,\r\n        minWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 235,\r\n        height: 225,\r\n        position: 'relative',\r\n        background: 'linear-gradient(100deg, #ffd34d 55%, #fff178 55%)'\r\n    },\r\n\r\n    item: {\r\n        padding: 0\r\n    },\r\n\r\n    upperPadding: {\r\n        paddingTop: 3\r\n    },\r\n    upperPaddingButton: {\r\n        paddingTop: 3,\r\n        position: 'absolute',\r\n        bottom: 15,\r\n        left: 25\r\n    },\r\n\r\n    lowerPadding: {\r\n        paddingBottom: 3\r\n    },\r\n\r\n    rightSideText: {\r\n        textAlign: \"right\",\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n        color: '#009688'\r\n    },\r\n\r\n    leftSideText: {\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(ComplexGrid)\r\n\r\nfunction ComplexGrid(props) {\r\n    const { classes } = props;\r\n    const handleClick = () => {\r\n        axios.get('/getFindGameData?uri=' + props.game.uri)\r\n                .then( res => {\r\n                    var game = JSON.parse(res.data.game);\r\n                    props.handleGameClick(game.name, game.puzzledata,props.highscores,game.uri,props.game.authorname,\r\n                        props.game.votes, props.game.hasVoted);\r\n                });\r\n    };\r\n\r\n    var numberOfHighScores = 0;\r\n\r\n    const highscorestyle = highscore => {\r\n        if (numberOfHighScores === 6) return \"\";\r\n        numberOfHighScores++;\r\n        return (\r\n            <ListItem disableGutters={true} classes={{ root: classes.item }}>\r\n                <Typography color='primary' classes={{ root: classes.leftSideText }}> {trimNameShort(highscore.comment)} </Typography>\r\n                <Typography color='primary' classes={{ root: classes.rightSideText }}> {highscore.numMoves} </Typography>\r\n            </ListItem>\r\n        )\r\n    };\r\n\r\n    const contentDivStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n        };\r\n\r\n    };\r\n\r\n    const trimName = name => {\r\n        var separated = (name + '').split(\" \")\r\n        var toreturn = '';\r\n        separated.map((word) => {\r\n            if (word.length > 17)\r\n                toreturn += word.substring(0, 17) + \"...\" + ' ';\r\n            else {\r\n                toreturn += word + ' '\r\n            }\r\n        });\r\n        return toreturn.substring(0, toreturn.length - 1);\r\n    };\r\n\r\n    const trimNameShort = name => {\r\n        if (name.length > 10)\r\n            name = name.substring(0, 10) + \"...\";\r\n        return name\r\n    };\r\n\r\n    return (\r\n        <Grid item xs={12} md={3} sm={6}>\r\n            <Project\r\n                            animate\r\n                            header={props.game.name}\r\n                        >\r\n                        {anim => (\r\n                            <p>\r\n                                <CardContent style={{width: \"100%\",\r\n                                    maxWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 360,\r\n                                    minWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 235,\r\n                                    height: 225,\r\n                                    position: 'relative',\r\n                                    }}>\r\n                                    <div style={contentDivStyle()}>\r\n                                        <div style={{width: '100%'}}>\r\n                                <Typography style={{fontSize: '13px'}} color='primary' variant=\"caption\">\r\n                                    By: {trimName(props.game.authorname)}\r\n                                </Typography>\r\n                                <br/>\r\n                                <Typography color='primary' variant=\"caption\">\r\n                                    {props.game.created}\r\n                                </Typography>\r\n                            <Line animate/>\r\n                            <Typography color=\"textSecondary\" color='secondary' variant=\"caption\">\r\n                                Plays: {props.game.plays}\r\n                            </Typography>\r\n                            <br/>\r\n                            <Typography color=\"textSecondary\" color='secondary' variant=\"caption\">\r\n                                Likes: {props.game.votes}\r\n                            </Typography>\r\n                                            <br/>\r\n                                            <Button animate onClick={handleClick} classes={{ root: classes.upperPaddingButton }} variant=\"contained\" color=\"primary\">Play</Button>\r\n                                        </div>\r\n                                        <div style={{width: '105px', marginLeft:'20px'}}>\r\n                                            <Typography color=\"textSecondary\" color='secondary' variant=\"caption\">\r\n                                                Top Scores\r\n                                            </Typography>\r\n                                            <List>\r\n                                                {\r\n                                                    props.highscores.map(highscore =>\r\n                                                        highscorestyle(highscore)\r\n                                                    )\r\n                                                }\r\n                                            </List>\r\n                                        </div>\r\n                                    </div>\r\n                                </CardContent>\r\n                            </p>\r\n                        )}\r\n                </Project>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport { Header, Line,Project, Words, Button,Arwes,ThemeProvider, createTheme, withStyles,Row,Col } from 'arwes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport FindGameElements from \"../containers/FindGameElements\";\r\nimport {GOAL_IMAGE} from '../constants/constants';\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n        return (<div className={classes.homepage} >\r\n                <Grid container spacing={2}>\r\n                    <Grid xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                        <Project\r\n                            animate\r\n                            header='Welcome to RobotsEvolved'\r\n                        >\r\n                        {anim => (\r\n                            <p><Words animate show={anim.entered}>\r\n                               Puzzle game for anyone to play! Create your own custom boards or play a random Solved game. Goal is to get ANY piece to stop on the\r\n                                </Words>\r\n                                <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                                <br/>\r\n                                <img width=\"300\" height=\"300\" src='/static/videos/basic2.gif'/>\r\n                                <br/>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickFindGame}>\r\n                                    Find a Game\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickDailyChallenge}>\r\n                                    Daily Challenge\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickCreateGame}>\r\n                                    Create a Game\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickRandomGame}>\r\n                                    Play a Random Game\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickLearnGame}>\r\n                                    Learn\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickPuzzleRush}>\r\n                                    Puzzle Rush\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickProfile}>\r\n                                    Profile\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickDailyChallengeHistory}>\r\n                                    Daily Challenge History\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickAbout}>\r\n                                    About\r\n                                </Button>\r\n                            </div>\r\n                            </p>\r\n\r\n                        )}\r\n                    </Project>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                        <Words className={classes.titlehome} variant=\"h4\"> News\r\n                        </Words>\r\n                        <Words> 8/23/2020 Personal Best saving feature added to Daily Challenge, Also Added Like feature to custom puzzles.\r\n                        </Words>\r\n                        <br/>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                    <Words animate className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                    </Words>\r\n                        <Project\r\n                                    animate\r\n                                    header='Daily Challenge Rotation'\r\n                                >\r\n                                {anim => (\r\n                                    <p>\r\n                                   <Words animate>\r\n                                                Medium Mondays\r\n                                   </Words>\r\n                                   <br/>\r\n                                   <Words animate>\r\n                                                Trouble Tuesdays\r\n                                   </Words>\r\n                                   <br/>\r\n                                   <Words animate>\r\n                                                Wild Wednesdays\r\n                                   </Words>\r\n                                   <br/>\r\n                                   <Words animate>\r\n                                                Tryhard Thursdays\r\n                                   </Words>\r\n                                   <br/>\r\n                                   <Words animate>\r\n                                                Flyin Fridays\r\n                                   </Words>\r\n                                   <br/>\r\n                                   <Words animate>\r\n                                                Sleepy Saturdays\r\n                                   </Words>\r\n                                   <br/>\r\n                                   <Words animate>\r\n                                                Standard Sundays\r\n                                   </Words>\r\n                                    </p>\r\n                                )}\r\n                        </Project>\r\n                        <Project\r\n                            animate\r\n                            header='Daily Challenge Scores'\r\n                        >\r\n                        {anim => (\r\n                            <p>\r\n                                <DailyChallengeScores highscores={window.dchighscores}/>\r\n                            </p>\r\n                        )}\r\n                     </Project>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (<div className={classes.homepage}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Project\r\n                            animate\r\n                            header='Controls'\r\n                        >\r\n                        {anim => (\r\n\r\n\r\n                            <p>\r\n                            <Line animate />\r\n                            <Words animate\r\n                                className={classes.dividerFullWidth}\r\n                            >\r\n                                Movement\r\n                            </Words>\r\n                            <br/>\r\n                            <img width={'20%'} height={'auto'} src={\"/static/images/keyboard.png\"}/>\r\n                            <Words animate>Pieces Move until they hit a wall or another piece</Words>\r\n                            <Line animate />\r\n                            <Words animate\r\n                            className={classes.dividerFullWidth}\r\n                            >\r\n                                Selecting robots\r\n                            </Words>\r\n                            <br/>\r\n                            <Words animate> Use </Words>\r\n                            <img width={'20%'} height={'auto'} src={\"/static/images/tab_button_keyboard_type_1-512.png\"}/>\r\n                            <Words animate>or click on Piece</Words>\r\n                            <Line animate />\r\n                            <Words animate\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                            >\r\n                            HotKeys\r\n                            </Words>\r\n                            <br/>\r\n                            <Words animate style={{fontSize: '13px'}}>Undo</Words> <img width={'20%'} height={'auto'} src={\"/static/images/Qkey.png\"}/> <br/>\r\n                            <Words animate style={{fontSize: '13px'}}>Reset</Words> <img width={'20%'} height={'auto'} src={\"/static/images/Wkey.png\"}/>\r\n                            <Line animate/>\r\n                            <div style={{marginTop:'100px'}}>\r\n                            <Words animate className={classes.titlehome} variant=\"h4\"> News\r\n                            </Words>\r\n                            <Words animate> 8/5/2020 Scaled down the Difficulty for the Daily Challenges, also modified the classic algorithm to be less cluttered\r\n                            </Words>\r\n                            <Words animate> 8/18/2020 New textures, Soon to be released: Color Specific Goals!\r\n                            </Words>\r\n                            <Words animate> 8/23/2020 Personal Best saving feature added to Daily Challenge, Also Added Like feature to custom puzzles.\r\n                            </Words>\r\n                            </div>\r\n                            <Line animate />\r\n                            </p>\r\n                        )}\r\n                    </Project>\r\n                </Grid>\r\n                <Grid item xs={8} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                        <Project\r\n                            animate\r\n                            header='Welcome to RobotsEvolved'\r\n                        >\r\n                        {anim => (\r\n                            <p><Words animate show={anim.entered}>\r\n                               Puzzle game for anyone to play! Create your own custom boards or play a random Solved game. Goal is to get ANY piece to stop on the\r\n                                </Words>\r\n                                <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                                <br/>\r\n                                <img width=\"300\" height=\"300\" src='/static/videos/basic2.gif'/>\r\n                                <br/>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickFindGame}>\r\n                                    Find a Game\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickDailyChallenge}>\r\n                                    Daily Challenge\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickCreateGame}>\r\n                                    Create a Game\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickRandomGame}>\r\n                                    Play a Random Game\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickLearnGame}>\r\n                                    Learn\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickPuzzleRush}>\r\n                                    Puzzle Rush\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickProfile}>\r\n                                    Profile\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickDailyChallengeHistory}>\r\n                                    Daily Challenge History\r\n                                </Button>\r\n                            </div>\r\n                            <div className={classes.iconcards}>\r\n                                <Button animate onClick={props.handleClickAbout}>\r\n                                    About\r\n                                </Button>\r\n                            </div>\r\n                            </p>\r\n\r\n                        )}\r\n                    </Project>\r\n\r\n                </Grid>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                <Project\r\n                            animate\r\n                            header='Daily Challenge Rotation'\r\n                        >\r\n                        {anim => (\r\n                            <p>\r\n                           <Words animate>\r\n                                        Medium Mondays\r\n                           </Words>\r\n                           <Words animate>\r\n                                        Trouble Tuesdays\r\n                           </Words>\r\n                           <Words animate>\r\n                                        Wild Wednesdays\r\n                           </Words>\r\n                           <Words animate>\r\n                                        Tryhard Thursdays\r\n                           </Words>\r\n                           <Words animate>\r\n                                        Flyin Fridays\r\n                           </Words>\r\n                           <Words animate>\r\n                                        Sleepy Saturdays\r\n                           </Words>\r\n                           <Words animate>\r\n                                        Standard Sundays\r\n                           </Words>\r\n                            </p>\r\n                        )}\r\n                </Project>\r\n                <Project\r\n                            animate\r\n                            header='Daily Challenge Scores'\r\n                        >\r\n                        {anim => (\r\n                            <p>\r\n                                <DailyChallengeScores highscores={window.dchighscores}/>\r\n                            </p>\r\n                        )}\r\n                </Project>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from 'axios';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport extend from '../constants/extend';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center'\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 400,\r\n    },\r\n    input: {\r\n        marginLeft: 5,\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n        marginLeft: 8,\r\n        marginRight: 8,\r\n    },\r\n});\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = this.props.gameslist;\r\n        var highscoreslist = this.props.highscoreslist;\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n            anchorEl: null,\r\n            hasMore: true,\r\n            lastSearch: 'None',\r\n            offsetSearch: gameslist.length,\r\n            isLoadingSearch: false,\r\n        }\r\n\r\n    }\r\n\r\n    handleGameClick = (name,gamedata,highscores,uri,authorname,votes,hasVoted) => {\r\n        this.props.handleGameClick(name,gamedata,highscores,uri,authorname,votes,hasVoted);\r\n    };\r\n\r\n    handleFilterMenuOpen = event => {\r\n        this.setState( {\r\n          anchorEl: event.currentTarget\r\n      });\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.keycode == 13) {\r\n            this.handleSearchSubmit(e);\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        window.scrollTo(0,this.props.findWindowHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.props.setFindWindow(window.scrollY)\r\n    }\r\n\r\n    handleCloseFilterMenuMostPlayed = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'MostPlayed', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'MostPlayed', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'MostPlayed',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleCloseFilterMenuMostLiked = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'MostLiked', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'MostLiked', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'MostLiked',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleCloseFilterMenuHighest = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'Highest', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'Highest', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'Highest',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleSearchSubmit = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n\r\n        axios.post('/search', {search: searchTerm, filter: 'None', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'None', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'None',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    hasMore = () => {\r\n        return ( this.state.hasMore ? null : <Grid item alignItems=\"center\" justify=\"center\" xs={12}><Typography style={{textAlign: 'center', display: 'block'}} variant=\"caption\">No More Puzzles</Typography></Grid>)\r\n    }\r\n\r\n    loadMoreItems = () => {\r\n        var searchTerm = this.searchRef.value;\r\n        if (!this.state.isLoadingSearch) {\r\n            this.state.isLoadingSearch = true;\r\n            axios.post('/search', {search: searchTerm, filter: 'None', offset: this.state.offsetSearch})\r\n                .then( res => {\r\n                    var gameslist = JSON.parse(res.data.gameslist);\r\n                    this.state.offsetSearch = gameslist.length + this.state.gameslist.length;\r\n                    var highscoreslist = JSON.parse(res.data.highscoreslist);\r\n                    this.props.setNumFindGames(gameslist.length + this.state.gameslist.length, this.state.lastSearch, searchTerm);\r\n                    this.setState({\r\n                        highscoreslist: this.state.highscoreslist.concat(highscoreslist),\r\n                        gameslist: this.state.gameslist.concat(gameslist),\r\n                        hasMore: gameslist.length == 0 ? false : true,\r\n                        isLoadingSearch: false,\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    handleCloseFilterMenu = () => {\r\n        this.setState({\r\n            anchorEl: null\r\n        });\r\n    };\r\n\r\n    render () {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <div id='MainFindPage' style={gamepanel()}>\r\n                <Paper component=\"form\" className={classes.root} >\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        inputRef={ref => this.searchRef = ref}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                this.handleSearchSubmit();\r\n                                event.preventDefault()\r\n                            }\r\n                        }}\r\n                    />\r\n                    <IconButton onClick={this.handleSearchSubmit} className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <Divider className={classes.divider} orientation=\"vertical\" />\r\n                    <Button\r\n                        onClick={this.handleFilterMenuOpen}\r\n                        startIcon={<FilterListIcon />}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        Sort\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(this.state.anchorEl)}\r\n                        onClose={this.handleCloseFilterMenu}\r\n                        getContentAnchorEl={null}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'center',\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center',\r\n                        }}\r\n                    >\r\n                        <MenuItem onClick={this.handleSearchSubmit}>Recently Created</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuMostPlayed}>Most Played</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuMostLiked}>Most Liked</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuHighest}>Highest Scores</MenuItem>\r\n                    </Menu>\r\n                </Paper>\r\n                <br/>\r\n                <Grid container alignItems={\"stretch\"} spacing={2}>\r\n                    {\r\n                        this.state.gameslist.map((game,index)=>\r\n                            <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                        )\r\n                    }\r\n                    <InfiniteScroll\r\n                        pageStart={1}\r\n                        loadMore={this.loadMoreItems.bind(this)}\r\n                        hasMore={this.state.hasMore}\r\n                        loader={<Grid item alignItems=\"center\" justify=\"center\" xs={12}><CircularProgress style={{textAlign: 'center',alignItems: 'center', marginLeft: 'auto', marginRight: 'auto'}} size={40} color=\"secondary\" /></Grid>}\r\n                        threshold={200}\r\n                        >\r\n                    </InfiniteScroll>\r\n                    {this.hasMore()}\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(FindGame);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  loadedGame={'Yes'}\r\n                  name={this.props.name}\r\n                  author={this.props.authorname}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n                  votes={this.props.votes}\r\n                  hasVoted={this.props.hasVoted}\r\n                  signInModalOpen={this.props.signInModalOpen}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst stylecol = () => {\r\n    return({\r\n            float: 'left',\r\n            width: '50%',\r\n            margin: 'auto',\r\n            padding: '0 50px',\r\n            marginTop: '6px',\r\n    });\r\n}\r\n\r\nconst spacing = () => {\r\n    return({\r\n            marginBottom: '10px',\r\n    });\r\n}\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    };\r\n\r\n    loginFacebook = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/facebook\";\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeLoginModal}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>Login to RobotsEvolved</DialogTitle>\r\n                <DialogContent dividers>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                           • Gain <FaCrown/>s when winning the Daily Challenge (stacks)\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                            • Be able to give a like to your favorite puzzles\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                            • Saving settings and your moves in the daily challenge\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography variant=\"body2\" display=\"inline\">\r\n                            • Profile Page to keep track of your submissions.\r\n                        </Typography>\r\n                    <div class=\"col\">\r\n                        <a href=\"#\" onClick={this.loginFacebook} id={\"buttonfb\"}>\r\n                          <i class=\"fa fa-facebook fa-fw\"></i> Login with Facebook\r\n                         </a>\r\n                        <a onClick={this.loginGoogle} href=\"#\" id={\"buttongoogle\"}><i class=\"fa fa-google fa-fw\">\r\n                          </i> Login with Google\r\n                        </a>\r\n                    </div>\r\n                    <Typography variant=\"caption\" display=\"block\">\r\n                            We will NEVER distribute/sell your facebook or google email address.\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeLoginModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <Button color=\"black\" onClick={this.handleClick}><b>{textToShow}</b></Button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport SignInButton from './SignInButton';\r\nimport {Frame,Words} from 'arwes';\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '40px',\r\n        width: '40px',\r\n        marginTop: '5px',\r\n    };\r\n};\r\n\r\nconst divStyle = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        width: '200px',\r\n    };\r\n};\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    SignInButtonPressed = () => {\r\n        this.props.handleClick('Sign in');\r\n    }\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return <SignInButton onClick={this.SignInButtonPressed}/>\r\n        }\r\n        else {\r\n            return (\r\n                <div style={divStyle()}>\r\n                    <Frame\r\n                        animate={true}\r\n                        level={3}\r\n                        corners={4}\r\n                        layer='header'\r\n                    >\r\n                        <Words animate layer='header'>{window.userInfo.username}</Words>\r\n                    </Frame>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Project, Words, Button} from 'arwes';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            position: 'relative',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            margin: '0 auto',\r\n            top: '25%',\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic v2',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty) => {\r\n        console.log(difficulty)\r\n        axios.post('/puzzlerush', {difficulty: difficulty, action: 'start',type: this.state.value})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            isLoading: false,\r\n                        });\r\n                        this.props.handleClickPuzzleRush(difficulty,games,p_id);\r\n                });\r\n    };\r\n\r\n    handleClickEasyPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMediumPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n\r\n    render () {\r\n        return (<div style={divStyle()}>\r\n                  <Project animate header=\"Select a Difficulty\">\r\n                    {(anim) => (\r\n                      <p>\r\n                        {this.state.isLoading ? (\r\n                          <Grid\r\n                            container\r\n                            xs={12}\r\n                            spacing={4}\r\n                            direction=\"column\"\r\n                            alignItems=\"center\"\r\n                            justify=\"center\"\r\n                            wrap=\"nowrap\"\r\n                          >\r\n                            <div style={divStyle()}>\r\n                              <CircularProgress />\r\n                            </div>\r\n                          </Grid>\r\n                        ) : (\r\n                          <Grid\r\n                            container\r\n                            xs={12}\r\n                            spacing={4}\r\n                            alignItems=\"center\"\r\n                            justify=\"center\"\r\n                            wrap=\"nowrap\"\r\n                          >\r\n                            <Grid item xs={6}>\r\n                              <ButtonGroup\r\n                                orientation=\"vertical\"\r\n                                color=\"primary\"\r\n                                aria-label=\"vertical outlined primary button group\"\r\n                              >\r\n                                <Button\r\n                                  animate\r\n                                  onClick={this.handleClickEasyPuzzleRush}\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Easy\r\n                                </Button>\r\n                                <Button\r\n                                  animate\r\n                                  onClick={this.handleClickMediumPuzzleRush}\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Medium\r\n                                </Button>\r\n                                <Button\r\n                                  animate\r\n                                  onClick={this.handleClickHardPuzzleRush}\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Hard\r\n                                </Button>\r\n                                <Button\r\n                                  animate\r\n                                  onClick={this.handleClickExHardPuzzleRush}\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Exteremely Hard\r\n                                </Button>\r\n                              </ButtonGroup>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                              <FormControl component=\"fieldset\">\r\n                                <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                <RadioGroup\r\n                                  aria-label=\"game type\"\r\n                                  name=\"gametype\"\r\n                                  value={this.state.value}\r\n                                  onChange={this.handleChange}\r\n                                >\r\n                                  <FormControlLabel\r\n                                    value=\"classic v2\"\r\n                                    control={<Radio />}\r\n                                    label=\"Classic V2\"\r\n                                  />\r\n                                  <FormControlLabel\r\n                                    value=\"classic\"\r\n                                    control={<Radio />}\r\n                                    label=\"Classic\"\r\n                                  />\r\n                                  <FormControlLabel\r\n                                    value=\"random\"\r\n                                    control={<Radio />}\r\n                                    label=\"Random\"\r\n                                  />\r\n                                </RadioGroup>\r\n                              </FormControl>\r\n                            </Grid>\r\n                          </Grid>\r\n                        )}\r\n                        <DialogActions>\r\n                          <Button animate onClick={this.props.backButton}>\r\n                            Back\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </p>\r\n                    )}\r\n                  </Project>\r\n                </div>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {Project, Words, Button} from 'arwes';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../../constants/constants\";\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            position: 'relative',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            margin: '0 auto',\r\n            top: '25%',\r\n        });\r\n}\r\n\r\nclass RandomGameDifficultyPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic v2',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickRandomGameModal = (difficulty,type) => {\r\n        axios.get('/randomgame?difficulty=' + difficulty + '&type=' + type)\r\n            .then( res => {\r\n                var game = JSON.parse(res.data.game);\r\n                this.setState({\r\n                    isLoading: false,\r\n                });\r\n                this.props.handleClickRandomGame(game,difficulty);\r\n            })\r\n    }\r\n\r\n    handleClickEasy = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMedium = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHard = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHard = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickGodMode = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('GodTeir',this.state.value)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n    render () {\r\n        return (<div style={divStyle()}>\r\n                  <Project animate header=\"Select a Difficulty\">\r\n                    {(anim) => (\r\n                      <p>\r\n                          {this.state.isLoading ? (\r\n                            <Grid\r\n                              container\r\n                              xs={12}\r\n                              spacing={4}\r\n                              direction=\"column\"\r\n                              alignItems=\"center\"\r\n                              justify=\"center\"\r\n                              wrap=\"nowrap\"\r\n                            >\r\n                              <div style={divStyle()}>\r\n                                <CircularProgress />\r\n                              </div>\r\n                            </Grid>\r\n                          ) : (\r\n                            <Grid\r\n                              container\r\n                              xs={12}\r\n                              spacing={4}\r\n                              alignItems=\"center\"\r\n                              justify=\"center\"\r\n                              wrap=\"nowrap\"\r\n                            >\r\n                              <Grid item xs={6}>\r\n                                <ButtonGroup\r\n                                  orientation=\"vertical\"\r\n                                  color=\"primary\"\r\n                                  aria-label=\"vertical outlined primary button group\"\r\n                                >\r\n                                  <Button animate\r\n                                    onClick={this.handleClickEasy}\r\n                                  >\r\n                                    Easy\r\n                                  </Button>\r\n                                  <Button animate\r\n                                    onClick={this.handleClickMedium}\r\n                                  >\r\n                                    Medium\r\n                                  </Button>\r\n                                  <Button animate\r\n                                    onClick={this.handleClickHard}\r\n                                  >\r\n                                    Hard\r\n                                  </Button>\r\n                                  <Button animate\r\n                                    onClick={this.handleClickExHard}\r\n                                  >\r\n                                    Extremely Hard\r\n                                  </Button>\r\n                                  <Button animate\r\n                                    onClick={this.handleClickGodMode}\r\n                                  >\r\n                                    God Tier\r\n                                  </Button>\r\n                                </ButtonGroup>\r\n                              </Grid>\r\n                              <Grid item xs={6}>\r\n                                <FormControl component=\"fieldset\">\r\n                                  <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                  <RadioGroup\r\n                                    aria-label=\"game type\"\r\n                                    name=\"gametype\"\r\n                                    value={this.state.value}\r\n                                    onChange={this.handleChange}\r\n                                  >\r\n                                    <FormControlLabel\r\n                                      value=\"classic v2\"\r\n                                      control={<Radio />}\r\n                                      label=\"Classic V2\"\r\n                                    />\r\n                                    <FormControlLabel\r\n                                      value=\"classic\"\r\n                                      control={<Radio />}\r\n                                      label=\"Classic\"\r\n                                    />\r\n                                    <FormControlLabel\r\n                                      value=\"random\"\r\n                                      control={<Radio />}\r\n                                      label=\"Random\"\r\n                                    />\r\n                                  </RadioGroup>\r\n                                </FormControl>\r\n                              </Grid>\r\n                            </Grid>\r\n                          )}\r\n                        <DialogActions>\r\n                          <Button animate onClick={this.props.backButton}>Back</Button>\r\n                        </DialogActions>\r\n                      </p>\r\n                    )}\r\n                  </Project>\r\n                  </div>)\r\n            }\r\n}\r\n\r\nexport default RandomGameDifficultyPage;\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageCreatedGamesDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.game.name,props.game.puzzledata,[],props.game.uri, props.game.authorname, props.game.votes, props.game.hasVoted);\r\n    }\r\n\r\n    return (<div>\r\n            <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography> Highscore Holder: </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.game.username} - {props.game.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageSolutionDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.solution.name,props.solution.puzzledata,[],props.solution.uri);\r\n    }\r\n    return (<div>\r\n              <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography color={'secondary'} variant={'body2'}> {props.solution.WinnerCreated} </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.solution.WinnerUsername} - {props.solution.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Table,TableContainer,TableHead,TableRow,TableCell,TableBody} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useStyles from '../Material-UI/themes';\r\nimport ProfilePageCreatedGamesDetails from '../components/ProfilePageComponents/ProfilePageCreatedGamesDetails';\r\nimport ProfilePageSolutionDetails from '../components/ProfilePageComponents/ProfilePageSolutionDetails';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\n\r\nexport default function ProfilePage(props) {\r\n    const classes = useStyles();\r\n    const submitAnswer = () => {\r\n        axios.post('/userUpdate',{newuser: document.getElementById(\"ProfileName\").value})\r\n            .then( res => {\r\n                if (res.data == 'OK') {\r\n                    window.location.href = '/';\r\n                }\r\n                else {\r\n                    setError(res.data);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const createData = (name,col1,col2) => {\r\n        return {name,col1,col2}\r\n    }\r\n\r\n    const columns = [\r\n          { id: 'difficulty', label: 'Difficulty', maxWidth: 75 },\r\n          { id: 'classic', label: 'Classic', maxWidth: 75 },\r\n          { id: 'random', label: 'Random', maxWidth: 75 },\r\n        ];\r\n\r\n    const rows = [\r\n        createData('Easy', props.puzzlerushview.maxeasyc,props.puzzlerushview.maxeasyp),\r\n        createData('Medium', props.puzzlerushview.maxmediumc,props.puzzlerushview.maxmediump),\r\n        createData('Hard', props.puzzlerushview.maxhardc,props.puzzlerushview.maxhardp),\r\n        createData('Extremely Hard', props.puzzlerushview.maxexhardc,props.puzzlerushview.maxexhardp)\r\n    ]\r\n\r\n    const rowseff = [\r\n        createData('Easy', props.puzzlerushview.maxeffec,props.puzzlerushview.maxeffep),\r\n        createData('Medium', props.puzzlerushview.maxeffmc,props.puzzlerushview.maxeffmp),\r\n        createData('Hard', props.puzzlerushview.maxeffhc,props.puzzlerushview.maxeffhp),\r\n        createData('Extremely Hard', props.puzzlerushview.maxeffexc,props.puzzlerushview.maxeffexp)\r\n    ]\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [expandedGame, setExpandedGame] = React.useState(false);\r\n    const [expandedHighscores, setExpandedHighscores] = React.useState(false);\r\n    const handleChangeGame = (panel) => (event, isExpandedGame) => {\r\n        setExpandedGame(isExpandedGame ? panel : false);\r\n    };\r\n    const handleChangeHighscores = (panel) => (event, isExpandedHighScores) => {\r\n        setExpandedHighscores(isExpandedHighScores ? panel : false);\r\n    };\r\n    return (\r\n            <div style={gamepanel()}>\r\n                <Grid container spacing={4}>\r\n                    <Grid item xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <TextField className={classes.centeredProfile} id={\"ProfileName\"} label={\"Username\"} defaultValue={window.userInfo.username}/>\r\n                        <Button className={classes.centeredProfile} variant=\"contained\" color=\"secondary\" onClick={submitAnswer}>Change Username</Button>\r\n                        <Typography color={\"secondary\"}>{error}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Created</Typography>\r\n                        {\r\n                            props.gamesview.map((game,index) =>\r\n                                    <ExpansionPanel expanded={expandedGame === 'panelgame' + index} onChange={handleChangeGame('panelgame' + index)}>\r\n                                        <ExpansionPanelSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls={\"panel\" + index + \"-content\"}\r\n                                          id={\"panel\" + index + \"-header\"}\r\n                                        >\r\n                                          <Typography className={classes.heading}>{game.name}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Plays: {game.plays}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Likes: {game.votes}</Typography>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                          <ProfilePageCreatedGamesDetails\r\n                                            game={game}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                          />\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Solved</Typography>\r\n                        {\r\n                            props.solutionsview.map((solution,index) =>\r\n                                <ExpansionPanel expanded={expandedHighscores === 'panelhigh' + index} onChange={handleChangeHighscores('panelhigh' + index)}>\r\n                                    <ExpansionPanelSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls={\"panel\" + index + \"-content\"}\r\n                                      id={\"panel\" + index + \"-header\"}\r\n                                    >\r\n                                      <Typography className={classes.heading}>{solution.name}</Typography>\r\n                                      <Typography className={classes.secondaryHeading}>Best: {solution.numMoves}</Typography>\r\n                                      {solution.WinnerUserId == window.userInfo.userID ? <FaCrown style={{marginLeft: '30px'}}/> : null}\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <ProfilePageSolutionDetails\r\n                                            solution={solution}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                        />\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Puzzle Rush Records</Typography>\r\n                        <Typography variant=\"body1\">Most Puzzles Solved</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ maxWidth: column.maxWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rows.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                        <Typography style={{marginTop: '40px'}} variant=\"body1\">Highest Efficiency Scores</Typography>\r\n                        <Typography variant=\"caption\">Calculated by (total puzzles completed) * 7 - (total redundany moves from best score)</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ maxWidth: column.maxWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rowseff.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nexport default function RandomGamePage(props) {\r\n    return (\r\n        <Game\r\n              handleLineDirections={props.handleLineDirections}\r\n              LineDirections={props.LineDirections}\r\n              randomGame={'Yes'}\r\n              game={props.game}\r\n              difficulty={props.difficulty}\r\n         />\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PuzzleRushPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  puzzleRush={'Yes'}\r\n                  p_id={this.props.p_id}\r\n                  games={this.props.games}\r\n                  difficulty={this.props.difficulty}\r\n             />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PuzzleRushPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass LessonsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                learnMode={'Yes'}\r\n                games={window.learngameslist}/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default LessonsPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game handleClickDailyChallenge={this.props.handleClickDailyChallenge} handleLineDirections={this.props.handleLineDirections} LineDirections={this.props.LineDirections} dailyChallengeMode={'Yes'} playerStateList={this.props.playerStateList} savedMoves={this.props.savedMoves} games={this.props.dailyChallengeGameslist} dc_id={this.props.dc_id} highscores={this.props.dchighscores}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengePage;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Card,CardActions,Button,Avatar} from \"@material-ui/core\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function AboutUs(props) {\r\n    const facebookclick = () => {\r\n        window.open('https://www.facebook.com/RobotsEvolved-105278561284154')\r\n    }\r\n    const discordclick = () => {\r\n        window.open('https://discord.gg/VKMRQuE')\r\n    }\r\n    return (<div style={gamepanel()}>\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item spacing={4} xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card style={{display: 'inline-block', width: '100%'}}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    About\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    RobotsEvolved.com is based on the board game Ricochet Robots by Alex Randolph.\r\n                                    We have several game modes and variants that are inspired by the several Chess variants on the internet.\r\n                                    If you find any bugs or have any feature requests for RobotsEvolved please let me know by emailing robotsevolved@gmail.com or contacting me on FB from our FB page, I would love to hear some of the ideas people have. Ill get to developing the feature/fixing annoying bugs ASAP\r\n                                    If you use Google Login or Facebook Login I will NEVER email you or sell your information, it is strictly for user-identification.\r\n                                    Tell your friends about the site and get people on here!\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button onClick={facebookclick}>\r\n                                    <Avatar alt=\"Facebook\" src=\"https://facebookbrand.com/wp-content/uploads/2019/04/f_logo_RGB-Hex-Blue_512.png?w=512&h=512\" />\r\n                                </Button>\r\n                                <Button onClick={discordclick}>\r\n                                    <Avatar alt=\"Discord\" src=\"https://cdn.discordapp.com/attachments/675768013731135518/740251382862577694/icons8-discord-new-logo-48.png\" />\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Daily Challenge Rotation\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    The Daily Challenge rotates its difficulty every day as specified below with 2 x Random and 2 x Classic Type puzzles.\r\n                                    <br/>\r\n                                    Medium Mondays - 4 x Medium\r\n                                    <br/>\r\n                                    Trouble Tuesdays - 4 x Hard\r\n                                    <br/>\r\n                                    Wild Wednesdays - 4 x Medium\r\n                                    <br/>\r\n                                    Tryhard Thursdays -4 x Hard\r\n                                    <br/>\r\n                                    Flyin Fridays - 4 x Medium\r\n                                    <br/>\r\n                                    Sleepy Saturdays - 4 x Easy\r\n                                    <br/>\r\n                                    Standard Sundays - 4 x Hard\r\n                                </Typography>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Classic Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Classic puzzles are based on the original Game. These Puzzles only have walls that are L shaped and a goal is in the center of one of the L puzzles.\r\n                                </Typography>\r\n                                <Typography variant={\"h4\"} display={\"inline\"}>\r\n                                    Random Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Random Puzzles are created by having a 10% chance for a wall to spawn in location possible, Goals and Robot placements are completely random also.\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Easy\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 5-8 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Medium\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 9-13 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 14-17 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"} >\r\n                                    Extremely Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 18-22 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    God Tier\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 23+ Moves, Note: there are a low number of these puzzles due to the CPU required to create them\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Paper class=\"card3\">\r\n                          <img src={\"/static/images/284457_10151211078621477_839164197_n.jpg\"} alt=\"Jane\"/>\r\n                          <div class=\"container3\">\r\n                            <h2>Kyle Kwasniewski</h2>\r\n                            <p class=\"title3\">Creator &amp; FullStack Dev.</p>\r\n                            <p>I work in Software Development and Dev-Ops in New York and consider myself a Ricochet Robots enthusiast so I decided to make this application as a way to better hone my skill in web frameworks as well as pass the time during the quarantine. I play Frisbee and Ski alot as well as play my fair share of Steam games.</p>\r\n                            <p>Thanks for playing!</p>\r\n                            <p>robotsevolved@gmail.com</p>\r\n                          </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/284f909d-0d5c-4ae1-b100-76c9d46ae7d4.png\"} alt=\"Mike\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Jonah Tollefson</h2>\r\n                                <p className=\"title3\">Front-End Dev.</p>\r\n                                <p>Went to college with these other goobers in the US and now I work professionally as a\r\n                                    software engineer in Germany. For RobotsEvolved, I mainly worked on the frontend\r\n                                    using React. Cats and Ultimate Frisbee are life.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/derekschultz.jpg\"} alt=\"John\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Derek Schultz</h2>\r\n                                <p className=\"title3\">Back-End Dev.</p>\r\n                                <p>Full time Software Engineer. Graduated from University of Wisconsin Platteville\r\n                                    with a BS in Computer Science and Minor in Business Administration. Worked on\r\n                                    most of the database aspect of RobotsEvolved and some back end functionality. I\r\n                                    enjoy video games, beer, and playing darts.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n\r\n\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nexport default function ShowDailyPuzzleHistory(props) {\r\n    const handleDailyPuzzleHistoryClick = event => {\r\n        console.log(props.history)\r\n        props.handleDailyPuzzleHistoryClick(props.history)\r\n    }\r\n    return (\r\n            <Button style={window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? {marginLeft: '5px'} : {marginLeft: '60px'}} variant=\"contained\" size=\"small\" color=\"primary\" onClick={handleDailyPuzzleHistoryClick}>\r\n                 show answers\r\n            </Button>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport ShowDailyPuzzleHistory from '../components/ShowDailyPuzzleHistory';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ProfilePageCreatedGamesDetails from \"../components/ProfilePageComponents/ProfilePageCreatedGamesDetails\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function DailyChallengeHistory(props) {\r\n    const [expandedPanel, setExpandedPanel] = React.useState(false);\r\n    const handleChangePanel = (panel) => (event, isExpanded) => {\r\n        setExpandedPanel(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles();\r\n    return (<div style={gamepanel()}>\r\n                <Typography className={classes.titlehome} variant=\"h3\">Daily Challenge History</Typography>\r\n                {\r\n                    props.dailychallengehistory.map((history, index) =>\r\n                        <ExpansionPanel expanded={expandedPanel === 'panelgame' + index} onChange={handleChangePanel('panelgame' + index)}>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={\"panel\" + index + \"-content\"}\r\n                                id={\"panel\" + index + \"-header\"}\r\n                            >\r\n                                <Typography className={classes.heading}>{history.created}</Typography>\r\n                                <Typography style={{width: '15%'}} className={classes.secondaryHeading}>Winner: {history.nameSubmitted}</Typography>\r\n                                <ShowDailyPuzzleHistory history={history} handleDailyPuzzleHistoryClick={props.handleDailyPuzzleHistoryClick}/>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        <FaCrown/> {history.nameSubmitted} - {history.scoreSubmitted} <FaCrown/>\r\n                                    </Typography>\r\n                                    <Typography className={classes.secondaryHeading}>Lowest possible solution: {history.bestScore}</Typography>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                    )\r\n                }\r\n           </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengeHistoryAnswersPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        console.log(this.props.history);\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                dailyChallengeModeAnswers={'Yes'}\r\n                nameSubmitted={this.props.history.nameSubmitted}\r\n                bestScore={this.props.history.bestScore}\r\n                created={this.props.history.created}\r\n                games={this.props.history.games}\r\n                playerStateList={this.props.history.playerStateList}\r\n                scoreSubmitted={this.props.history.scoreSubmitted}\r\n                solutionDataSubmitted={this.props.history.solutionDataSubmitted}\r\n                submitted={this.props.history.submitted}\r\n                user_id={this.props.user_id}\r\n                />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengeHistoryAnswersPage;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Loading} from 'arwes';\r\n\r\nexport default function LoadingPage() {\r\n  return (\r\n    <div>\r\n            <Loading animate layer='success' full />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Home from './Pages/Home';\r\nimport { Header, Project, Words, Button,Arwes,ThemeProvider, createTheme, withStyles, Frame} from 'arwes';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport withStyles2 from \"@material-ui/core/styles/withStyles\";\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport clsx from 'clsx';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\nimport axios from 'axios';\r\nimport Game from './containers/Game';\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport BrushIcon from '@material-ui/icons/Brush';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"./constants/constants\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport PuzzleRushDifficultyModal from \"./containers/Modals/PuzzleRushDifficultyModal\";\r\nimport RandomGameDifficultyPage from \"./containers/Modals/RandomGameDifficultyPage\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport RandomGamePage from \"./Pages/RandomGamePage\";\r\nimport PuzzleRushPage from \"./Pages/PuzzleRushPage\";\r\nimport LessonsPage from \"./Pages/LessonsPage\";\r\nimport DailyChallengePage from \"./Pages/DailyChallenge\";\r\nimport AboutUs from \"./Pages/AboutUs\";\r\nimport DailyChallengeHistory from \"./Pages/DailyChallengeHistory\";\r\nimport DailyChallengeHistoryAnswersPage from \"./Pages/DailyChallengeHistoryAnswersPage\";\r\nimport { FaMedal } from 'react-icons/fa';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport Popover from \"@material-ui/core/Popover\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        backgroundColor: 'transparent',\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    drawerHeaderRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerHeaderLeft: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    toolbar1: {\r\n        opacity: '1'\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    dividerFullWidth: {\r\n        margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    darkmode: {\r\n          body: '#363537',\r\n          text: '#FAFAFA',\r\n          toggleBorder: '#6B8096',\r\n          gradient: 'linear-gradient(#091236, #1E215D)',\r\n    },\r\n});\r\n\r\n\r\n\r\nconst MyColor = withStyles(theme => ({\r\n    root: {\r\n        width: 300,\r\n        height: 120,\r\n        transition: `background-color ${theme.animTime}ms ease-out`,\r\n        backgroundColor: theme.color.primary.base,\r\n    },\r\n}))(props => (\r\n    <div className={props.classes.root} />\r\n));\r\n\r\n\r\nclass MyApp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        if (window.uri === '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickDailyChallengeHistory={this.handleClickDailyChallengeHistory} handleClickProfile={this.handleClickProfile} handleClickAbout={this.handleClickAboutUs} handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n                dailychallengehistoryloaded: false,\r\n                profileDataloaded: false,\r\n            };\r\n        }\r\n        else {\r\n            if (window.token.g_id == undefined) {\r\n                const linedir = window.userInfo == undefined ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={linedir} name={window.token.name} gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri} authorname={window.token.authorname} votes={window.token.votes} hasVoted={window.token.hasVoted} signInModalOpen={this.SignInButtonPressed}/>, //when uri is entered to play specific game\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                };\r\n            }\r\n            else {\r\n                const linedir = window.userInfo == undefined ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={linedir} randomGame={'Yes'} game={window.token} difficulty={window.token.g_difficulty}/>,\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                }\r\n            }\r\n        }\r\n        this.state.openChat = false;\r\n        this.state.chatAnchor = null;\r\n        this.state.open = window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? false : false;\r\n        this.state.mobileAnchorEl = null;\r\n        this.state.mobileMenuOpen = false;\r\n        this.state.showLoginModal = false;\r\n        this.state.showPuzzleRushModal = false;\r\n        this.state.loadingPage = false;\r\n        this.state.filterTerm = 'None'\r\n        this.state.searchTerm = ''\r\n        this.state.findWindowHeight = 0;\r\n        this.state.numFindGames = window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? 8 : 20;\r\n        if (window.loggedin === 'Yes') {\r\n           this.state.LineDirections = window.userInfo.LineDirFlag === 'Y';\r\n        }\r\n        else {\r\n           this.state.LineDirections = true;\r\n        }\r\n        const color = '#1976d2';\r\n        this.state.theme = this.getTheme(color);\r\n    }\r\n\r\n    handleChatOpen = (event) => {\r\n        this.setState({\r\n            openChat: true,\r\n            chatAnchor: event.currentTarget\r\n        })\r\n    };\r\n\r\n    handleChatClose = () => {\r\n      this.setState({\r\n          openChat: false\r\n      })\r\n    };\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState( {\r\n            open: false\r\n        })\r\n    };\r\n\r\n    getTheme (color) {\r\n        return createTheme({\r\n            color: {\r\n                primary: { base: color }\r\n            }\r\n        });\r\n    }\r\n\r\n    handleLineDirections = (boolean) => {\r\n        if (window.loggedin === 'Yes') {\r\n            axios.post('/settingsChange', {LineDirections: boolean ? 'Y' : 'N'})\r\n                .then( res => {\r\n                    console.log('changed');\r\n                });\r\n        }\r\n        this.setState({\r\n            LineDirections: boolean\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallenge = () => {\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeData')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    const dc_movesList = res.data.dc_movesList == null ? null : JSON.parse(res.data.dc_movesList)\r\n                    const dc_playerList = res.data.dc_playerList == null ? null : JSON.parse(res.data.dc_playerList)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                                        PageSelected: <DailyChallengePage\r\n                                                            handleClickDailyChallenge={this.handleClickDailyChallenge}\r\n                                                            dailyChallengeGameslist={JSON.parse(res.data.dailyChallengeGameslist)}\r\n                                                            dc_id={res.data.dc_id}\r\n                                                            dchighscores={JSON.parse(res.data.dchighscores)}\r\n                                                            handleLineDirections={this.handleLineDirections}\r\n                                                            LineDirections={this.state.LineDirections}\r\n                                                            savedMoves={dc_movesList}\r\n                                                            playerStateList={dc_playerList}\r\n                                        />,\r\n                                        open: isOpen,\r\n                                        loadingPage: false,\r\n                                    });\r\n                        }\r\n                    });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState( {\r\n            open: true\r\n        });\r\n    };\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type === 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    };\r\n\r\n    handleClickRandomGameModal = (game,difficulty) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showRandomGameModal: false,\r\n            PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} randomGame={'Yes'} game={game} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickRandomGame = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            PageSelected: <RandomGameDifficultyPage\r\n                                closeModal={this.closeRandomGameLoginModal}\r\n                                show={this.state.showRandomGameModal}\r\n                                handleClickRandomGame={this.handleClickRandomGameModal}\r\n                                backButton={this.handleHomePageClick}\r\n                            />,\r\n        });\r\n    };\r\n\r\n    handleClickPuzzleRush = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            PageSelected:   <PuzzleRushDifficultyModal\r\n                                closeModal={this.closePuzzleRushLoginModal}\r\n                                show={this.state.showPuzzleRushModal}\r\n                                handleClickPuzzleRush={this.handleClickPuzzleRushModal}\r\n                                backButton={this.handleHomePageClick}\r\n                            />,\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallengeHistory = (event) => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeHistory')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    var historydata = JSON.parse(res.data)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                            PageSelected: <DailyChallengeHistory handleDailyPuzzleHistoryClick={this.handleDailyPuzzleHistoryClick} dailychallengehistory={historydata}/>,\r\n                            challengeHistoryData: historydata,\r\n                            dailychallengehistoryloaded: true,\r\n                            open: isOpen,\r\n                            loadingPage: false,\r\n                        });\r\n                    }\r\n            });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleDailyPuzzleHistoryClick = history => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <DailyChallengeHistoryAnswersPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} history={history}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty,games,p_id) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showPuzzleRushModal: false,\r\n            PageSelected: <PuzzleRushPage handleClickPlayAgain={this.handleClickPuzzleRush} handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: false\r\n        });\r\n    };\r\n\r\n    closeRandomGameLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: false\r\n        });\r\n    };\r\n\r\n    handleGameClick = (name, gamedata, highscores, uri, authorname, votes, hasVoted) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} name={name} highscores={highscores} gamedata={gamedata} uri={uri} authorname={authorname} votes={votes} hasVoted={hasVoted} signInModalOpen={this.SignInButtonPressed}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <CreateGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} state={\"new\"}/>,\r\n             open: isOpen,\r\n             loadingPage: false,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickProfile = event => {\r\n        if (window.loggedin === 'Yes') {\r\n            this.state.loadingPage = true;\r\n                    axios.get('/getProfileData')\r\n                        .then( res => {\r\n                            var isOpen = this.state.open;\r\n                            if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                                isOpen = false\r\n                            }\r\n                            var profileData = res.data;\r\n                            var gamesview = JSON.parse(profileData.gamesview)\r\n                            var solutionsview = JSON.parse(profileData.solutionsview)\r\n                            var puzzlerushview = JSON.parse(profileData.puzzlerushview)\r\n                            if (this.state.loadingPage) {\r\n                                this.setState({\r\n                                    PageSelected: <ProfilePage handleClickPlayGame={this.handleGameClick} gamesview={gamesview} solutionsview={solutionsview} puzzlerushview={puzzlerushview}/>,\r\n                                    gamesview: gamesview,\r\n                                    solutionsview: solutionsview,\r\n                                    puzzlerushview: puzzlerushview,\r\n                                    profileDataloaded: true,\r\n                                    open: isOpen,\r\n                                    loadingPage: false,\r\n                                });\r\n                            }\r\n                        });\r\n                    this.setState({\r\n                        PageSelected: <LoadingPage/>,\r\n                    });\r\n                }\r\n        else {\r\n            this.SignInButtonPressed('Sign in');\r\n        }\r\n    };\r\n\r\n    setNumFindGames = (num,filterTerm,searchTerm) => {\r\n        this.setState({\r\n            numFindGames: num,\r\n            searchTerm: searchTerm,\r\n            filterTerm: filterTerm,\r\n        })\r\n    }\r\n\r\n    setFindWindow = height => {\r\n        this.setState({\r\n            findWindowHeight: height\r\n        })\r\n    }\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.post('/search', {search: this.state.searchTerm, filter: this.state.filterTerm, offset: 0, numGames: this.state.numFindGames})\r\n            .then( res => {\r\n                const gameslist = JSON.parse(res.data.gameslist);\r\n                const highscoreslist = JSON.parse(res.data.highscoreslist);\r\n                var isOpen = this.state.open;\r\n                if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                    isOpen = false\r\n                }\r\n                if (this.state.loadingPage) {\r\n                    this.setState({\r\n                        PageSelected: <FindGame findWindowHeight={this.state.findWindowHeight} setFindWindow={this.setFindWindow} setNumFindGames={this.setNumFindGames} gameslist={gameslist} highscoreslist={highscoreslist} handleGameClick={this.handleGameClick}/>,\r\n                        open: isOpen,\r\n                        loadingPage: false,\r\n                    });\r\n                }\r\n        });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleHomePageClick = () => {\r\n        this.setState({\r\n            PageSelected: <Home handleClickDailyChallengeHistory={this.handleClickDailyChallengeHistory} handleClickProfile={this.handleClickProfile} handleClickAbout={this.handleClickAboutUs} handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickAboutUs = event => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <AboutUs/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickLearnGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <LessonsPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileAnchorEl: null,\r\n            mobileMenuOpen: false\r\n        });\r\n    };\r\n\r\n    showPage = () => {\r\n        return(\r\n            this.state.PageSelected\r\n        )\r\n    };\r\n\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({\r\n            mobileAnchorEl: event.currentTarget,\r\n            mobileMenuOpen: true\r\n        });\r\n    };\r\n\r\n    render () {\r\n        const { color, theme } = this.state;\r\n        const { classes } = this.props;\r\n        const theme2 = createMuiTheme({\r\n            palette: {\r\n                primary: teal,\r\n                secondary: {\r\n                    main: '#e65100',\r\n                },\r\n            }\r\n        });\r\n        return (<MuiThemeProvider theme={theme2}>\r\n            <ThemeProvider theme={theme}>\r\n                <Arwes animate background='/static/images/background-space.jpg' pattern='/static/images/glow-space.png'>\r\n                        <div className={classes.root}>\r\n                            <AppBar\r\n                                position=\"fixed\"\r\n                                className={clsx(classes.appBar, {\r\n                                    [classes.appBarShift]: this.state.open,\r\n                                })}\r\n                                color=\"transparent\"\r\n                             >\r\n                                <Toolbar className={classes.toolbar1}>\r\n                                    <img onClick={this.handleHomePageClick} width={50} height={50} src=\"/static/images/logo150.png\"/>\r\n                                    <Words animate layer='header'> RobotsEvolved </Words>\r\n                                    <div className={classes.grow} />\r\n                                    <div className={classes.sectionDesktop}>\r\n                                        <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                                    </div>\r\n                                    <div className={classes.sectionMobile}>\r\n                                        <IconButton\r\n                                            aria-label=\"show more\"\r\n                                            aria-controls={\"primary-search-account-menu-mobile\"}\r\n                                            aria-haspopup=\"true\"\r\n                                            onClick={this.handleMobileMenuOpen}\r\n                                            color=\"inherit\"\r\n                                        >\r\n                                            <MoreIcon />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </Toolbar>\r\n                            </AppBar>\r\n                            <Menu\r\n                                anchorEl={this.state.mobileAnchorEl}\r\n                                anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                                id={\"primary-search-account-menu-mobile\"}\r\n                                keepMounted\r\n                                transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                                open={this.state.mobileMenuOpen}\r\n                                onClose={this.handleMobileMenuClose}\r\n                            >\r\n                                <MenuItem>\r\n                                    <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                                </MenuItem>\r\n                            </Menu>\r\n                            <Drawer\r\n                                id=\"MainDrawer\"\r\n                                className={classes.drawer}\r\n                                variant=\"persistent\"\r\n                                anchor=\"left\"\r\n                                open={this.state.open}\r\n                                classes={{\r\n                                    paper: classes.drawerPaper,\r\n                                }}\r\n                            >\r\n                                <div className={classes.drawerHeader}>\r\n                                    <div className={classes.drawerHeaderLeft}>\r\n                                        <SignInButton onClick={this.SignInButtonPressed}/>\r\n                                    </div>\r\n                                    <div className={classes.drawerHeaderRight}>\r\n                                        <IconButton onClick={this.handleDrawerClose}>\r\n                                            {useTheme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </div>\r\n                                <Divider />\r\n                                <Typography\r\n                                    className={classes.dividerFullWidth}\r\n                                    color=\"textSecondary\"\r\n                                    display=\"block\"\r\n                                    variant=\"caption\"\r\n                                >\r\n                                    Play\r\n                                </Typography>\r\n                                <List>\r\n                                    <ListItem button key={'Find a Game'} onClick={this.handleClickFindGame}>\r\n                                        <ListItemIcon><SearchIcon /></ListItemIcon>\r\n                                        <ListItemText primary={'Find a Game'} />\r\n                                    </ListItem>\r\n                                    <ListItem button key={'Daily Challenge'} onClick={this.handleClickDailyChallenge}>\r\n                                        <ListItemIcon><TodayIcon /></ListItemIcon>\r\n                                        <ListItemText primary={'Daily Challenge'} />\r\n                                    </ListItem>\r\n                                    <ListItem button key={'Create a Game'} onClick={this.handleClickCreateGame}>\r\n                                        <ListItemIcon><BrushIcon /></ListItemIcon>\r\n                                        <ListItemText primary={'Create a Game'} />\r\n                                    </ListItem>\r\n                                    <ListItem button key={'Random Game'} onClick={this.handleClickRandomGame}>\r\n                                        <ListItemIcon><CasinoIcon /></ListItemIcon>\r\n                                        <ListItemText primary={'Random Game'} />\r\n                                    </ListItem>\r\n                                    <ListItem button key={'Puzzle Rush'} onClick={this.handleClickPuzzleRush}>\r\n                                        <ListItemIcon><TimerIcon /></ListItemIcon>\r\n                                        <ListItemText primary={'Puzzle Rush'} />\r\n                                    </ListItem>\r\n                                </List>\r\n                                <Divider />\r\n                                <Typography\r\n                                    className={classes.dividerFullWidth}\r\n                                    color=\"textSecondary\"\r\n                                    display=\"block\"\r\n                                    variant=\"caption\"\r\n                                >\r\n                                    Learn\r\n                                </Typography>\r\n                                <List>\r\n                                    <ListItem button key={'Lessons'} onClick={this.handleClickLearnGame}>\r\n                                        <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n                                        <ListItemText primary={'Lessons'} />\r\n                                    </ListItem>\r\n                                </List>\r\n                                <Divider />\r\n                                <Typography\r\n                                    className={classes.dividerFullWidth}\r\n                                    color=\"textSecondary\"\r\n                                    display=\"block\"\r\n                                    variant=\"caption\"\r\n                                >\r\n                                    Community\r\n                                </Typography>\r\n                                <List>\r\n                                    <ListItem button key={'Profile'} onClick={this.handleClickProfile}>\r\n                                        <ListItemIcon><AccountBoxIcon /></ListItemIcon>\r\n                                        <ListItemText primary={'Profile'} />\r\n                                    </ListItem>\r\n                                    <ListItem button key={'Daily Challenge History'} onClick={this.handleClickDailyChallengeHistory}>\r\n                                        <ListItemIcon><FaMedal /></ListItemIcon>\r\n                                        <ListItemText primary={'Daily Challenge History'} />\r\n                                    </ListItem>\r\n                                </List>\r\n                                <Divider />\r\n                                <Typography\r\n                                    className={classes.dividerFullWidth}\r\n                                    color=\"textSecondary\"\r\n                                    display=\"block\"\r\n                                    variant=\"caption\"\r\n                                >\r\n                                    Tools\r\n                                </Typography>\r\n                                <List>\r\n                                    <ListItem button key={'About'} onClick={this.handleClickAboutUs}>\r\n                                        <ListItemIcon><InfoIcon /></ListItemIcon>\r\n                                        <ListItemText primary={'About'} />\r\n                                    </ListItem>\r\n                                </List>\r\n                            </Drawer>\r\n                            <main className={clsx(classes.content, {\r\n                                [classes.contentShift]: this.state.open,\r\n                            })}>\r\n                                <div className={classes.drawerHeader} />\r\n                                {this.showPage()}\r\n                            </main>\r\n                            <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n                        </div>\r\n                        <div style={{position: \"fixed\", bottom: \"10px\", right: \"10px\"}}>\r\n                            <IconButton\r\n                                style = {{backgroundColor: \"#14a76c\"}}\r\n                                onClick={this.handleChatOpen}\r\n                            >\r\n                                <ChatIcon />\r\n                            </IconButton>\r\n                            <Popover\r\n                                open={this.state.openChat}\r\n                                anchorEl={this.state.chatAnchor}\r\n                                onClose={this.handleChatClose}\r\n                                anchorOrigin={{\r\n                                    vertical: \"top\",\r\n                                    horizontal: \"left\"\r\n                                }}\r\n                                transformOrigin={{\r\n                                    vertical: \"bottom\",\r\n                                    horizontal: \"right\"\r\n                                }}\r\n                            >\r\n                                <iframe\r\n                                    src=\"https://titanembeds.com/embed/740127738345554021?css=140&username=guest&defaultchannel=740270339900178583\"\r\n                                    height= {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? (parseInt(window.innerHeight/2)) + '': \"600\"}\r\n                                    width= {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? (window.innerWidth - 40) + '': \"400\"}\r\n                                    frameBorder=\"0\"\r\n                                />\r\n                            </Popover>\r\n                        </div>\r\n                </Arwes>\r\n            </ThemeProvider>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles2(useStyles)(MyApp);","export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const MOBILE_INNER_SCREEN_WIDTH = '960';\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const COLORED_GOAL_IMAGE = '/static/images/targetbullseye.png';\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass DailyMovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    resetToBest = () => {\r\n        this.props.resetToBest(this.props.moveHistory,this.props.playerState)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.moveHistory.length == 0 ?\r\n            <div style={style()}>\r\n                <Typography>Personal Best</Typography>\r\n                <Divider />\r\n                <Typography>None</Typography>\r\n            </div> :\r\n            <div style={style()}>\r\n                <Typography>Personal Best</Typography>\r\n                <Divider />\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n                <Divider />\r\n                <Button color=\"secondary\" onClick={this.resetToBest}>Reset to best</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyMovesView;","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function CreateBoardGoalSelector(props) {\r\n  const [wildchecked, setWildChecked] = React.useState(true);\r\n  const handleWildCardClick = () => {\r\n    props.handleWildCardClick();\r\n    setWildChecked(wildchecked ? false : true);\r\n  }\r\n\r\n  const handleBlueClick = () => {\r\n    props.handleColoredClick('blue');\r\n  }\r\n  const handleGreenClick = () => {\r\n    props.handleColoredClick('green');\r\n  }\r\n  const handleRedClick = () => {\r\n    props.handleColoredClick('red');\r\n  }\r\n  const handleYellowClick = () => {\r\n    props.handleColoredClick('yellow');\r\n  }\r\n  return (\r\n  <Paper>\r\n    <FormControl style={{backgroundColor: 'white', textAlign: 'center'}} component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Goal Selector</FormLabel>\r\n      <FormGroup aria-label=\"position\" row>\r\n        <FormControlLabel\r\n          value=\"Wildcard\"\r\n          control={<Checkbox onClick={handleWildCardClick} checked={wildchecked} color=\"primary\" />}\r\n          label=\"wildcard\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Blue\"\r\n          control={<Checkbox onClick={handleBlueClick} color=\"primary\" />}\r\n          label=\"blue\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Green\"\r\n          control={<Checkbox onClick={handleGreenClick} color=\"primary\" />}\r\n          label=\"green\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Red\"\r\n          control={<Checkbox onClick={handleRedClick} color=\"primary\" />}\r\n          label=\"red\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"Yellow\"\r\n          control={<Checkbox onClick={handleYellowClick} color=\"primary\" />}\r\n          label=\"yellow\"\r\n          labelPlacement=\"top\"\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n    </Paper>\r\n  );\r\n}","import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function LearnGameItems(props) {\r\n    const handleClick = () => {\r\n        props.handleClickGame(props.index)\r\n    }\r\n    if (props.selected === props.index) {\r\n        return (\r\n            <Button\r\n                variant=\"contained\" color=\"primary\"\r\n                aria-label=\"vertical outlined primary button group\"\r\n                onClick={handleClick}\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={handleClick}\r\n                aria-label=\"vertical outlined primary button group\"\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div id=\"MainGameBoard\" style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleoutsidedraggable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var boxShadow = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        boxShadow = '0 0 0 3pt ' + SELECTED_ROBOT;\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        boxShadow: boxShadow,\r\n        backgroundSize: dim,\r\n        backgroundImage: \"url(\" + \"/static/images/astronaut.png\" + \")\",\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    onStopDragHandler = (e, position) => {\r\n        this.props.onStopDragHandler(position,this.props.index);\r\n    }\r\n\r\n\r\n    handleCreateMode = () => {\r\n        if (this.props.isCreateMode === 'Yes' && this.props.buildMode) {\r\n            return (\r\n            <Draggable position={{x: this.props.position.left * this.props.dimension, y:this.props.position.top*this.props.dimension}} grid={this.props.draggableGrid} onStop={this.onStopDragHandler} bounds=\"parent\">\r\n                <div onClick={this.handleClick} style={styleoutsidedraggable(this.props)}>\r\n                    <div style={styleinside(this.props)}>\r\n                        <div style={styleinside2(this.props)}/>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            this.handleCreateMode()\r\n        );\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE,ROBOT_GREEN,ROBOT_BLUE,ROBOT_RED,ROBOT_YELLOW,COLORED_GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none',\r\n        backgroundColor: color,\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none',\r\n        backgroundColor: color\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.position == null) {\r\n        return null\r\n    }\r\n    if (props.isCreateMode === 'Yes'  && props.buildMode) {\r\n        const onStopDragHandler = (e, position) => {\r\n            props.onStopDragHandler(position,props.color);\r\n        }\r\n        if (props.color == undefined) {\r\n            return(\r\n            <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n                <img src={GOAL_IMAGE} style={styledragable(props)}/>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n                <img src={COLORED_GOAL_IMAGE} style={styledragable(props)}/>\r\n            </Draggable>\r\n            )\r\n        }\r\n    }\r\n    else {\r\n        if (props.color == undefined) {\r\n            return(<img src={GOAL_IMAGE} style={style(props)}/>)\r\n        }\r\n        else {\r\n            return(<img src={COLORED_GOAL_IMAGE} style={style(props)}/>)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({buildMode,show,dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension + dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension + dimension;\r\n            left = position.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        opacity: show ? '0.5' : '0.0',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default (props) => {\r\n    const handleClick = () => {\r\n        props.handleClick(props.dir)\r\n    }\r\n    if (props.buildMode === 'undefined' || !props.buildMode)\r\n    {\r\n        return (\r\n            <div onClick={handleClick} style={style(props)}/>\r\n        );\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LearnGameItems from '../components/LearnGameItems';\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailySingleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Completed!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <Typography variant=\"body1\">\r\n                        You used {this.props.numMoves} Moves, for this puzzle.\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Total Moves: {this.props.totalMoves}\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Finish all puzzles to get submit your score!\r\n                    </Typography>\r\n                    <br/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailySingleModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailyFinalModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null\r\n        }\r\n    }\r\n\r\n    handleClickSubmitGame = () => {\r\n        if (document.getElementById(\"namesubmitHS\").value == '') {\r\n            this.setState({\r\n                error: <Alert severity=\"error\">You must choose a submit name</Alert>\r\n            })\r\n        }\r\n        else {\r\n            this.props.submitAnswer(this.props.newPlayerState);\r\n            this.setState({\r\n                error: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Completed the Challenge!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                    {this.state.error}\r\n                    {this.props.submitted}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    {this.props.submitted == null ? <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickSubmitGame}>Submit Highscore</Button> : null}\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailyFinalModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    campaignPuzzle = () => {\r\n        if (window.userInfo != null) {\r\n            if (window.userInfo.userID == 2 || window.userInfo.userID == 3 || window.userInfo.userID == 7 || window.userInfo.userID == 4) {\r\n                return <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzleCampaign}>Campaign Puzzle</Button>\r\n            }\r\n            else {\r\n                return null\r\n            }\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Submit Puzzle</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField id={\"namesubmit\"} label={\"Name of Puzzle\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                    {this.campaignPuzzle()}\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleModal;\r\n","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Path Indicators\"\r\n                    checked={this.props.showColoredLineDirections}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n\r\n    state = {\r\n            minutes: 5,\r\n            seconds: 0,\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.puzzleRushTimeUp();\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    timer = () => {\r\n        if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n            return (<h2>Time is up!</h2>)\r\n        }\r\n        else {\r\n            return(\r\n                <h2>Time Remaining: {this.state.minutes}:{this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds}</h2>)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            this.timer()\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ToggleSettings from \"../components/ToggleSettings\";\r\nimport Timer from \"../components/Timer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                        copyButtonText: \"Copy Puzzle Link\"\r\n                     };\r\n        this.state.uri = this.props.isDailyChallenge === 'Yes' ? 'dailychallenge' : this.props.uri;\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <div>\r\n                    <Button color=\"secondary\" variant={\"outlined\"} fullWidth={true} onClick={this.handleCreateBoardClick}>Modify Board</Button>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Switch color=\"primary\" checked={this.props.buildMode} onChange={this.props.toggleBuildMode}/>}\r\n                        label=\"Build Mode\"\r\n                            />\r\n                </div>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.state.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        document.getElementsByClassName(\"MuiSlider-thumb\")[0].blur();\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n    showPuzzleLink = () => {\r\n        if (this.props.createMode === 'Yes' || this.props.isPuzzleRush === 'Yes' || this.props.isLesson === 'Yes' || this.props.isDailyChallengeAnswers === 'Yes' || this.props.isDailyChallenge === 'Yes') {\r\n            return null;\r\n        }\r\n        else {\r\n                return(\r\n                     <div style={{paddingBottom: '10px'}}>\r\n                         <Button fullWidth={true} variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                                 onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                     </div>\r\n                    )\r\n        }\r\n    }\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                {this.showPuzzleLink()}\r\n                 <Divider />\r\n                 <Typography\r\n                     color=\"textSecondary\"\r\n                     display=\"block\"\r\n                     variant=\"caption\"\r\n                     style={{paddingBottom: '10px'}}\r\n                 >\r\n                     Board Actions\r\n                 </Typography>\r\n                 <ButtonGroup fullWidth={true} color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     <Button onClick={this.props.undoMove}>Undo</Button>\r\n                 </ButtonGroup>\r\n                 {this.isCreateMode(this.props.createMode)}\r\n                 <Divider />\r\n                 <ToggleSettings showColoredLineDirections={this.props.showColoredLineDirections} onClick={this.props.toggleLineIndicators}/>\r\n                 <div style={buttonPanel()}>\r\n                     <Typography id=\"discrete-slider-small-steps\"\r\n                                 color=\"textSecondary\"\r\n                                 display=\"inline\"\r\n                                 gutterBottom>\r\n                         Size Of Board\r\n                     </Typography>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={this.props.squareSizeValue}\r\n                         valueLabelDisplay=\"auto\"\r\n                         id=\"sliderelement\"\r\n                     />\r\n                 </div>\r\n                 <Divider/>\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n}\r\n\r\nconst paperstyle = () => {\r\n    return {\r\n        marginBottom: '15px'\r\n    }\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n                <Paper style={paperstyle()}elevation={3}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={9}>\r\n                            <Typography color={'primary'} style={{float: 'left'}}>\r\n                                {highscore.comment}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                                {highscore.userid != 1 ? <GoVerified/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'textSecondary'}>{highscore.numMoves}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.created}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Paper>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid item xs={12} style={styleouter()}>\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginTop: '30px',\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst CrownCounter = highscore => {\r\n    var crowns = []\r\n    var i;\r\n    for (i=0; i<highscore.wins;i++) {\r\n        crowns.push(<FaCrown/>);\r\n    }\r\n    return (\r\n        <div>\r\n            {crowns}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (<Grid item xs={12}>\r\n                <Paper elevation={3}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={9}>\r\n                            <Typography color={'primary'} style={{float: 'left'}}>\r\n                                {highscore.name}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                                {highscore.wins == 0 || highscore.wins == null ? null : CrownCounter(highscore) }\r\n                                {highscore.user_id != 1 ? <GoVerified/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'textSecondary'}>{highscore.score}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.submitted}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Paper>\r\n            </Grid>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid style={styleouter()} container direction={'column'} spacing={1}>\r\n        {\r\n                highscores.map(highscore =>\r\n                    highscorestyle(highscore)\r\n                )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nclass PuzzleRushWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Puzzle Rush - {this.props.difficulty}</DialogTitle>\r\n                <DialogContent dividers>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"h6\">\r\n                            Statistics\r\n                          </Typography>\r\n                          <div>\r\n                            <List dense={true}>\r\n\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Number of Puzzles Completed\"\r\n                                    secondary={this.props.numPuzzlesCompleted}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average time Per Puzzle\"\r\n                                    secondary={this.props.averageTime}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average Moves per Puzzle\"\r\n                                    secondary={this.props.averageMoves}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Efficiency Score: puzzles * 7 - redundant moves from best\"\r\n                                    secondary={(this.props.numPuzzlesCompleted * 7) - this.props.differenceOptimal}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Moves Per Second\"\r\n                                    secondary={this.props.movesPerSecond}\r\n                                  />\r\n                                </ListItem>\r\n                            </List>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.handleClickPlayAgain}>Play Again!</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushWinModal;\r\n\r\n","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../../constants/constants';\r\n\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass RandomGameStatsModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answers: null,\r\n        }\r\n    }\r\n\r\n    showStatsModal = () => {\r\n        this.props.handleShowRandomAnswers()\r\n        this.setState({\r\n            answers: this.props.lowestMoveSequence\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-random\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        lowest possible moves: {this.props.lowestMoves}\r\n                    </div>\r\n                    {this.state.answers}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.showStatsModal}>Show Puzzle Answers</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomGameStatsModal;","import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nexport default function CloseIconWithOnClick(props) {\r\n    const handleClose = () => {\r\n        props.handleClose(props.index);\r\n    }\r\n    return (<CloseIcon onMouseDown={handleClose}/>\r\n    )\r\n}","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport CloseIconWithOnClick from './CloseIconWithOnClick'\r\n\r\nexport default function Descriptionlist(props) {\r\n    return(\r\n            <List>\r\n              {\r\n                  props.tipsText.map((text,index) =>\r\n                    <ListItem>\r\n                      <div>\r\n                        {text}\r\n                      </div>\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                          <CloseIconWithOnClick index={index} handleClose={props.handleCloseToolTips}/>\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  )\r\n              }\r\n            </List>\r\n    )\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinLessonModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <Typography> You completed the Lesson! Move on to the next one!\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinLessonModal;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: '0 10px'\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 25,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function ShowDailyChallengeScoresCard(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {props.name}\r\n        </Typography>\r\n        <Typography style={{marginBottom: '30px'}} variant=\"h5\" component=\"h2\">\r\n          {props.bestScore}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.MovesforPuzzle}\r\n          <br/>\r\n          {props.MoveSequence}\r\n          <br />\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport MovesView from '../components/MovesView';\r\nimport ShowDailyChallengeScoreCard from '../components/ShowDailyChallengeScoresCard'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst stylebelow = () => {\r\n    return {\r\n        marginTop: '40px',\r\n        marginBottom: '20px'\r\n    }\r\n}\r\n\r\nclass DailyChallengeHistoryData extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography style={stylebelow()} variant=\"h4\"> {this.props.difficultyforPuzzle} </Typography>\r\n                <ShowDailyChallengeScoreCard\r\n                    name={\"Robot God\"}\r\n                    bestScore={this.props.bestScore}\r\n                    MovesforPuzzle={this.props.lowestMovesforPuzzle}\r\n                    MoveSequence={this.props.lowestMoveSequence}\r\n                />\r\n                <ShowDailyChallengeScoreCard\r\n                    name={this.props.nameSubmitted}\r\n                    bestScore={this.props.scoreSubmitted}\r\n                    MovesforPuzzle={null}\r\n                    MoveSequence={<MovesView\r\n                                        moveHistory={this.props.playerMovedSequence} playerState={[{colorSignifier: \"blue\"},{colorSignifier: \"green\"},{colorSignifier: \"red\"},{colorSignifier: \"yellow\"}]}\r\n                                  />}\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyChallengeHistoryData;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent,type) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    if (type === 'blank') {\r\n        var goal = {top: height-1, left: width-1};\r\n        var randompos1 = {top: 0,left: 0, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n        var randompos2 = {top: 0,left: 1, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n        var randompos3 = {top: 1,left: 0, color: ROBOT_RED, colorSignifier: 'red'};\r\n        var randompos4 = {top: 1,left: 1, color: ROBOT_YELLOW, colorSignifier:'yellow'};\r\n    }\r\n    else {\r\n        var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n        var randomPositions = [goal];\r\n        for (var i=0;i<5;i++) {\r\n            randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n        }\r\n        var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n        var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n        var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n        var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    }\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport DailyMovesView from '../components/DailyMovesView';\r\nimport CreateBoardGoalSelector from '../components/CreateBoardGoalSelector';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {withRouter} from 'react-router';\r\nimport Draggable from 'react-draggable';\r\nimport LearnGameItems from '../components/LearnGameItems';\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport YouWinDailySingleModal from '../components/YouWinDailySingleModal';\r\nimport YouWinDailyFinalModal from '../components/YouWinDailyFinalModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport PuzzleRushWinModal from '../containers/Modals/PuzzleRushFinishedModal';\r\nimport RandomGameStatsModal from '../containers/Modals/RandomGameStatsModal';\r\nimport DescriptionList from '../components/DescriptionList';\r\nimport YouWinLessonModal from '../components/YouWinLessonModal';\r\nimport DailyChallengeHistoryData from '../components/DailyChallengeHistoryData';\r\nimport Timer from \"../components/Timer\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR,\r\n    MOBILE_INNER_SCREEN_WIDTH\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if(e.keyCode == 32 && e.target == document.body) {\r\n    e.preventDefault();\r\n  }\r\n    if([37, 38, 39, 40, 9,13].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n    }\r\n}\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\nconst formatGeneratedMoveSequence = (moves) => {\r\n    var images = []\r\n    moves.map(move => {\r\n        var color = move.charAt(0);\r\n        var direction = move.charAt(1);\r\n        if (color == 'B') {\r\n            color = 'blue'\r\n        }\r\n        else if (color == 'R') {\r\n            color = 'red'\r\n        }\r\n        else if (color == 'Y') {\r\n            color = 'yellow'\r\n        }\r\n        else {\r\n            color = 'green'\r\n        }\r\n        if (direction == 'N') {\r\n            direction = UP\r\n        }\r\n        else if (direction == 'S') {\r\n            direction = DOWN\r\n        }\r\n        else if (direction == 'E') {\r\n            direction = RIGHT\r\n        }\r\n        else {\r\n            direction = LEFT\r\n        }\r\n        images.push(<img src={DIRECTION_MAP_IMAGES[color][direction]}/>)\r\n    });\r\n    return images\r\n}\r\n\r\n\r\nconst setDefaultSquareSize = (boardWidth,boardHeight) => {\r\n    const drawerWidth = document.getElementById(\"MainDrawer\") == null ? 140 : parseInt(getComputedStyle(document.getElementById(\"MainDrawer\")).width);\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n    var settingstop = windowHeight - 120;\r\n\r\n    settingstop = settingstop / boardHeight\r\n    settingstop = parseInt(settingstop);\r\n    settingstop = settingstop - (settingstop % 4)\r\n\r\n    var settings = ((windowWidth < MOBILE_INNER_SCREEN_WIDTH) ? windowWidth - 20 : (windowWidth - drawerWidth) / 1.75);\r\n    settings = settings / boardWidth;\r\n    settings = parseInt(settings);\r\n    settings = settings - (settings % 4);\r\n    var squarevalue = settings > settingstop ? settingstop : settings\r\n    if (squarevalue < 16) {\r\n        squarevalue = 16;\r\n    }\r\n    else if (squarevalue > 52) {\r\n        squarevalue = 52;\r\n    }\r\n    return squarevalue;\r\n};\r\n\r\nconst ColoredLineDirections = [LEFT,RIGHT,UP,DOWN]\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.puzzleRush === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.p_id = this.props.p_id;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = []\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            this.state.moveHistoryList=[];\r\n\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[0].g_solutiondata))\r\n            this.state.lowestMovesforPuzzle = this.props.games[0].g_moves\r\n            this.state.difficultyforPuzzle = this.props.games[0].g_difficulty\r\n            this.state.playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[0]\r\n\r\n            this.state.playerStateList = [];\r\n            this.state.tipsText = [];\r\n            this.state.highscores = [];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.dailyDayName = this.props.games[0].g_name\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            if (this.props.savedMoves != null) {\r\n                this.state.moveHistoryList = this.props.savedMoves\r\n                this.state.gamesWonDaily = [true,true,true,true]\r\n                this.state.moveHistory = this.props.savedMoves[0].slice()\r\n                this.state.playerState = this.props.playerStateList[0].slice()\r\n            }\r\n            else {\r\n                this.state.moveHistoryList=[];\r\n            }\r\n            this.state.playerStateList = this.props.playerStateList != null ? this.props.playerStateList : [];\r\n            this.state.tipsText = ['Winners who are Logged in will receive a Crown','See about page for details on the daily challenge difficulty','Puzzles reset at 3PM EST, the page will refresh automatically'];\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.dc_id = this.props.dc_id;\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.game.g_puzzledata)\r\n            this.state.lowestMoves = this.props.game.g_moves\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.game.g_solutiondata))\r\n            this.state.difficulty = this.props.game.g_difficulty\r\n            this.state.createMode = 'No';\r\n            this.state.gameWon = false;\r\n            this.state.buildMode = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = ['this game was randomly generated'];\r\n            this.state.uri = this.props.game.g_uri;\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n            window.history.pushState({id: 'Random Game'},'RobotsEvolved | Random Game','/play/' + this.props.game.g_uri)\r\n        }\r\n        else if (this.props.learnMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [this.props.games[0].description];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.votes = this.props.votes\r\n            this.state.hasVoted = this.props.hasVoted\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.buildMode = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n            window.history.pushState({id: 'Play Game'},'RobotsEvolved | Play Game','/play/'+ this.props.uri)\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,1,'blank');\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                buildMode: true,\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false,\r\n                tipsText: [\r\n                                        'Click on Wall spots to toggle',\r\n                                        'Click and Drag robots or goal to move robots',\r\n                                        'When you are ready, toggle build mode in order to solve the puzzle',\r\n                                        'You must solve the puzzle in order to submit.']\r\n            },board);\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.coloredGoals = [];\r\n        }\r\n        this.state.showColoredLineDirections = this.props.LineDirections;\r\n        if (this.state.coloredGoals == undefined) {\r\n            this.state.coloredGoals = [];\r\n        }\r\n    };\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                const highscoresdata = JSON.parse(res.data.highscores)\r\n                if (this.FindhighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    FindhighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.numMoves != check[index].numMoves) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n\r\n    DChighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.score != check[index].score) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n    updateDailyHighscores = () => {\r\n        axios.get('/dailychallengehighscores?dc_id=' + this.state.dc_id)\r\n            .then( res => {\r\n                if (res.data.dc_id != this.state.dc_id) {\r\n                    window.dailyChallengeSessionBestHistory = [[],[],[],[]];\r\n                    window.dailyChallengeSessionBestPlayerState = [[],[],[],[]];\r\n                    this.props.handleClickDailyChallenge();\r\n                    return\r\n                }\r\n                const highscoresdata = JSON.parse(res.data.highscores)//PoorMan's global redux implementation\r\n                if (this.DChighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                    window.dchighscores = JSON.parse(res.data.highscores)\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.updateHighscores();\r\n            var IntervalId = setInterval(this.updateHighscores, 8000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.updateDailyHighscores();\r\n            var IntervalId = setInterval(this.updateDailyHighscores, 6000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.tabSelector();\r\n                return;\r\n                break;\r\n            case 81:\r\n                if (!this.state.gameWon) {\r\n                    this.handleUndoMove();\r\n                }\r\n                break;\r\n                return;\r\n            case 87:\r\n                if (!this.state.gameWon) {\r\n                    this.resetPuzzle();\r\n                }\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n        }\r\n        this.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzleCampaign = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        var themoveHistory = this.state.moveHistory.slice()\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.userInfo !== null) {\r\n            username = window.userInfo.username\r\n        }\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username,moveHistory: themoveHistory,type: 'Campaign'}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        var themoveHistory = this.state.moveHistory.slice()\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.userInfo !== null) {\r\n            username = window.userInfo.username\r\n        }\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username,moveHistory: themoveHistory,type: 'type'}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.showColoredLineDirections === true) {\r\n            this.setState({\r\n                showColoredLineDirections: false,\r\n            });\r\n            this.props.handleLineDirections(false)\r\n        }\r\n        else {\r\n            this.setState({\r\n                showColoredLineDirections: true,\r\n            });\r\n            this.props.handleLineDirections(true)\r\n        }\r\n    };\r\n\r\n    toggleBuildMode = () => {\r\n        if (this.state.buildMode) {\r\n            this.setState({\r\n                buildMode: false,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n                buildMode: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length,solutiondata: this.state.moveHistory,name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            dailySubmittedSucessfully: null\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeRandomStatsModal = event => {\r\n        this.setState({\r\n            closeRandomStatsModal: false,\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    }\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushFinishedModal = event => {\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: false\r\n        });\r\n\r\n    }\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent, 'blank');\r\n        var squareSize = setDefaultSquareSize(width,height);\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n            squareSize: squareSize,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n    showStatsModal = () => {\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            showStatsModal: true,\r\n        });\r\n    }\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n    nextLessonPuzzle  = () => {\r\n        var puzzle = this.state.numPuzzleon;\r\n        puzzle += 1;\r\n        puzzle = puzzle == 4 ? 5 : puzzle;\r\n        puzzle = puzzle == 7 ? 8 : puzzle;\r\n        this.handleLearnClickGame(puzzle % 12);\r\n    }\r\n\r\n    puzzleRushTimeUp = () => {\r\n        var totalMovesDiff = 0;\r\n        this.state.solutiondifference.map(numMoves => {\r\n            totalMovesDiff += numMoves;\r\n        });\r\n        var averageTime = parseInt(300 / (this.state.numPuzzleon))\r\n        var totalMoves = 0;\r\n        this.state.totalMovesList.map(numMoves => {\r\n            totalMoves += numMoves\r\n        });\r\n        var avgMoves = parseInt(totalMoves / (this.state.numPuzzleon))\r\n        var movesPerSecond = totalMoves / 300;\r\n\r\n        axios.post('/puzzlerushend', {p_id: this.state.p_id,totalMoves: totalMoves,differenceFrom: totalMovesDiff})\r\n            .then( res => {\r\n                console.log(res.data);\r\n            });\r\n\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: true,\r\n            numPuzzlesCompleted: this.state.numPuzzleon,\r\n            percentile: 'TBD%',\r\n            averageTime: averageTime + 's',\r\n            averageMoves: avgMoves,\r\n            differenceOptimal: totalMovesDiff,\r\n            movesPerSecond: movesPerSecond\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    submitDailyAnswer = (LastRobotPosition) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            numMoves += moveHistory.length\r\n        });\r\n        var playerStateList = this.state.playerStateList.slice()\r\n        playerStateList[this.state.numPuzzleon] = LastRobotPosition.slice()\r\n        console.log(playerStateList);\r\n        axios.post('/dailychallenge', {score: numMoves, name: document.getElementById(\"namesubmitHS\").value, solutiondata: moveHistoryList, dc_id: this.state.dc_id, playerStateList: playerStateList})\r\n            .then( res => {\r\n                this.setState({\r\n                    dailySubmittedSucessfully: <Alert severity=\"success\">Submitted!</Alert>\r\n                });\r\n            });\r\n        window.dc_movesList = moveHistoryList;\r\n        window.dc_playerList = playerStateList;\r\n        this.state.gameWon = false;\r\n    }\r\n\r\n    checkwin = (newPlayerState) => {\r\n        if (this.state.goal != null && this.state.coloredGoals == null) {\r\n            var Won = false;\r\n            newPlayerState.map((player) => {\r\n                if (player.top === this.state.goal.top && player.left === this.state.goal.left) {\r\n                    Won = true;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            if (this.state.goal != null) {\r\n                var Won = false;\r\n                newPlayerState.map((player) => {\r\n                    if (player.top === this.state.goal.top && player.left === this.state.goal.left) {\r\n                        Won = true;\r\n                    }\r\n                });\r\n            }\r\n            else if (this.state.coloredGoals.length == 0) {\r\n                var Won = false;\r\n            }\r\n            else {\r\n                var Won = true;\r\n            }\r\n            var found = false;\r\n            var colorfound = false;\r\n            newPlayerState.map((player) => {\r\n                found = false\r\n                colorfound = false\r\n                this.state.coloredGoals.map(goal => {\r\n                    if (goal.colorSignifier == player.colorSignifier && goal.top === player.top && goal.left === player.left) {\r\n                        found = true;\r\n                    }\r\n                    if (goal.colorSignifier == player.colorSignifier) {\r\n                        colorfound = true;\r\n                    }\r\n                });\r\n                if (!found && colorfound) {\r\n                    Won = false;\r\n                }\r\n            });\r\n        }\r\n        if (Won) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No' && this.props.puzzleRush !== 'Yes') {\r\n                var username = '';\r\n                if (window.userInfo !== null) {\r\n                    username = window.userInfo.username\r\n                }\r\n                if (this.props.randomGame === 'Yes') {\r\n                    return (\r\n                        <RandomGameStatsModal\r\n                            show={this.state.gameWon}\r\n                            lowestMoves={this.state.lowestMoves}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            numMoves={this.state.moveHistory.length}\r\n                            difficulty={this.state.difficulty}\r\n                            resetPuzzle={this.resetPuzzle}\r\n                            handleShowRandomAnswers={this.handleShowRandomAnswers}\r\n                        />\r\n                    );\r\n                }\r\n                else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n                    return null\r\n                }\r\n                else if (this.props.dailyChallengeMode === 'Yes') {\r\n                    var Won=true\r\n                    if (window.dailyChallengeSessionBestHistory[this.state.numPuzzleon].length == 0 || this.state.moveHistory.length < window.dailyChallengeSessionBestHistory[this.state.numPuzzleon].length) {\r\n                        window.dailyChallengeSessionBestHistory[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n                        window.dailyChallengeSessionBestPlayerState[this.state.numPuzzleon] = this.state.playerState.slice()\r\n                    }\r\n                    this.state.gamesWonDaily.map((gameWon,index) => {\r\n                        if (!(index == this.state.numPuzzleon) && !gameWon) {\r\n                            Won = false\r\n                        }\r\n                    });\r\n                    var moveHistoryList = this.state.moveHistoryList\r\n                    moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory\r\n                    var numMoves = 0\r\n                    moveHistoryList.map(moveHistory => {\r\n                        numMoves += moveHistory.length\r\n                    });\r\n                    return (Won ? <YouWinDailyFinalModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={numMoves}\r\n                        submitAnswer={this.submitDailyAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                        undoMove={this.handleUndoMove}\r\n                        newPlayerState={newPlayerState}\r\n                        submitted={this.state.dailySubmittedSucessfully}\r\n                    /> : <YouWinDailySingleModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        totalMoves={numMoves}\r\n                        undoMove={this.handleUndoMove}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        games={this.state.games}\r\n                        handleClickGame={this.handleDailyClickGame}\r\n                        numPuzzleon={this.state.numPuzzleon}\r\n                        moveNextPuzzle={this.moveNextPuzzle}\r\n                    />);\r\n                }\r\n                else if (this.props.learnMode === 'Yes') {\r\n                    return  (<YouWinLessonModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        moveNextPuzzle={this.nextLessonPuzzle}\r\n                    />);\r\n                }\r\n                else {\r\n                    return  (<YouWinModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        submitAnswer={this.submitAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                    />);\r\n                }\r\n            }\r\n            else if (this.props.puzzleRush === 'Yes'){\r\n                axios.post('/puzzlerushsubmit', {p_id: this.state.p_id,g_id:this.state.games[this.state.numPuzzleon].g_id, moveHistory: this.state.moveHistory})\r\n                    .then( res => {\r\n                        console.log(res.data);\r\n                    });\r\n                var totalMoves = this.state.moveHistory.slice().length\r\n                var totalMovesList = this.state.totalMovesList\r\n                totalMovesList.push(totalMoves)\r\n                var solutionmoves = totalMoves - this.state.games[this.state.numPuzzleon].g_moves\r\n                var solutiondifference = this.state.solutiondifference\r\n                solutiondifference.push(solutionmoves)\r\n                var puzzledata = JSON.parse(this.state.games[this.state.numPuzzleon + 1].g_puzzledata)\r\n                if (this.state.numPuzzleon + 10 > this.state.games.length) {\r\n                    axios.get('/puzzlerushgetmore?p_id=' + this.props.p_id + '&difficulty=' + this.props.difficulty)\r\n                        .then( res => {\r\n                                var games = JSON.parse(res.data.games);\r\n                                var stategames = this.state.games\r\n                                var newarray = stategames.concat(games)\r\n                                this.setState({\r\n                                    games: newarray\r\n                                });\r\n                        });\r\n                }\r\n                this.setState(\r\n                    extend(puzzledata,{numPuzzleon: this.state.numPuzzleon + 1, playerState: puzzledata.playerStart.slice(), gameWon: false, solutiondifference: solutiondifference, totalMovesList: totalMovesList})\r\n                );\r\n\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                    submitPuzzleCampaign={this.submitPuzzleCampaign}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handleShowRandomAnswers = () => {\r\n        this.setState({\r\n            tipsText: [this.state.lowestMoveSequence]\r\n        })\r\n    }\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false && !this.state.buildMode) {\r\n            var oldPositon = {left: this.state.playerState[this.state.robotSelected].left, top: this.state.playerState[this.state.robotSelected].top};\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left) && !this.state.buildMode) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier,\r\n                    prevPosition: oldPositon\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseToolTips = (index) => {\r\n        this.state.tipsText.splice(index,1);\r\n        this.setState({\r\n            tipsText: this.state.tipsText,\r\n        });\r\n    }\r\n\r\n    moveNextPuzzle = () => {\r\n        this.handleDailyClickGame((this.state.numPuzzleon + 1) % 4)\r\n    }\r\n\r\n    handleLearnClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].puzzledata);\r\n        var squareSize = setDefaultSquareSize(puzzledata.width,puzzledata.height);\r\n        this.setState(\r\n            extend(puzzledata,{buildMode: false,squareSize: squareSize, numPuzzleon: index, moveHistory: [], gameWon: false, playerState: puzzledata.playerStart.slice(),tipsText: [this.props.games[index].description]})\r\n        );\r\n    }\r\n\r\n    handleDailyClickAnswersGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n        var lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[index].g_solutiondata))\r\n        var lowestMovesforPuzzle = this.props.games[index].g_moves\r\n        var difficultyforPuzzle = this.props.games[index].g_difficulty\r\n        var playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[index]\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory,\r\n                    gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily,\r\n                    lowestMoveSequence: lowestMoveSequence, lowestMovesforPuzzle: lowestMovesforPuzzle, difficultyforPuzzle: difficultyforPuzzle,\r\n                    playerMovedSequence: playerMovedSequence})\r\n        );\r\n    }\r\n\r\n    handleDailyClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily})\r\n        );\r\n    }\r\n\r\n\r\n    handleWildCardClick = () => {\r\n        if (this.state.goal == null) {\r\n            this.setState({\r\n                goal: {top: this.state.height - 1, left: this.state.width - 1}\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                goal: null\r\n            });\r\n        }\r\n        this.resetPuzzle();\r\n    }\r\n\r\n    resetToBest = (moveHistory, playerState) => {\r\n        this.setState({\r\n            moveHistory: moveHistory,\r\n            playerState: playerState,\r\n        });\r\n    }\r\n\r\n    handleColoredClick = (colorSignifier) => {\r\n        var goal = null;\r\n        this.state.coloredGoals.map(goalItem => {\r\n            if (colorSignifier == goalItem.colorSignifier) {\r\n                goal = goalItem;\r\n            }\r\n        })\r\n        if (goal == null) {\r\n            var newColoredGoals = this.state.coloredGoals;\r\n            var newgoal\r\n            switch (colorSignifier) {\r\n                case 'blue':\r\n                    newgoal = {top: this.state.height - 2, left: this.state.width - 2, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n                    break;\r\n                case 'green':\r\n                    newgoal = {top: this.state.height - 1, left: this.state.width - 2, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n                    break;\r\n                case 'red':\r\n                    newgoal = {top: this.state.height - 2, left: this.state.width - 1, color: ROBOT_RED, colorSignifier: 'red'};\r\n                    break;\r\n                case 'yellow':\r\n                    newgoal = {top: this.state.height - 3, left: this.state.width - 3, color: ROBOT_YELLOW, colorSignifier: 'yellow'};\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            newColoredGoals.push(newgoal);\r\n            this.setState({\r\n                coloredGoals: newColoredGoals\r\n            });\r\n        }\r\n        else {\r\n            var newColoredGoals = this.state.coloredGoals.filter(goalItem =>\r\n                colorSignifier != goalItem.colorSignifier\r\n            );\r\n            console.log(newColoredGoals);\r\n            this.setState({\r\n                coloredGoals: newColoredGoals\r\n            });\r\n        }\r\n        this.resetPuzzle();\r\n    }\r\n\r\n    trimName = name => {\r\n        var separated = (name + '').split(\" \")\r\n        var toreturn = '';\r\n        separated.map((word) => {\r\n            if (word.length > 17)\r\n                toreturn += word.substring(0, 17) + \"...\" + ' ';\r\n            else {\r\n                toreturn += word + ' '\r\n            }\r\n        });\r\n        return toreturn.substring(0, toreturn.length - 1);\r\n    };\r\n\r\n    loadSidebar = () => {\r\n        if (this.props.learnMode == 'Yes') {\r\n            return (\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\">\r\n                        <Divider/>\r\n                        <Typography\r\n                             color=\"textSecondary\"\r\n                             display=\"block\"\r\n                             variant=\"caption\"\r\n                             style={{paddingBottom: '10px'}}\r\n                         >\r\n                             Beginner Lessons\r\n                         </Typography>\r\n                        {\r\n                            this.state.games.map((game,index) => {\r\n                                    if (index === 4) {\r\n                                        return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Intermediate Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    else if (index === 7) {\r\n                                            return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Advanced Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    return(\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={game.name} index={index} handleClickGame={this.handleLearnClickGame}/>\r\n                                    )\r\n                                }\r\n\r\n                            )\r\n                        }\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickAnswersGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeHistoryData\r\n                            lowestMovesforPuzzle={this.state.lowestMovesforPuzzle}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            difficultyforPuzzle={this.state.difficultyforPuzzle}\r\n                            nameSubmitted={this.props.nameSubmitted}\r\n                            playerMovedSequence={this.state.playerMovedSequence}\r\n                            bestScore={this.props.bestScore}\r\n                            scoreSubmitted={this.props.scoreSubmitted}\r\n                         />\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <DailyMovesView\r\n                            moveHistory={window.dailyChallengeSessionBestHistory[this.state.numPuzzleon]}\r\n                            playerState={window.dailyChallengeSessionBestPlayerState[this.state.numPuzzleon]}\r\n                            resetToBest={this.resetToBest}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            color=\"secondary\"\r\n                            display=\"block\"\r\n                            variant={\"h4\"}\r\n\r\n                        >\r\n                            {this.state.dailyDayName}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeScores highscores={this.state.highscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.state.createMode === 'Yes') {\r\n            return (\r\n                <CreateBoardGoalSelector\r\n                    handleWildCardClick={this.handleWildCardClick}\r\n                    handleColoredClick={this.handleColoredClick}\r\n                />\r\n            );\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.puzzleRush) {\r\n            return (\r\n                     <div>\r\n                        <Timer puzzleRushTimeUp={this.puzzleRushTimeUp}>\r\n                        </Timer>\r\n                        <Typography id=\"discrete-slider-small-steps\"\r\n                                     color=\"Primary\"\r\n                                     variant=\"h3\"\r\n                                     display=\"inline\"\r\n                                     gutterBottom>\r\n                             {this.state.numPuzzleon}\r\n                         </Typography>\r\n                     </div>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n            <div style={{display: 'grid'}}>\r\n                <Typography\r\n                    color=\"secondary\"\r\n                    display=\"block\"\r\n                    variant={\"h4\"}\r\n\r\n                >\r\n                    {this.trimName(this.props.name)}\r\n                </Typography>\r\n                <div style={{paddingBottom: '10px', display: 'inline-flex', alignItems: \"center\"}}>\r\n                    <Typography variant=\"caption\" style={{paddingRight: \"5%\"}}>\r\n                        By: {this.trimName(this.props.author)}\r\n                    </Typography>\r\n                    <div>\r\n                        <div style={{display: \"inline-flex\"}}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                style={{borderTopRightRadius: \"0px\", borderBottomRightRadius: \"0px\"}}\r\n                                startIcon={this.state.hasVoted ? <StarIcon/> : <StarBorderIcon/>}\r\n                                onClick={this.updateLike}\r\n                                size={\"small\"}\r\n                            >\r\n                                {this.state.hasVoted ? \"Unlike\" : \"Like\"}\r\n                            </Button>\r\n                            <Paper variant=\"contained\"  style={{borderTopLeftRadius: \"0px\", borderBottomLeftRadius: \"0px\"}} >\r\n                                <Typography style={{marginLeft: \"5px\", marginRight: \"5px\"}} variant=\"h6\">{this.state.votes ? this.state.votes : 0}</Typography>\r\n                            </Paper>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Grid container xs={12} direction=\"column\">\r\n                <HighScores highscores={this.state.highscores}/>\r\n                </Grid>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    updateLike = () => {\r\n        const action = this.state.hasVoted ? \"remove\" : \"create\"\r\n        axios.post('/likepuzzle', {uri: this.state.uri, action: action, vote: \"voting\"})\r\n            .then( res => {\r\n                var newHasVoted = \"Y\"\r\n                var newVotes = this.state.votes\r\n                if (this.state.hasVoted)\r\n                    newHasVoted = null\r\n                if (!isNaN(res.data.votes))\r\n                    newVotes = res.data.votes\r\n\r\n                this.setState({\r\n                    hasVoted: newHasVoted,\r\n                    votes: newVotes\r\n                });\r\n            }).catch(_ => {\r\n                this.props.signInModalOpen(\"Sign in\")\r\n            });\r\n    }\r\n\r\n    handlePlayerMovementFromMouse = (direction) => {\r\n        this.handlePlayerMovement({dir: direction})\r\n    };\r\n\r\n    handleUndoMove = () => {\r\n        var moveHistory = this.state.moveHistory;\r\n        var playerState = this.state.playerState;\r\n        if (moveHistory.length !== 0) {\r\n            var moveObj = moveHistory.pop();\r\n            playerState[moveObj.robot].left = moveObj.prevPosition.left;\r\n            playerState[moveObj.robot].top = moveObj.prevPosition.top;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n                gameWon: false,\r\n                dailySubmittedSucessfully: null\r\n            });\r\n        }\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes' && this.state.buildMode) {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onStopDragHandlerGoal = (position,color) => {\r\n        if (color == undefined) {\r\n            this.setState({\r\n                goal: {top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize)},\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            })\r\n        }\r\n        else {\r\n            var coloredGoals = this.state.coloredGoals;\r\n            var newGoals = [];\r\n            coloredGoals.map(goal => {\r\n                if (goal.color == color) {\r\n                    newGoals.push({top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize), color: color, colorSignifier: goal.colorSignifier});\r\n                }\r\n                else {\r\n                    newGoals.push(goal);\r\n                }\r\n            });\r\n            this.setState({\r\n                coloredGoals: newGoals,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    onStopDragHandler = (position,index) => {\r\n        var playerState = this.state.playerState.slice();\r\n        var lastX = position.lastX / this.state.squareSize;\r\n        var lastY = position.lastY / this.state.squareSize;\r\n        playerState[index].top = Math.round(lastY);\r\n        playerState[index].left = Math.round(lastX);\r\n        this.setState({\r\n            playerStart: playerState.slice(),\r\n            playerState: playerState,\r\n            moveHistory: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        puzzleRushTimeUp={this.puzzleRushTimeUp}\r\n                        isPuzzleRush={this.props.puzzleRush}\r\n                        numPuzzleRush={this.state.numPuzzleon}\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                        toggleLineIndicators = {this.toggleLineIndicators}\r\n                        showColoredLineDirections={this.state.showColoredLineDirections}\r\n                        toggleBuildMode = {this.toggleBuildMode}\r\n                        undoMove = {this.handleUndoMove}\r\n                        buildMode = {this.state.buildMode}\r\n                        squareSizeValue = {parseInt((this.state.squareSize/4))}\r\n                        isLesson = {this.props.learnMode}\r\n                        isDailyChallenge = {this.props.dailyChallengeMode}\r\n                        isDailyChallengeAnswers = {this.props.dailyChallengeModeAnswers}\r\n                    />\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? null : <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>}\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8} zeroMinWidth>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal\r\n                            dimension={this.state.squareSize}\r\n                            position={this.state.goal}\r\n                            onStopDragHandler={this.onStopDragHandlerGoal}\r\n                            draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                            isCreateMode={this.state.createMode}\r\n                            buildMode={this.state.buildMode}\r\n                        />\r\n                        {\r\n                            this.state.coloredGoals.map(goal =>\r\n                                <Goal\r\n                                    dimension={this.state.squareSize}\r\n                                    position={goal}\r\n                                    onStopDragHandler={this.onStopDragHandlerGoal}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    color={goal.color}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    onStopDragHandler={this.onStopDragHandler}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={this.state.playerState[this.state.robotSelected].color}\r\n                                    show={this.state.showColoredLineDirections}\r\n                                    handleClick={this.handlePlayerMovementFromMouse}\r\n                                    buildMode={this.state.buildMode}\r\n                                />\r\n                            )\r\n                        }\r\n                    </Board>\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/> : null}\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DescriptionList\r\n                        handleCloseToolTips={this.handleCloseToolTips}\r\n                        tipsText={this.state.tipsText}\r\n                    />\r\n                    {this.loadSidebar()}\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                {\r\n                    this.checkwin(this.state.playerState)\r\n                }\r\n                <PuzzleRushWinModal\r\n                    show={this.state.showPuzzleRushFinishedModal}\r\n                    closeModal={this.closePuzzleRushFinishedModal}\r\n                    numPuzzlesCompleted={this.state.numPuzzlesCompleted}\r\n                    percentile={this.state.puzzleRushPercentileCompleted}\r\n                    averageTime={this.state.averageTime}\r\n                    averageMoves={this.state.averageMoves}\r\n                    differenceOptimal={this.state.differenceOptimal}\r\n                    movesPerSecond={this.state.movesPerSecond}\r\n                    difficulty={this.props.difficulty}\r\n                    handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport axios from 'axios';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        maxWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 360,\r\n        minWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 235,\r\n        height: 225,\r\n        position: 'relative',\r\n        background: 'linear-gradient(100deg, #ffd34d 55%, #fff178 55%)'\r\n    },\r\n\r\n    item: {\r\n        padding: 0\r\n    },\r\n\r\n    upperPadding: {\r\n        paddingTop: 3\r\n    },\r\n    upperPaddingButton: {\r\n        paddingTop: 3,\r\n        position: 'absolute',\r\n        bottom: 15,\r\n        left: 25\r\n    },\r\n\r\n    lowerPadding: {\r\n        paddingBottom: 3\r\n    },\r\n\r\n    rightSideText: {\r\n        textAlign: \"right\",\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    },\r\n\r\n    leftSideText: {\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(ComplexGrid)\r\n\r\nfunction ComplexGrid(props) {\r\n    const { classes } = props;\r\n    const handleClick = () => {\r\n        axios.get('/getFindGameData?uri=' + props.game.uri)\r\n                .then( res => {\r\n                    var game = JSON.parse(res.data.game);\r\n                    props.handleGameClick(game.name, game.puzzledata,props.highscores,game.uri,props.game.authorname,\r\n                        props.game.votes, props.game.hasVoted);\r\n                });\r\n    };\r\n\r\n    var numberOfHighScores = 0;\r\n\r\n    const highscorestyle = highscore => {\r\n        if (numberOfHighScores === 6) return \"\";\r\n        numberOfHighScores++;\r\n        return (\r\n            <ListItem disableGutters={true} classes={{ root: classes.item }}>\r\n                <ListItemText primary={trimNameShort(highscore.comment)} classes={{ root: classes.leftSideText }} />\r\n                <ListItemText secondary={highscore.numMoves} classes={{ root: classes.rightSideText }} />\r\n            </ListItem>\r\n        )\r\n    };\r\n\r\n    const contentDivStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        };\r\n\r\n    };\r\n\r\n    const trimName = name => {\r\n        var separated = (name + '').split(\" \")\r\n        var toreturn = '';\r\n        separated.map((word) => {\r\n            if (word.length > 17)\r\n                toreturn += word.substring(0, 17) + \"...\" + ' ';\r\n            else {\r\n                toreturn += word + ' '\r\n            }\r\n        });\r\n        return toreturn.substring(0, toreturn.length - 1);\r\n    };\r\n\r\n    const trimNameShort = name => {\r\n        if (name.length > 10)\r\n            name = name.substring(0, 10) + \"...\";\r\n        return name\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid item xs={12} md={3} sm={6}>\r\n            <Card variant=\"outlined\" className={classes.root}>\r\n                <CardContent>\r\n                    <div style={contentDivStyle()}>\r\n                        <div style={{width: '150px'}}>\r\n                            <Tooltip title={props.game.name}>\r\n                                <Typography variant=\"h6\" classes={{ root: classes.lowerPadding }}>\r\n                                    {trimName(props.game.name)}\r\n                                </Typography>\r\n                            </Tooltip>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    By: {trimName(props.game.authorname)}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    {props.game.created}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Plays: {props.game.plays}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Likes: {props.game.votes}\r\n                                </Typography>\r\n                            </div>\r\n                            <br/>\r\n                            <Button onClick={handleClick} classes={{ root: classes.upperPaddingButton }} variant=\"contained\" color=\"primary\">Play</Button>\r\n                        </div>\r\n                        <div style={{width: '105px'}}>\r\n                            <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                Top Scores\r\n                            </Typography>\r\n                            <List>\r\n                                {\r\n                                    props.highscores.map(highscore =>\r\n                                        highscorestyle(highscore)\r\n                                    )\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from 'axios';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport extend from '../constants/extend';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center'\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 400,\r\n    },\r\n    input: {\r\n        marginLeft: 5,\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n        marginLeft: 8,\r\n        marginRight: 8,\r\n    },\r\n});\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = this.props.gameslist;\r\n        var highscoreslist = this.props.highscoreslist;\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n            anchorEl: null,\r\n            hasMore: true,\r\n            lastSearch: 'None',\r\n            offsetSearch: gameslist.length,\r\n            isLoadingSearch: false,\r\n        }\r\n\r\n    }\r\n\r\n    handleGameClick = (name,gamedata,highscores,uri,authorname,votes,hasVoted) => {\r\n        this.props.handleGameClick(name,gamedata,highscores,uri,authorname,votes,hasVoted);\r\n    };\r\n\r\n    handleFilterMenuOpen = event => {\r\n        this.setState( {\r\n          anchorEl: event.currentTarget\r\n      });\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.keycode == 13) {\r\n            this.handleSearchSubmit(e);\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        window.scrollTo(0,this.props.findWindowHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.props.setFindWindow(window.scrollY)\r\n    }\r\n\r\n    handleCloseFilterMenuMostPlayed = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'MostPlayed', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'MostPlayed', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'MostPlayed',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleCloseFilterMenuMostLiked = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'MostLiked', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'MostLiked', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'MostLiked',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleCloseFilterMenuHighest = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'Highest', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'Highest', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'Highest',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleSearchSubmit = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n\r\n        axios.post('/search', {search: searchTerm, filter: 'None', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'None', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'None',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    hasMore = () => {\r\n        return ( this.state.hasMore ? null : <Grid item alignItems=\"center\" justify=\"center\" xs={12}><Typography style={{textAlign: 'center', display: 'block'}} variant=\"caption\">No More Puzzles</Typography></Grid>)\r\n    }\r\n\r\n    loadMoreItems = () => {\r\n        var searchTerm = this.searchRef.value;\r\n        if (!this.state.isLoadingSearch) {\r\n            this.state.isLoadingSearch = true;\r\n            axios.post('/search', {search: searchTerm, filter: 'None', offset: this.state.offsetSearch})\r\n                .then( res => {\r\n                    var gameslist = JSON.parse(res.data.gameslist);\r\n                    this.state.offsetSearch = gameslist.length + this.state.gameslist.length;\r\n                    var highscoreslist = JSON.parse(res.data.highscoreslist);\r\n                    this.props.setNumFindGames(gameslist.length + this.state.gameslist.length, this.state.lastSearch, searchTerm);\r\n                    this.setState({\r\n                        highscoreslist: this.state.highscoreslist.concat(highscoreslist),\r\n                        gameslist: this.state.gameslist.concat(gameslist),\r\n                        hasMore: gameslist.length == 0 ? false : true,\r\n                        isLoadingSearch: false,\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    handleCloseFilterMenu = () => {\r\n        this.setState({\r\n            anchorEl: null\r\n        });\r\n    };\r\n\r\n    render () {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <div id='MainFindPage' style={gamepanel()}>\r\n                <Paper component=\"form\" className={classes.root} >\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        inputRef={ref => this.searchRef = ref}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                this.handleSearchSubmit();\r\n                                event.preventDefault()\r\n                            }\r\n                        }}\r\n                    />\r\n                    <IconButton onClick={this.handleSearchSubmit} className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <Divider className={classes.divider} orientation=\"vertical\" />\r\n                    <Button\r\n                        onClick={this.handleFilterMenuOpen}\r\n                        startIcon={<FilterListIcon />}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        Sort\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(this.state.anchorEl)}\r\n                        onClose={this.handleCloseFilterMenu}\r\n                        getContentAnchorEl={null}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'center',\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center',\r\n                        }}\r\n                    >\r\n                        <MenuItem onClick={this.handleSearchSubmit}>Recently Created</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuMostPlayed}>Most Played</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuMostLiked}>Most Liked</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuHighest}>Highest Scores</MenuItem>\r\n                    </Menu>\r\n                </Paper>\r\n                <br/>\r\n                <Grid container alignItems={\"stretch\"} spacing={2}>\r\n                    {\r\n                        this.state.gameslist.map((game,index)=>\r\n                            <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                        )\r\n                    }\r\n                    <InfiniteScroll\r\n                        pageStart={1}\r\n                        loadMore={this.loadMoreItems.bind(this)}\r\n                        hasMore={this.state.hasMore}\r\n                        loader={<Grid item alignItems=\"center\" justify=\"center\" xs={12}><CircularProgress style={{textAlign: 'center',alignItems: 'center', marginLeft: 'auto', marginRight: 'auto'}} size={40} color=\"secondary\" /></Grid>}\r\n                        threshold={200}\r\n                        >\r\n                    </InfiniteScroll>\r\n                    {this.hasMore()}\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(FindGame);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  loadedGame={'Yes'}\r\n                  name={this.props.name}\r\n                  author={this.props.authorname}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n                  votes={this.props.votes}\r\n                  hasVoted={this.props.hasVoted}\r\n                  signInModalOpen={this.props.signInModalOpen}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  homepage: {\r\n    marginTop: '40px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  baseExpansion: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: '10px'\r\n  },\r\n  darkmode: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      marginTop: '150px',\r\n  },\r\n  iconcards: {\r\n    width: '250px',\r\n    display: 'inline-block',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  iconcardsDaily: {\r\n    maxWidth: 345,\r\n    minWidth: 250,\r\n    float: 'left',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  titlehome: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '30px',\r\n  },\r\n  titledailyroto: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '10px',\r\n  },\r\n  iconfonts: {\r\n    fontFamily: \"'Arvo', serif\",\r\n  },\r\n  createboardcard: {\r\n    ':hover': {\r\n        content: '/static/images/CreateBoardCardIconPlaced.png',\r\n    }\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  centeredProfile: {\r\n    marginTop: '20px',\r\n    display: 'inline-block',\r\n  },\r\n  expandedPanelDCH: {\r\n    background: 'linear-gradient(70deg, #fff810  30%, rgba(0,0,0,0) 30%), linear-gradient(30deg, #63e89e 60%, #ff7ee3 60%)'\r\n  },\r\n  table: {\r\n    width: '33%'\r\n  }\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport FindGameElements from \"../containers/FindGameElements\";\r\nimport {GOAL_IMAGE} from '../constants/constants';\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n\r\n    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n        return (<div className={classes.homepage} >\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                        </Typography>\r\n                        <Typography variant=\"p1\" paragraph={true}>Puzzle game for anyone to play! Create your own custom boards or play a random Solved game. <br/>Goal is to get ANY piece to stop on the  <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                        </Typography>\r\n                        <br/>\r\n                        <img width=\"300\" height=\"300\" src='/static/videos/basic2.gif'/>\r\n                        <br/>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                        <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                        </Typography>\r\n                        <Typography> 8/23/2020 Personal Best saving feature added to Daily Challenge, Also Added Like feature to custom puzzles.\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography> 8/18/2020 New textures, Soon to be released: Color Specific Goals!\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography> 8/5/2020 Scaled down the Difficulty for the Daily Challenge rotations, also modified the classic algorithm to be less cluttered\r\n                        </Typography>\r\n\r\n                    </Grid>\r\n                    <Grid container item alignItems={\"stretch\"} spacing={2} alignItems=\"center\" justify=\"center\" >\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickFindGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Find a Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/FindAGameCardIcon.png\"\r\n                                        title=\"Find a Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Find a Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/DailyChallengeIcon.png\"\r\n                                        title=\"Daily Challenge\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Daily Challenge\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickCreateGame}>\r\n                                    <CardMedia\r\n                                        className={classes.createboardcard}\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                        title=\"Create Board\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Create Board\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickRandomGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Play a Random Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/puzzle.png\"\r\n                                        title=\"Play a Random Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Play a Random Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickLearnGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                        title=\"Learn\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Learn\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Contemplative Reptile\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/PuzzleRushIcon.png\"\r\n                                        title=\"Contemplative Reptile\"\r\n                                    />\r\n                                    <CardContent style={{textAlign: 'center'}}>\r\n                                        <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            Puzzle Rush\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                    <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                    </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            Medium Mondays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Trouble Tuesday <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Wild Wednesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Tryhard Thursdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">easy puzzles</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                        </Typography>\r\n                        <Typography style={{marginTop: '30px'}} className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                        </Typography>\r\n                        <DailyChallengeScores highscores={window.dchighscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (<div className={classes.homepage}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> Controls\r\n                    </Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Movement\r\n                        </Typography>\r\n                    <img width={'20%'} height={'auto'} src={\"/static/images/keyboard.png\"}/>\r\n                    <Typography>Pieces Move until they hit a wall or another piece</Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Selecting robots\r\n                        </Typography>\r\n                        <img width={'20%'} height={'auto'} src={\"/static/images/tab.png\"}/>\r\n\r\n                    <Typography>Or click</Typography>\r\n                    <Divider/>\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            HotKeys\r\n                        </Typography>\r\n                        <Typography variant=\"h6\">Undo</Typography> <img width={'20%'} height={'auto'} src={\"/static/images/Qkey.png\"}/>\r\n                        <Typography variant=\"h6\">Reset</Typography> <img width={'20%'} height={'auto'} src={\"/static/images/Wkey.png\"}/>\r\n                    <Divider />\r\n                    <div style={{marginTop:'100px'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                    </Typography>\r\n                    <Typography> 8/5/2020 Scaled down the Difficulty for the Daily Challenges, also modified the classic algorithm to be less cluttered\r\n                    </Typography>\r\n                    <Typography> 8/18/2020 New textures, Soon to be released: Color Specific Goals!\r\n                    </Typography>\r\n                    <Typography> 8/23/2020 Personal Best saving feature added to Daily Challenge, Also Added Like feature to custom puzzles.\r\n                    </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={8} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                    </Typography>\r\n                    <Typography paragraph={true} variant=\"p1\">Puzzle game for anyone to play! Create your own custom boards or play a random Solved game.<br/>Goal is to get ANY piece to stop on the  <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                    </Typography>\r\n                    <br/>\r\n                        <img width=\"300\" height=\"300\" src='/static/videos/basic2.gif'/>\r\n                    <br/>\r\n                    <Card className={classes.iconcards}>\r\n                      <CardActionArea onClick={props.handleClickFindGame}>\r\n                        <CardMedia\r\n                          component=\"img\"\r\n                          alt=\"Find a Game\"\r\n                          height=\"140\"\r\n                          image=\"/static/images/FindAGameCardIcon.png\"\r\n                          title=\"Find a Game\"\r\n                        />\r\n                        <CardContent>\r\n                          <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                            Find a Game\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                      <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                        <CardMedia\r\n                          component=\"img\"\r\n                          alt=\"Create Board\"\r\n                          height=\"140\"\r\n                          image=\"/static/images/DailyChallengeIcon.png\"\r\n                          title=\"Daily Challenge\"\r\n                        />\r\n                        <CardContent>\r\n                          <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                            Daily Challenge\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickCreateGame}>\r\n                            <CardMedia\r\n                                className={classes.createboardcard}\r\n                                component=\"img\"\r\n                                alt=\"Create Board\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                title=\"Create Board\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Create Board\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickRandomGame}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Play a Random Game\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/puzzle.png\"\r\n                                title=\"Play a Random Game\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Play a Random Game\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickLearnGame}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Create Board\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                title=\"Learn\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Learn\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Contemplative Reptile\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/PuzzleRushIcon.png\"\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent style={{textAlign: 'center'}}>\r\n                                <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Puzzle Rush\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                            Medium Mondays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Trouble Tuesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Wild Wednesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Tryhard Thursdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">easy puzzles</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                        </Typography>\r\n                <Typography className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                </Typography>\r\n                <DailyChallengeScores highscores={window.dchighscores}/>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst stylecol = () => {\r\n    return({\r\n            float: 'left',\r\n            width: '50%',\r\n            margin: 'auto',\r\n            padding: '0 50px',\r\n            marginTop: '6px',\r\n    });\r\n}\r\n\r\nconst spacing = () => {\r\n    return({\r\n            marginBottom: '10px',\r\n    });\r\n}\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    };\r\n\r\n    loginFacebook = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/facebook\";\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeLoginModal}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>Login to RobotsEvolved</DialogTitle>\r\n                <DialogContent dividers>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                           • Gain <FaCrown/>s when winning the Daily Challenge (stacks)\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                            • Be able to give a like to your favorite puzzles\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                            • Saving settings and your moves in the daily challenge\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography variant=\"body2\" display=\"inline\">\r\n                            • Profile Page to keep track of your submissions.\r\n                        </Typography>\r\n                    <div class=\"col\">\r\n                        <a href=\"#\" onClick={this.loginFacebook} id={\"buttonfb\"}>\r\n                          <i class=\"fa fa-facebook fa-fw\"></i> Login with Facebook\r\n                         </a>\r\n                        <a onClick={this.loginGoogle} href=\"#\" id={\"buttongoogle\"}><i class=\"fa fa-google fa-fw\">\r\n                          </i> Login with Google\r\n                        </a>\r\n                    </div>\r\n                    <Typography variant=\"caption\" display=\"block\">\r\n                            We will NEVER distribute/sell your facebook or google email address.\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeLoginModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <Button color=\"black\" onClick={this.handleClick}><b>{textToShow}</b></Button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport SignInButton from './SignInButton';\r\n\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '40px',\r\n        width: '40px',\r\n        marginTop: '5px',\r\n    };\r\n};\r\n\r\nconst divStyle = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        width: '200px',\r\n    };\r\n};\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    SignInButtonPressed = () => {\r\n        this.props.handleClick('Sign in');\r\n    }\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return <SignInButton onClick={this.SignInButtonPressed}/>\r\n        }\r\n        else {\r\n            return (\r\n                <div style={divStyle()}>\r\n                    <div>{window.userInfo.username}</div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic v2',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty) => {\r\n        console.log(difficulty)\r\n        axios.post('/puzzlerush', {difficulty: difficulty, action: 'start',type: this.state.value})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            isLoading: false,\r\n                        });\r\n                        this.props.handleClickPuzzleRush(difficulty,games,p_id);\r\n                });\r\n    };\r\n\r\n    handleClickEasyPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMediumPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                                {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                                                        ) : (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                         <Grid item xs={6}>\r\n                                         <ButtonGroup\r\n                                            orientation=\"vertical\"\r\n                                            color=\"primary\"\r\n                                            aria-label=\"vertical outlined primary button group\"\r\n                                          >\r\n                                            <Button onClick={this.handleClickEasyPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Easy\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickMediumPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Medium\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Hard\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickExHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Exteremely Hard\r\n                                            </Button>\r\n                                          </ButtonGroup>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                              <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                              <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                                <FormControlLabel value=\"classic v2\" control={<Radio />} label=\"Classic V2\" />\r\n                                                <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                                <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                              </RadioGroup>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic v2',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickRandomGameModal = (difficulty,type) => {\r\n        axios.get('/randomgame?difficulty=' + difficulty + '&type=' + type)\r\n            .then( res => {\r\n                var game = JSON.parse(res.data.game);\r\n                this.setState({\r\n                    isLoading: false,\r\n                });\r\n                this.props.handleClickRandomGame(game,difficulty);\r\n            })\r\n    }\r\n\r\n    handleClickEasy = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMedium = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHard = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHard = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickGodMode = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('GodTeir',this.state.value)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                            {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                            ) : (\r\n                            <Grid\r\n                                container xs={12}\r\n                                spacing={4}\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n                                wrap=\"nowrap\"\r\n                            >\r\n                                <Grid item xs={6}>\r\n                                    <ButtonGroup\r\n                                        orientation=\"vertical\"\r\n                                        color=\"primary\"\r\n                                        aria-label=\"vertical outlined primary button group\"\r\n                                      >\r\n                                        <Button onClick={this.handleClickEasy} variant=\"contained\" color=\"primary\">\r\n                                            Easy\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickMedium} variant=\"contained\" color=\"primary\">\r\n                                            Medium\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickHard} variant=\"contained\" color=\"primary\">\r\n                                            Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickExHard} variant=\"contained\" color=\"primary\">\r\n                                            Extremely Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickGodMode} variant=\"contained\" color=\"primary\">\r\n                                            God Tier\r\n                                        </Button>\r\n                                     </ButtonGroup>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl component=\"fieldset\">\r\n                                      <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                      <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                        <FormControlLabel value=\"classic v2\" control={<Radio />} label=\"Classic V2\" />\r\n                                        <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                        <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                      </RadioGroup>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageCreatedGamesDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.game.name,props.game.puzzledata,[],props.game.uri, props.game.authorname, props.game.votes, props.game.hasVoted);\r\n    }\r\n\r\n    return (<div>\r\n            <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography> Highscore Holder: </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.game.username} - {props.game.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageSolutionDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.solution.name,props.solution.puzzledata,[],props.solution.uri);\r\n    }\r\n    return (<div>\r\n              <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography color={'secondary'} variant={'body2'}> {props.solution.WinnerCreated} </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.solution.WinnerUsername} - {props.solution.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Table,TableContainer,TableHead,TableRow,TableCell,TableBody} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useStyles from '../Material-UI/themes';\r\nimport ProfilePageCreatedGamesDetails from '../components/ProfilePageComponents/ProfilePageCreatedGamesDetails';\r\nimport ProfilePageSolutionDetails from '../components/ProfilePageComponents/ProfilePageSolutionDetails';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\n\r\nexport default function ProfilePage(props) {\r\n    const classes = useStyles();\r\n    const submitAnswer = () => {\r\n        axios.post('/userUpdate',{newuser: document.getElementById(\"ProfileName\").value})\r\n            .then( res => {\r\n                if (res.data == 'OK') {\r\n                    window.location.href = '/';\r\n                }\r\n                else {\r\n                    setError(res.data);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const createData = (name,col1,col2) => {\r\n        return {name,col1,col2}\r\n    }\r\n\r\n    const columns = [\r\n          { id: 'difficulty', label: 'Difficulty', maxWidth: 75 },\r\n          { id: 'classic', label: 'Classic', maxWidth: 75 },\r\n          { id: 'random', label: 'Random', maxWidth: 75 },\r\n        ];\r\n\r\n    const rows = [\r\n        createData('Easy', props.puzzlerushview.maxeasyc,props.puzzlerushview.maxeasyp),\r\n        createData('Medium', props.puzzlerushview.maxmediumc,props.puzzlerushview.maxmediump),\r\n        createData('Hard', props.puzzlerushview.maxhardc,props.puzzlerushview.maxhardp),\r\n        createData('Extremely Hard', props.puzzlerushview.maxexhardc,props.puzzlerushview.maxexhardp)\r\n    ]\r\n\r\n    const rowseff = [\r\n        createData('Easy', props.puzzlerushview.maxeffec,props.puzzlerushview.maxeffep),\r\n        createData('Medium', props.puzzlerushview.maxeffmc,props.puzzlerushview.maxeffmp),\r\n        createData('Hard', props.puzzlerushview.maxeffhc,props.puzzlerushview.maxeffhp),\r\n        createData('Extremely Hard', props.puzzlerushview.maxeffexc,props.puzzlerushview.maxeffexp)\r\n    ]\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [expandedGame, setExpandedGame] = React.useState(false);\r\n    const [expandedHighscores, setExpandedHighscores] = React.useState(false);\r\n    const handleChangeGame = (panel) => (event, isExpandedGame) => {\r\n        setExpandedGame(isExpandedGame ? panel : false);\r\n    };\r\n    const handleChangeHighscores = (panel) => (event, isExpandedHighScores) => {\r\n        setExpandedHighscores(isExpandedHighScores ? panel : false);\r\n    };\r\n    return (\r\n            <div style={gamepanel()}>\r\n                <Grid container spacing={4}>\r\n                    <Grid item xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <TextField className={classes.centeredProfile} id={\"ProfileName\"} label={\"Username\"} defaultValue={window.userInfo.username}/>\r\n                        <Button className={classes.centeredProfile} variant=\"contained\" color=\"secondary\" onClick={submitAnswer}>Change Username</Button>\r\n                        <Typography color={\"secondary\"}>{error}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Created</Typography>\r\n                        {\r\n                            props.gamesview.map((game,index) =>\r\n                                    <ExpansionPanel expanded={expandedGame === 'panelgame' + index} onChange={handleChangeGame('panelgame' + index)}>\r\n                                        <ExpansionPanelSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls={\"panel\" + index + \"-content\"}\r\n                                          id={\"panel\" + index + \"-header\"}\r\n                                        >\r\n                                          <Typography className={classes.heading}>{game.name}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Plays: {game.plays}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Likes: {game.votes}</Typography>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                          <ProfilePageCreatedGamesDetails\r\n                                            game={game}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                          />\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Solved</Typography>\r\n                        {\r\n                            props.solutionsview.map((solution,index) =>\r\n                                <ExpansionPanel expanded={expandedHighscores === 'panelhigh' + index} onChange={handleChangeHighscores('panelhigh' + index)}>\r\n                                    <ExpansionPanelSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls={\"panel\" + index + \"-content\"}\r\n                                      id={\"panel\" + index + \"-header\"}\r\n                                    >\r\n                                      <Typography className={classes.heading}>{solution.name}</Typography>\r\n                                      <Typography className={classes.secondaryHeading}>Best: {solution.numMoves}</Typography>\r\n                                      {solution.WinnerUserId == window.userInfo.userID ? <FaCrown style={{marginLeft: '30px'}}/> : null}\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <ProfilePageSolutionDetails\r\n                                            solution={solution}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                        />\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Puzzle Rush Records</Typography>\r\n                        <Typography variant=\"body1\">Most Puzzles Solved</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ maxWidth: column.maxWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rows.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                        <Typography style={{marginTop: '40px'}} variant=\"body1\">Highest Efficiency Scores</Typography>\r\n                        <Typography variant=\"caption\">Calculated by (total puzzles completed) * 7 - (total redundany moves from best score)</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ maxWidth: column.maxWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rowseff.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nexport default function RandomGamePage(props) {\r\n    return (\r\n        <Game\r\n              handleLineDirections={props.handleLineDirections}\r\n              LineDirections={props.LineDirections}\r\n              randomGame={'Yes'}\r\n              game={props.game}\r\n              difficulty={props.difficulty}\r\n         />\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PuzzleRushPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  puzzleRush={'Yes'}\r\n                  p_id={this.props.p_id}\r\n                  games={this.props.games}\r\n                  difficulty={this.props.difficulty}\r\n             />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PuzzleRushPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass LessonsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                learnMode={'Yes'}\r\n                games={window.learngameslist}/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default LessonsPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game handleClickDailyChallenge={this.props.handleClickDailyChallenge} handleLineDirections={this.props.handleLineDirections} LineDirections={this.props.LineDirections} dailyChallengeMode={'Yes'} playerStateList={this.props.playerStateList} savedMoves={this.props.savedMoves} games={this.props.dailyChallengeGameslist} dc_id={this.props.dc_id} highscores={this.props.dchighscores}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengePage;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Card,CardActions,Button,Avatar} from \"@material-ui/core\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function AboutUs(props) {\r\n    const facebookclick = () => {\r\n        window.open('https://www.facebook.com/RobotsEvolved-105278561284154')\r\n    }\r\n    const discordclick = () => {\r\n        window.open('https://discord.gg/VKMRQuE')\r\n    }\r\n    return (<div style={gamepanel()}>\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item spacing={4} xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card style={{display: 'inline-block', width: '100%'}}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    About\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    RobotsEvolved.com is based on the board game Ricochet Robots by Alex Randolph.\r\n                                    We have several game modes and variants that are inspired by the several Chess variants on the internet.\r\n                                    If you find any bugs or have any feature requests for RobotsEvolved please let me know by emailing robotsevolved@gmail.com or contacting me on FB from our FB page, I would love to hear some of the ideas people have. Ill get to developing the feature/fixing annoying bugs ASAP\r\n                                    If you use Google Login or Facebook Login I will NEVER email you or sell your information, it is strictly for user-identification.\r\n                                    Tell your friends about the site and get people on here!\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button onClick={facebookclick}>\r\n                                    <Avatar alt=\"Facebook\" src=\"https://facebookbrand.com/wp-content/uploads/2019/04/f_logo_RGB-Hex-Blue_512.png?w=512&h=512\" />\r\n                                </Button>\r\n                                <Button onClick={discordclick}>\r\n                                    <Avatar alt=\"Discord\" src=\"https://cdn.discordapp.com/attachments/675768013731135518/740251382862577694/icons8-discord-new-logo-48.png\" />\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Daily Challenge Rotation\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    The Daily Challenge rotates its difficulty every day as specified below with 2 x Random and 2 x Classic Type puzzles.\r\n                                    <br/>\r\n                                    Medium Mondays - 4 x Medium\r\n                                    <br/>\r\n                                    Trouble Tuesdays - 4 x Hard\r\n                                    <br/>\r\n                                    Wild Wednesdays - 4 x Medium\r\n                                    <br/>\r\n                                    Tryhard Thursdays -4 x Hard\r\n                                    <br/>\r\n                                    Flyin Fridays - 4 x Medium\r\n                                    <br/>\r\n                                    Sleepy Saturdays - 4 x Easy\r\n                                    <br/>\r\n                                    Standard Sundays - 4 x Hard\r\n                                </Typography>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Classic Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Classic puzzles are based on the original Game. These Puzzles only have walls that are L shaped and a goal is in the center of one of the L puzzles.\r\n                                </Typography>\r\n                                <Typography variant={\"h4\"} display={\"inline\"}>\r\n                                    Random Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Random Puzzles are created by having a 10% chance for a wall to spawn in location possible, Goals and Robot placements are completely random also.\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Easy\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 5-8 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Medium\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 9-13 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 14-17 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"} >\r\n                                    Extremely Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 18-22 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    God Tier\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 23+ Moves, Note: there are a low number of these puzzles due to the CPU required to create them\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Paper class=\"card3\">\r\n                          <img src={\"/static/images/284457_10151211078621477_839164197_n.jpg\"} alt=\"Jane\"/>\r\n                          <div class=\"container3\">\r\n                            <h2>Kyle Kwasniewski</h2>\r\n                            <p class=\"title3\">Creator &amp; FullStack Dev.</p>\r\n                            <p>I work in Software Development and Dev-Ops in New York and consider myself a Ricochet Robots enthusiast so I decided to make this application as a way to better hone my skill in web frameworks as well as pass the time during the quarantine. I play Frisbee and Ski alot as well as play my fair share of Steam games.</p>\r\n                            <p>Thanks for playing!</p>\r\n                            <p>robotsevolved@gmail.com</p>\r\n                          </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/284f909d-0d5c-4ae1-b100-76c9d46ae7d4.png\"} alt=\"Mike\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Jonah Tollefson</h2>\r\n                                <p className=\"title3\">Front-End Dev.</p>\r\n                                <p>Went to college with these other goobers in the US and now I work professionally as a\r\n                                    software engineer in Germany. For RobotsEvolved, I mainly worked on the frontend\r\n                                    using React. Cats and Ultimate Frisbee are life.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/derekschultz.jpg\"} alt=\"John\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Derek Schultz</h2>\r\n                                <p className=\"title3\">Back-End Dev.</p>\r\n                                <p>Full time Software Engineer. Graduated from University of Wisconsin Platteville\r\n                                    with a BS in Computer Science and Minor in Business Administration. Worked on\r\n                                    most of the database aspect of RobotsEvolved and some back end functionality. I\r\n                                    enjoy video games, beer, and playing darts.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n\r\n\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nexport default function ShowDailyPuzzleHistory(props) {\r\n    const handleDailyPuzzleHistoryClick = event => {\r\n        console.log(props.history)\r\n        props.handleDailyPuzzleHistoryClick(props.history)\r\n    }\r\n    return (\r\n            <Button style={window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? {marginLeft: '5px'} : {marginLeft: '60px'}} variant=\"contained\" size=\"small\" color=\"primary\" onClick={handleDailyPuzzleHistoryClick}>\r\n                 show answers\r\n            </Button>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport ShowDailyPuzzleHistory from '../components/ShowDailyPuzzleHistory';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ProfilePageCreatedGamesDetails from \"../components/ProfilePageComponents/ProfilePageCreatedGamesDetails\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function DailyChallengeHistory(props) {\r\n    const [expandedPanel, setExpandedPanel] = React.useState(false);\r\n    const handleChangePanel = (panel) => (event, isExpanded) => {\r\n        setExpandedPanel(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles();\r\n    return (<div style={gamepanel()}>\r\n                <Typography className={classes.titlehome} variant=\"h3\">Daily Challenge History</Typography>\r\n                {\r\n                    props.dailychallengehistory.map((history, index) =>\r\n                        <ExpansionPanel expanded={expandedPanel === 'panelgame' + index} onChange={handleChangePanel('panelgame' + index)}>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={\"panel\" + index + \"-content\"}\r\n                                id={\"panel\" + index + \"-header\"}\r\n                            >\r\n                                <Typography className={classes.heading}>{history.created}</Typography>\r\n                                <Typography style={{width: '15%'}} className={classes.secondaryHeading}>Winner: {history.nameSubmitted}</Typography>\r\n                                <ShowDailyPuzzleHistory history={history} handleDailyPuzzleHistoryClick={props.handleDailyPuzzleHistoryClick}/>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        <FaCrown/> {history.nameSubmitted} - {history.scoreSubmitted} <FaCrown/>\r\n                                    </Typography>\r\n                                    <Typography className={classes.secondaryHeading}>Lowest possible solution: {history.bestScore}</Typography>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                    )\r\n                }\r\n           </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengeHistoryAnswersPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        console.log(this.props.history);\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                dailyChallengeModeAnswers={'Yes'}\r\n                nameSubmitted={this.props.history.nameSubmitted}\r\n                bestScore={this.props.history.bestScore}\r\n                created={this.props.history.created}\r\n                games={this.props.history.games}\r\n                playerStateList={this.props.history.playerStateList}\r\n                scoreSubmitted={this.props.history.scoreSubmitted}\r\n                solutionDataSubmitted={this.props.history.solutionDataSubmitted}\r\n                submitted={this.props.history.submitted}\r\n                user_id={this.props.user_id}\r\n                />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengeHistoryAnswersPage;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n  },\r\n}));\r\n\r\nexport default function LoadingPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress size={120} color=\"secondary\" />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\r\nimport clsx from 'clsx';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport Home from './Pages/Home';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\nimport axios from 'axios';\r\nimport Game from './containers/Game';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport BrushIcon from '@material-ui/icons/Brush';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"./constants/constants\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport PuzzleRushDifficultyModal from \"./containers/Modals/PuzzleRushDifficultyModal\";\r\nimport RandomGameDifficultyModal from \"./containers/Modals/RandomGameDifficultyModal\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport RandomGamePage from \"./Pages/RandomGamePage\";\r\nimport PuzzleRushPage from \"./Pages/PuzzleRushPage\";\r\nimport LessonsPage from \"./Pages/LessonsPage\";\r\nimport DailyChallengePage from \"./Pages/DailyChallenge\";\r\nimport AboutUs from \"./Pages/AboutUs\";\r\nimport DailyChallengeHistory from \"./Pages/DailyChallengeHistory\";\r\nimport DailyChallengeHistoryAnswersPage from \"./Pages/DailyChallengeHistoryAnswersPage\";\r\nimport { FaMedal } from 'react-icons/fa';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport Popover from \"@material-ui/core/Popover\";\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    drawerHeaderRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerHeaderLeft: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    toolbar1: {\r\n        backgroundColor: '#14A76C',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    dividerFullWidth: {\r\n        margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    darkmode: {\r\n          body: '#363537',\r\n          text: '#FAFAFA',\r\n          toggleBorder: '#6B8096',\r\n          gradient: 'linear-gradient(#091236, #1E215D)',\r\n    },\r\n});\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (window.uri === '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n                dailychallengehistoryloaded: false,\r\n                profileDataloaded: false,\r\n            };\r\n        }\r\n        else {\r\n            if (window.token.g_id == undefined) {\r\n                const linedir = window.userInfo == undefined ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={linedir} name={window.token.name} gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri} authorname={window.token.authorname} votes={window.token.votes} hasVoted={window.token.hasVoted} signInModalOpen={this.SignInButtonPressed}/>, //when uri is entered to play specific game\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                };\r\n            }\r\n            else {\r\n                const linedir = window.userInfo == undefined ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={linedir} randomGame={'Yes'} game={window.token} difficulty={window.token.g_difficulty}/>,\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                }\r\n            }\r\n        }\r\n        this.state.openChat = false;\r\n        this.state.chatAnchor = null;\r\n        this.state.open = window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? false : true;\r\n        this.state.mobileAnchorEl = null;\r\n        this.state.mobileMenuOpen = false;\r\n        this.state.showLoginModal = false;\r\n        this.state.showPuzzleRushModal = false;\r\n        this.state.loadingPage = false;\r\n        this.state.filterTerm = 'None'\r\n        this.state.searchTerm = ''\r\n        this.state.findWindowHeight = 0;\r\n        this.state.numFindGames = window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? 8 : 20;\r\n         if (window.loggedin === 'Yes') {\r\n            this.state.LineDirections = window.userInfo.LineDirFlag === 'Y';\r\n         }\r\n         else {\r\n            this.state.LineDirections = true;\r\n         }\r\n    }\r\n\r\n    handleChatOpen = (event) => {\r\n        this.setState({\r\n            openChat: true,\r\n            chatAnchor: event.currentTarget\r\n        })\r\n    };\r\n\r\n    handleChatClose = () => {\r\n      this.setState({\r\n          openChat: false\r\n      })\r\n    };\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState( {\r\n            open: false\r\n        })\r\n    };\r\n\r\n    handleLineDirections = (boolean) => {\r\n        if (window.loggedin === 'Yes') {\r\n            axios.post('/settingsChange', {LineDirections: boolean ? 'Y' : 'N'})\r\n                .then( res => {\r\n                    console.log('changed');\r\n                });\r\n        }\r\n        this.setState({\r\n            LineDirections: boolean\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallenge = () => {\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeData')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    const dc_movesList = res.data.dc_movesList == null ? null : JSON.parse(res.data.dc_movesList)\r\n                    const dc_playerList = res.data.dc_playerList == null ? null : JSON.parse(res.data.dc_playerList)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                                        PageSelected: <DailyChallengePage\r\n                                                            handleClickDailyChallenge={this.handleClickDailyChallenge}\r\n                                                            dailyChallengeGameslist={JSON.parse(res.data.dailyChallengeGameslist)}\r\n                                                            dc_id={res.data.dc_id}\r\n                                                            dchighscores={JSON.parse(res.data.dchighscores)}\r\n                                                            handleLineDirections={this.handleLineDirections}\r\n                                                            LineDirections={this.state.LineDirections}\r\n                                                            savedMoves={dc_movesList}\r\n                                                            playerStateList={dc_playerList}\r\n                                        />,\r\n                                        open: isOpen,\r\n                                        loadingPage: false,\r\n                                    });\r\n                        }\r\n                    });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState( {\r\n            open: true\r\n        });\r\n    };\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type === 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    };\r\n\r\n    handleClickRandomGameModal = (game,difficulty) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showRandomGameModal: false,\r\n            PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} randomGame={'Yes'} game={game} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickRandomGame = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: true,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickPuzzleRush = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: true,\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallengeHistory = (event) => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeHistory')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    var historydata = JSON.parse(res.data)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                            PageSelected: <DailyChallengeHistory handleDailyPuzzleHistoryClick={this.handleDailyPuzzleHistoryClick} dailychallengehistory={historydata}/>,\r\n                            challengeHistoryData: historydata,\r\n                            dailychallengehistoryloaded: true,\r\n                            open: isOpen,\r\n                            loadingPage: false,\r\n                        });\r\n                    }\r\n            });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleDailyPuzzleHistoryClick = history => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <DailyChallengeHistoryAnswersPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} history={history}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty,games,p_id) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showPuzzleRushModal: false,\r\n            PageSelected: <PuzzleRushPage handleClickPlayAgain={this.handleClickPuzzleRush} handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: false\r\n        });\r\n    };\r\n\r\n    closeRandomGameLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: false\r\n        });\r\n    };\r\n\r\n    handleGameClick = (name, gamedata, highscores, uri, authorname, votes, hasVoted) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} name={name} highscores={highscores} gamedata={gamedata} uri={uri} authorname={authorname} votes={votes} hasVoted={hasVoted} signInModalOpen={this.SignInButtonPressed}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <CreateGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} state={\"new\"}/>,\r\n             open: isOpen,\r\n             loadingPage: false,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickProfile = event => {\r\n        if (window.loggedin === 'Yes') {\r\n            this.state.loadingPage = true;\r\n                    axios.get('/getProfileData')\r\n                        .then( res => {\r\n                            var isOpen = this.state.open;\r\n                            if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                                isOpen = false\r\n                            }\r\n                            var profileData = res.data;\r\n                            var gamesview = JSON.parse(profileData.gamesview)\r\n                            var solutionsview = JSON.parse(profileData.solutionsview)\r\n                            var puzzlerushview = JSON.parse(profileData.puzzlerushview)\r\n                            if (this.state.loadingPage) {\r\n                                this.setState({\r\n                                    PageSelected: <ProfilePage handleClickPlayGame={this.handleGameClick} gamesview={gamesview} solutionsview={solutionsview} puzzlerushview={puzzlerushview}/>,\r\n                                    gamesview: gamesview,\r\n                                    solutionsview: solutionsview,\r\n                                    puzzlerushview: puzzlerushview,\r\n                                    profileDataloaded: true,\r\n                                    open: isOpen,\r\n                                    loadingPage: false,\r\n                                });\r\n                            }\r\n                        });\r\n                    this.setState({\r\n                        PageSelected: <LoadingPage/>,\r\n                    });\r\n                }\r\n        else {\r\n            this.SignInButtonPressed('Sign in');\r\n        }\r\n    };\r\n\r\n    setNumFindGames = (num,filterTerm,searchTerm) => {\r\n        this.setState({\r\n            numFindGames: num,\r\n            searchTerm: searchTerm,\r\n            filterTerm: filterTerm,\r\n        })\r\n    }\r\n\r\n    setFindWindow = height => {\r\n        this.setState({\r\n            findWindowHeight: height\r\n        })\r\n    }\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.post('/search', {search: this.state.searchTerm, filter: this.state.filterTerm, offset: 0, numGames: this.state.numFindGames})\r\n            .then( res => {\r\n                const gameslist = JSON.parse(res.data.gameslist);\r\n                const highscoreslist = JSON.parse(res.data.highscoreslist);\r\n                var isOpen = this.state.open;\r\n                if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                    isOpen = false\r\n                }\r\n                if (this.state.loadingPage) {\r\n                    this.setState({\r\n                        PageSelected: <FindGame findWindowHeight={this.state.findWindowHeight} setFindWindow={this.setFindWindow} setNumFindGames={this.setNumFindGames} gameslist={gameslist} highscoreslist={highscoreslist} handleGameClick={this.handleGameClick}/>,\r\n                        open: isOpen,\r\n                        loadingPage: false,\r\n                    });\r\n                }\r\n        });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleHomePageClick = () => {\r\n        this.setState({\r\n            PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickAboutUs = event => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <AboutUs/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickLearnGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <LessonsPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileAnchorEl: null,\r\n            mobileMenuOpen: false\r\n        });\r\n    };\r\n\r\n    showPage = () => {\r\n        return(\r\n            this.state.PageSelected\r\n        )\r\n    };\r\n\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({\r\n            mobileAnchorEl: event.currentTarget,\r\n            mobileMenuOpen: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const theme = createMuiTheme({\r\n            palette: {\r\n                primary: teal,\r\n                secondary: {\r\n                    main: '#e65100',\r\n                },\r\n            }\r\n        });\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <AppBar\r\n                        position=\"fixed\"\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: this.state.open,\r\n                        })}\r\n                     >\r\n                        <Toolbar className={classes.toolbar1}>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={this.handleDrawerOpen}\r\n                                edge=\"start\"\r\n                                className={clsx(classes.menuButton, this.state.open && classes.hide)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <img onClick={this.handleHomePageClick} width={50} height={50} src=\"/static/images/logo150.png\"/>\r\n                            <Typography variant=\"h6\" className={classes.title} noWrap>\r\n                                <a href=\"/\" style={{color: 'white'}}>RobotsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </Typography>\r\n                            <div className={classes.grow} />\r\n                            <div className={classes.sectionDesktop}>\r\n                                <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.sectionMobile}>\r\n                                <IconButton\r\n                                    aria-label=\"show more\"\r\n                                    aria-controls={\"primary-search-account-menu-mobile\"}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.handleMobileMenuOpen}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <MoreIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Menu\r\n                        anchorEl={this.state.mobileAnchorEl}\r\n                        anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        id={\"primary-search-account-menu-mobile\"}\r\n                        keepMounted\r\n                        transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        open={this.state.mobileMenuOpen}\r\n                        onClose={this.handleMobileMenuClose}\r\n                    >\r\n                        <MenuItem>\r\n                            <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                    <Drawer\r\n                        id=\"MainDrawer\"\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.state.open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div className={classes.drawerHeader}>\r\n                            <div className={classes.drawerHeaderLeft}>\r\n                                <SignInButton onClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.drawerHeaderRight}>\r\n                                <IconButton onClick={this.handleDrawerClose}>\r\n                                    {useTheme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Play\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Find a Game'} onClick={this.handleClickFindGame}>\r\n                                <ListItemIcon><SearchIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Find a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge'} onClick={this.handleClickDailyChallenge}>\r\n                                <ListItemIcon><TodayIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Create a Game'} onClick={this.handleClickCreateGame}>\r\n                                <ListItemIcon><BrushIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Create a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Random Game'} onClick={this.handleClickRandomGame}>\r\n                                <ListItemIcon><CasinoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Random Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Puzzle Rush'} onClick={this.handleClickPuzzleRush}>\r\n                                <ListItemIcon><TimerIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Puzzle Rush'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Learn\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Lessons'} onClick={this.handleClickLearnGame}>\r\n                                <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Lessons'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Community\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Profile'} onClick={this.handleClickProfile}>\r\n                                <ListItemIcon><AccountBoxIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Profile'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge History'} onClick={this.handleClickDailyChallengeHistory}>\r\n                                <ListItemIcon><FaMedal /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge History'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Tools\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'About'} onClick={this.handleClickAboutUs}>\r\n                                <ListItemIcon><InfoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'About'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Dark Mode'} onClick={this.props.handleClickDarkMode}>\r\n                                <ListItemIcon><Brightness6Icon /></ListItemIcon>\r\n                                <ListItemText primary={'Space Mode (Beta)'} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n                    <main className={clsx(classes.content, {\r\n                        [classes.contentShift]: this.state.open,\r\n                    })}>\r\n                        <div className={classes.drawerHeader} />\r\n                        {this.showPage()}\r\n                    </main>\r\n                    <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n                    <PuzzleRushDifficultyModal\r\n                        closeModal={this.closePuzzleRushLoginModal}\r\n                        show={this.state.showPuzzleRushModal}\r\n                        handleClickPuzzleRush={this.handleClickPuzzleRushModal}\r\n                    />\r\n                    <RandomGameDifficultyModal\r\n                        closeModal={this.closeRandomGameLoginModal}\r\n                        show={this.state.showRandomGameModal}\r\n                        handleClickRandomGame={this.handleClickRandomGameModal}\r\n                    />\r\n                </div>\r\n                <div style={{position: \"fixed\", bottom: \"10px\", right: \"10px\"}}>\r\n                    <IconButton\r\n                        style = {{backgroundColor: \"#14a76c\"}}\r\n                        onClick={this.handleChatOpen}\r\n                    >\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n                    <Popover\r\n                        open={this.state.openChat}\r\n                        anchorEl={this.state.chatAnchor}\r\n                        onClose={this.handleChatClose}\r\n                        anchorOrigin={{\r\n                            vertical: \"top\",\r\n                            horizontal: \"left\"\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"right\"\r\n                        }}\r\n                    >\r\n                        <iframe\r\n                            src=\"https://titanembeds.com/embed/740127738345554021?css=140&username=guest&defaultchannel=740270339900178583\"\r\n                            height= {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? (parseInt(window.innerHeight/2)) + '': \"600\"}\r\n                            width= {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? (window.innerWidth - 40) + '': \"400\"}\r\n                            frameBorder=\"0\"\r\n                        />\r\n                    </Popover>\r\n                </div>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);\r\n","\r\n\r\n\r\nimport React from 'react';\r\nimport DarkModeApp from './DarkMode/App';\r\nimport App from './App';\r\n\r\nexport default class ContainerApplication extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Page: <App handleClickDarkMode={this.handleClickDarkMode}/>\r\n        }\r\n\r\n    }\r\n\r\n    handleClickDarkMode = () => {\r\n        this.setState({\r\n            Page: <DarkModeApp/>\r\n        })\r\n    }\r\n\r\n    render = () => this.state.Page;\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport ContainerApplication from './ContainerApplication';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><ContainerApplication /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}