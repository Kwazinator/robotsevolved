{"version":3,"sources":["components/LearnGameItems.js","constants/constants.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinModal.jsx","components/AddPuzzleModal.jsx","components/ToggleSettings.js","components/Timer.js","containers/DisplayView.js","components/HighScores.jsx","containers/Modals/PuzzleRushFinishedModal.js","components/DescriptionList.jsx","components/boardgenerator.js","containers/Modals/BoardResetModal.js","containers/Game.js","Material-UI/themes.jsx","Pages/CreateGame.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","Pages/Home.js","containers/Modals/LoginModal.js","components/LoggedInUser.js","components/SignInButton.js","containers/Modals/PuzzleRushDifficultyModal.js","components/ProfilePageComponents/ProfilePageCreatedGamesDetails.js","components/ProfilePageComponents/ProfilePageSolutionDetails.js","Pages/ProfilePage.js","App.js","serviceWorker.js","index.js"],"names":["LearnGameItems","props","handleLearnClickGame","index","selected","Button","variant","color","onClick","game","name","UP","DIRECTION_MAP_IMAGES","yellow","DOWN","LEFT","RIGHT","red","green","blue","MovesView","style","width","float","display","this","moveHistory","length","map","move","src","playerState","robot","colorSignifier","dir","React","Component","styleoutside","dimension","position","dim","height","backgroundColor","top","left","styleinside","styleinside2","Square","handleClick","handlePlayerMovementFromMouse","border","margin","overflow","children","id","transition","styleoutsidedraggable","selectedColor","undefined","borderStyle","borderColor","borderRadius","Robot","handleKeyDown","e","newDirection","keyCode","tabSelector","resetPuzzle","handlePlayerMovement","onStopDragHandler","handleCreateMode","isCreateMode","buildMode","x","y","grid","draggableGrid","onStop","bounds","window","onkeydown","orientation","opacity","wallThickness","wallOffset","Wall","userSelect","styledragable","Goal","endPosition","obj","key","hasOwnProperty","YouWinModal","Dialog","onClose","handleClose","aria-labelledby","open","show","maxWidth","DialogTitle","DialogContent","dividers","numMoves","TextField","label","defaultValue","username","DialogActions","submitAnswer","AddPuzzleModal","submitPuzzle","ToggleSettings","event","FormControlLabel","value","control","Switch","onChange","Timer","state","minutes","seconds","timer","myInterval","setInterval","setState","puzzleRushTimeUp","clearInterval","valuetext","DisplayView","createMode","fullWidth","handleCreateBoardClick","checked","toggleBuildMode","createBoardPressed","copyToClipboard","dummy","document","createElement","body","appendChild","location","host","uri","select","execCommand","removeChild","copiedClipboard","thisThing","copyButtonText","setTimeout","handleDimensionChange","getElementsByClassName","blur","parseInt","toString","DimensionChanged","puzzleRush","isPuzzleRush","Typography","gutterBottom","numPuzzleRush","marginRight","marginTop","marginBottom","paddingBottom","Divider","ButtonGroup","aria-label","undoMove","toggleLineIndicators","Slider","onChangeCommitted","getAriaValueText","step","marks","min","max","squareSizeValue","valueLabelDisplay","highscores","marginleft","highscore","comment","highscorestyle","PuzzleRushWinModal","difficulty","Grid","container","spacing","item","xs","md","List","dense","ListItem","ListItemText","primary","secondary","numPuzzlesCompleted","percentile","averageTime","averageMoves","differenceOptimal","movesPerSecond","playPuzzleRushAgain","closeModal","Descriptionlist","tipsText","text","ListItemAvatar","Avatar","ListItemSecondaryAction","IconButton","edge","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","type","boardState","wallVerticle","wallHorizontal","goal","randompos1","randompos2","randompos3","randompos4","randomPositions","i","push","extend","j","gameWon","playerStart","slice","BoardResetModal","createBoardHandler","preventDefault","getElementById","percent","createBoard","textAlign","paddingRight","Input","inputProps","title","placeholder","addEventListener","indexOf","setDefaultSquareSize","boardWidth","drawerWidth","getComputedStyle","windowWidth","innerWidth","settings","console","log","Game","squareSize","updateHighscores","axios","get","then","res","JSON","parse","data","copiedToClipboard","componentDidMount","loadedGame","IntervalId","componentWillUnmount","robotSelect","robotSelected","namesubmit","userInfo","post","puzzledata","authorname","history","ColoredLineDirections","showBoardResetPanelModal","closeCreateBoardModal","closePuzzleRushFinishedModal","showPuzzleRushFinishedModal","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","totalMovesDiff","solutiondifference","numPuzzleon","totalMoves","totalMovesList","avgMoves","p_id","differenceFrom","checkwin","robotPosition","g_id","games","solutionmoves","g_moves","g_puzzledata","newarray","concat","oldPositon","prevPosition","description","loadSidebar","learnMode","direction","HighScores","posObj","handleUndoMove","moveObj","pop","createModeWallClick","indexToChange","newWallHorizontal","wallH","newWallVerticle","wallV","onStopDragHandlerGoal","round","lastY","lastX","gamedata","settingsWidth","settingsHeight","percentWall","settingsPercent","padding","alignItems","sm","Board","square","ColoredLineDirection","ColoredLine","player","puzzleRushPercentileCompleted","withRouter","useStyles","makeStyles","theme","root","flexGrow","griditems","paper","Width","image","img","maxHeight","baseExpansion","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","darkmode","iconcards","minWidth","createboardcard","content","demo","background","CreateGame","withStyles","upperPadding","paddingTop","lowerPadding","rightSideText","leftSideText","classes","numberOfHighScores","trimName","substring","Card","className","CardContent","justifyContent","created","handleGameClick","flexItem","disableGutters","FindGame","handleSearchSubmit","searchTerm","search","highscoreslist","gameslist","FindGameElements","PlayGame","ComplexGrid","justify","wrap","frameborder","allow","allowfullscreen","CardActionArea","handleClickCreateGame","CardMedia","component","alt","CardActions","size","handleClickLearnGame","handleClickFindGame","handleClickPuzzleRush","LoginModal","loginGoogle","href","closeLoginModal","LoggedInUser","loggedin","class","profilePicture","SignInButton","textToShow","PuzzleRushDifficultyModal","handleClickEasyPuzzleRush","handleClickMediumPuzzleRush","handleClickHardPuzzleRush","handleClickExHardPuzzleRush","ProfilePageCreatedGamesDetails","handleClickPlayGame","ProfilePageSolutionDetails","solution","HSname","ProfilePage","panel","useState","expandedGame","setExpandedGame","expandedHighscores","setExpandedHighscores","expandedPuzzleRush","setExpandedPuzzleRush","gamesview","ExpansionPanel","expanded","isExpandedGame","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","solutionsview","isExpandedHighScores","isExpandedPuzzleRush","App","handleDrawerClose","handleDrawerOpen","SignInButtonPressed","showLoginModal","showPuzzleRushModal","action","PageSelected","handleClickGodlyPuzzleRush","closePuzzleRushLoginModal","newGame","isOpen","handleClickProfile","puzzlerushview","learngameslist","handleMobileMenuClose","mobileAnchorEl","mobileMenuOpen","handleMobileMenuOpen","currentTarget","token","createMuiTheme","teal","main","AppBar","clsx","appBar","appBarShift","Toolbar","menuButton","hide","noWrap","grow","sectionDesktop","Badge","badgeContent","sectionMobile","aria-haspopup","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","Drawer","drawer","anchor","drawerPaper","drawerHeader","drawerHeaderLeft","drawerHeaderRight","useTheme","dividerFullWidth","button","ListItemIcon","contentShift","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","mixins","toolbar","breakpoints","up","toggleBorder","gradient","Boolean","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.5e6e980a.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nexport default function LearnGameItems(props) {\r\n    const handleLearnClickGame = () => {\r\n        props.handleLearnClickGame(props.index)\r\n    }\r\n    if (props.selected === props.index) {\r\n        return (\r\n            <Button\r\n                variant=\"contained\" color=\"primary\"\r\n                onClick={handleLearnClickGame}\r\n            >\r\n                {props.game.name}\r\n            </Button>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={handleLearnClickGame}\r\n            >\r\n                {props.game.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n}","export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const MOBILE_INNER_SCREEN_WIDTH = '960';\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.handlePlayerMovementFromMouse(this.props.position);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div id=\"MainGameBoard\" style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleoutsidedraggable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var selectedColor = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        selectedColor = SELECTED_ROBOT;\r\n        borderStyle = \"solid\";\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        borderStyle: borderStyle,\r\n        borderColor: selectedColor,\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.props.tabSelector();\r\n                return;\r\n                break;\r\n            case 32:\r\n                this.props.resetPuzzle();\r\n                return;\r\n                break;\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n\r\n\r\n        }\r\n        this.props.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    onStopDragHandler = (e, position) => {\r\n        this.props.onStopDragHandler(position,this.props.index);\r\n    }\r\n\r\n\r\n    handleCreateMode = () => {\r\n        if (this.props.isCreateMode === 'Yes' && this.props.buildMode) {\r\n            return (\r\n            <Draggable position={{x: this.props.position.left * this.props.dimension, y:this.props.position.top*this.props.dimension}} grid={this.props.draggableGrid} onStop={this.onStopDragHandler} bounds=\"parent\">\r\n                <div onClick={this.handleClick} style={styleoutsidedraggable(this.props)}>\r\n                    <div style={styleinside(this.props)}>\r\n                        <div style={styleinside2(this.props)}/>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n        this.handleCreateMode()\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onkeydown = this.handleKeyDown;\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.isCreateMode === 'Yes'  && props.buildMode) {\r\n        const onStopDragHandler = (e, position) => {\r\n            props.onStopDragHandler(position);\r\n        }\r\n        return(\r\n        <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n            <img src={GOAL_IMAGE} style={styledragable(props)}/>\r\n        </Draggable>\r\n        )\r\n    }\r\n    else {\r\n        return(<img src={GOAL_IMAGE} style={style(props)}/>)\r\n    }\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = '4px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = '4px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = '4px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension;\r\n            width = '4px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    top+=18;\r\n    left+=18;\r\n\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\nexport default (props) => (\r\n    <div style={style(props)}/>\r\n);","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Submit Puzzle</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField id={\"namesubmit\"} label={\"Name of Puzzle\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleModal;\r\n","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Line Indicators\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n\r\n    state = {\r\n            minutes: 5,\r\n            seconds: 0,\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.puzzleRushTimeUp();\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    timer = () => {\r\n        if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n            return (<h2>Time is up!</h2>)\r\n        }\r\n        else {\r\n            return(\r\n                <h2>Time Remaining: {this.state.minutes}:{this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds}</h2>)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            this.timer()\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ToggleSettings from \"../components/ToggleSettings\";\r\nimport Timer from \"../components/Timer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { copyButtonText: \"Copy Puzzle Link\" };\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <div>\r\n                    <Button color=\"secondary\" variant={\"outlined\"} fullWidth={true} onClick={this.handleCreateBoardClick}>Modify Board</Button>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Switch color=\"primary\" checked={this.props.buildMode} onChange={this.props.toggleBuildMode}/>}\r\n                        label=\"Build Mode\"\r\n                            />\r\n                </div>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.props.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        document.getElementsByClassName(\"MuiSlider-thumb\")[0].blur();\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n    puzzleRush = () => {\r\n        if (this.props.isPuzzleRush === 'Yes'){\r\n            return (\r\n                     <div>\r\n                        <Typography id=\"discrete-slider-small-steps\"\r\n                                     color=\"textSecondary\"\r\n                                     display=\"inline\"\r\n                                     gutterBottom>\r\n                             Puzzles: {this.props.numPuzzleRush}\r\n                         </Typography>\r\n                        <Timer puzzleRushTimeUp={this.props.puzzleRushTimeUp}>\r\n                        </Timer>\r\n                     </div>\r\n            )\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                 <div style={{paddingBottom: '10px'}}>\r\n                     <Button fullWidth={true} variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                             onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                 </div>\r\n                 <Divider />\r\n                 <Typography\r\n                     color=\"textSecondary\"\r\n                     display=\"block\"\r\n                     variant=\"caption\"\r\n                     style={{paddingBottom: '10px'}}\r\n                 >\r\n                     Board Actions\r\n                 </Typography>\r\n                 <ButtonGroup fullWidth={true} color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     <Button onClick={this.props.undoMove}>Undo</Button>\r\n                 </ButtonGroup>\r\n                 {this.isCreateMode(this.props.createMode)}\r\n                 <ToggleSettings onClick={this.props.toggleLineIndicators}/>\r\n                 <div style={buttonPanel()}>\r\n                     <Typography id=\"discrete-slider-small-steps\"\r\n                                 color=\"textSecondary\"\r\n                                 display=\"inline\"\r\n                                 gutterBottom>\r\n                         Size Of Board\r\n                     </Typography>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={this.props.squareSizeValue}\r\n                         valueLabelDisplay=\"auto\"\r\n                         id=\"sliderelement\"\r\n                     />\r\n                 </div>\r\n                 {this.puzzleRush()}\r\n                 <Divider/>\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n        <div style={styleelements()}>{'By: ' + highscore.comment}\r\n            <div>\r\n                {'Moves: ' + highscore.numMoves}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <div style={styleouter()}>{'All Highscores:'}\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </div>\r\n)","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\n\r\nclass PuzzleRushWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Puzzle Rush - {this.props.difficulty}</DialogTitle>\r\n                <DialogContent dividers>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"h6\">\r\n                            Statistics\r\n                          </Typography>\r\n                          <div>\r\n                            <List dense={true}>\r\n\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Number of Puzzles Completed\"\r\n                                    secondary={this.props.numPuzzlesCompleted}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Percentile\"\r\n                                    secondary={this.props.percentile}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average time Per Puzzle\"\r\n                                    secondary={this.props.averageTime}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average Moves per Puzzle\"\r\n                                    secondary={this.props.averageMoves}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Difference from most optimal Solution\"\r\n                                    secondary={this.props.differenceOptimal}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Moves Per Second\"\r\n                                    secondary={this.props.movesPerSecond}\r\n                                  />\r\n                                </ListItem>\r\n                            </List>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.playPuzzleRushAgain}>Play Again!</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushWinModal;\r\n\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nexport default function Descriptionlist(props) {\r\n    return(\r\n            <List>\r\n              {\r\n                  props.tipsText.map(text =>\r\n                    <ListItem>\r\n                      <ListItemAvatar>\r\n                        <Avatar>\r\n                          <FeedbackIcon />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary={text}\r\n                      />\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                          <CloseIcon />\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  )\r\n              }\r\n            </List>\r\n    )\r\n}","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent,type) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    if (type === 'blank') {\r\n        var goal = {top: height-1, left: width-1};\r\n        var randompos1 = {top: 0,left: 0, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n        var randompos2 = {top: 0,left: 1, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n        var randompos3 = {top: 1,left: 0, color: ROBOT_RED, colorSignifier: 'red'};\r\n        var randompos4 = {top: 1,left: 1, color: ROBOT_YELLOW, colorSignifier:'yellow'};\r\n    }\r\n    else {\r\n        var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n        var randomPositions = [goal];\r\n        for (var i=0;i<5;i++) {\r\n            randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n        }\r\n        var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n        var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n        var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n        var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    }\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router';\r\nimport Draggable from 'react-draggable';\r\nimport LearnGameItems from '../components/LearnGameItems';\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport PuzzleRushWinModal from '../containers/Modals/PuzzleRushFinishedModal';\r\nimport DescriptionList from '../components/DescriptionList';\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if([37, 38, 39, 40, 9].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        padding: '40px'\r\n    };\r\n};\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\n\r\nconst setDefaultSquareSize = (boardWidth) => {\r\n    const drawerWidth = document.getElementById(\"MainDrawer\") == null ? 140 : parseInt(getComputedStyle(document.getElementById(\"MainDrawer\")).width);\r\n    const windowWidth = window.innerWidth;\r\n    var settings = ((windowWidth < 600) ? windowWidth : (windowWidth - drawerWidth) / 1.75);\r\n    console.log(settings);\r\n    settings = settings / boardWidth;\r\n    settings = parseInt(settings);\r\n    settings = settings - (settings % 4);\r\n    if (settings < 16) {\r\n        settings = 16;\r\n    }\r\n    else if (settings > 52) {\r\n        settings = 52;\r\n    }\r\n    return settings;\r\n};\r\n\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.puzzleRush === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.p_id = this.props.p_id;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n            this.state.tipsText = []\r\n        }\r\n        else if (this.props.learnMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n            this.state.tipsText = [this.props.games[0].description];\r\n        }\r\n        else if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.buildMode = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n            this.state.tipsText = []\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,1,'blank');\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                buildMode: true,\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false,\r\n                tipsText: [\r\n                                        'Click on Wall spots to toggle',\r\n                                        'Click and Drag robots or goal to move robots',\r\n                                        'When you are ready, toggle build mode in order to solve the puzzle',\r\n                                        'you must solve the puzzle in order to submit.']\r\n            },board);\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n        }\r\n    };\r\n\r\n    setDefaultSquareSize = (boardWidth) => {\r\n\r\n        const drawerWidth = document.getElementById(\"MainDrawer\")\r\n        const windowWidth = window.innerWidth;\r\n        var settings = windowWidth - drawerWidth;\r\n        settings = ((windowWidth < 600) ? settings : settings / 1.5);\r\n        settings = settings / boardWidth;\r\n        this.setState({\r\n            squareSize: settings,\r\n        });\r\n    };\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                this.setState({\r\n                    highscores: JSON.parse(res.data.highscores),\r\n                });\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            var IntervalId = setInterval(this.updateHighscores, 2000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.userInfo !== null) {\r\n            username = window.userInfo.username\r\n        }\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.ColoredLineDirections.length === 0) {\r\n            this.setState({\r\n                ColoredLineDirections: [LEFT,RIGHT,UP,DOWN],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                ColoredLineDirections: [],\r\n            });\r\n        }\r\n    };\r\n\r\n    toggleBuildMode = () => {\r\n        if (this.state.buildMode) {\r\n            this.setState({\r\n                buildMode: false,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n                buildMode: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length, name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushFinishedModal = event => {\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: false\r\n        });\r\n\r\n    }\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent, 'blank');\r\n        var squareSize = setDefaultSquareSize(width);\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n            squareSize: squareSize,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n\r\n    puzzleRushTimeUp = () => {\r\n        var totalMovesDiff = 0;\r\n        this.state.solutiondifference.map(numMoves => {\r\n            totalMovesDiff += numMoves;\r\n        });\r\n        var averageTime = parseInt(300 / (this.state.numPuzzleon))\r\n        var totalMoves = 0;\r\n        this.state.totalMovesList.map(numMoves => {\r\n            totalMoves += numMoves\r\n        });\r\n        var avgMoves = parseInt(totalMoves / (this.state.numPuzzleon))\r\n        var movesPerSecond = totalMoves / 300;\r\n\r\n        axios.post('/puzzlerushend', {p_id: this.state.p_id,totalMoves: totalMoves,differenceFrom: totalMovesDiff})\r\n            .then( res => {\r\n                console.log(res.data);\r\n            });\r\n\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: true,\r\n            numPuzzlesCompleted: this.state.numPuzzleon,\r\n            percentile: 'TBD%',\r\n            averageTime: averageTime + 's',\r\n            averageMoves: avgMoves,\r\n            differenceOptimal: totalMovesDiff,\r\n            movesPerSecond: movesPerSecond\r\n        });\r\n    }\r\n\r\n    checkwin = (robotPosition) => {\r\n        if (robotPosition.top === this.state.goal.top && robotPosition.left === this.state.goal.left) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No' && this.props.puzzleRush !== 'Yes') {\r\n                var username = '';\r\n                if (window.userInfo !== null) {\r\n                    username = window.userInfo.username\r\n                }\r\n                return  (<YouWinModal\r\n                    show={this.state.gameWon}\r\n                    numMoves={this.state.moveHistory.length}\r\n                    submitAnswer={this.submitAnswer}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                    username={username}\r\n                />);\r\n            }\r\n            else if (this.props.puzzleRush === 'Yes'){\r\n                axios.post('/puzzlerushsubmit', {p_id: this.state.p_id,g_id:this.state.games[this.state.numPuzzleon].g_id, moveHistory: this.state.moveHistory})\r\n                    .then( res => {\r\n                        console.log(res.data);\r\n                    });\r\n                var totalMoves = this.state.moveHistory.slice().length\r\n                var totalMovesList = this.state.totalMovesList\r\n                totalMovesList.push(totalMoves)\r\n                var solutionmoves = totalMoves - this.state.games[this.state.numPuzzleon].g_moves\r\n                var solutiondifference = this.state.solutiondifference\r\n                solutiondifference.push(solutionmoves)\r\n                var puzzledata = JSON.parse(this.state.games[this.state.numPuzzleon + 1].g_puzzledata)\r\n                if (this.state.numPuzzleon + 3 > this.state.games.length) {\r\n                    axios.get('/puzzlerushgetmore?p_id=' + this.props.p_id + '&difficulty=' + this.props.difficulty)\r\n                        .then( res => {\r\n                                var games = JSON.parse(res.data.games);\r\n                                console.log(games)\r\n                                var stategames = this.state.games\r\n                                var newarray = stategames.concat(games)\r\n                                this.setState({\r\n                                    games: newarray\r\n                                });\r\n                        });\r\n                }\r\n                this.setState(\r\n                    extend(puzzledata,{numPuzzleon: this.state.numPuzzleon + 1, playerState: puzzledata.playerStart.slice(), gameWon: false, solutiondifference: solutiondifference, totalMovesList: totalMovesList})\r\n                );\r\n\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false) {\r\n            var oldPositon = {left: this.state.playerState[this.state.robotSelected].left, top: this.state.playerState[this.state.robotSelected].top};\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left) && !this.state.buildMode) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier,\r\n                    prevPosition: oldPositon\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n            this.checkwin(newPosition);\r\n        }\r\n    };\r\n\r\n    handleLearnClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].puzzledata);\r\n        var squareSize = setDefaultSquareSize(puzzledata.width);\r\n        this.setState(\r\n            extend(puzzledata,{squareSize: squareSize, numPuzzleon: index, moveHistory: [], gameWon: false, playerState: puzzledata.playerStart.slice(),tipsText: [this.props.games[index].description]})\r\n        );\r\n    }\r\n\r\n\r\n    loadSidebar = () => {\r\n        if (this.props.learnMode == 'Yes') {\r\n            return (\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\">\r\n                        {\r\n                            this.state.games.map((game,index) =>\r\n                                    <LearnGameItems selected={this.state.numPuzzleon} game={game} index={index} handleLearnClickGame={this.handleLearnClickGame}/>\r\n                            )\r\n                        }\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.state.createMode === 'Yes') {\r\n            return null\r\n        }\r\n        else {\r\n            return(\r\n            <div style={{display: 'grid'}}>\r\n                <Typography\r\n                    color=\"secondary\"\r\n                    display=\"block\"\r\n                    variant={\"h4\"}\r\n\r\n                >\r\n                    {this.props.name}\r\n                </Typography>\r\n                <br/>\r\n                <HighScores highscores={this.state.highscores}/>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    handlePlayerMovementFromMouse = (posObj) => {\r\n        var newDirection;\r\n        var robot = this.state.playerState[this.state.robotSelected];\r\n        if (posObj.top === robot.top && posObj.left < robot.left)\r\n            newDirection = { top: 0, left: -(this.state.squareSize), dir: LEFT};\r\n        else if (posObj.top === robot.top && posObj.left > robot.left)\r\n            newDirection = { top: 0, left: this.state.squareSize, dir: RIGHT};\r\n        else if (posObj.top < robot.top && posObj.left === robot.left)\r\n            newDirection = { top: -(this.state.squareSize), left: 0, dir: UP};\r\n        else if (posObj.top > robot.top && posObj.left === robot.left)\r\n            newDirection = { top: this.state.squareSize, left: 0, dir: DOWN};\r\n        else newDirection = { top: 0, left: 0, dir: undefined};\r\n        this.handlePlayerMovement(newDirection)\r\n    };\r\n\r\n    handleUndoMove = () => {\r\n        var moveHistory = this.state.moveHistory;\r\n        var playerState = this.state.playerState;\r\n        if (this.state.gameWon === false && moveHistory.length !== 0) {\r\n            var moveObj = moveHistory.pop();\r\n            playerState[moveObj.robot].left = moveObj.prevPosition.left;\r\n            playerState[moveObj.robot].top = moveObj.prevPosition.top;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory\r\n            });\r\n        }\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes' && this.state.buildMode) {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                console.log('clicking horizontal wall');\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onStopDragHandlerGoal = (position) => {\r\n        this.setState({\r\n            goal: {top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize)},\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n        })\r\n    };\r\n\r\n\r\n    onStopDragHandler = (position,index) => {\r\n        var playerState = this.state.playerState.slice();\r\n        var lastX = position.lastX / this.state.squareSize;\r\n        var lastY = position.lastY / this.state.squareSize;\r\n        playerState[index].top = Math.round(lastY);\r\n        playerState[index].left = Math.round(lastX);\r\n        this.setState({\r\n            playerStart: playerState.slice(),\r\n            playerState: playerState,\r\n            moveHistory: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        puzzleRushTimeUp={this.puzzleRushTimeUp}\r\n                        isPuzzleRush={this.props.puzzleRush}\r\n                        numPuzzleRush={this.state.numPuzzleon}\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                        toggleLineIndicators = {this.toggleLineIndicators}\r\n                        toggleBuildMode = {this.toggleBuildMode}\r\n                        undoMove = {this.handleUndoMove}\r\n                        buildMode = {this.state.buildMode}\r\n                        squareSizeValue = {parseInt((this.state.squareSize/4))}\r\n                    />\r\n                    <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8}>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                        handlePlayerMovementFromMouse={this.handlePlayerMovementFromMouse}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal\r\n                            dimension={this.state.squareSize}\r\n                            position={this.state.goal}\r\n                            onStopDragHandler={this.onStopDragHandlerGoal}\r\n                            draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                            isCreateMode={this.state.createMode}\r\n                            buildMode={this.state.buildMode}\r\n                        />\r\n                        {\r\n                            this.state.ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={LINE_INDICATOR_COLOR}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    onStopDragHandler={this.onStopDragHandler}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                />\r\n                            )\r\n                        }\r\n\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n\r\n                        }\r\n                    </Board>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DescriptionList\r\n                        tipsText={this.state.tipsText}\r\n                    />\r\n                    {this.loadSidebar()}\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                {\r\n                    this.state.playerState.map(position =>\r\n                        this.checkwin(position))\r\n                }\r\n                <PuzzleRushWinModal\r\n                    show={this.state.showPuzzleRushFinishedModal}\r\n                    closeModal={this.closePuzzleRushFinishedModal}\r\n                    numPuzzlesCompleted={this.state.numPuzzlesCompleted}\r\n                    percentile={this.state.puzzleRushPercentileCompleted}\r\n                    averageTime={this.state.averageTime}\r\n                    averageMoves={this.state.averageMoves}\r\n                    differenceOptimal={this.state.differenceOptimal}\r\n                    movesPerSecond={this.state.movesPerSecond}\r\n                    difficulty={this.props.difficulty}\r\n                />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  baseExpansion: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  darkmode: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      marginTop: '150px',\r\n  },\r\n  iconcards: {\r\n    maxWidth: 345,\r\n    minWidth: 250,\r\n  },\r\n  createboardcard: {\r\n    ':hover': {\r\n        content: '/static/images/CreateBoardCardIconPlaced.png',\r\n    }\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {Card, CardContent, CardHeader, CardActions} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        maxWidth: 360,\r\n        height: 180\r\n    },\r\n\r\n    item: {\r\n        padding: 0\r\n    },\r\n\r\n    upperPadding: {\r\n        paddingTop: 3\r\n    },\r\n\r\n    lowerPadding: {\r\n        paddingBottom: 3\r\n    },\r\n\r\n    rightSideText: {\r\n        textAlign: \"right\",\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    },\r\n\r\n    leftSideText: {\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(ComplexGrid)\r\n\r\nfunction ComplexGrid(props) {\r\n    const { classes } = props;\r\n    const handleClick = () => {\r\n        props.handleGameClick(props.game.name, props.game.puzzledata,props.highscores,props.game.uri);\r\n    };\r\n\r\n    var numberOfHighScores = 0;\r\n\r\n    const highscorestyle = highscore => {\r\n        if (numberOfHighScores === 5) return \"\";\r\n        numberOfHighScores++;\r\n        return (\r\n            <ListItem disableGutters={true} classes={{ root: classes.item }}>\r\n                <ListItemText primary={trimName(highscore.comment)} classes={{ root: classes.leftSideText }} />\r\n                <ListItemText secondary={highscore.numMoves} classes={{ root: classes.rightSideText }} />\r\n            </ListItem>\r\n        )\r\n    };\r\n\r\n    const contentDivStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        };\r\n\r\n    };\r\n\r\n    const trimName = name => {\r\n        if (name.length > 10)\r\n            name = name.substring(0, 10) + \"...\";\r\n        return name\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid item xs={12} sm={3}>\r\n            <Card variant=\"outlined\" className={classes.root}>\r\n                <CardContent>\r\n                    <div style={contentDivStyle()}>\r\n                        <div style={{width: '125px'}}>\r\n                            <Typography variant=\"h5\" classes={{ root: classes.lowerPadding }}>\r\n                                {trimName(props.game.name)}\r\n                            </Typography>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    By: {trimName(props.game.authorname)}\r\n                                </Typography>\r\n                                <Typography>\r\n                                    {props.game.created}\r\n                                </Typography>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Plays: {props.highscores.length}\r\n                                </Typography>\r\n                            </div>\r\n                            <br/>\r\n                            <Button onClick={handleClick} classes={{ root: classes.upperPadding }} variant=\"contained\" color=\"primary\">Play</Button>\r\n                        </div>\r\n                        <Divider orientation=\"vertical\" flexItem />\r\n                        <div style={{width: '125px'}}>\r\n                            <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                Top Scores\r\n                            </Typography>\r\n                            <List>\r\n                                {\r\n                                    props.highscores.map(highscore =>\r\n                                        highscorestyle(highscore)\r\n                                    )\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios';\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = window.gameslist;\r\n        var highscoreslist = window.highscoreslist;\r\n        console.log(gameslist)\r\n        console.log(highscoreslist)\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n        }\r\n    }\r\n\r\n    handleGameClick = (name,gamedata,highscores,uri) => {\r\n        console.log(uri);\r\n        this.props.handleGameClick(name,gamedata,highscores,uri);\r\n    };\r\n\r\n    handleSearchSubmit = event => {\r\n        event.preventDefault();\r\n        var searchTerm = document.getElementById(\"searchBarFindGame\").value;\r\n        axios.post('/search', {search: searchTerm})\r\n            .then( res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div id={'GameMain'}>\r\n                <Grid container alignItems={\"stretch\"} spacing={2}>\r\n                    {\r\n                        this.state.gameslist.map((game,index)=>\r\n                            <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n//<SearchBarFindGame submitSearch={this.handleSearchSubmit}/>\r\nexport default FindGame;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame={'Yes'}\r\n                  name={this.props.name}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n\r\n    return (<div className={classes.grid}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={6} spacing={3} alignItems=\"center\" justify=\"center\" wrap=\"nowrap\">\r\n                    <Typography variant=\"h3\"> Welcome To RobotsEvolved\r\n                    </Typography>\r\n                    <Typography> Create your own Robots Boards and challenge others to solve them, or play puzzle rush and get better.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={6} spacing={3}>\r\n                    <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/uoJ0OxQxiGA\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                </Grid>\r\n                <Grid container xs={12} spacing={4} justify={'center'}>\r\n                    <Grid item xs={2}>\r\n                        <Card className={classes.iconcards}>\r\n                          <CardActionArea onClick={props.handleClickCreateGame}>\r\n                            <CardMedia\r\n                              className={classes.createboardcard}\r\n                              component=\"img\"\r\n                              alt=\"Create Board\"\r\n                              height=\"140\"\r\n                              image=\"/static/images/CreateBoardCardIcon.png\"\r\n                              title=\"Create Board\"\r\n                            />\r\n                            <CardContent>\r\n                              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                Create Board\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Create a Board to have others to solve, its easy! Try it out!\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                          <CardActions>\r\n                            <Button size=\"small\" color=\"primary\">\r\n                              Learn More\r\n                            </Button>\r\n                          </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Card className={classes.iconcards}>\r\n                          <CardActionArea onClick={props.handleClickLearnGame}>\r\n                            <CardMedia\r\n                              component=\"img\"\r\n                              alt=\"Create Board\"\r\n                              height=\"140\"\r\n                              image=\"/static/images/CreateBoardCardIcon.png\"\r\n                              title=\"Learn\"\r\n                            />\r\n                            <CardContent>\r\n                              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                Learn\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Get the basics all the way to advanced tutorials.\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                          <CardActions>\r\n                          </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Card className={classes.iconcards}>\r\n                          <CardActionArea>\r\n                            <CardMedia\r\n                              component=\"img\"\r\n                              alt=\"Play a Random Game\"\r\n                              height=\"140\"\r\n                              image=\"/static/images/puzzle.png\"\r\n                              title=\"Play a Random Game\"\r\n                            />\r\n                            <CardContent>\r\n                              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                Play a Random Game\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Play a Random Game that was generated and see if you can get the lowest possible solution\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                          <CardActions>\r\n                            <Button size=\"small\" color=\"primary\">\r\n                              Learn More\r\n                            </Button>\r\n                          </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                     <Grid item xs={2}>\r\n                        <Card className={classes.iconcards}>\r\n                          <CardActionArea onClick={props.handleClickFindGame}>\r\n                            <CardMedia\r\n                              component=\"img\"\r\n                              alt=\"Find a Game\"\r\n                              height=\"140\"\r\n                              image=\"/static/images/FindAGameCardIcon.png\"\r\n                              title=\"Find a Game\"\r\n                            />\r\n                            <CardContent>\r\n                              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                Find a Game\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Find a Game that has been created by another person!\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <Card className={classes.iconcards}>\r\n                          <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                            <CardMedia\r\n                              component=\"img\"\r\n                              alt=\"Contemplative Reptile\"\r\n                              height=\"140\"\r\n                              image=\"/static/images/PuzzleRushIcon.png\"\r\n                              title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent>\r\n                              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                Puzzle Rush\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Puzzle Rush is a variant where you are given 5 minutes to solve as many random puzzles as you can.\r\n                                You are scored based on the number of puzzles completed as well as the difference from the lowest possible solution, Click Learn More for scoring details\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                          <CardActions>\r\n                            <Button size=\"small\" color=\"primary\">\r\n                              Learn More\r\n                            </Button>\r\n                          </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeLoginModal}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>Login to Robits</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <img onClick={this.loginGoogle} src={\"/static/images/btn_google_signin_light_normal_web@2x.png\"}></img>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeLoginModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '40px',\r\n        width: '40px',\r\n        marginTop: '5px',\r\n    };\r\n};\r\n\r\nconst divStyle = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        width: '200px',\r\n    };\r\n};\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return null\r\n        }\r\n        else {\r\n            return (\r\n                <div style={divStyle()}>\r\n                    <div>{window.userInfo.username}</div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <Button color=\"primary\" onClick={this.handleClick}>{textToShow}</Button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                            <Grid\r\n                                container xs={12}\r\n                                spacing={4}\r\n                                direction=\"column\"\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n                                wrap=\"nowrap\"\r\n                            >\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.props.handleClickEasyPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                        Easy\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.props.handleClickMediumPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                        Medium\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.props.handleClickHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                        Hard\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.props.handleClickExHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                        Exteremely Hard\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageCreatedGamesDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.game.name,props.game.puzzledata,[],props.game.uri);\r\n    }\r\n\r\n    return (<div>\r\n              <Typography>\r\n                {props.game.name}\r\n              </Typography>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageSolutionDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.solution.name,props.solution.puzzledata,[],props.solution.uri);\r\n    }\r\n    return (<div>\r\n              <Typography>\r\n                {props.solution.HSname}\r\n              </Typography>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport Button from '@material-ui/core/Button';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useStyles from '../Material-UI/themes';\r\nimport ProfilePageCreatedGamesDetails from '../components/ProfilePageComponents/ProfilePageCreatedGamesDetails';\r\nimport ProfilePageSolutionDetails from '../components/ProfilePageComponents/ProfilePageSolutionDetails';\r\n\r\n\r\n\r\nexport default function ProfilePage(props) {\r\n    const classes = useStyles();\r\n    const [expandedGame, setExpandedGame] = React.useState(false);\r\n    const [expandedHighscores, setExpandedHighscores] = React.useState(false);\r\n    const [expandedPuzzleRush, setExpandedPuzzleRush] = React.useState(false);\r\n    const handleChangeGame = (panel) => (event, isExpandedGame) => {\r\n        setExpandedGame(isExpandedGame ? panel : false);\r\n    };\r\n    const handleChangeHighscores = (panel) => (event, isExpandedHighScores) => {\r\n        setExpandedHighscores(isExpandedHighScores ? panel : false);\r\n    };\r\n    const handleChangePuzzleRush = (panel) => (event, isExpandedPuzzleRush) => {\r\n        setExpandedPuzzleRush(isExpandedPuzzleRush ? panel : false);\r\n    };\r\n    return (\r\n            <div id={'GameMain'} className={classes.root}>\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item xs={4}>\r\n                        <Typography variant=\"h3\">Games Created</Typography>\r\n                        {\r\n                            props.gamesview.map((game,index) =>\r\n                                    <ExpansionPanel expanded={expandedGame === 'panelgame' + index} onChange={handleChangeGame('panelgame' + index)}>\r\n                                        <ExpansionPanelSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls={\"panel\" + index + \"-content\"}\r\n                                          id={\"panel\" + index + \"-header\"}\r\n                                        >\r\n                                          <Typography className={classes.heading}>{game.name}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>SomeStuffHere</Typography>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                          <ProfilePageCreatedGamesDetails\r\n                                            game={game}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                          />\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography variant=\"h3\">Games Solved</Typography>\r\n                        {\r\n                            props.solutionsview.map((solution,index) =>\r\n                                <ExpansionPanel expanded={expandedHighscores === 'panelhigh' + index} onChange={handleChangeHighscores('panelhigh' + index)}>\r\n                                    <ExpansionPanelSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls={\"panel\" + index + \"-content\"}\r\n                                      id={\"panel\" + index + \"-header\"}\r\n                                    >\r\n                                      <Typography className={classes.heading}>{solution.HSname}</Typography>\r\n                                      <Typography className={classes.secondaryHeading}>Score: {solution.highscore}</Typography>\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <ProfilePageSolutionDetails\r\n                                            solution={solution}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                        />\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography variant=\"h3\">Puzzle Rush Data:</Typography>\r\n                        <ExpansionPanel expanded={expandedPuzzleRush === 'panel9'} onChange={handleChangePuzzleRush('panel9')}>\r\n                            <ExpansionPanelSummary\r\n                              expandIcon={<ExpandMoreIcon />}\r\n                              aria-controls=\"panel9bh-content\"\r\n                              id=\"panel9bh-header\"\r\n                            >\r\n                              <Typography className={classes.heading}>COMING SOON</Typography>\r\n                              <Typography className={classes.secondaryHeading}>COMING SOON</Typography>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                              <Typography>\r\n                                Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget\r\n                                maximus est, id dignissim quam.\r\n                              </Typography>\r\n                            </ExpansionPanelDetails>\r\n                          </ExpansionPanel>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PuzzleRush from './Pages/PuzzleRush';\r\nimport clsx from 'clsx';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport Home from './Pages/Home';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\nimport axios from 'axios';\r\nimport Game from './containers/Game';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"./constants/constants\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport PuzzleRushDifficultyModal from \"./containers/Modals/PuzzleRushDifficultyModal\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    drawerHeaderRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerHeaderLeft: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    dividerFullWidth: {\r\n        margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    darkmode: {\r\n          body: '#363537',\r\n          text: '#FAFAFA',\r\n          toggleBorder: '#6B8096',\r\n          gradient: 'linear-gradient(#091236, #1E215D)',\r\n    },\r\n});\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (window.uri === '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>, //default page for website\r\n            };\r\n        }\r\n        else {\r\n            this.state = {\r\n                PageSelected: <PlayGame name={window.token.name} gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri}/>, //when uri is entered to play specific game\r\n            };\r\n        }\r\n        this.state.open = true;\r\n        this.state.mobileAnchorEl = null;\r\n        this.state.mobileMenuOpen = false;\r\n        this.state.showLoginModal = false;\r\n        this.state.showPuzzleRushModal = false;\r\n\r\n        if (window.loggedin === 'Yes') {\r\n            this.state.gamesview = window.gamesview;\r\n            this.state.solutionsview = window.solutionsview;\r\n            this.state.puzzlerushview = window.puzzlerushview;\r\n        }\r\n    }\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState( {\r\n            open: false\r\n        })\r\n    };\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState( {\r\n            open: true\r\n        })\r\n    };\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type === 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    };\r\n\r\n    handleClickPuzzleRush = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: true,\r\n        });\r\n    };\r\n\r\n    handleClickEasyPuzzleRush = event => {\r\n        axios.post('/puzzlerush', {difficulty: 'easy', action: 'start'})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            showPuzzleRushModal: false,\r\n                            PageSelected: <Game puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={'easy'}/>\r\n                        });\r\n                    //this.props.history.push('/play/' + res.data.uri)\r\n                });\r\n    };\r\n\r\n     handleClickMediumPuzzleRush = event => {\r\n        axios.post('/puzzlerush', {difficulty: 'medium', action: 'start'})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            showPuzzleRushModal: false,\r\n                            PageSelected: <Game puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={'medium'}/>\r\n                        });\r\n                    //this.props.history.push('/play/' + res.data.uri)\r\n                });\r\n    };\r\n\r\n     handleClickHardPuzzleRush = event => {\r\n        axios.post('/puzzlerush', {difficulty: 'hard', action: 'start'})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            showPuzzleRushModal: false,\r\n                            PageSelected: <Game puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={'hard'}/>\r\n                        });\r\n                    //this.props.history.push('/play/' + res.data.uri)\r\n                });\r\n    };\r\n\r\n     handleClickExHardPuzzleRush = event => {\r\n        axios.post('/puzzlerush', {difficulty: 'exteremely hard', action: 'start'})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            showPuzzleRushModal: false,\r\n                            PageSelected: <Game puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={'exteremely hard'}/>\r\n                        });\r\n                    //this.props.history.push('/play/' + res.data.uri)\r\n                });\r\n    };\r\n\r\n     handleClickGodlyPuzzleRush = event => {\r\n        axios.post('/puzzlerush', {difficulty: 'godly', action: 'start'})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            showPuzzleRushModal: false,\r\n                            PageSelected: <Game puzzleRush={'Yes'} games={games} p_id={p_id}/>\r\n                        });\r\n                    //this.props.history.push('/play/' + res.data.uri)\r\n                });\r\n    };\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: false\r\n        });\r\n    }\r\n\r\n    handleGameClick = (name, gamedata,highscores,uri) => {\r\n        this.setState({\r\n            PageSelected: <PlayGame name={name} highscores={highscores} gamedata={gamedata} uri={uri}/>\r\n        });\r\n    };\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var newGame = <CreateGame state={\"new\"}/>; //KNOWN bug where if you create a game you have to refresh the page to cause a re-render of <CreateGame/>\r\n\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: newGame, //if selected page is already CreateGame it wont refresh known problem\r\n            open: isOpen\r\n        });\r\n    };\r\n\r\n\r\n    handleClickProfile = event => {\r\n        event.preventDefault();\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        if (window.loggedin === 'Yes') {\r\n            this.setState({\r\n                PageSelected: <ProfilePage handleClickPlayGame={this.handleGameClick} gamesview={this.state.gamesview} solutionsview={this.state.solutionsview} puzzlerushview={this.state.puzzlerushview}/>,\r\n                open: isOpen\r\n            });\r\n        }\r\n        else {\r\n            this.SignInButtonPressed('Sign in');\r\n        }\r\n    };\r\n\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <FindGame handleGameClick={this.handleGameClick}/>,\r\n            open: isOpen\r\n        });\r\n    };\r\n\r\n    handleClickLearnGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        console.log(window.learngameslist);\r\n        this.setState({\r\n            PageSelected: <Game learnMode={'Yes'} games={window.learngameslist}/>,\r\n            open: isOpen\r\n        });\r\n\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileAnchorEl: null,\r\n            mobileMenuOpen: false\r\n        });\r\n    };\r\n\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({\r\n            mobileAnchorEl: event.currentTarget,\r\n            mobileMenuOpen: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const theme = createMuiTheme({\r\n            palette: {\r\n                primary: teal,\r\n                secondary: {\r\n                    main: '#e65100',\r\n                },\r\n            }\r\n        });\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <AppBar\r\n                        position=\"fixed\"\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: this.state.open,\r\n                        })}\r\n                     >\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={this.handleDrawerOpen}\r\n                                edge=\"start\"\r\n                                className={clsx(classes.menuButton, this.state.open && classes.hide)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" className={classes.title} noWrap>\r\n                                <a href=\"/\" style={{color: 'white'}}>RobotsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </Typography>\r\n                            <div className={classes.grow} />\r\n                            <div className={classes.sectionDesktop}>\r\n                                <LoggedInUser/>\r\n                                <IconButton aria-label=\"show 2 new notifications\" color=\"inherit\">\r\n                                    <Badge badgeContent={2} color=\"secondary\">\r\n                                        <NotificationsIcon />\r\n                                    </Badge>\r\n                                </IconButton>\r\n                            </div>\r\n                            <div className={classes.sectionMobile}>\r\n                                <IconButton\r\n                                    aria-label=\"show more\"\r\n                                    aria-controls={\"primary-search-account-menu-mobile\"}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.handleMobileMenuOpen}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <MoreIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Menu\r\n                        anchorEl={this.state.mobileAnchorEl}\r\n                        anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        id={\"primary-search-account-menu-mobile\"}\r\n                        keepMounted\r\n                        transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        open={this.state.mobileMenuOpen}\r\n                        onClose={this.handleMobileMenuClose}\r\n                    >\r\n                        <MenuItem>\r\n                            <LoggedInUser/>\r\n                        </MenuItem>\r\n                        <MenuItem>\r\n                            <p>Notifications</p>\r\n                            <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                                <Badge badgeContent={11} color=\"secondary\">\r\n                                    <NotificationsIcon/>\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                    <Drawer\r\n                        id=\"MainDrawer\"\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.state.open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div className={classes.drawerHeader}>\r\n                            <div className={classes.drawerHeaderLeft}>\r\n                                <SignInButton onClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.drawerHeaderRight}>\r\n                                <IconButton onClick={this.handleDrawerClose}>\r\n                                    {useTheme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Play\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Create a Game'} onClick={this.handleClickCreateGame}>\r\n                                <ListItemIcon><PlayArrowIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Create a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Find a Game'} onClick={this.handleClickFindGame}>\r\n                                <ListItemIcon><SearchIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Find a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Puzzle Rush'} onClick={this.handleClickPuzzleRush}>\r\n                                <ListItemIcon><ExtensionIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Puzzle Rush'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Learn\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Lessons'} onClick={this.handleClickLearnGame}>\r\n                                <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Lessons'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Starter Puzzles'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Starter Puzzles'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Community\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Profile'} onClick={this.handleClickProfile}>\r\n                                <ListItemIcon><AccountBoxIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Profile'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Teams'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Teams'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Forum'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Forum'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Tools\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Robits Solver'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Robits Solver'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Settings'}>\r\n                                <ListItemIcon><SettingsIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Settings'} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n                    <main className={clsx(classes.content, {\r\n                        [classes.contentShift]: this.state.open,\r\n                    })}>\r\n                        <div className={classes.drawerHeader} />\r\n                        {this.state.PageSelected}\r\n                    </main>\r\n                    <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n                    <PuzzleRushDifficultyModal\r\n                        closeModal={this.closePuzzleRushLoginModal}\r\n                        show={this.state.showPuzzleRushModal}\r\n                        handleClickEasyPuzzleRush={this.handleClickEasyPuzzleRush}\r\n                        handleClickMediumPuzzleRush={this.handleClickMediumPuzzleRush}\r\n                        handleClickHardPuzzleRush={this.handleClickHardPuzzleRush}\r\n                        handleClickExHardPuzzleRush={this.handleClickExHardPuzzleRush}\r\n                    />\r\n                </div>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}