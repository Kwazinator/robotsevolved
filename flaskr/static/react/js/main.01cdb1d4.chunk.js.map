{"version":3,"sources":["components/LearnGameItems.js","constants/constants.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinModal.jsx","components/YouWinDailySingleModal.js","components/YouWinDailyFinalModal.js","components/AddPuzzleModal.jsx","components/ToggleSettings.js","components/Timer.js","containers/DisplayView.js","components/HighScores.jsx","components/DailyChallengeScores.jsx","containers/Modals/PuzzleRushFinishedModal.js","containers/Modals/RandomGameStatsModal.jsx","components/DescriptionList.jsx","components/YouWinLessonModal.js","components/boardgenerator.js","containers/Modals/BoardResetModal.js","containers/Game.js","Pages/CreateGame.js","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","Material-UI/themes.jsx","Pages/Home.js","containers/Modals/LoginModal.js","components/LoggedInUser.js","components/SignInButton.js","containers/Modals/PuzzleRushDifficultyModal.js","containers/Modals/RandomGameDifficultyModal.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","components/ProfilePageComponents/ProfilePageCreatedGamesDetails.js","components/ProfilePageComponents/ProfilePageSolutionDetails.js","Pages/ProfilePage.js","Pages/RandomGamePage.js","Pages/PuzzleRushPage.js","Pages/LessonsPage.js","Pages/DailyChallenge.js","Pages/AboutUs.js","App.js","serviceWorker.js","index.js"],"names":["LearnGameItems","props","handleClick","handleClickGame","index","selected","Button","variant","color","onClick","name","UP","LEFT","DIRECTION_MAP_IMAGES","yellow","DOWN","RIGHT","red","green","blue","MovesView","style","width","float","display","this","moveHistory","length","map","move","src","playerState","robot","colorSignifier","dir","React","Component","styleoutside","dimension","position","dim","height","backgroundColor","top","left","styleinside","styleinside2","Square","handlePlayerMovementFromMouse","border","margin","overflow","children","id","transition","styleoutsidedraggable","selectedColor","undefined","borderStyle","borderColor","borderRadius","Robot","handleKeyDown","e","newDirection","keyCode","tabSelector","resetPuzzle","handlePlayerMovement","onStopDragHandler","handleCreateMode","isCreateMode","buildMode","x","y","grid","draggableGrid","onStop","bounds","window","onkeydown","orientation","opacity","wallThickness","wallOffset","Wall","userSelect","styledragable","Goal","endPosition","obj","key","hasOwnProperty","YouWinModal","Dialog","onClose","handleClose","container","document","getElementById","BackdropProps","aria-labelledby","open","show","maxWidth","DialogTitle","DialogContent","dividers","numMoves","TextField","label","defaultValue","username","DialogActions","submitAnswer","YouWinDailySingleModal","undoMove","moveNextPuzzle","YouWinDailyFinalModal","handleClickSubmitGame","robotPosition","AddPuzzleModal","submitPuzzle","ToggleSettings","event","FormControlLabel","value","control","Switch","onChange","Timer","state","minutes","seconds","timer","myInterval","setInterval","setState","puzzleRushTimeUp","clearInterval","valuetext","DisplayView","createMode","fullWidth","handleCreateBoardClick","checked","toggleBuildMode","createBoardPressed","copyToClipboard","dummy","createElement","body","appendChild","location","host","uri","select","execCommand","removeChild","copiedClipboard","thisThing","copyButtonText","setTimeout","handleDimensionChange","getElementsByClassName","blur","parseInt","toString","DimensionChanged","puzzleRush","isPuzzleRush","Typography","gutterBottom","numPuzzleRush","marginRight","marginTop","marginBottom","paddingBottom","Divider","ButtonGroup","aria-label","toggleLineIndicators","Slider","onChangeCommitted","getAriaValueText","step","marks","min","max","squareSizeValue","valueLabelDisplay","highscores","marginleft","highscore","comment","highscorestyle","Grid","item","xs","Paper","elevation","spacing","wins","i","crowns","push","CrownCounter","user_id","score","submitted","direction","PuzzleRushWinModal","difficulty","md","List","dense","ListItem","ListItemText","primary","secondary","numPuzzlesCompleted","percentile","averageTime","averageMoves","differenceOptimal","movesPerSecond","playPuzzleRushAgain","closeModal","RandomGameStatsModal","showStatsModal","handleShowRandomAnswers","answers","lowestMoveSequence","lowestMoves","Descriptionlist","tipsText","text","ListItemAvatar","Avatar","ListItemSecondaryAction","IconButton","edge","YouWinLessonModal","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","type","boardState","wallVerticle","wallHorizontal","goal","randompos1","randompos2","randompos3","randompos4","randomPositions","extend","j","gameWon","playerStart","slice","BoardResetModal","createBoardHandler","preventDefault","percent","createBoard","textAlign","paddingRight","Input","inputProps","title","placeholder","addEventListener","indexOf","setDefaultSquareSize","boardWidth","drawerWidth","getComputedStyle","windowWidth","innerWidth","settings","Game","squareSize","updateHighscores","axios","get","then","res","JSON","parse","data","copiedToClipboard","updateDailyHighscores","dc_id","componentDidMount","loadedGame","IntervalId","dailyChallengeMode","componentWillUnmount","robotSelect","robotSelected","namesubmit","userInfo","post","puzzledata","authorname","history","ColoredLineDirections","showBoardResetPanelModal","closeRandomStatsModal","closeCreateBoardModal","closePuzzleRushFinishedModal","showPuzzleRushFinishedModal","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","totalMovesDiff","solutiondifference","numPuzzleon","totalMoves","totalMovesList","avgMoves","p_id","differenceFrom","console","log","submitDailyAnswer","LastRobotPosition","moveHistoryList","playerStateList","solutiondata","handleUndoMove","checkwin","randomGame","Won","gamesWonDaily","games","handleDailyClickGame","learnMode","g_id","solutionmoves","g_moves","g_puzzledata","newarray","concat","oldPositon","prevPosition","handleLearnClickGame","description","loadSidebar","game","DailyChallengeScores","HighScores","posObj","moveObj","pop","createModeWallClick","indexToChange","newWallHorizontal","wallH","newWallVerticle","wallV","onStopDragHandlerGoal","round","lastY","lastX","goals","gamedata","savedMoves","moves","images","charAt","formatGeneratedMoveSequence","g_solutiondata","g_difficulty","settingsWidth","settingsHeight","percentWall","settingsPercent","padding","alignItems","sm","Board","square","ColoredLineDirection","ColoredLine","player","puzzleRushPercentileCompleted","withRouter","CreateGame","withStyles","theme","root","upperPadding","paddingTop","lowerPadding","rightSideText","leftSideText","classes","numberOfHighScores","trimName","substring","Card","className","CardContent","justifyContent","Tooltip","created","handleGameClick","flexItem","disableGutters","FindGame","handleFilterMenuOpen","anchorEl","currentTarget","handleCloseFilterMenu","handleSearchSubmit","searchTerm","searchRef","search","offset","highscoreslist","gameslist","component","InputBase","input","inputRef","ref","onKeyPress","iconButton","divider","startIcon","Menu","keepMounted","Boolean","MenuItem","FindGameElements","marginLeft","flex","PlayGame","useStyles","makeStyles","flexGrow","griditems","paper","Width","image","img","maxHeight","baseExpansion","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","darkmode","iconcards","minWidth","marginBotton","createboardcard","content","demo","background","ComplexGrid","justify","frameborder","allow","allowfullscreen","CardActionArea","handleClickCreateGame","CardMedia","alt","CardActions","size","handleClickFindGame","handleClickRandomGame","handleClickLearnGame","handleClickDailyChallenge","handleClickPuzzleRush","LoginModal","loginGoogle","href","closeLoginModal","LoggedInUser","loggedin","class","profilePicture","SignInButton","textToShow","PuzzleRushDifficultyModal","handleClickPuzzleRushModal","action","isLoading","handleClickEasyPuzzleRush","handleClickMediumPuzzleRush","handleClickHardPuzzleRush","handleClickExHardPuzzleRush","wrap","CircularProgress","handleClickRandomGameModal","handleClickEasy","handleClickMedium","handleClickHard","handleClickExHard","ProfilePageCreatedGamesDetails","handleClickPlayGame","ProfilePageSolutionDetails","solution","ProfilePage","panel","useState","expandedGame","setExpandedGame","expandedHighscores","setExpandedHighscores","expandedPuzzleRush","setExpandedPuzzleRush","gamesview","ExpansionPanel","expanded","isExpandedGame","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","solutionsview","isExpandedHighScores","isExpandedPuzzleRush","RandomGamePage","PuzzleRushPage","LessonsPage","learngameslist","DailyChallengePage","dailyChallengeGameslist","dchighscores","AboutUs","App","handleDrawerClose","isOpen","dc_movesList","stringify","dc_playerList","PageSelected","DailyChallenge","handleDrawerOpen","SignInButtonPressed","showLoginModal","showRandomGameModal","showPuzzleRushModal","closePuzzleRushLoginModal","closeRandomGameLoginModal","newGame","handleClickProfile","puzzlerushview","handleClickAboutUs","handleMobileMenuClose","mobileAnchorEl","mobileMenuOpen","handleMobileMenuOpen","token","createMuiTheme","teal","main","AppBar","clsx","appBar","appBarShift","Toolbar","menuButton","hide","noWrap","grow","sectionDesktop","Badge","badgeContent","sectionMobile","aria-haspopup","anchorOrigin","vertical","horizontal","transformOrigin","Drawer","drawer","anchor","drawerPaper","drawerHeader","drawerHeaderLeft","drawerHeaderRight","useTheme","dividerFullWidth","button","ListItemIcon","contentShift","RandomGameDifficultyModal","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","mixins","toolbar","breakpoints","up","toggleBorder","gradient","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.01cdb1d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nexport default function LearnGameItems(props) {\r\n    const handleClick = () => {\r\n        props.handleClickGame(props.index)\r\n    }\r\n    if (props.selected === props.index) {\r\n        return (\r\n            <Button\r\n                variant=\"contained\" color=\"primary\"\r\n                onClick={handleClick}\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={handleClick}\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n}","export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const MOBILE_INNER_SCREEN_WIDTH = '960';\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.handlePlayerMovementFromMouse(this.props.position);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div id=\"MainGameBoard\" style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleoutsidedraggable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var selectedColor = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        selectedColor = SELECTED_ROBOT;\r\n        borderStyle = \"solid\";\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        borderStyle: borderStyle,\r\n        borderColor: selectedColor,\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.props.tabSelector();\r\n                return;\r\n                break;\r\n            case 32:\r\n                this.props.resetPuzzle();\r\n                return;\r\n                break;\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n\r\n\r\n        }\r\n        this.props.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    onStopDragHandler = (e, position) => {\r\n        this.props.onStopDragHandler(position,this.props.index);\r\n    }\r\n\r\n\r\n    handleCreateMode = () => {\r\n        if (this.props.isCreateMode === 'Yes' && this.props.buildMode) {\r\n            return (\r\n            <Draggable position={{x: this.props.position.left * this.props.dimension, y:this.props.position.top*this.props.dimension}} grid={this.props.draggableGrid} onStop={this.onStopDragHandler} bounds=\"parent\">\r\n                <div onClick={this.handleClick} style={styleoutsidedraggable(this.props)}>\r\n                    <div style={styleinside(this.props)}>\r\n                        <div style={styleinside2(this.props)}/>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n        this.handleCreateMode()\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onkeydown = this.handleKeyDown;\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.isCreateMode === 'Yes'  && props.buildMode) {\r\n        const onStopDragHandler = (e, position) => {\r\n            props.onStopDragHandler(position);\r\n        }\r\n        return(\r\n        <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n            <img src={GOAL_IMAGE} style={styledragable(props)}/>\r\n        </Draggable>\r\n        )\r\n    }\r\n    else {\r\n        return(<img src={GOAL_IMAGE} style={style(props)}/>)\r\n    }\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = '4px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = '4px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = '4px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension;\r\n            width = '4px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    top+=18;\r\n    left+=18;\r\n\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\nexport default (props) => (\r\n    <div style={style(props)}/>\r\n);","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LearnGameItems from '../components/LearnGameItems';\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailySingleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Completed!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves, for this puzzle. Complete all for your final score.\r\n                    </div>\r\n                    <br/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailySingleModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailyFinalModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClickSubmitGame = () => {\r\n        this.props.submitAnswer(this.props.robotPosition)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Completed the Challenge!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickSubmitGame}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailyFinalModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Submit Puzzle</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField id={\"namesubmit\"} label={\"Name of Puzzle\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleModal;\r\n","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Line Indicators\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n\r\n    state = {\r\n            minutes: 5,\r\n            seconds: 0,\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.puzzleRushTimeUp();\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    timer = () => {\r\n        if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n            return (<h2>Time is up!</h2>)\r\n        }\r\n        else {\r\n            return(\r\n                <h2>Time Remaining: {this.state.minutes}:{this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds}</h2>)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            this.timer()\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ToggleSettings from \"../components/ToggleSettings\";\r\nimport Timer from \"../components/Timer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { copyButtonText: \"Copy Puzzle Link\" };\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <div>\r\n                    <Button color=\"secondary\" variant={\"outlined\"} fullWidth={true} onClick={this.handleCreateBoardClick}>Modify Board</Button>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Switch color=\"primary\" checked={this.props.buildMode} onChange={this.props.toggleBuildMode}/>}\r\n                        label=\"Build Mode\"\r\n                            />\r\n                </div>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.props.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        document.getElementsByClassName(\"MuiSlider-thumb\")[0].blur();\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n    puzzleRush = () => {\r\n        if (this.props.isPuzzleRush === 'Yes'){\r\n            return (\r\n                     <div>\r\n                        <Typography id=\"discrete-slider-small-steps\"\r\n                                     color=\"textSecondary\"\r\n                                     display=\"inline\"\r\n                                     gutterBottom>\r\n                             Puzzles: {this.props.numPuzzleRush}\r\n                         </Typography>\r\n                        <Timer puzzleRushTimeUp={this.props.puzzleRushTimeUp}>\r\n                        </Timer>\r\n                     </div>\r\n            )\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                 <div style={{paddingBottom: '10px'}}>\r\n                     <Button fullWidth={true} variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                             onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                 </div>\r\n                 <Divider />\r\n                 <Typography\r\n                     color=\"textSecondary\"\r\n                     display=\"block\"\r\n                     variant=\"caption\"\r\n                     style={{paddingBottom: '10px'}}\r\n                 >\r\n                     Board Actions\r\n                 </Typography>\r\n                 <ButtonGroup fullWidth={true} color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     <Button onClick={this.props.undoMove}>Undo</Button>\r\n                 </ButtonGroup>\r\n                 {this.isCreateMode(this.props.createMode)}\r\n                 <ToggleSettings onClick={this.props.toggleLineIndicators}/>\r\n                 <div style={buttonPanel()}>\r\n                     <Typography id=\"discrete-slider-small-steps\"\r\n                                 color=\"textSecondary\"\r\n                                 display=\"inline\"\r\n                                 gutterBottom>\r\n                         Size Of Board\r\n                     </Typography>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={this.props.squareSizeValue}\r\n                         valueLabelDisplay=\"auto\"\r\n                         id=\"sliderelement\"\r\n                     />\r\n                 </div>\r\n                 {this.puzzleRush()}\r\n                 <Divider/>\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n        <div style={styleelements()}>{'By: ' + highscore.comment}\r\n            <div>\r\n                {'Moves: ' + highscore.numMoves}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <div style={styleouter()}>{'All Highscores:'}\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </div>\r\n)","import React from 'react';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginTop: '30px',\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst CrownCounter = highscore => {\r\n    var crowns = []\r\n    var i;\r\n    for (i=0; i<highscore.wins;i++) {\r\n        crowns.push(<FaCrown/>);\r\n    }\r\n    return (\r\n        <div>\r\n            {crowns}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (<Grid item xs={12}>\r\n        <Paper elevation={3}>\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={9}>\r\n                    <Typography color={'primary'}>\r\n                        {highscore.name}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                        {highscore.wins == 0 || highscore.wins == null ? null : CrownCounter(highscore) }\r\n                        {highscore.user_id != 1 ? <GoVerified/> : null}\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                <Typography color={'textSecondary'}>{highscore.score}</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                <Typography color={'secondary'} variant={'body2'}>{highscore.submitted}</Typography>\r\n                </Grid>\r\n             </Grid>\r\n        </Paper>\r\n        </Grid>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid style={styleouter()} container direction={'column'} spacing={1}>\r\n        {\r\n                highscores.map(highscore =>\r\n                    highscorestyle(highscore)\r\n                )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\n\r\nclass PuzzleRushWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Puzzle Rush - {this.props.difficulty}</DialogTitle>\r\n                <DialogContent dividers>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"h6\">\r\n                            Statistics\r\n                          </Typography>\r\n                          <div>\r\n                            <List dense={true}>\r\n\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Number of Puzzles Completed\"\r\n                                    secondary={this.props.numPuzzlesCompleted}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Percentile\"\r\n                                    secondary={this.props.percentile}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average time Per Puzzle\"\r\n                                    secondary={this.props.averageTime}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average Moves per Puzzle\"\r\n                                    secondary={this.props.averageMoves}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Difference from most optimal Solution\"\r\n                                    secondary={this.props.differenceOptimal}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Moves Per Second\"\r\n                                    secondary={this.props.movesPerSecond}\r\n                                  />\r\n                                </ListItem>\r\n                            </List>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.playPuzzleRushAgain}>Play Again!</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushWinModal;\r\n\r\n","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../../constants/constants';\r\n\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass RandomGameStatsModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answers: null,\r\n        }\r\n    }\r\n\r\n    showStatsModal = () => {\r\n        this.props.handleShowRandomAnswers()\r\n        this.setState({\r\n            answers: this.props.lowestMoveSequence\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-random\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        lowest possible moves: {this.props.lowestMoves}\r\n                    </div>\r\n                    {this.state.answers}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.showStatsModal}>Show Puzzle Answers</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomGameStatsModal;","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nexport default function Descriptionlist(props) {\r\n    return(\r\n            <List>\r\n              {\r\n                  props.tipsText.map(text =>\r\n                    <ListItem>\r\n                      <ListItemAvatar>\r\n                        <Avatar>\r\n                          <FeedbackIcon />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <div>\r\n                        {text}\r\n                      </div>\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                          <CloseIcon />\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  )\r\n              }\r\n            </List>\r\n    )\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinLessonModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <Typography> You completed the Lesson! Move on to the next one!\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinLessonModal;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent,type) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    if (type === 'blank') {\r\n        var goal = {top: height-1, left: width-1};\r\n        var randompos1 = {top: 0,left: 0, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n        var randompos2 = {top: 0,left: 1, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n        var randompos3 = {top: 1,left: 0, color: ROBOT_RED, colorSignifier: 'red'};\r\n        var randompos4 = {top: 1,left: 1, color: ROBOT_YELLOW, colorSignifier:'yellow'};\r\n    }\r\n    else {\r\n        var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n        var randomPositions = [goal];\r\n        for (var i=0;i<5;i++) {\r\n            randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n        }\r\n        var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n        var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n        var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n        var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    }\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router';\r\nimport Draggable from 'react-draggable';\r\nimport LearnGameItems from '../components/LearnGameItems';\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport YouWinDailySingleModal from '../components/YouWinDailySingleModal';\r\nimport YouWinDailyFinalModal from '../components/YouWinDailyFinalModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport PuzzleRushWinModal from '../containers/Modals/PuzzleRushFinishedModal';\r\nimport RandomGameStatsModal from '../containers/Modals/RandomGameStatsModal';\r\nimport DescriptionList from '../components/DescriptionList';\r\nimport YouWinLessonModal from '../components/YouWinLessonModal';\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if([37, 38, 39, 40, 9].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        padding: '40px'\r\n    };\r\n};\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\nconst formatGeneratedMoveSequence = (moves) => {\r\n    var images = []\r\n    moves.map(move => {\r\n        var color = move.charAt(0);\r\n        var direction = move.charAt(1);\r\n        if (color == 'B') {\r\n            color = 'blue'\r\n        }\r\n        else if (color == 'R') {\r\n            color = 'red'\r\n        }\r\n        else if (color == 'Y') {\r\n            color = 'yellow'\r\n        }\r\n        else {\r\n            color = 'green'\r\n        }\r\n        if (direction == 'N') {\r\n            direction = UP\r\n        }\r\n        else if (direction == 'S') {\r\n            direction = DOWN\r\n        }\r\n        else if (direction == 'E') {\r\n            direction = RIGHT\r\n        }\r\n        else {\r\n            direction = LEFT\r\n        }\r\n        images.push(<img src={DIRECTION_MAP_IMAGES[color][direction]}/>)\r\n    });\r\n    return images\r\n}\r\n\r\n\r\nconst setDefaultSquareSize = (boardWidth) => {\r\n    const drawerWidth = document.getElementById(\"MainDrawer\") == null ? 140 : parseInt(getComputedStyle(document.getElementById(\"MainDrawer\")).width);\r\n    const windowWidth = window.innerWidth;\r\n    var settings = ((windowWidth < 600) ? windowWidth : (windowWidth - drawerWidth) / 1.75);\r\n    settings = settings / boardWidth;\r\n    settings = parseInt(settings);\r\n    settings = settings - (settings % 4);\r\n    if (settings < 16) {\r\n        settings = 16;\r\n    }\r\n    else if (settings > 52) {\r\n        settings = 52;\r\n    }\r\n    return settings;\r\n};\r\n\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.puzzleRush === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.p_id = this.props.p_id;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n            this.state.tipsText = []\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n            console.log(this.props.playerStateList)\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            if (this.props.savedMoves != null) {\r\n                this.state.moveHistoryList = this.props.savedMoves\r\n                this.state.gamesWonDaily = [true,true,true,true]\r\n                this.state.moveHistory = this.props.savedMoves[0].slice()\r\n                this.state.playerState = this.props.playerStateList[0].slice()\r\n            }\r\n            else {\r\n                this.state.moveHistoryList=[];\r\n            }\r\n            this.state.playerStateList = this.props.playerStateList != null ? this.props.playerStateList : [];\r\n            this.state.tipsText = ['Complete All puzzles to complete','Puzzles Reset at 3PM EST'];\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.dc_id = this.props.dc_id;\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.game.g_puzzledata)\r\n            this.state.lowestMoves = this.props.game.g_moves\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.game.g_solutiondata))\r\n            this.state.difficulty = this.props.game.g_difficulty\r\n            this.state.createMode = 'No';\r\n            this.state.gameWon = false;\r\n            this.state.buildMode = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n            this.state.tipsText = ['this game was randomly generated']\r\n        }\r\n        else if (this.props.learnMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n            this.state.tipsText = [this.props.games[0].description];\r\n        }\r\n        else if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.buildMode = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n            this.state.tipsText = []\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,1,'blank');\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                buildMode: true,\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false,\r\n                tipsText: [\r\n                                        'Click on Wall spots to toggle',\r\n                                        'Click and Drag robots or goal to move robots',\r\n                                        'When you are ready, toggle build mode in order to solve the puzzle',\r\n                                        'You must solve the puzzle in order to submit.']\r\n            },board);\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width);\r\n        }\r\n    };\r\n\r\n    setDefaultSquareSize = (boardWidth) => {\r\n\r\n        const drawerWidth = document.getElementById(\"MainDrawer\")\r\n        const windowWidth = window.innerWidth;\r\n        var settings = windowWidth - drawerWidth;\r\n        settings = ((windowWidth < 600) ? settings : settings / 1.5);\r\n        settings = settings / boardWidth;\r\n        this.setState({\r\n            squareSize: settings,\r\n        });\r\n    };\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                this.setState({\r\n                    highscores: JSON.parse(res.data.highscores),\r\n                });\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    updateDailyHighscores = () => {\r\n        axios.get('/dailychallengehighscores?dc_id=' + this.state.dc_id)\r\n            .then( res => {\r\n                this.setState({\r\n                    highscores: JSON.parse(res.data.highscores),\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.updateHighscores();\r\n            var IntervalId = setInterval(this.updateHighscores, 4000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.updateDailyHighscores();\r\n            var IntervalId = setInterval(this.updateDailyHighscores, 4000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.userInfo !== null) {\r\n            username = window.userInfo.username\r\n        }\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.ColoredLineDirections.length === 0) {\r\n            this.setState({\r\n                ColoredLineDirections: [LEFT,RIGHT,UP,DOWN],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                ColoredLineDirections: [],\r\n            });\r\n        }\r\n    };\r\n\r\n    toggleBuildMode = () => {\r\n        if (this.state.buildMode) {\r\n            this.setState({\r\n                buildMode: false,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n                buildMode: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length, name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeRandomStatsModal = event => {\r\n        this.setState({\r\n            closeRandomStatsModal: false,\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    }\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushFinishedModal = event => {\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: false\r\n        });\r\n\r\n    }\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent, 'blank');\r\n        var squareSize = setDefaultSquareSize(width);\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n            squareSize: squareSize,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n    showStatsModal = () => {\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            showStatsModal: true,\r\n        });\r\n    }\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n\r\n    puzzleRushTimeUp = () => {\r\n        var totalMovesDiff = 0;\r\n        this.state.solutiondifference.map(numMoves => {\r\n            totalMovesDiff += numMoves;\r\n        });\r\n        var averageTime = parseInt(300 / (this.state.numPuzzleon))\r\n        var totalMoves = 0;\r\n        this.state.totalMovesList.map(numMoves => {\r\n            totalMoves += numMoves\r\n        });\r\n        var avgMoves = parseInt(totalMoves / (this.state.numPuzzleon))\r\n        var movesPerSecond = totalMoves / 300;\r\n\r\n        axios.post('/puzzlerushend', {p_id: this.state.p_id,totalMoves: totalMoves,differenceFrom: totalMovesDiff})\r\n            .then( res => {\r\n                console.log(res.data);\r\n            });\r\n\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: true,\r\n            numPuzzlesCompleted: this.state.numPuzzleon,\r\n            percentile: 'TBD%',\r\n            averageTime: averageTime + 's',\r\n            averageMoves: avgMoves,\r\n            differenceOptimal: totalMovesDiff,\r\n            movesPerSecond: movesPerSecond\r\n        });\r\n    }\r\n\r\n    submitDailyAnswer = (LastRobotPosition) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            numMoves += moveHistory.length\r\n        });\r\n        var playerStateList = this.state.playerStateList.slice()\r\n        var playerState = this.state.playerState.slice()\r\n        console.log(this.state.robotSelected)\r\n        playerState[parseInt(this.state.robotSelected)] = LastRobotPosition;\r\n        console.log(playerState[parseInt(this.state.robotSelected)])\r\n        console.log(playerState);\r\n\r\n        playerStateList[this.state.numPuzzleon] = playerState\r\n        console.log(LastRobotPosition);\r\n        console.log(playerState);\r\n        axios.post('/dailychallenge', {score: numMoves, name: document.getElementById(\"namesubmitHS\").value, solutiondata: moveHistoryList, dc_id: this.state.dc_id, playerStateList: playerStateList})\r\n            .then( res => {\r\n                console.log(res)\r\n                this.handleUndoMove();\r\n            });\r\n        this.state.gameWon = false;\r\n    }\r\n\r\n    checkwin = (robotPosition) => {\r\n        if (robotPosition.top === this.state.goal.top && robotPosition.left === this.state.goal.left) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No' && this.props.puzzleRush !== 'Yes') {\r\n                var username = '';\r\n                if (window.userInfo !== null) {\r\n                    username = window.userInfo.username\r\n                }\r\n                if (this.props.randomGame === 'Yes') {\r\n                    return (\r\n                        <RandomGameStatsModal\r\n                            show={this.state.gameWon}\r\n                            lowestMoves={this.state.lowestMoves}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            numMoves={this.state.moveHistory.length}\r\n                            difficulty={this.state.difficulty}\r\n                            resetPuzzle={this.resetPuzzle}\r\n                            handleShowRandomAnswers={this.handleShowRandomAnswers}\r\n                        />\r\n                    );\r\n                }\r\n                else if (this.props.dailyChallengeMode === 'Yes') {\r\n                    var Won=true\r\n                    this.state.gamesWonDaily.map((gameWon,index) => {\r\n                        if (!(index == this.state.numPuzzleon) && !gameWon) {\r\n                            Won = false\r\n                        }\r\n                    });\r\n                    var moveHistoryList = this.state.moveHistoryList\r\n                    moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory\r\n                    var numMoves = 0\r\n                    moveHistoryList.map(moveHistory => {\r\n                        numMoves += moveHistory.length\r\n                    });\r\n                    return (Won ? <YouWinDailyFinalModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={numMoves}\r\n                        submitAnswer={this.submitDailyAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                        undoMove={this.handleUndoMove}\r\n                        robotPosition={robotPosition}\r\n                    /> : <YouWinDailySingleModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        undoMove={this.handleUndoMove}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        games={this.state.games}\r\n                        handleClickGame={this.handleDailyClickGame}\r\n                        numPuzzleon={this.state.numPuzzleon}\r\n                        moveNextPuzzle={this.moveNextPuzzle}\r\n                    />);\r\n                }\r\n                else if (this.props.learnMode === 'Yes') {\r\n                    return  (<YouWinLessonModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                    />);\r\n                }\r\n                else {\r\n                    return  (<YouWinModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        submitAnswer={this.submitAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                    />);\r\n                }\r\n            }\r\n            else if (this.props.puzzleRush === 'Yes'){\r\n                axios.post('/puzzlerushsubmit', {p_id: this.state.p_id,g_id:this.state.games[this.state.numPuzzleon].g_id, moveHistory: this.state.moveHistory})\r\n                    .then( res => {\r\n                        console.log(res.data);\r\n                    });\r\n                var totalMoves = this.state.moveHistory.slice().length\r\n                var totalMovesList = this.state.totalMovesList\r\n                totalMovesList.push(totalMoves)\r\n                var solutionmoves = totalMoves - this.state.games[this.state.numPuzzleon].g_moves\r\n                var solutiondifference = this.state.solutiondifference\r\n                solutiondifference.push(solutionmoves)\r\n                var puzzledata = JSON.parse(this.state.games[this.state.numPuzzleon + 1].g_puzzledata)\r\n                if (this.state.numPuzzleon + 10 > this.state.games.length) {\r\n                    axios.get('/puzzlerushgetmore?p_id=' + this.props.p_id + '&difficulty=' + this.props.difficulty)\r\n                        .then( res => {\r\n                                var games = JSON.parse(res.data.games);\r\n                                var stategames = this.state.games\r\n                                var newarray = stategames.concat(games)\r\n                                this.setState({\r\n                                    games: newarray\r\n                                });\r\n                        });\r\n                }\r\n                this.setState(\r\n                    extend(puzzledata,{numPuzzleon: this.state.numPuzzleon + 1, playerState: puzzledata.playerStart.slice(), gameWon: false, solutiondifference: solutiondifference, totalMovesList: totalMovesList})\r\n                );\r\n\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handleShowRandomAnswers = () => {\r\n        this.setState({\r\n            tipsText: [this.state.lowestMoveSequence]\r\n        })\r\n    }\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false && !this.state.buildMode) {\r\n            var oldPositon = {left: this.state.playerState[this.state.robotSelected].left, top: this.state.playerState[this.state.robotSelected].top};\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left) && !this.state.buildMode) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier,\r\n                    prevPosition: oldPositon\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n            this.checkwin(newPosition);\r\n        }\r\n    };\r\n\r\n    moveNextPuzzle = () => {\r\n        this.handleDailyClickGame((this.state.numPuzzleon + 1) % 4)\r\n    }\r\n\r\n    handleLearnClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].puzzledata);\r\n        var squareSize = setDefaultSquareSize(puzzledata.width);\r\n        this.setState(\r\n            extend(puzzledata,{buildMode: false,squareSize: squareSize, numPuzzleon: index, moveHistory: [], gameWon: false, playerState: puzzledata.playerStart.slice(),tipsText: [this.props.games[index].description]})\r\n        );\r\n    }\r\n\r\n    handleDailyClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily})\r\n        );\r\n    }\r\n\r\n\r\n    loadSidebar = () => {\r\n        if (this.props.learnMode == 'Yes') {\r\n            return (\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\">\r\n                        {\r\n                            this.state.games.map((game,index) =>\r\n                                    <LearnGameItems selected={this.state.numPuzzleon} game={game} name={game.name} index={index} handleClickGame={this.handleLearnClickGame}/>\r\n                            )\r\n                        }\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeScores highscores={this.state.highscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.state.createMode === 'Yes') {\r\n            return null\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            return null\r\n        }\r\n        else {\r\n            return(\r\n            <div style={{display: 'grid'}}>\r\n                <Typography\r\n                    color=\"secondary\"\r\n                    display=\"block\"\r\n                    variant={\"h4\"}\r\n\r\n                >\r\n                    {this.props.name}\r\n                </Typography>\r\n                <br/>\r\n                <HighScores highscores={this.state.highscores}/>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    handlePlayerMovementFromMouse = (posObj) => {\r\n        var newDirection;\r\n        var robot = this.state.playerState[this.state.robotSelected];\r\n        if (posObj.top === robot.top && posObj.left < robot.left)\r\n            newDirection = { top: 0, left: -(this.state.squareSize), dir: LEFT};\r\n        else if (posObj.top === robot.top && posObj.left > robot.left)\r\n            newDirection = { top: 0, left: this.state.squareSize, dir: RIGHT};\r\n        else if (posObj.top < robot.top && posObj.left === robot.left)\r\n            newDirection = { top: -(this.state.squareSize), left: 0, dir: UP};\r\n        else if (posObj.top > robot.top && posObj.left === robot.left)\r\n            newDirection = { top: this.state.squareSize, left: 0, dir: DOWN};\r\n        else newDirection = { top: 0, left: 0, dir: undefined};\r\n        this.handlePlayerMovement(newDirection)\r\n    };\r\n\r\n    handleUndoMove = () => {\r\n        var moveHistory = this.state.moveHistory;\r\n        var playerState = this.state.playerState;\r\n        if (moveHistory.length !== 0) {\r\n            var moveObj = moveHistory.pop();\r\n            playerState[moveObj.robot].left = moveObj.prevPosition.left;\r\n            playerState[moveObj.robot].top = moveObj.prevPosition.top;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n                gameWon: false,\r\n            });\r\n        }\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes' && this.state.buildMode) {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                console.log('clicking horizontal wall');\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onStopDragHandlerGoal = (position) => {\r\n        this.setState({\r\n            goal: {top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize)},\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n        })\r\n    };\r\n\r\n\r\n    onStopDragHandler = (position,index) => {\r\n        var playerState = this.state.playerState.slice();\r\n        var lastX = position.lastX / this.state.squareSize;\r\n        var lastY = position.lastY / this.state.squareSize;\r\n        playerState[index].top = Math.round(lastY);\r\n        playerState[index].left = Math.round(lastX);\r\n        this.setState({\r\n            playerStart: playerState.slice(),\r\n            playerState: playerState,\r\n            moveHistory: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        puzzleRushTimeUp={this.puzzleRushTimeUp}\r\n                        isPuzzleRush={this.props.puzzleRush}\r\n                        numPuzzleRush={this.state.numPuzzleon}\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                        toggleLineIndicators = {this.toggleLineIndicators}\r\n                        toggleBuildMode = {this.toggleBuildMode}\r\n                        undoMove = {this.handleUndoMove}\r\n                        buildMode = {this.state.buildMode}\r\n                        squareSizeValue = {parseInt((this.state.squareSize/4))}\r\n                    />\r\n                    <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8}>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                        handlePlayerMovementFromMouse={this.handlePlayerMovementFromMouse}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal\r\n                            dimension={this.state.squareSize}\r\n                            position={this.state.goal}\r\n                            onStopDragHandler={this.onStopDragHandlerGoal}\r\n                            draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                            isCreateMode={this.state.createMode}\r\n                            buildMode={this.state.buildMode}\r\n                        />\r\n                        {\r\n                            this.state.ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={LINE_INDICATOR_COLOR}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    onStopDragHandler={this.onStopDragHandler}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                />\r\n                            )\r\n                        }\r\n\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n\r\n                        }\r\n                    </Board>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DescriptionList\r\n                        tipsText={this.state.tipsText}\r\n                    />\r\n                    {this.loadSidebar()}\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                {\r\n                    this.state.playerState.map(position =>\r\n                        this.checkwin(position))\r\n                }\r\n                <PuzzleRushWinModal\r\n                    show={this.state.showPuzzleRushFinishedModal}\r\n                    closeModal={this.closePuzzleRushFinishedModal}\r\n                    numPuzzlesCompleted={this.state.numPuzzlesCompleted}\r\n                    percentile={this.state.puzzleRushPercentileCompleted}\r\n                    averageTime={this.state.averageTime}\r\n                    averageMoves={this.state.averageMoves}\r\n                    differenceOptimal={this.state.differenceOptimal}\r\n                    movesPerSecond={this.state.movesPerSecond}\r\n                    difficulty={this.props.difficulty}\r\n                />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\"\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        maxWidth: 360,\r\n        height: 175\r\n    },\r\n\r\n    item: {\r\n        padding: 0\r\n    },\r\n\r\n    upperPadding: {\r\n        paddingTop: 3\r\n    },\r\n\r\n    lowerPadding: {\r\n        paddingBottom: 3\r\n    },\r\n\r\n    rightSideText: {\r\n        textAlign: \"right\",\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    },\r\n\r\n    leftSideText: {\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(ComplexGrid)\r\n\r\nfunction ComplexGrid(props) {\r\n    const { classes } = props;\r\n    const handleClick = () => {\r\n        props.handleGameClick(props.game.name, props.game.puzzledata,props.highscores,props.game.uri);\r\n    };\r\n\r\n    var numberOfHighScores = 0;\r\n\r\n    const highscorestyle = highscore => {\r\n        if (numberOfHighScores === 5) return \"\";\r\n        numberOfHighScores++;\r\n        return (\r\n            <ListItem disableGutters={true} classes={{ root: classes.item }}>\r\n                <ListItemText primary={trimName(highscore.comment)} classes={{ root: classes.leftSideText }} />\r\n                <ListItemText secondary={highscore.numMoves} classes={{ root: classes.rightSideText }} />\r\n            </ListItem>\r\n        )\r\n    };\r\n\r\n    const contentDivStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        };\r\n\r\n    };\r\n\r\n    const trimName = name => {\r\n        if (name.length > 10)\r\n            name = name.substring(0, 10) + \"...\";\r\n        return name\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid item xs={12} sm={3}>\r\n            <Card variant=\"outlined\" className={classes.root}>\r\n                <CardContent>\r\n                    <div style={contentDivStyle()}>\r\n                        <div style={{width: '125px'}}>\r\n                            <Tooltip title={props.game.name}>\r\n                                <Typography variant=\"h6\" classes={{ root: classes.lowerPadding }}>\r\n                                    {trimName(props.game.name)}\r\n                                </Typography>\r\n                            </Tooltip>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    By: {trimName(props.game.authorname)}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    {props.game.created}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Plays: {props.highscores.length}\r\n                                </Typography>\r\n                            </div>\r\n                            <br/>\r\n                            <Button onClick={handleClick} classes={{ root: classes.upperPadding }} variant=\"contained\" color=\"primary\">Play</Button>\r\n                        </div>\r\n                        <Divider orientation=\"vertical\" flexItem />\r\n                        <div style={{width: '125px'}}>\r\n                            <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                Top Scores\r\n                            </Typography>\r\n                            <List>\r\n                                {\r\n                                    props.highscores.map(highscore =>\r\n                                        highscorestyle(highscore)\r\n                                    )\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from 'axios';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 400,\r\n    },\r\n    input: {\r\n        marginLeft: 5,\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n        marginLeft: 8,\r\n        marginRight: 8,\r\n    },\r\n});\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = window.gameslist;\r\n        var highscoreslist = window.highscoreslist;\r\n        console.log(gameslist);\r\n        console.log(highscoreslist);\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n            anchorEl: null\r\n        }\r\n    }\r\n\r\n    handleGameClick = (name,gamedata,highscores,uri) => {\r\n        this.props.handleGameClick(name,gamedata,highscores,uri);\r\n    };\r\n\r\n    handleFilterMenuOpen = event => {\r\n        this.setState( {\r\n          anchorEl: event.currentTarget\r\n      });\r\n    };\r\n\r\n    handleCloseFilterMenu = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n    };\r\n\r\n    handleSearchSubmit = event => {\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, offset: 0})\r\n            .then( res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    };\r\n\r\n    render () {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <div id={'GameMain'}>\r\n                <Paper component=\"form\" className={classes.root} >\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        inputRef={ref => this.searchRef = ref}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                this.handleSearchSubmit();\r\n                                event.preventDefault()\r\n                            }\r\n                        }}\r\n                    />\r\n                    <IconButton onClick={this.handleSearchSubmit} className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <Divider className={classes.divider} orientation=\"vertical\" />\r\n                    <Button\r\n                        onClick={this.handleFilterMenuOpen}\r\n                        startIcon={<FilterListIcon />}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        Sort\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(this.state.anchorEl)}\r\n                        onClose={this.handleCloseFilterMenu}\r\n                    >\r\n                        <MenuItem onClick={this.handleCloseFilterMenu}>Most Popular</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenu}>Hottest</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenu}>Newest</MenuItem>\r\n                    </Menu>\r\n                </Paper>\r\n                <br/>\r\n                <Grid container alignItems={\"stretch\"} spacing={2}>\r\n                    {\r\n                        this.state.gameslist.map((game,index)=>\r\n                            <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(FindGame);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame={'Yes'}\r\n                  name={this.props.name}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  baseExpansion: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: '10px'\r\n  },\r\n  darkmode: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      marginTop: '150px',\r\n  },\r\n  iconcards: {\r\n    maxWidth: 345,\r\n    minWidth: 250,\r\n    float: 'left',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px'\r\n  },\r\n  createboardcard: {\r\n    ':hover': {\r\n        content: '/static/images/CreateBoardCardIconPlaced.png',\r\n    }\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n\r\n    return (<div className={classes.grid}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={6} spacing={3} alignItems=\"center\" justify=\"center\">\r\n                    <Typography variant=\"h3\"> Welcome To RobotsEvolved\r\n                    </Typography>\r\n                    <Typography> Create your own Robots Boards and challenge others to solve them, or play puzzle rush and get better.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={6} spacing={3}>\r\n                    <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/5VSS4pDfEUk?controls=0\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                </Grid>\r\n                    <Grid item xs={12} alignItems=\"center\" justify=\"center\">\r\n                        <Card className={classes.iconcards}>\r\n                          <CardActionArea onClick={props.handleClickCreateGame}>\r\n                            <CardMedia\r\n                              className={classes.createboardcard}\r\n                              component=\"img\"\r\n                              alt=\"Create Board\"\r\n                              height=\"140\"\r\n                              image=\"/static/images/CreateBoardCardIcon.png\"\r\n                              title=\"Create Board\"\r\n                            />\r\n                            <CardContent>\r\n                              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                Create Board\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Create a Board to have others to solve, its easy! Try it out!\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                          <CardActions>\r\n                            <Button size=\"small\" color=\"primary\">\r\n                              Learn More\r\n                            </Button>\r\n                          </CardActions>\r\n                        </Card>\r\n                        <Card className={classes.iconcards}>\r\n                          <CardActionArea onClick={props.handleClickFindGame}>\r\n                            <CardMedia\r\n                              component=\"img\"\r\n                              alt=\"Find a Game\"\r\n                              height=\"140\"\r\n                              image=\"/static/images/FindAGameCardIcon.png\"\r\n                              title=\"Find a Game\"\r\n                            />\r\n                            <CardContent>\r\n                              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                Find a Game\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Find a Game that has been created by another person!\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                        </Card>\r\n                        <Card className={classes.iconcards}>\r\n                          <CardActionArea onClick={props.handleClickRandomGame}>\r\n                            <CardMedia\r\n                              component=\"img\"\r\n                              alt=\"Play a Random Game\"\r\n                              height=\"140\"\r\n                              image=\"/static/images/puzzle.png\"\r\n                              title=\"Play a Random Game\"\r\n                            />\r\n                            <CardContent>\r\n                              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                Play a Random Game\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Play a Random Game that was generated and see if you can get the lowest possible solution\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                          <CardActions>\r\n                            <Button size=\"small\" color=\"primary\">\r\n                              Learn More\r\n                            </Button>\r\n                          </CardActions>\r\n                        </Card>\r\n                        <Card className={classes.iconcards}>\r\n                          <CardActionArea onClick={props.handleClickLearnGame}>\r\n                            <CardMedia\r\n                              component=\"img\"\r\n                              alt=\"Create Board\"\r\n                              height=\"140\"\r\n                              image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                              title=\"Learn\"\r\n                            />\r\n                            <CardContent>\r\n                              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                Learn\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Get the basics all the way to advanced tutorials.\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                          <CardActions>\r\n                          </CardActions>\r\n                        </Card>\r\n                        <Card className={classes.iconcards}>\r\n                          <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                            <CardMedia\r\n                              component=\"img\"\r\n                              alt=\"Create Board\"\r\n                              height=\"140\"\r\n                              image=\"/static/images/DailyChallengeIcon.png\"\r\n                              title=\"Daily Challenge\"\r\n                            />\r\n                            <CardContent>\r\n                              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                Daily Challenge\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Complete The Daily Challenge\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                          <CardActions>\r\n                          </CardActions>\r\n                        </Card>\r\n                        <Card className={classes.iconcards}>\r\n                          <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                            <CardMedia\r\n                              component=\"img\"\r\n                              alt=\"Contemplative Reptile\"\r\n                              height=\"140\"\r\n                              image=\"/static/images/PuzzleRushIcon.png\"\r\n                              title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent>\r\n                              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                Puzzle Rush\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Puzzle Rush is a variant where you are given 5 minutes to solve as many random puzzles as you can.\r\n                                You are scored based on the number of puzzles completed as well as the difference from the lowest possible solution, Click Learn More for scoring details\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                          <CardActions>\r\n                            <Button size=\"small\" color=\"primary\">\r\n                              Learn More\r\n                            </Button>\r\n                          </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeLoginModal}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>Login to Robits</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <img onClick={this.loginGoogle} src={\"/static/images/btn_google_signin_light_normal_web@2x.png\"}></img>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeLoginModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '40px',\r\n        width: '40px',\r\n        marginTop: '5px',\r\n    };\r\n};\r\n\r\nconst divStyle = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        width: '200px',\r\n    };\r\n};\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return null\r\n        }\r\n        else {\r\n            return (\r\n                <div style={divStyle()}>\r\n                    <div>{window.userInfo.username}</div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <Button color=\"primary\" onClick={this.handleClick}>{textToShow}</Button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\n\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty) => {\r\n        console.log(difficulty)\r\n        axios.post('/puzzlerush', {difficulty: difficulty, action: 'start'})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            isLoading: false,\r\n                        });\r\n                        this.props.handleClickPuzzleRush(difficulty,games,p_id);\r\n                });\r\n    };\r\n\r\n    handleClickEasyPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('easy')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMediumPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('medium')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('hard')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('Exteremly Hard')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                                {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                                                        ) : (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                         <Grid item xs={12}>\r\n                                            <Button onClick={this.handleClickEasyPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Easy\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Button onClick={this.handleClickMediumPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Medium\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Button onClick={this.handleClickHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Hard\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Button onClick={this.handleClickExHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Exteremely Hard\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickRandomGameModal = (difficulty) => {\r\n        axios.get('/randomgame?difficulty=' + difficulty)\r\n            .then( res => {\r\n                var game = JSON.parse(res.data.game);\r\n                this.setState({\r\n                    isLoading: false,\r\n                });\r\n                this.props.handleClickRandomGame(game,difficulty);\r\n            })\r\n    }\r\n\r\n\r\n    handleClickEasy = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('easy')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMedium = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('medium')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHard = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('hard')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHard = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('Exteremly Hard')\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                            {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                            ) : (\r\n                            <Grid\r\n                                container xs={12}\r\n                                spacing={4}\r\n                                direction=\"column\"\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n                                wrap=\"nowrap\"\r\n                            >\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.handleClickEasy} variant=\"contained\" color=\"primary\">\r\n                                        Easy\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.handleClickMedium} variant=\"contained\" color=\"primary\">\r\n                                        Medium\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.handleClickHard} variant=\"contained\" color=\"primary\">\r\n                                        Hard\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button onClick={this.handleClickExHard} variant=\"contained\" color=\"primary\">\r\n                                        Exteremely Hard\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageCreatedGamesDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.game.name,props.game.puzzledata,[],props.game.uri);\r\n    }\r\n\r\n    return (<div>\r\n            <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography> Highscore Holder: </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.game.username} - {props.game.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageSolutionDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.solution.name,props.solution.puzzledata,[],props.solution.uri);\r\n    }\r\n    return (<div>\r\n              <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography> Highscore Holder: </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.solution.name} - {props.solution.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport Button from '@material-ui/core/Button';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useStyles from '../Material-UI/themes';\r\nimport ProfilePageCreatedGamesDetails from '../components/ProfilePageComponents/ProfilePageCreatedGamesDetails';\r\nimport ProfilePageSolutionDetails from '../components/ProfilePageComponents/ProfilePageSolutionDetails';\r\n\r\n\r\n\r\nexport default function ProfilePage(props) {\r\n    const classes = useStyles();\r\n    const [expandedGame, setExpandedGame] = React.useState(false);\r\n    const [expandedHighscores, setExpandedHighscores] = React.useState(false);\r\n    const [expandedPuzzleRush, setExpandedPuzzleRush] = React.useState(false);\r\n    const handleChangeGame = (panel) => (event, isExpandedGame) => {\r\n        setExpandedGame(isExpandedGame ? panel : false);\r\n    };\r\n    const handleChangeHighscores = (panel) => (event, isExpandedHighScores) => {\r\n        setExpandedHighscores(isExpandedHighScores ? panel : false);\r\n    };\r\n    const handleChangePuzzleRush = (panel) => (event, isExpandedPuzzleRush) => {\r\n        setExpandedPuzzleRush(isExpandedPuzzleRush ? panel : false);\r\n    };\r\n    return (\r\n            <div id={'GameMain'} className={classes.root}>\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item xs={4}>\r\n                        <Typography variant=\"h3\">Games Created</Typography>\r\n                        {\r\n                            props.gamesview.map((game,index) =>\r\n                                    <ExpansionPanel expanded={expandedGame === 'panelgame' + index} onChange={handleChangeGame('panelgame' + index)}>\r\n                                        <ExpansionPanelSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls={\"panel\" + index + \"-content\"}\r\n                                          id={\"panel\" + index + \"-header\"}\r\n                                        >\r\n                                          <Typography className={classes.heading}>{game.name}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Plays: </Typography>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                          <ProfilePageCreatedGamesDetails\r\n                                            game={game}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                          />\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography variant=\"h3\">Games Solved</Typography>\r\n                        {\r\n                            props.solutionsview.map((solution,index) =>\r\n                                <ExpansionPanel expanded={expandedHighscores === 'panelhigh' + index} onChange={handleChangeHighscores('panelhigh' + index)}>\r\n                                    <ExpansionPanelSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls={\"panel\" + index + \"-content\"}\r\n                                      id={\"panel\" + index + \"-header\"}\r\n                                    >\r\n                                      <Typography className={classes.heading}>{solution.name}</Typography>\r\n                                      <Typography className={classes.secondaryHeading}>Score: {solution.numMoves}</Typography>\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <ProfilePageSolutionDetails\r\n                                            solution={solution}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                        />\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography variant=\"h3\">Puzzle Rush Data:</Typography>\r\n                        <ExpansionPanel expanded={expandedPuzzleRush === 'panel9'} onChange={handleChangePuzzleRush('panel9')}>\r\n                            <ExpansionPanelSummary\r\n                              expandIcon={<ExpandMoreIcon />}\r\n                              aria-controls=\"panel9bh-content\"\r\n                              id=\"panel9bh-header\"\r\n                            >\r\n                              <Typography className={classes.heading}>COMING SOON</Typography>\r\n                              <Typography className={classes.secondaryHeading}>COMING SOON</Typography>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                              <Typography>\r\n                                Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget\r\n                                maximus est, id dignissim quam.\r\n                              </Typography>\r\n                            </ExpansionPanelDetails>\r\n                          </ExpansionPanel>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass RandomGamePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game randomGame={'Yes'}\r\n                  game={this.props.game}\r\n                  difficulty={this.props.difficulty}\r\n             />\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomGamePage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PuzzleRushPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game puzzleRush={'Yes'}\r\n                  p_id={this.props.p_id}\r\n                  games={this.props.games}\r\n                  difficulty={this.props.difficulty}\r\n             />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PuzzleRushPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass LessonsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game learnMode={'Yes'} games={window.learngameslist}/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default LessonsPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game dailyChallengeMode={'Yes'} playerStateList={this.props.playerStateList} savedMoves={this.props.savedMoves} games={window.dailyChallengeGameslist} dc_id={window.dc_id} highscores={window.dchighscores}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengePage;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nexport default function AboutUs(props) {\r\n    return (<div id=\"GameMain\">\r\n                <div class=\"row3\">\r\n                  <div class=\"column3\">\r\n                    <div class=\"card3\">\r\n                      <img src={\"/static/images/284457_10151211078621477_839164197_n.jpg\"} alt=\"Jane\"/>\r\n                      <div class=\"container3\">\r\n                        <h2>Kyle Kwasniewski</h2>\r\n                        <p class=\"title3\">Creator &amp; FullStack Dev.</p>\r\n                        <p>This Project was made in order to learn React as a web-framework. If there are any features that you would like to see then feel free to email my personal email below.</p>\r\n                        <p>kwasiky at gmail dot com</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"column3\">\r\n                    <div class=\"card3\">\r\n                      <img src={\"/static/images/284f909d-0d5c-4ae1-b100-76c9d46ae7d4.png\"} alt=\"Mike\"/>\r\n                      <div class=\"container3\">\r\n                        <h2>Jonah Tollefson</h2>\r\n                        <p class=\"title3\">Front-End Dev.</p>\r\n                        <p>Went to college with these other goobers in the US and now I work professionally as a software engineer in Germany. For RobotsEvolved, I mainly worked on the frontend using React. Cats and Ultimate Frisbee are life.</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"column3\">\r\n                    <div class=\"card3\">\r\n                      <img src={\"/static/images/derekschultz.jpg\"} alt=\"John\"/>\r\n                      <div class=\"container3\">\r\n                        <h2>Derek Schultz</h2>\r\n                        <p class=\"title3\">Back-End Dev.</p>\r\n                        <p>Full time Software Engineer. Graduated from University of Wisconsin Platteville with a BS in Computer Science and Minor in Business Administration. Worked on most of the database aspect of RobotsEvolved and some back end functionality. I enjoy video games, beer, and playing darts.</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport clsx from 'clsx';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport Home from './Pages/Home';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\nimport axios from 'axios';\r\nimport Game from './containers/Game';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"./constants/constants\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport PuzzleRushDifficultyModal from \"./containers/Modals/PuzzleRushDifficultyModal\";\r\nimport RandomGameDifficultyModal from \"./containers/Modals/RandomGameDifficultyModal\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport RandomGamePage from \"./Pages/RandomGamePage\";\r\nimport PuzzleRushPage from \"./Pages/PuzzleRushPage\";\r\nimport LessonsPage from \"./Pages/LessonsPage\";\r\nimport DailyChallengePage from \"./Pages/DailyChallenge\";\r\nimport AboutUs from \"./Pages/AboutUs\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    drawerHeaderRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerHeaderLeft: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    dividerFullWidth: {\r\n        margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    darkmode: {\r\n          body: '#363537',\r\n          text: '#FAFAFA',\r\n          toggleBorder: '#6B8096',\r\n          gradient: 'linear-gradient(#091236, #1E215D)',\r\n    },\r\n});\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (window.uri === '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>, //default page for website\r\n            };\r\n        }\r\n        else {\r\n            this.state = {\r\n                PageSelected: <PlayGame name={window.token.name} gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri}/>, //when uri is entered to play specific game\r\n            };\r\n        }\r\n        this.state.open = true;\r\n        this.state.mobileAnchorEl = null;\r\n        this.state.mobileMenuOpen = false;\r\n        this.state.showLoginModal = false;\r\n        this.state.showPuzzleRushModal = false;\r\n\r\n        if (window.loggedin === 'Yes') {\r\n            this.state.gamesview = window.gamesview;\r\n            this.state.solutionsview = window.solutionsview;\r\n            this.state.puzzlerushview = window.puzzlerushview;\r\n        }\r\n    }\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState( {\r\n            open: false\r\n        })\r\n    };\r\n\r\n    handleClickDailyChallenge = (event) => {\r\n        event.preventDefault();\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        const dc_movesList = window.dc_movesList == null ? null : JSON.parse(JSON.stringify(window.dc_movesList))\r\n        const dc_playerList = window.dc_playerList == null ? null : JSON.parse(JSON.stringify(window.dc_playerList))\r\n        this.setState({\r\n            PageSelected: <DailyChallengePage savedMoves={dc_movesList} playerStateList={dc_playerList}/>,\r\n            open: isOpen\r\n        });\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState( {\r\n            open: true\r\n        });\r\n    };\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type === 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    };\r\n\r\n    handleClickRandomGameModal = (game,difficulty) => {\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            showRandomGameModal: false,\r\n            PageSelected: <RandomGamePage randomGame={'Yes'} game={game} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n        });\r\n    }\r\n\r\n    handleClickRandomGame = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: true,\r\n        });\r\n    }\r\n\r\n\r\n    handleClickPuzzleRush = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: true,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickPuzzleRushModal = (difficulty,games,p_id) => {\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            showPuzzleRushModal: false,\r\n            PageSelected: <PuzzleRushPage puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={difficulty}/>,\r\n            open: isOpen\r\n        });\r\n    };\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: false\r\n        });\r\n    }\r\n\r\n    closeRandomGameLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: false\r\n        });\r\n    }\r\n\r\n    handleGameClick = (name, gamedata,highscores,uri) => {\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <PlayGame name={name} highscores={highscores} gamedata={gamedata} uri={uri}/>,\r\n            open: isOpen\r\n        });\r\n    };\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var newGame = <CreateGame state={\"new\"}/>; //KNOWN bug where if you create a game you have to refresh the page to cause a re-render of <CreateGame/>\r\n\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: newGame, //if selected page is already CreateGame it wont refresh known problem\r\n            open: isOpen\r\n        });\r\n    };\r\n\r\n\r\n    handleClickProfile = event => {\r\n        event.preventDefault();\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        if (window.loggedin === 'Yes') {\r\n            this.setState({\r\n                PageSelected: <ProfilePage handleClickPlayGame={this.handleGameClick} gamesview={this.state.gamesview} solutionsview={this.state.solutionsview} puzzlerushview={this.state.puzzlerushview}/>,\r\n                open: isOpen\r\n            });\r\n        }\r\n        else {\r\n            this.SignInButtonPressed('Sign in');\r\n        }\r\n    };\r\n\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <FindGame handleGameClick={this.handleGameClick}/>,\r\n            open: isOpen\r\n        });\r\n    };\r\n\r\n\r\n    handleClickAboutUs = event => {\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <AboutUs/>,\r\n            open: isOpen\r\n        });\r\n    }\r\n\r\n    handleClickLearnGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <LessonsPage/>,\r\n            open: isOpen\r\n        });\r\n\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileAnchorEl: null,\r\n            mobileMenuOpen: false\r\n        });\r\n    };\r\n\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({\r\n            mobileAnchorEl: event.currentTarget,\r\n            mobileMenuOpen: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const theme = createMuiTheme({\r\n            palette: {\r\n                primary: teal,\r\n                secondary: {\r\n                    main: '#e65100',\r\n                },\r\n            }\r\n        });\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <AppBar\r\n                        position=\"fixed\"\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: this.state.open,\r\n                        })}\r\n                     >\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={this.handleDrawerOpen}\r\n                                edge=\"start\"\r\n                                className={clsx(classes.menuButton, this.state.open && classes.hide)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" className={classes.title} noWrap>\r\n                                <a href=\"/\" style={{color: 'white'}}>RobotsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </Typography>\r\n                            <div className={classes.grow} />\r\n                            <div className={classes.sectionDesktop}>\r\n                                <LoggedInUser/>\r\n                                <IconButton aria-label=\"show 2 new notifications\" color=\"inherit\">\r\n                                    <Badge badgeContent={2} color=\"secondary\">\r\n                                        <NotificationsIcon />\r\n                                    </Badge>\r\n                                </IconButton>\r\n                            </div>\r\n                            <div className={classes.sectionMobile}>\r\n                                <IconButton\r\n                                    aria-label=\"show more\"\r\n                                    aria-controls={\"primary-search-account-menu-mobile\"}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.handleMobileMenuOpen}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <MoreIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Menu\r\n                        anchorEl={this.state.mobileAnchorEl}\r\n                        anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        id={\"primary-search-account-menu-mobile\"}\r\n                        keepMounted\r\n                        transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        open={this.state.mobileMenuOpen}\r\n                        onClose={this.handleMobileMenuClose}\r\n                    >\r\n                        <MenuItem>\r\n                            <LoggedInUser/>\r\n                        </MenuItem>\r\n                        <MenuItem>\r\n                            <p>Notifications</p>\r\n                            <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                                <Badge badgeContent={11} color=\"secondary\">\r\n                                    <NotificationsIcon/>\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                    <Drawer\r\n                        id=\"MainDrawer\"\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.state.open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div className={classes.drawerHeader}>\r\n                            <div className={classes.drawerHeaderLeft}>\r\n                                <SignInButton onClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.drawerHeaderRight}>\r\n                                <IconButton onClick={this.handleDrawerClose}>\r\n                                    {useTheme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Play\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Create a Game'} onClick={this.handleClickCreateGame}>\r\n                                <ListItemIcon><PlayArrowIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Create a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Find a Game'} onClick={this.handleClickFindGame}>\r\n                                <ListItemIcon><SearchIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Find a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge'} onClick={this.handleClickDailyChallenge}>\r\n                                <ListItemIcon><TodayIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Random Game'} onClick={this.handleClickRandomGame}>\r\n                                <ListItemIcon><CasinoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Random Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Puzzle Rush'} onClick={this.handleClickPuzzleRush}>\r\n                                <ListItemIcon><ExtensionIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Puzzle Rush'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Learn\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Lessons'} onClick={this.handleClickLearnGame}>\r\n                                <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Lessons'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Starter Puzzles'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Starter Puzzles'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Community\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Profile'} onClick={this.handleClickProfile}>\r\n                                <ListItemIcon><AccountBoxIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Profile'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Teams'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Teams'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Forum'}>\r\n                                <ListItemIcon><WarningIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Forum'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Tools\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'About Us'} onClick={this.handleClickAboutUs}>\r\n                                <ListItemIcon><InfoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'About Us'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Settings'}>\r\n                                <ListItemIcon><SettingsIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Settings'} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n                    <main className={clsx(classes.content, {\r\n                        [classes.contentShift]: this.state.open,\r\n                    })}>\r\n                        <div className={classes.drawerHeader} />\r\n                        {this.state.PageSelected}\r\n                    </main>\r\n                    <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n                    <PuzzleRushDifficultyModal\r\n                        closeModal={this.closePuzzleRushLoginModal}\r\n                        show={this.state.showPuzzleRushModal}\r\n                        handleClickPuzzleRush={this.handleClickPuzzleRushModal}\r\n                    />\r\n                    <RandomGameDifficultyModal\r\n                        closeModal={this.closeRandomGameLoginModal}\r\n                        show={this.state.showRandomGameModal}\r\n                        handleClickRandomGame={this.handleClickRandomGameModal}\r\n                    />\r\n                </div>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}