{"version":3,"sources":["constants/constants.js","containers/Modals/DailyChallengeStartModal.js","containers/Modals/DailyEvolutionStartModal.js","components/WeeklyGameItems.js","components/DailyGameItems.js","components/SwitchPad.jsx","components/DailyMovesView.jsx","components/CreateBoardGoalSelector.jsx","components/LearnGameItems.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinModal.jsx","components/YouWinDailySingleModal.js","components/YouWinDailyFinalModal.js","components/YouWinWeeklyModal.js","components/AddPuzzleModal.jsx","components/ToggleSettings.js","components/Timer.js","containers/DisplayView.js","components/HighScores.jsx","containers/Modals/PuzzleRushFinishedModal.js","containers/Modals/RandomGameStatsModal.jsx","components/CloseIconWithOnClick.jsx","components/DescriptionList.jsx","components/YouWinLessonModal.js","components/ShowDailyChallengeScoresCard.jsx","components/DailyChallengeHistoryData.js","components/boardgenerator.js","containers/Modals/BoardResetModal.js","containers/Game.js","Pages/DailyEvolutionPage.js","Material-UI/themes.jsx","Pages/Leaderboard.js","Pages/CreateGame.js","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","Pages/Home.js","Pages/WeeklyChallengePage.js","containers/Modals/LoginModal.js","components/SignInButton.js","components/LoggedInUser.js","containers/Modals/PuzzleRushDifficultyModal.js","containers/Modals/RandomGameDifficultyModal.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","components/ProfilePageComponents/ProfilePageCreatedGamesDetails.js","components/ProfilePageComponents/ProfilePageSolutionDetails.js","Pages/ProfilePage.js","Pages/RandomGamePage.js","Pages/PuzzleRushPage.js","Pages/LessonsPage.js","Pages/DailyChallenge.js","Pages/AboutUs.js","components/ShowDailyPuzzleHistory.js","Pages/DailyChallengeHistory.js","Pages/DailyChallengeHistoryAnswersPage.js","components/LoadingPage.jsx","App.js","ContainerApplication.js","serviceWorker.js","index.js"],"names":["UP","DOWN","LEFT","RIGHT","MOBILE_INNER_SCREEN_WIDTH","ROBOT_GREEN","ROBOT_BLUE","ROBOT_YELLOW","ROBOT_RED","COLORED_SWITCH_BLUE","COLORED_SWITCH_GREEN","COLORED_SWITCH_PURPLE_OFF","COLORED_SWITCH_BROWN_OFF","COLORED_GOAL_IMAGE","GOAL_IMAGE","DIRECTION_MAP_IMAGES","yellow","red","green","blue","DailyChallengeStartModal","props","startDailyChallenge","startDaily","Dialog","onClose","this","closeModal","open","show","maxWidth","DialogTitle","id","closeLoginModal","DialogContent","dividers","Typography","style","marginBottom","variant","display","content","clear","float","width","padding","textAlign","Math","floor","window","goldtime","src","silvertime","bronzetime","class","onClick","href","DialogActions","Button","React","Component","DailyEvolutionStartModal","startDailyEvolution","startEvolution","WeeklyGameItems","handleClick","handleClickGame","index","numMoves","undefined","moveHistoryList","length","selected","game","g_moves","color","paddingRight","DailyGameItems","bestScore","dimension","position","dim","height","top","left","userSelect","backgroundColor","Goal","image","colorSignifier","isOn","DailyMovesView","resetToBest","moveHistory","playerState","Divider","map","move","robot","dir","CreateBoardGoalSelector","useState","wildchecked","setWildChecked","Paper","FormControl","component","FormLabel","FormGroup","row","FormControlLabel","value","control","Checkbox","handleWildCardClick","checked","label","labelPlacement","disabled","buildMode","handleColoredClick","LearnGameItems","name","MovesView","styleoutside","styleinside","styleinside2","Square","border","margin","overflow","children","transition","styleoutsidedraggable","boxShadow","backgroundSize","backgroundImage","borderRadius","Robot","onStopDragHandler","e","handleCreateMode","isCreateMode","x","y","grid","draggableGrid","onStop","bounds","orientation","opacity","wallType","coloredSwitches","wallThickness","wallOffset","redOpac","blueOpac","greenOpac","yellowOpac","switches","Wall","styledragable","endPosition","obj","key","hasOwnProperty","YouWinModal","disableAutoFocus","disableEnforceFocus","handleClose","container","document","getElementById","BackdropProps","TextField","defaultValue","username","submitAnswer","resetPuzzle","YouWinDailySingleModal","totalMoves","undoMove","moveNextPuzzle","YouWinDailyFinalModal","handleClickSubmitGame","setState","error","Alert","severity","newPlayerState","state","submitted","YouWinWeeklyModal","buttontext","AddPuzzleModal","campaignPuzzle","loggedin","userInfo","userID","submitPuzzleCampaign","submitPuzzle","ToggleSettings","event","Switch","onChange","showColoredLineDirections","Timer","minutes","seconds","timer","myInterval","setInterval","puzzleRushTimeUp","clearInterval","valuetext","DisplayView","createMode","fullWidth","handleCreateBoardClick","toggleBuildMode","createBoardPressed","copyToClipboard","dummy","createElement","body","appendChild","location","host","uri","select","execCommand","removeChild","copiedClipboard","thisThing","copyButtonText","setTimeout","handleDimensionChange","getElementsByClassName","blur","parseInt","toString","DimensionChanged","showPuzzleLink","isPuzzleRush","isLesson","isDailyChallengeAnswers","isDailyChallenge","isWeeklyChallenge","paddingBottom","marginRight","marginTop","ButtonGroup","toggleLineIndicators","gutterBottom","Slider","onChangeCommitted","getAriaValueText","step","marks","min","max","squareSizeValue","valueLabelDisplay","theme","createMuiTheme","palette","main","primary","secondary","black","typography","fontFamily","highscores","Grid","spacing","highscore","item","xs","elevation","marginLeft","noWrap","fontWeight","comment","score","created","user_id","gold_medals","silver_medals","bronze_medals","justifyContent","Tooltip","title","Badge","badgeContent","sx","size","highscorestyle","PuzzleRushWinModal","onBackdropClick","difficulty","md","List","dense","ListItem","ListItemText","numPuzzlesCompleted","averageTime","averageMoves","differenceOptimal","movesPerSecond","handleClickPlayAgain","RandomGameStatsModal","showStatsModal","handleShowRandomAnswers","answers","lowestMoveSequence","lowestMoves","CloseIconWithOnClick","onMouseDown","Descriptionlist","tipsText","text","ListItemSecondaryAction","IconButton","edge","handleCloseToolTips","YouWinLessonModal","useStyles","makeStyles","root","bullet","transform","fontSize","pos","ShowDailyChallengeScoresCard","classes","Card","className","CardContent","MovesforPuzzle","MoveSequence","DailyChallengeHistoryData","difficultyforPuzzle","lowestMovesforPuzzle","nameSubmitted","scoreSubmitted","playerMovedSequence","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","random","randomPercent","type","boardState","wallVerticle","wallHorizontal","goal","randompos1","randompos2","randompos3","randompos4","randomPositions","i","push","extend","j","gameWon","playerStart","slice","BoardResetModal","createBoardHandler","preventDefault","percent","createBoard","Input","inputProps","placeholder","MyStopwatch","stopwatchOffset","Date","setSeconds","getSeconds","seconds_add","minutes_add","useStopwatch","offsetTimestamp","autoStart","hours","displaySeconds","days","isRunning","start","pause","reset","displayMinutes","displayHours","flex","Chip","addEventListener","keyCode","target","indexOf","formatGeneratedMoveSequence","moves","images","charAt","direction","setDefaultSquareSize","boardWidth","boardHeight","drawerWidth","getComputedStyle","windowWidth","innerWidth","settingstop","innerHeight","settings","squarevalue","ColoredLineDirections","Game","updateHighscores","axios","get","then","res","highscoresdata","JSON","parse","data","FindhighscoreIsDiff","squareSize","copiedToClipboard","check","tocheck","toreturn","DChighscoreIsDiff","updateWeeklyHighscores","wc_id","weeklyChallengeSessionBestHistory","weeklyChallengeSessionBestPlayerState","handleClickWeeklyClick","updateDailyEvolutionHighscores","dce_id","dailyEvolutionSessionBestHistory","dailyEvolutionSessionBestPlayerState","dailyEvolutionSessionSwitchState","handleClickDailyEvolution","dcehighscores","updateDailyHighscores","dc_id","dailyChallengeSessionBestHistory","dailyChallengeSessionBestPlayerState","handleClickDailyChallenge","dchighscores","componentDidMount","onkeydown","handleKeyDown","loadedGame","IntervalId","dailyChallengeMode","dailyEvolutionMode","weeklyChallengeMode","componentWillUnmount","newDirection","handlePlayerMovement","tabSelector","handleUndoMove","robotSelect","robotSelected","namesubmit","themoveHistory","post","puzzledata","authorname","history","handleLineDirections","solutiondata","isEvolution","coloredSwitchesOn","stringify","coloredSwitchesStart","dailySubmittedSucessfully","showBoardResetPanelModal","closeRandomStatsModal","closeCreateBoardModal","closePuzzleRushFinishedModal","showPuzzleRushFinishedModal","board","BoardGenerator","isWallSolid","toReturn","substring","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","nextLessonPuzzle","puzzle","numPuzzleon","handleLearnClickGame","totalMovesDiff","solutiondifference","totalMovesList","avgMoves","p_id","differenceFrom","console","log","percentile","weeklyChallegeSaveMovesCookie","LastRobotPosition","completed","playerStateList","checkWinningPosition","coloredGoals","gameswonWeekly","games","g_puzzledata","gamesWon","submitWeeklyAnswer","submitDailyEvolutionAnswer","dce_movesList","dce_playerList","submitDailyAnswer","dc_movesList","dc_playerList","checkwin","Won","player","found","colorfound","puzzleRush","randomGame","dailyChallengeModeAnswers","gamesWonDaily","handleDailyClickGame","gamesWonWeekly","handleWeeklyClickGame","moveNextPuzzleWeekly","learnMode","g_id","solutionmoves","newarray","concat","oldPositon","newSwitches","prevPosition","splice","description","handleDailyClickAnswersGame","g_solutiondata","g_difficulty","solutionDataSubmitted","coloredSwitchesOnList","goalItem","newgoal","newColoredGoals","filter","trimName","separated","split","word","loadSidebar","paddingTop","dailyDayName","HighScores","daily_start_timer_seconds","daily_start_timer_minutes","alignItems","author","borderTopRightRadius","borderBottomRightRadius","startIcon","hasVoted","updateLike","borderTopLeftRadius","borderBottomLeftRadius","votes","action","vote","newHasVoted","newVotes","isNaN","catch","_","signInModalOpen","handlePlayerMovementFromMouse","moveObj","pop","newSwitchState","createModeWallClick","indexToChange","newWallHorizontal","wallH","newWallVerticle","wallV","onStopDragHandlerGoal","round","lastY","lastX","newGoals","oldPosition","flashMessage","duration","coloredSwitchesOff","goals","gamedata","savedMoves","g_name","g_uri","pushState","settingsWidth","settingsHeight","percentWall","settingsPercent","LineDirections","paddingLeft","sm","numPuzzleRush","isDailyEvolution","zeroMinWidth","Board","square","ColoredLineDirection","ColoredLine","puzzleRushPercentileCompleted","withRouter","DailyEvolutionPage","dailyChallengeGameslist","flexGrow","homepage","griditems","paper","Width","img","maxHeight","baseExpansion","heading","pxToRem","flexBasis","flexShrink","secondaryHeading","darkmode","iconcards","marginBotton","iconcardsDaily","minWidth","titlehome","titledailyroto","iconfonts","createboardcard","demo","background","centeredProfile","expandedPanelDCH","table","Leaderboard","anchorEl","setAnchorEl","puzzleRushTabValue","setPuzzleRushTabValue","puzzleRushDifficultyValue","setPuzzleRushDifficultyValue","puzzleRushDifficultyLabel","setPuzzleRushDifficultyLabel","puzzle_rush_leaderboard","easyrandomscore","puzzleRushCurrentScoreList","setPuzzleRushCurrentScoreList","easyrandomusername","puzzleRushCurrentUserList","setPuzzleRushCurrentUserList","handlePuzzleRushDifficultyChange","useEffect","updatePuzzleRushList","mediumrandomscore","mediumrandomusername","hardrandomscore","hardrandomusername","exhardrandomscore","exhardrandomusername","easyclassicscore","easyclassicusername","mediumclassicscore","mediumclassicusername","hardclassicscore","hardclassicusername","exhardclassicscore","exhardclassicusername","easyclassicv2score","easyclassicv2username","mediumclassicv2score","mediumclassicv2username","hardclassicv2score","hardclassicv2username","exhardclassicv2score","exhardclassicv2username","align","justify","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","findGame_leaderboard","entry","Crowns","dailyChallenge_leaderboard","currentTarget","Menu","keepMounted","Boolean","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","Tabs","indicatorColor","textColor","newValue","Tab","userName","CreateGame","withStyles","upperPadding","upperPaddingButton","bottom","lowerPadding","rightSideText","leftSideText","numberOfHighScores","trimNameShort","plays","handleGameClick","disableGutters","FindGame","handleFilterMenuOpen","keycode","handleSearchSubmit","scrollTo","findWindowHeight","setFindWindow","scrollY","handleCloseFilterMenuMostPlayed","searchTerm","searchRef","search","offset","gameslist","highscoreslist","setNumFindGames","lastSearch","hasMore","handleCloseFilterMenuMostLiked","handleCloseFilterMenuHighest","loadMoreItems","isLoadingSearch","offsetSearch","handleCloseFilterMenu","InputBase","input","inputRef","ref","onKeyPress","iconButton","divider","FindGameElements","pageStart","loadMore","bind","loader","CircularProgress","threshold","PlayGame","ComplexGrid","greeting","experiencedUser","paragraph","CardActionArea","CardMedia","alt","handleClickFindGame","handleClickCreateGame","handleClickRandomGame","handleClickLearnGame","handleClickPuzzleRush","dividerFullWidth","WeeklyChallengePage","handleWeeklyClick","weeklyChallengeGameslist","wchighscores","LoginModal","loginGoogle","loginFacebook","SignInButton","textToShow","LoggedInUser","SignInButtonPressed","profilePicture","PuzzleRushDifficultyModal","handleClickPuzzleRushModal","isLoading","handleClickEasyPuzzleRush","handleClickMediumPuzzleRush","handleClickHardPuzzleRush","handleClickExHardPuzzleRush","handleChange","wrap","RadioGroup","Radio","handleClickRandomGameModal","handleClickEasy","handleClickMedium","handleClickHard","handleClickExHard","handleClickGodMode","ProfilePageCreatedGamesDetails","handleClickPlayGame","ProfilePageSolutionDetails","solution","WinnerCreated","WinnerUsername","ProfilePage","createData","col1","col2","col3","columns","rows","puzzlerushview","maxeasyc","maxeasyp","maxeasyc2","maxmediumc","maxmediump","maxmediumc2","maxhardc","maxhardp","maxhardc2","maxexhardc","maxexhardp","maxexhardc2","rowseff","maxeffec","maxeffep","maxeffec2","maxeffmc","maxeffmp","maxeffmc2","maxeffhc","maxeffhp","maxeffhc2","maxeffexc","maxeffexp","maxeffexc2","setError","expandedGame","setExpandedGame","expandedHighscores","setExpandedHighscores","newuser","gamesview","ExpansionPanel","expanded","panel","isExpandedGame","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","solutionsview","isExpandedHighScores","WinnerUserId","column","aligh","RandomGamePage","PuzzleRushPage","LessonsPage","learngameslist","DailyChallengePage","AboutUs","CardActions","Avatar","ShowDailyPuzzleHistory","handleDailyPuzzleHistoryClick","DailyChallengeHistory","expandedPanel","setExpandedPanel","dailychallengehistory","isExpanded","DailyChallengeHistoryAnswersPage","LoadingPage","App","handleDrawerClose","boolean","isDailyStarted","showDailyChallengeModal","handleClickDailyChallengeModal","isEvolutionStarted","showDailyEvolutionModal","handleClickDailyEvolutionModal","loadingPage","isOpen","PageSelected","dailyEvolutionGameslist","DailyChallenge","handleDrawerOpen","showLoginModal","showRandomGameModal","showPuzzleRushModal","handleClickDailyChallengeHistory","historydata","challengeHistoryData","dailychallengehistoryloaded","closeDailyChallengeModal","closeDailyEvolutionModal","closePuzzleRushLoginModal","closeRandomGameLoginModal","handleClickProfile","profileData","profileDataloaded","num","filterTerm","numFindGames","wc_movesList","wc_playerList","wc_gamesWon","numGames","handleHomePageClick","handleClickWeekly100","handleClickWebsiteLeaderboard","handleClickAboutUs","handleMobileMenuClose","mobileAnchorEl","mobileMenuOpen","showPage","handleMobileMenuOpen","bannerImg","iconImg","token","linedir","LineDirFlag","teal","AppBar","clsx","appBar","appBarShift","Toolbar","toolbar1","menuButton","hide","grow","sectionDesktop","sectionMobile","Drawer","drawer","anchor","drawerPaper","drawerHeader","drawerHeaderLeft","drawerHeaderRight","useTheme","button","ListItemIcon","contentShift","RandomGameDifficultyModal","transitions","create","easing","sharp","leavingScreen","easeOut","enteringScreen","mixins","toolbar","breakpoints","up","toggleBorder","gradient","ContainerApplication","render","Page","hostname","match","ReactDOM","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"js/main.5ad83879.chunk.js","sourcesContent":["export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const MOBILE_INNER_SCREEN_WIDTH = '960';\r\n\r\nexport const SQUARE_CORE_COLOR = '#d8dbd0';\r\nexport const SQUARE_INNER_COLOR = '#d8dbd0';\r\nexport const SQUARE_OUTSIDE_COLOR = '#acada8';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\n\r\nexport const COLORED_SWITCH_BLUE = '/static/images/lever_blue.png';\r\nexport const COLORED_SWITCH_PURPLE = '/static/images/lever_dark_green.png';\r\nexport const COLORED_SWITCH_BROWN = '/static/images/lever_grey.png';\r\nexport const COLORED_SWITCH_GREEN = '/static/images/lever_green.png';\r\n\r\nexport const COLORED_SWITCH_PURPLE_ON = '/static/images/lever_purple_on.png';\r\nexport const COLORED_SWITCH_BROWN_ON = '/static/images/lever_grey_on.png';\r\n\r\nexport const COLORED_SWITCH_PURPLE_OFF = '/static/images/lever_purple_off.png';\r\nexport const COLORED_SWITCH_BROWN_OFF = '/static/images/lever_grey_off.png';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const GOLD_MEDAL = '/static/images/Gold_Medal.jpg';\r\nexport const BRONZE_MEDAL = '/static/images/Bronze_Medal.jpg';\r\nexport const SILVER_MEDAL = '/static/images/Silver_Medal.jpg';\r\n\r\n\r\nexport const COLORED_GOAL_IMAGE = '/static/images/targetbullseye.png';\r\nexport const COLORED_SWITCHPAD_IMAGE = '/static/images/lever.png';\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { GOLD_MEDAL, SILVER_MEDAL, BRONZE_MEDAL} from \"../../constants/constants\";\r\n\r\n\r\nconst stylecol = () => {\r\n    return({\r\n            float: 'left',\r\n            width: '50%',\r\n            margin: 'auto',\r\n            padding: '0 50px',\r\n            marginTop: '6px',\r\n    });\r\n}\r\nconst imgstyle = () => {\r\n    return({\r\n        maxWidth: \"100%\",\r\n    });\r\n}\r\n\r\n\r\nconst stylecolumn2 = () => {\r\n    return({\r\n        float: \"left\",\r\n        width: \"33.33%\",\r\n        padding: \"10px\",\r\n    });\r\n}\r\n\r\nconst stylerow = () => {\r\n    return ({\r\n        content: \"\",\r\n        display: \"table\",\r\n        clear: \"both\",\r\n    });\r\n}\r\n\r\nconst headerstyle = () => {\r\n    return ({\r\n        textAlign: \"center\",\r\n    });\r\n}\r\n\r\nconst spacing = () => {\r\n    return({\r\n            marginBottom: '10px',\r\n    });\r\n}\r\n\r\nexport default class DailyChallengeStartModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    startDailyChallenge = () => {\r\n        this.props.startDaily();\r\n    }\r\n\r\n    render () {\r\n        return (\r\n        <Dialog onClose={this.props.closeModal}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={this.props.show}\r\n                maxWidth={\"xs\"}\r\n        >\r\n            <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>New Daily Challenge Format</DialogTitle>\r\n            <DialogContent dividers>\r\n                    <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                       • Daily Challenge timer STARTS when you click the start button\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                        • Puzzles reset at 3pm EST but you no longer have to get on at that time in order to get a highscore\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                        • Please respect the rules of the game and no incognito windows.\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                        • Medals are given when you get the lowest possible score, Medals are also reset at the beginning of each month but tracked in the Website Leaderboard\r\n                    </Typography>\r\n                    <br/>\r\n                <div style={stylerow()}>\r\n                    <div style={stylecolumn2()}> <h2 style={headerstyle()}> {Math.floor(window.goldtime / 60)}:{window.goldtime % 60 <= 9 ? '0' + window.goldtime % 60 : window.goldtime % 60} </h2> <img src={GOLD_MEDAL} style={imgstyle()}/> </div>\r\n                    <div style={stylecolumn2()}> <h2 style={headerstyle()}> {Math.floor(window.silvertime / 60)}:{window.silvertime % 60 <= 9 ? '0' + window.silvertime % 60 : window.silvertime % 60} </h2> <img src={SILVER_MEDAL} style={imgstyle()}/>  </div>\r\n                    <div style={stylecolumn2()}> <h2 style={headerstyle()}> {Math.floor(window.bronzetime / 60)}:{window.bronzetime % 60 <= 9 ? '0' + window.bronzetime % 60 : window.bronzetime % 60} </h2> <img src={BRONZE_MEDAL} style={imgstyle()}/> </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <a onClick={this.startDailyChallenge} href=\"#\" id={\"buttongoogle\"}><i class=\"fa fa-google fa-fw\">\r\n                      </i> START\r\n                    </a>\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.props.closeModal}>Close</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst stylecol = () => {\r\n    return({\r\n            float: 'left',\r\n            width: '50%',\r\n            margin: 'auto',\r\n            padding: '0 50px',\r\n            marginTop: '6px',\r\n    });\r\n}\r\n\r\nconst spacing = () => {\r\n    return({\r\n            marginBottom: '10px',\r\n    });\r\n}\r\n\r\nexport default class DailyEvolutionStartModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    startDailyEvolution = () => {\r\n        this.props.startEvolution();\r\n    }\r\n\r\n    render () {\r\n        return (\r\n        <Dialog onClose={this.props.closeModal}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={this.props.show}\r\n                maxWidth={\"xs\"}\r\n        >\r\n            <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>New Daily Evolution</DialogTitle>\r\n            <DialogContent dividers>\r\n                    <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                       • Plays the same as Daily Challenge with timers and reset times.\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                        • The On switches toggle whether the wall is passable or not.\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                        • please let me know if there are any bugs, or possible improvements to the format. it currently is possible to have a map generated that is IMPOSSIBLE but im hoping that doesnt happen until i find a fix\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                        • I am currently unable to create a solver for this format as I am getting memory errors trying to brute force a solution\r\n                    </Typography>\r\n                    <br/>\r\n                <div class=\"col\">\r\n                    <a onClick={this.startDailyEvolution} href=\"#\" id={\"buttongoogle\"}><i class=\"fa fa-google fa-fw\">\r\n                      </i> START EVOLUTION\r\n                    </a>\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.props.closeModal}>Close</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst leftstyle = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingRight: '0px',\r\n        textAlign: 'left'\r\n    }\r\n}\r\n\r\n\r\nconst rightstyle = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingRight: '0px',\r\n        textAlign: 'right'\r\n    }\r\n}\r\n\r\nexport default function WeeklyGameItems(props) {\r\n    const handleClick = () => {\r\n        props.handleClickGame(props.index)\r\n    }\r\n    const numMoves = props.moveHistoryList[props.index] == undefined ? 0 : props.moveHistoryList[props.index].length;\r\n    if (props.selected === props.index) {\r\n        return props.game.g_moves == numMoves ?\r\n             (\r\n            <Button\r\n                variant=\"contained\" color=\"secondary\"\r\n                aria-label=\"vertical outlined primary button group\"\r\n                onClick={handleClick}\r\n            >\r\n                {'Solved in minimum moves!'}\r\n            </Button>\r\n            )\r\n            :\r\n            (\r\n                <Button\r\n                    variant=\"contained\" color=\"secondary\"\r\n                    aria-label=\"vertical outlined primary button group\"\r\n                    onClick={handleClick}\r\n                >\r\n                    <div style={leftstyle()}>\r\n                        {'Best: ' + numMoves}\r\n                    </div>\r\n                </Button>\r\n            )\r\n    }\r\n    else {\r\n        return props.game.g_moves == numMoves ?\r\n             (\r\n            <Button\r\n                variant=\"contained\" color=\"primary\"\r\n                aria-label=\"vertical outlined primary button group\"\r\n                onClick={handleClick}\r\n            >\r\n                {'Solved in minimum moves!'}\r\n            </Button>\r\n            )\r\n            :\r\n            (\r\n                <Button\r\n                    variant=\"contained\"\r\n                    aria-label=\"vertical outlined primary button group\"\r\n                    onClick={handleClick}\r\n                >\r\n                    <div style={leftstyle()}>\r\n                        {'Best: ' + numMoves}\r\n                    </div>\r\n                </Button>\r\n            )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst leftstyle = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingRight: '0px',\r\n        textAlign: 'left'\r\n    }\r\n}\r\n\r\n\r\nconst rightstyle = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingRight: '0px',\r\n        textAlign: 'right'\r\n    }\r\n}\r\n\r\nexport default function DailyGameItems(props) {\r\n    const handleClick = () => {\r\n        props.handleClickGame(props.index)\r\n    }\r\n    const numMoves = props.moveHistoryList[props.index] == undefined ? 0 : props.moveHistoryList[props.index].length;\r\n    const bestScore = props.bestScore[props.index] == undefined ? 0 : props.bestScore[props.index].length\r\n    if (props.selected === props.index) {\r\n        return props.game.g_moves == numMoves ?\r\n             (\r\n            <Button\r\n                variant=\"contained\" color=\"secondary\"\r\n                aria-label=\"vertical outlined primary button group\"\r\n                onClick={handleClick}\r\n            >\r\n                {'Solved in minimum moves!'}\r\n            </Button>\r\n            )\r\n            :\r\n            (\r\n                <Button\r\n                    variant=\"contained\" color=\"secondary\"\r\n                    aria-label=\"vertical outlined primary button group\"\r\n                    onClick={handleClick}\r\n                >\r\n                    <div style={leftstyle()}>\r\n                        {'Best: ' + bestScore}\r\n                    </div>\r\n                    <div style={rightstyle()}>\r\n                        {'Min is ' + [props.game.g_moves]}\r\n                    </div>\r\n                </Button>\r\n            )\r\n    }\r\n    else {\r\n        return props.game.g_moves == numMoves ?\r\n             (\r\n            <Button\r\n                variant=\"contained\" color=\"primary\"\r\n                aria-label=\"vertical outlined primary button group\"\r\n                onClick={handleClick}\r\n            >\r\n                {'Solved in minimum moves!'}\r\n            </Button>\r\n            )\r\n            :\r\n            (\r\n                <Button\r\n                    variant=\"contained\"\r\n                    aria-label=\"vertical outlined primary button group\"\r\n                    onClick={handleClick}\r\n                >\r\n                    <div style={leftstyle()}>\r\n                        {'Best: ' + bestScore}\r\n                    </div>\r\n                    <div style={rightstyle()}>\r\n                        {'Min is ' + [props.game.g_moves]}\r\n                    </div>\r\n                </Button>\r\n            )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,\r\n        COLORED_SWITCHPAD_IMAGE,\r\n        SQUARE_INNER_COLOR,\r\n        SQUARE_CORE_COLOR,\r\n        GOAL_IMAGE,\r\n        ROBOT_GREEN,\r\n        ROBOT_BLUE,\r\n        ROBOT_RED,\r\n        ROBOT_YELLOW,\r\n        COLORED_GOAL_IMAGE,\r\n        COLORED_SWITCH_BLUE,\r\n        COLORED_SWITCH_PURPLE,\r\n        COLORED_SWITCH_GREEN,\r\n        COLORED_SWITCH_BROWN,\r\n        COLORED_SWITCH_BROWN_ON,\r\n        COLORED_SWITCH_BROWN_OFF,\r\n        COLORED_SWITCH_PURPLE_ON,\r\n        COLORED_SWITCH_PURPLE_OFF\r\n} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none',\r\n        backgroundColor: 'transparent',\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none',\r\n        backgroundColor: 'transparent'\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.position == null) {\r\n        return null\r\n    }\r\n    var image = COLORED_SWITCH_BLUE;\r\n    if (props.position.colorSignifier === 'brown') {\r\n        image = props.isOn ? COLORED_SWITCH_BROWN_ON : COLORED_SWITCH_BROWN_OFF\r\n    } else if (props.position.colorSignifier === 'purple') {\r\n        image = props.isOn ? COLORED_SWITCH_PURPLE_ON : COLORED_SWITCH_PURPLE_OFF\r\n    } else if (props.position.colorSignifier === 'green') {\r\n        image = COLORED_SWITCH_GREEN;\r\n    } else if (props.position.colorSignifier === 'blue') {\r\n        image = COLORED_SWITCH_BLUE;\r\n    }\r\n    return(<img src={image} style={style(props)}/>)\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass DailyMovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    resetToBest = () => {\r\n        this.props.resetToBest(this.props.moveHistory,this.props.playerState)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.moveHistory.length == 0 ?\r\n            <div style={style()}>\r\n                <Typography>Personal Best</Typography>\r\n                <Divider />\r\n                <Typography>None</Typography>\r\n            </div> :\r\n            <div style={style()}>\r\n                <Typography>Personal Best</Typography>\r\n                <Divider />\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n                <Divider />\r\n                <Button color=\"secondary\" onClick={this.resetToBest}>Reset to best</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyMovesView;","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function CreateBoardGoalSelector(props) {\r\n  const [wildchecked, setWildChecked] = React.useState(true);\r\n  const handleWildCardClick = () => {\r\n    props.handleWildCardClick();\r\n    setWildChecked(wildchecked ? false : true);\r\n  }\r\n\r\n  const handleBlueClick = () => {\r\n    props.handleColoredClick('blue');\r\n  }\r\n  const handleGreenClick = () => {\r\n    props.handleColoredClick('green');\r\n  }\r\n  const handleRedClick = () => {\r\n    props.handleColoredClick('red');\r\n  }\r\n  const handleYellowClick = () => {\r\n    props.handleColoredClick('yellow');\r\n  }\r\n  return (\r\n  <Paper>\r\n    <FormControl style={{backgroundColor: 'white', textAlign: 'center'}} component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Goal Selector</FormLabel>\r\n      <FormGroup aria-label=\"position\" row>\r\n        <FormControlLabel\r\n          value=\"Wildcard\"\r\n          control={<Checkbox onClick={handleWildCardClick} checked={wildchecked} color=\"primary\" />}\r\n          label=\"wildcard\"\r\n          labelPlacement=\"top\"\r\n          disabled={!props.buildMode}\r\n        />\r\n        <FormControlLabel\r\n          value=\"Blue\"\r\n          control={<Checkbox onClick={handleBlueClick} color=\"primary\" />}\r\n          label=\"blue\"\r\n          labelPlacement=\"top\"\r\n          disabled={!props.buildMode}\r\n        />\r\n        <FormControlLabel\r\n          value=\"Green\"\r\n          control={<Checkbox onClick={handleGreenClick} color=\"primary\" />}\r\n          label=\"green\"\r\n          labelPlacement=\"top\"\r\n          disabled={!props.buildMode}\r\n        />\r\n        <FormControlLabel\r\n          value=\"Red\"\r\n          control={<Checkbox onClick={handleRedClick} color=\"primary\" />}\r\n          label=\"red\"\r\n          labelPlacement=\"top\"\r\n          disabled={!props.buildMode}\r\n        />\r\n        <FormControlLabel\r\n          value=\"Yellow\"\r\n          control={<Checkbox onClick={handleYellowClick} color=\"primary\" />}\r\n          label=\"yellow\"\r\n          labelPlacement=\"top\"\r\n          disabled={!props.buildMode}\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function LearnGameItems(props) {\r\n    const handleClick = () => {\r\n        props.handleClickGame(props.index)\r\n    }\r\n    if (props.selected === props.index) {\r\n        return (\r\n            <Button\r\n                variant=\"contained\" color=\"primary\"\r\n                aria-label=\"vertical outlined primary button group\"\r\n                onClick={handleClick}\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={handleClick}\r\n                aria-label=\"vertical outlined primary button group\"\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><Typography variant={\"h6\"}>Moves: {this.props.moveHistory.length}</Typography>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;\r\n","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div id=\"MainGameBoard\" style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleoutsidedraggable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var boxShadow = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        boxShadow = '0 0 0 3pt ' + SELECTED_ROBOT;\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        boxShadow: boxShadow,\r\n        backgroundSize: dim,\r\n        backgroundImage: \"url(\" + \"/static/images/astronaut.png\" + \")\",\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    onStopDragHandler = (e, position) => {\r\n        this.props.onStopDragHandler(position,this.props.index,this.props.position);\r\n    }\r\n\r\n\r\n    handleCreateMode = () => {\r\n        if (this.props.isCreateMode === 'Yes' && this.props.buildMode) {\r\n            return (\r\n            <Draggable position={{x: this.props.position.left * this.props.dimension, y:this.props.position.top*this.props.dimension}} grid={this.props.draggableGrid} onStop={this.onStopDragHandler} bounds=\"parent\">\r\n                <div onClick={this.handleClick} style={styleoutsidedraggable(this.props)}>\r\n                    <div style={styleinside(this.props)}>\r\n                        <div style={styleinside2(this.props)}/>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            this.handleCreateMode()\r\n        );\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick, wallType,coloredSwitches}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    var backgroundColor = 'black'\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    if (wallType != undefined) {\r\n        var redOpac = 1;\r\n        var blueOpac = 1;\r\n        var greenOpac = 1;\r\n        var yellowOpac = 1;\r\n        coloredSwitches.map(switches => {\r\n            if (switches.colorSignifier === 'brown') {\r\n                redOpac = switches.isOn ? 1 : .2;\r\n            }\r\n            if (switches.colorSignifier === 'blue') {\r\n                blueOpac = switches.isOn ? 1 : .2;\r\n            }\r\n            if (switches.colorSignifier === 'green') {\r\n                greenOpac = switches.isOn ? 1 : .2;\r\n            }\r\n            if (switches.colorSignifier === 'purple') {\r\n                yellowOpac = switches.isOn ? 1 : .2;\r\n            }\r\n        });\r\n        if (wallType == 'brownPass') {\r\n            opacity = redOpac;\r\n            backgroundColor = '#465362';\r\n        } else if (wallType == 'bluePass') {\r\n            opacity = blueOpac;\r\n            backgroundColor = '#003366';\r\n        } else if (wallType == 'greenPass') {\r\n            opacity = greenOpac;\r\n            backgroundColor = '#003300';\r\n        } else if (wallType == 'purplePass') {\r\n            opacity = yellowOpac\r\n            backgroundColor = '#660066'\r\n        }\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: backgroundColor,\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE,ROBOT_GREEN,ROBOT_BLUE,ROBOT_RED,ROBOT_YELLOW,COLORED_GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none',\r\n        backgroundColor: color,\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position,color}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none',\r\n        backgroundColor: color\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.position == null) {\r\n        return null\r\n    }\r\n    if (props.isCreateMode === 'Yes'  && props.buildMode) {\r\n        const onStopDragHandler = (e, position) => {\r\n            props.onStopDragHandler(position,props.color);\r\n        }\r\n        if (props.color == undefined) {\r\n            return(\r\n            <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n                <img src={GOAL_IMAGE} style={styledragable(props)}/>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n                <img src={COLORED_GOAL_IMAGE} style={styledragable(props)}/>\r\n            </Draggable>\r\n            )\r\n        }\r\n    }\r\n    else {\r\n        if (props.color == undefined) {\r\n            return(<img src={GOAL_IMAGE} style={style(props)}/>)\r\n        }\r\n        else {\r\n            return(<img src={COLORED_GOAL_IMAGE} style={style(props)}/>)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({buildMode,show,dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension + dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension + dimension;\r\n            left = position.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        opacity: show ? '0.5' : '0.0',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default (props) => {\r\n    const handleClick = () => {\r\n        props.handleClick(props.dir)\r\n    }\r\n    if (props.buildMode === 'undefined' || !props.buildMode)\r\n    {\r\n        return (\r\n            <div onClick={handleClick} style={style(props)}/>\r\n        );\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LearnGameItems from '../components/LearnGameItems';\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass YouWinDailySingleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Completed!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <Typography variant=\"body1\">\r\n                        You used {this.props.numMoves} Moves, for this puzzle.\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Total Moves: {this.props.totalMoves}\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Finish all puzzles to get submit your score!\r\n                    </Typography>\r\n                    <br/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailySingleModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailyFinalModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null\r\n        }\r\n    }\r\n\r\n    handleClickSubmitGame = () => {\r\n        if (document.getElementById(\"namesubmitHS\").value == '') {\r\n            this.setState({\r\n                error: <Alert severity=\"error\">You must choose a submit name</Alert>\r\n            })\r\n        }\r\n        else {\r\n            this.props.submitAnswer(this.props.newPlayerState);\r\n            this.setState({\r\n                error: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Completed the Challenge!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                    {this.state.error}\r\n                    {this.props.submitted}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    {this.props.submitted == null ? <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickSubmitGame}>Submit Highscore</Button> : null}\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailyFinalModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinWeeklyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null\r\n        }\r\n    }\r\n\r\n    handleClickSubmitGame = () => {\r\n        if (document.getElementById(\"namesubmitHS\").value == '') {\r\n            this.setState({\r\n                error: <Alert severity=\"error\">You must choose a submit name</Alert>\r\n            })\r\n        }\r\n        else {\r\n            this.props.submitAnswer(this.props.newPlayerState);\r\n            this.setState({\r\n                error: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var buttontext = this.props.numMoves > 100 ? 'Show Progress' : 'Submit Highscore';\r\n        return (\r\n            <Dialog disableAutoFocus={true} disableEnforceFocus={true} onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You got all the puzzles!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                        <br/>\r\n                        {this.props.numMoves == 100 ? 'you receive a crown!' : 'Get total moves to 100 to receive a crown!'}\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                    {this.state.error}\r\n                    {this.props.submitted}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    {this.props.submitted == null ? <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickSubmitGame}>{buttontext}</Button> : null}\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinWeeklyModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    campaignPuzzle = () => {\r\n        if (window.loggedin === 'Yes') {\r\n            if (window.userInfo.userID == 2 || window.userInfo.userID == 3 || window.userInfo.userID == 7 || window.userInfo.userID == 4) {\r\n                return <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzleCampaign}>Campaign Puzzle</Button>\r\n            }\r\n            else {\r\n                return null\r\n            }\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Submit Puzzle</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField id={\"namesubmit\"} label={\"Name of Puzzle\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                    {this.campaignPuzzle()}\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleModal;\r\n","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Path Indicators\"\r\n                    checked={this.props.showColoredLineDirections}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n\r\n    state = {\r\n            minutes: 5,\r\n            seconds: 0,\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.puzzleRushTimeUp();\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    timer = () => {\r\n        if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n            return (<h2>Time is up!</h2>)\r\n        }\r\n        else {\r\n            return(\r\n                <h2>Time Remaining: {this.state.minutes}:{this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds}</h2>)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            this.timer()\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ToggleSettings from \"../components/ToggleSettings\";\r\nimport Timer from \"../components/Timer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                        copyButtonText: \"Copy Puzzle Link\"\r\n                     };\r\n        this.state.uri = this.props.isDailyChallenge === 'Yes' ? 'dailychallenge' : this.props.uri;\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <div>\r\n                    <Button color=\"secondary\" variant={\"outlined\"} fullWidth={true} onClick={this.handleCreateBoardClick}>Modify Board</Button>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Switch color=\"primary\" checked={this.props.buildMode} onChange={this.props.toggleBuildMode}/>}\r\n                        label=\"Build Mode\"\r\n                            />\r\n                </div>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.state.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        document.getElementsByClassName(\"MuiSlider-thumb\")[0].blur();\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n    showPuzzleLink = () => {\r\n        if (this.props.createMode === 'Yes' || this.props.isPuzzleRush === 'Yes' || this.props.isLesson === 'Yes' || this.props.isDailyChallengeAnswers === 'Yes' || this.props.isDailyChallenge === 'Yes' || this.props.isWeeklyChallenge === 'Yes') {\r\n            return null;\r\n        }\r\n        else {\r\n                return(\r\n                     <div style={{paddingBottom: '10px'}}>\r\n                         <Button fullWidth={true} variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                                 onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                     </div>\r\n                    )\r\n        }\r\n    }\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                {this.showPuzzleLink()}\r\n                 <Divider />\r\n                 <Typography\r\n                     color=\"textSecondary\"\r\n                     display=\"block\"\r\n                     variant=\"caption\"\r\n                     style={{paddingBottom: '10px'}}\r\n                 >\r\n                     Board Actions\r\n                 </Typography>\r\n                 <ButtonGroup fullWidth={true} color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     <Button onClick={this.props.undoMove}>Undo</Button>\r\n                 </ButtonGroup>\r\n                 {this.isCreateMode(this.props.createMode)}\r\n                 <Divider />\r\n                 <ToggleSettings showColoredLineDirections={this.props.showColoredLineDirections} onClick={this.props.toggleLineIndicators}/>\r\n                 <div style={buttonPanel()}>\r\n                     <Typography id=\"discrete-slider-small-steps\"\r\n                                 color=\"textSecondary\"\r\n                                 display=\"inline\"\r\n                                 gutterBottom>\r\n                         Size Of Board\r\n                     </Typography>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={this.props.squareSizeValue}\r\n                         valueLabelDisplay=\"auto\"\r\n                         id=\"sliderelement\"\r\n                     />\r\n                 </div>\r\n                 <Divider/>\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport { FaMedal } from 'react-icons/fa';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { GoVerified } from \"react-icons/go\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    error: {\r\n      main: '#FFD700'  // gold color\r\n    },\r\n    primary: {\r\n        main: '#CD7F32'\r\n    },\r\n    secondary: {\r\n        main: '#C0C0C0'\r\n    },\r\n    black: {\r\n        main: '#000000'\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: \"'Roboto Mono', monospace\",\r\n  },\r\n});\r\n\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginTop: '30px',\r\n        padding: '10px',\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (<MuiThemeProvider theme={theme}>\r\n            <Grid item xs={12} spacing={0}>\r\n                <Paper elevation={3}>\r\n                    <Grid container spacing={0} xs={12}>\r\n                        <Grid item container spacing={0} xs={8}>\r\n                            <Grid item xs={12}>\r\n                                <div style={{display: \"flex\", marginLeft: 1}}>\r\n                                    <Typography noWrap color={'black'} style={{float: 'left', fontWeight: 'bold'}}>\r\n                                        {highscore.comment ? highscore.comment : highscore.name}\r\n                                    </Typography>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Typography style={{marginLeft: 2, marginTop: 9}}  color={'black'}>{highscore.numMoves ? highscore.numMoves : highscore.score}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <Typography style={{marginTop: 12}} color={'black'} variant={'body2'}>{highscore.created ? highscore.created : (highscore.submitted ? highscore.submitted : \"\") }</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={4} container spacing={1}>\r\n                            {highscore.user_id !== 1 ? <Grid item xs={12}><div style={{float: 'right'}}><GoVerified/></div></Grid> : null}\r\n                            {(highscore.gold_medals !== undefined && highscore.gold_medals !== 0) || (highscore.silver_medals !== undefined && highscore.silver_medals !== 0) || (highscore.bronze_medals !== undefined && highscore.bronze_medals !== 0) ?\r\n                                <Grid item xs={12}>\r\n                                    <div style={{float: \"right\", justifyContent: \"space-between\", marginBottom: 1}}>\r\n                                        {highscore.gold_medals !== undefined && highscore.gold_medals !== 0 ?\r\n                                            <Tooltip title=\"Gold Medals\">\r\n                                                <Badge\r\n                                                    color={\"error\"}\r\n                                                    style={{marginRight: highscore.silver_medals !== undefined && highscore.silver_medals !== 0 ? 18 : 8}} //\r\n                                                    badgeContent={highscore.gold_medals}\r\n                                                    sx={{\r\n                                                          '& .MuiBadge-anchorOriginTopRightRectangle': {\r\n                                                            backgroundColor: 'gold'\r\n                                                          }\r\n                                                        }}\r\n                                                    max={999}>\r\n                                                    <FaMedal size={20} />\r\n                                                </Badge>\r\n                                            </Tooltip>\r\n                                            : null\r\n                                        }\r\n                                        {highscore.silver_medals !== undefined && highscore.silver_medals !== 0 ?\r\n                                            <Tooltip title=\"Silver Medals\">\r\n                                                <Badge color={\"secondary\"} style={{marginRight: 8}} badgeContent={highscore.silver_medals} max={999}><FaMedal size={20}/></Badge>\r\n                                            </Tooltip>\r\n                                            : null\r\n                                        }\r\n                                        {highscore.bronze_medals !== undefined && highscore.bronze_medals !== 0 ?\r\n                                            <Tooltip title=\"Bronze Medals\">\r\n                                                <Badge color={\"primary\"} style={{marginRight: 8}} badgeContent={highscore.bronze_medals} max={999}><FaMedal size={20}/></Badge>\r\n                                            </Tooltip>\r\n                                            : null\r\n                                        }\r\n                                    </div>\r\n                                </Grid> : null\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            </MuiThemeProvider>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid style={styleouter()} container spacing={1}>\r\n        {\r\n                highscores.map(highscore =>\r\n                    highscorestyle(highscore)\r\n                )\r\n        }\r\n    </Grid>\r\n)\r\n\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nclass PuzzleRushWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Puzzle Rush - {this.props.difficulty}</DialogTitle>\r\n                <DialogContent dividers>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"h6\">\r\n                            Statistics\r\n                          </Typography>\r\n                          <div>\r\n                            <List dense={true}>\r\n\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Number of Puzzles Completed\"\r\n                                    secondary={this.props.numPuzzlesCompleted}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average time Per Puzzle\"\r\n                                    secondary={this.props.averageTime}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average Moves per Puzzle\"\r\n                                    secondary={this.props.averageMoves}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Efficiency Score: puzzles * 7 - redundant moves from best\"\r\n                                    secondary={(this.props.numPuzzlesCompleted * 7) - this.props.differenceOptimal}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Moves Per Second\"\r\n                                    secondary={this.props.movesPerSecond}\r\n                                  />\r\n                                </ListItem>\r\n                            </List>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.handleClickPlayAgain}>Play Again!</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushWinModal;\r\n\r\n","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../../constants/constants';\r\n\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass RandomGameStatsModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answers: null,\r\n        }\r\n    }\r\n\r\n    showStatsModal = () => {\r\n        this.props.handleShowRandomAnswers()\r\n        this.setState({\r\n            answers: this.props.lowestMoveSequence\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-random\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        lowest possible moves: {this.props.lowestMoves}\r\n                    </div>\r\n                    {this.state.answers}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.showStatsModal}>Show Puzzle Answers</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomGameStatsModal;","import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nexport default function CloseIconWithOnClick(props) {\r\n    const handleClose = () => {\r\n        props.handleClose(props.index);\r\n    }\r\n    return (<CloseIcon onMouseDown={handleClose}/>\r\n    )\r\n}","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport CloseIconWithOnClick from './CloseIconWithOnClick'\r\n\r\nexport default function Descriptionlist(props) {\r\n    return(\r\n            <List>\r\n              {\r\n                  props.tipsText.map((text,index) =>\r\n                    <ListItem>\r\n                      <div>\r\n                        {text}\r\n                      </div>\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                          <CloseIconWithOnClick index={index} handleClose={props.handleCloseToolTips}/>\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  )\r\n              }\r\n            </List>\r\n    )\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinLessonModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <Typography> You completed the Lesson! Move on to the next one!\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinLessonModal;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: '0 10px'\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 25,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function ShowDailyChallengeScoresCard(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {props.name}\r\n        </Typography>\r\n        <Typography style={{marginBottom: '30px'}} variant=\"h5\" component=\"h2\">\r\n          {props.bestScore}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.MovesforPuzzle}\r\n          <br/>\r\n          {props.MoveSequence}\r\n          <br />\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport MovesView from '../components/MovesView';\r\nimport ShowDailyChallengeScoreCard from '../components/ShowDailyChallengeScoresCard'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst stylebelow = () => {\r\n    return {\r\n        marginTop: '40px',\r\n        marginBottom: '20px'\r\n    }\r\n}\r\n\r\nclass DailyChallengeHistoryData extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography style={stylebelow()} variant=\"h4\"> {this.props.difficultyforPuzzle} </Typography>\r\n                <ShowDailyChallengeScoreCard\r\n                    name={\"Robot God\"}\r\n                    bestScore={this.props.bestScore}\r\n                    MovesforPuzzle={this.props.lowestMovesforPuzzle}\r\n                    MoveSequence={this.props.lowestMoveSequence}\r\n                />\r\n                <ShowDailyChallengeScoreCard\r\n                    name={this.props.nameSubmitted}\r\n                    bestScore={this.props.scoreSubmitted}\r\n                    MovesforPuzzle={null}\r\n                    MoveSequence={<MovesView\r\n                                        moveHistory={this.props.playerMovedSequence} playerState={[{colorSignifier: \"blue\"},{colorSignifier: \"green\"},{colorSignifier: \"red\"},{colorSignifier: \"yellow\"}]}\r\n                                  />}\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyChallengeHistoryData;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent,type) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    if (type === 'blank') {\r\n        var goal = {top: height-1, left: width-1};\r\n        var randompos1 = {top: 0,left: 0, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n        var randompos2 = {top: 0,left: 1, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n        var randompos3 = {top: 1,left: 0, color: ROBOT_RED, colorSignifier: 'red'};\r\n        var randompos4 = {top: 1,left: 1, color: ROBOT_YELLOW, colorSignifier:'yellow'};\r\n    }\r\n    else {\r\n        var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n        var randomPositions = [goal];\r\n        for (var i=0;i<5;i++) {\r\n            randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n        }\r\n        var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n        var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n        var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n        var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    }\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport WeeklyGameItems from '../components/WeeklyGameItems'\r\nimport React from 'react';\r\nimport DailyGameItems from '../components/DailyGameItems';\r\nimport axios from 'axios';\r\nimport SwitchPad from '../components/SwitchPad'\r\nimport SwitchPadOff from '../components/SwitchPadOff'\r\nimport DailyMovesView from '../components/DailyMovesView';\r\nimport CreateBoardGoalSelector from '../components/CreateBoardGoalSelector';\r\nimport FlashMessage from 'react-flash-message'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {withRouter} from 'react-router';\r\nimport LearnGameItems from '../components/LearnGameItems';\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport YouWinDailySingleModal from '../components/YouWinDailySingleModal';\r\nimport YouWinDailyFinalModal from '../components/YouWinDailyFinalModal';\r\nimport YouWinWeeklyModal from '../components/YouWinWeeklyModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport PuzzleRushWinModal from '../containers/Modals/PuzzleRushFinishedModal';\r\nimport RandomGameStatsModal from '../containers/Modals/RandomGameStatsModal';\r\nimport DescriptionList from '../components/DescriptionList';\r\nimport YouWinLessonModal from '../components/YouWinLessonModal';\r\nimport DailyChallengeHistoryData from '../components/DailyChallengeHistoryData';\r\nimport Timer from \"../components/Timer\";\r\nimport {useStopwatch} from 'react-timer-hook';\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR,\r\n    MOBILE_INNER_SCREEN_WIDTH\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nfunction MyStopwatch(props) {\r\n       var stopwatchOffset = new Date();\r\n       stopwatchOffset.setSeconds(stopwatchOffset.getSeconds() + props.seconds_add + props.minutes_add*60);\r\n      const {\r\n        seconds,\r\n        minutes,\r\n        hours,\r\n        days,\r\n        isRunning,\r\n        start,\r\n        pause,\r\n        reset,\r\n      } = useStopwatch({ offsetTimestamp: stopwatchOffset, autoStart: true });\r\n    let displaySeconds = seconds + \"\";\r\n    if (seconds < 10)\r\n          displaySeconds = \"0\" + seconds\r\n    let displayMinutes = minutes + \"\";\r\n    if (minutes < 10)\r\n          displayMinutes = \"0\" + minutes\r\n    let displayHours = hours + \"\";\r\n    if (hours < 10)\r\n          displayHours = \"0\" + hours\r\n    const display = displayHours + \":\" + displayMinutes + \":\" + displaySeconds\r\n    return (\r\n        <div style={{width: \"100%\", display: \"inline-flex\"}}>\r\n            <div style={{flex: 1}}/>\r\n            <Chip\r\n                label={<Typography variant={\"h4\"}>{displayHours}:{displayMinutes}:{displaySeconds}</Typography>}\r\n                color=\"secondary\"\r\n                variant={\"outlined\"}\r\n            />\r\n                {/*<Typography variant={\"h4\"}>{displayHours}:{displayMinutes}:{displaySeconds}</Typography>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if(e.keyCode == 32 && e.target == document.body) {\r\n    e.preventDefault();\r\n  }\r\n    if([37, 38, 39, 40, 9,13].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '80px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n    }\r\n}\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\nconst formatGeneratedMoveSequence = (moves) => {\r\n    var images = []\r\n    moves.map(move => {\r\n        var color = move.charAt(0);\r\n        var direction = move.charAt(1);\r\n        if (color == 'B') {\r\n            color = 'blue'\r\n        }\r\n        else if (color == 'R') {\r\n            color = 'red'\r\n        }\r\n        else if (color == 'Y') {\r\n            color = 'yellow'\r\n        }\r\n        else {\r\n            color = 'green'\r\n        }\r\n        if (direction == 'N') {\r\n            direction = UP\r\n        }\r\n        else if (direction == 'S') {\r\n            direction = DOWN\r\n        }\r\n        else if (direction == 'E') {\r\n            direction = RIGHT\r\n        }\r\n        else {\r\n            direction = LEFT\r\n        }\r\n        images.push(<img src={DIRECTION_MAP_IMAGES[color][direction]}/>)\r\n    });\r\n    return images\r\n}\r\n\r\n\r\nconst setDefaultSquareSize = (boardWidth,boardHeight) => {\r\n    const drawerWidth = document.getElementById(\"MainDrawer\") == null ? 140 : parseInt(getComputedStyle(document.getElementById(\"MainDrawer\")).width);\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n    var settingstop = windowHeight - 120;\r\n\r\n    settingstop = settingstop / boardHeight\r\n    settingstop = parseInt(settingstop);\r\n    settingstop = settingstop - (settingstop % 4)\r\n\r\n    var settings = ((windowWidth < MOBILE_INNER_SCREEN_WIDTH) ? windowWidth - 20 : (windowWidth - drawerWidth) / 1.75);\r\n    settings = settings / boardWidth;\r\n    settings = parseInt(settings);\r\n    settings = settings - (settings % 4);\r\n    var squarevalue = settings > settingstop ? settingstop : settings\r\n    if (squarevalue < 16) {\r\n        squarevalue = 16;\r\n    }\r\n    else if (squarevalue > 52) {\r\n        squarevalue = 52;\r\n    }\r\n    return squarevalue;\r\n};\r\n\r\nconst ColoredLineDirections = [LEFT,RIGHT,UP,DOWN]\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.puzzleRush === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.p_id = this.props.p_id;\r\n            this.state.isEvolution = false\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.coloredSwitchesOn = [];\r\n            this.state.coloredSwitchesOff = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = []\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.coloredSwitchesOn = [];\r\n            this.state.coloredSwitchesOff = [];\r\n            this.state.isEvolution = false\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            this.state.moveHistoryList=[];\r\n\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[0].g_solutiondata))\r\n            this.state.lowestMovesforPuzzle = this.props.games[0].g_moves\r\n            this.state.difficultyforPuzzle = this.props.games[0].g_difficulty\r\n            this.state.playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[0]\r\n\r\n            this.state.playerStateList = [];\r\n            this.state.tipsText = [];\r\n            this.state.highscores = [];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.weeklyChallengeMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.dailyDayName = 'Weekly 100';\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.coloredSwitchesOn = [];\r\n            this.state.coloredSwitchesOff = [];\r\n            this.state.isEvolution = false\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonWeekly = [false,false,false,false,false];\r\n            if (this.props.savedMoves != null) {\r\n                this.state.moveHistoryList = this.props.savedMoves;\r\n                this.state.gamesWonWeekly = this.props.gamesWon;\r\n                this.state.moveHistory = this.props.savedMoves[0].slice()\r\n                this.state.playerState = this.props.playerStateList[0].slice()\r\n            }\r\n            else {\r\n                this.state.moveHistoryList=[];\r\n            }\r\n            this.state.playerStateList = this.props.playerStateList != null ? this.props.playerStateList : [];\r\n            this.state.tipsText = ['All users with 100 moves get a crown!','Moves are saved','puzzle button turns GREEN when solved with least moves'];\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.wc_id = this.props.wc_id;\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.dailyEvolutionMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.dailyDayName = this.props.games[0].g_name\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.isEvolution = true;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.daily_start_timer_seconds = this.props.daily_start_timer_seconds\r\n            this.state.daily_start_timer_minutes = this.props.daily_start_timer_minutes\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.coloredSwitchesStart = JSON.parse(JSON.stringify(this.state.coloredSwitchesOn));\r\n            this.state.coloredSwitchesOnList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            this.state.coloredSwitchesOff = [];\r\n            if (this.props.savedMoves != null) {\r\n                this.state.moveHistoryList = this.props.savedMoves\r\n                this.state.gamesWonDaily = [true,true,true,true]\r\n                this.state.moveHistory = this.props.savedMoves[0].slice()\r\n                this.state.playerState = this.props.playerStateList[0].slice()\r\n            }\r\n            else {\r\n                this.state.moveHistoryList=[];\r\n            }\r\n            this.state.playerStateList = this.props.playerStateList != null ? this.props.playerStateList : [];\r\n            this.state.tipsText = ['Puzzles reset at 3PM EST', 'email any bugs or suggestions to robotsevolved@gmail.com'];\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.dce_id = this.props.dce_id;\r\n            window.dailyEvolutionSessionSwitchState = [[],[],[],[]];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.dailyDayName = this.props.games[0].g_name\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.isEvolution = false\r\n            this.state.coloredSwitchesOn = [];\r\n            this.state.coloredSwitchesOff = [];\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.daily_start_timer_seconds = this.props.daily_start_timer_seconds\r\n            this.state.daily_start_timer_minutes = this.props.daily_start_timer_minutes\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            if (this.props.savedMoves != null) {\r\n                this.state.moveHistoryList = this.props.savedMoves\r\n                this.state.gamesWonDaily = [true,true,true,true]\r\n                this.state.moveHistory = this.props.savedMoves[0].slice()\r\n                this.state.playerState = this.props.playerStateList[0].slice()\r\n            }\r\n            else {\r\n                this.state.moveHistoryList=[];\r\n            }\r\n            this.state.playerStateList = this.props.playerStateList != null ? this.props.playerStateList : [];\r\n            this.state.tipsText = ['Puzzles reset at 3PM EST'];\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.dc_id = this.props.dc_id;\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.game.g_puzzledata)\r\n            if (this.props.game.g_moves != 1) {\r\n                this.state.lowestMoves = this.props.game.g_moves\r\n                this.state.isEvolution = false\r\n                this.state.coloredSwitchesOn = [];\r\n                this.state.coloredSwitchesOff = [];\r\n                this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.game.g_solutiondata))\r\n            }\r\n            else {\r\n                this.state.lowestMoves = \"I havent created a solver for this yet\";\r\n                this.state.lowestMoveSequence = null;\r\n                this.state.coloredSwitchesOff = [];\r\n                this.state.coloredSwitchesStart = JSON.parse(JSON.stringify(this.state.coloredSwitchesOn));\r\n                this.state.isEvolution = true;\r\n            }\r\n            this.state.difficulty = this.props.game.g_difficulty\r\n            this.state.createMode = 'No';\r\n            this.state.gameWon = false;\r\n            this.state.buildMode = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = ['this game was randomly generated'];\r\n            this.state.uri = this.props.game.g_uri;\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n            window.history.pushState({id: 'Random Game'},'RobotsEvolved | Random Game','/play/' + this.props.game.g_uri)\r\n        }\r\n        else if (this.props.learnMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.coloredSwitchesOn = [];\r\n            this.state.coloredSwitchesOff = [];\r\n            this.state.createMode = 'No';\r\n            this.state.isEvolution = false\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [this.props.games[0].description];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n        }\r\n        else if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.uri = this.props.uri;\r\n            this.state.votes = this.props.votes\r\n            this.state.hasVoted = this.props.hasVoted\r\n            this.state.gameWon = false;\r\n            this.state.isEvolution = false\r\n            this.state.coloredSwitchesOn = [];\r\n            this.state.coloredSwitchesOff = [];\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.buildMode = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [];\r\n            if (this.state.coloredGoals == undefined) {\r\n                this.state.coloredGoals = [];\r\n            }\r\n            window.history.pushState({id: 'Play Game'},'RobotsEvolved | Play Game','/play/'+ this.props.uri)\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,1,'blank');\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                buildMode: true,\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false,\r\n                tipsText: [\r\n                                        'Click on Wall spots to toggle',\r\n                                        'Click and Drag robots or goal to move robots',\r\n                                        'When you are ready, toggle build mode in order to solve the puzzle',\r\n                                        'You must solve the puzzle in order to submit.']\r\n            },board);\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.coloredGoals = [];\r\n            this.state.coloredSwitchesOn = [];\r\n            this.state.coloredSwitchesOff = [];\r\n            this.state.isEvolution = false\r\n        }\r\n        this.state.showColoredLineDirections = this.props.LineDirections;\r\n        if (this.state.coloredGoals == undefined) {\r\n            this.state.coloredGoals = [];\r\n        }\r\n    };\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                const highscoresdata = JSON.parse(res.data.highscores)\r\n                if (this.FindhighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    FindhighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.numMoves != check[index].numMoves) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n\r\n    DChighscoreIsDiff = (check,tocheck) => {\r\n        if (check.length != tocheck.length) {\r\n            return true\r\n        }\r\n        var toreturn = false;\r\n        tocheck.map((highscore,index) => {\r\n            if (highscore.score != check[index].score) {\r\n                toreturn = true;\r\n            }\r\n        });\r\n        return toreturn;\r\n    }\r\n\r\n    updateWeeklyHighscores = () => {\r\n        axios.get('/weeklychallengehighscores?wc_id=' + this.state.wc_id)\r\n            .then( res => {\r\n                if (res.data.wc_id != this.state.wc_id) {\r\n                    window.weeklyChallengeSessionBestHistory = [[],[],[],[],[]];\r\n                    window.weeklyChallengeSessionBestPlayerState = [[],[],[],[],[]];\r\n                    this.props.handleClickWeeklyClick();\r\n                    return\r\n                }\r\n                const highscoresdata = JSON.parse(res.data.highscores)\r\n                if (this.DChighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    updateDailyEvolutionHighscores = () => {\r\n        axios.get('/dailyevolutionhighscores?dce_id=' + this.state.dce_id)\r\n            .then( res => {\r\n                if (res.data.dce_id != this.state.dce_id) {\r\n                    window.dailyEvolutionSessionBestHistory = [[],[],[],[]];\r\n                    window.dailyEvolutionSessionBestPlayerState = [[],[],[],[]];\r\n                    window.dailyEvolutionSessionSwitchState = [[],[],[],[]];\r\n                    this.props.handleClickDailyEvolution();\r\n                    return\r\n                }\r\n                const highscoresdata = JSON.parse(res.data.highscores)\r\n                if (this.DChighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                    window.dcehighscores = JSON.parse(res.data.highscores)\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    updateDailyHighscores = () => {\r\n        axios.get('/dailychallengehighscores?dc_id=' + this.state.dc_id)\r\n            .then( res => {\r\n                if (res.data.dc_id != this.state.dc_id) {\r\n                    window.dailyChallengeSessionBestHistory = [[],[],[],[]];\r\n                    window.dailyChallengeSessionBestPlayerState = [[],[],[],[]];\r\n                    this.props.handleClickDailyChallenge();\r\n                    return\r\n                }\r\n                const highscoresdata = JSON.parse(res.data.highscores)//PoorMan's global redux implementation\r\n                if (this.DChighscoreIsDiff(this.state.highscores,highscoresdata)) {\r\n                    this.setState({\r\n                        highscores: JSON.parse(res.data.highscores),\r\n                    });\r\n                    window.dchighscores = JSON.parse(res.data.highscores)\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.updateHighscores();\r\n            var IntervalId = setInterval(this.updateHighscores, 8000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.updateDailyHighscores();\r\n            var IntervalId = setInterval(this.updateDailyHighscores, 6000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n        else if (this.props.dailyEvolutionMode === 'Yes') {\r\n            this.updateDailyEvolutionHighscores();\r\n            var IntervalId = setInterval(this.updateDailyEvolutionHighscores, 6000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n        else if (this.props.weeklyChallengeMode === 'Yes') {\r\n            var IntervalId = setInterval(this.updateWeeklyHighscores, 10000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n        else if (this.props.dailyEvolutionMode === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n        else if (this.props.weeklyChallengeMode === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                this.handlePlayerMovement(newDirection);\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                this.handlePlayerMovement(newDirection);\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                this.handlePlayerMovement(newDirection);\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                this.handlePlayerMovement(newDirection);\r\n                break;\r\n            case 9:\r\n                this.tabSelector();\r\n                return;\r\n                break;\r\n            case 81:\r\n                if (!this.state.gameWon) {\r\n                    this.handleUndoMove();\r\n                }\r\n                break;\r\n                return;\r\n            case 69:\r\n                if (!this.state.gameWon) {\r\n                    this.resetPuzzle();\r\n                }\r\n                break;\r\n                return;\r\n            case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                this.handlePlayerMovement(newDirection);\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                this.handlePlayerMovement(newDirection);\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                this.handlePlayerMovement(newDirection);\r\n                break;\r\n            case 65:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                this.handlePlayerMovement(newDirection);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzleCampaign = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        var themoveHistory = this.state.moveHistory.slice()\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = window.userInfo.username\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username,moveHistory: themoveHistory,type: 'Campaign'}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        var themoveHistory = this.state.moveHistory.slice()\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.loggedin === 'Yes') {\r\n            username = window.userInfo.username\r\n        }\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username,moveHistory: themoveHistory,type: 'type'}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.showColoredLineDirections === true) {\r\n            this.setState({\r\n                showColoredLineDirections: false,\r\n            });\r\n            this.props.handleLineDirections(false)\r\n        }\r\n        else {\r\n            this.setState({\r\n                showColoredLineDirections: true,\r\n            });\r\n            this.props.handleLineDirections(true)\r\n        }\r\n    };\r\n\r\n    toggleBuildMode = () => {\r\n        if (this.state.buildMode) {\r\n            this.setState({\r\n                buildMode: false,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n                buildMode: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length,solutiondata: this.state.moveHistory,name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        if (this.state.isEvolution) {\r\n            this.setState({\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n                gameWon: false,\r\n                coloredSwitchesOn: JSON.parse(JSON.stringify(this.state.coloredSwitchesStart)),\r\n                dailySubmittedSucessfully: null\r\n            });\r\n        } else {\r\n            this.setState({\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n                gameWon: false,\r\n                dailySubmittedSucessfully: null\r\n            });\r\n        }\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeRandomStatsModal = event => {\r\n        this.setState({\r\n            closeRandomStatsModal: false,\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    }\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushFinishedModal = event => {\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: false\r\n        });\r\n\r\n    }\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent, 'blank');\r\n        var squareSize = setDefaultSquareSize(width,height);\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n            squareSize: squareSize,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n    showStatsModal = () => {\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            showStatsModal: true,\r\n        });\r\n    }\r\n\r\n\r\n    isWallSolid = (wall) => {\r\n        if (wall.wallType == undefined) {\r\n            return true\r\n        } else {\r\n            var toReturn = true\r\n            var wallType = wall.wallType.substring(0, wall.wallType.length - 4)\r\n            this.state.coloredSwitchesOn.map(switches => {\r\n                if (switches.colorSignifier === wallType) {\r\n                    toReturn = switches.isOn\r\n                }\r\n            });\r\n            return toReturn\r\n        }\r\n    }\r\n\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall => {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1 && this.isWallSolid(wall)) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall ) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1  && this.isWallSolid(wall)) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1  && this.isWallSolid(wall)) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1  && this.isWallSolid(wall))\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n    nextLessonPuzzle  = () => {\r\n        var puzzle = this.state.numPuzzleon;\r\n        puzzle += 1;\r\n        puzzle = puzzle == 4 ? 5 : puzzle;\r\n        puzzle = puzzle == 7 ? 8 : puzzle;\r\n        this.handleLearnClickGame(puzzle % 12);\r\n    }\r\n\r\n    puzzleRushTimeUp = () => {\r\n        var totalMovesDiff = 0;\r\n        this.state.solutiondifference.map(numMoves => {\r\n            totalMovesDiff += numMoves;\r\n        });\r\n        var averageTime = parseInt(300 / (this.state.numPuzzleon))\r\n        var totalMoves = 0;\r\n        this.state.totalMovesList.map(numMoves => {\r\n            totalMoves += numMoves\r\n        });\r\n        var avgMoves = parseInt(totalMoves / (this.state.numPuzzleon))\r\n        var movesPerSecond = totalMoves / 300;\r\n\r\n        axios.post('/puzzlerushend', {p_id: this.state.p_id,totalMoves: totalMoves,differenceFrom: totalMovesDiff})\r\n            .then( res => {\r\n                console.log(res.data);\r\n            });\r\n\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: true,\r\n            numPuzzlesCompleted: this.state.numPuzzleon,\r\n            percentile: 'TBD%',\r\n            averageTime: averageTime + 's',\r\n            averageMoves: avgMoves,\r\n            differenceOptimal: totalMovesDiff,\r\n            movesPerSecond: movesPerSecond\r\n        });\r\n    }\r\n\r\n    weeklyChallegeSaveMovesCookie = (LastRobotPosition,completed) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            if (moveHistory !== null) {\r\n                numMoves += moveHistory.length\r\n            }\r\n        });\r\n        var playerStateList = this.state.playerStateList\r\n        if (LastRobotPosition != null) {\r\n            playerStateList[this.state.numPuzzleon] = LastRobotPosition.slice()\r\n        }\r\n        this.checkWinningPosition(this.state.goal,this.state.coloredGoals,this.state.playerState)\r\n\r\n        var gameswonWeekly = [];\r\n        [0,1,2,3,4].map((move,index) => {\r\n            var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n\r\n            gameswonWeekly[index] = playerStateList[index] != null ? this.checkWinningPosition(puzzledata.goal,puzzledata.coloredGoals,playerStateList[index]) : false\r\n        })\r\n        axios.post('/weeklychallengesubmit', {score: numMoves, solutiondata: moveHistoryList, wc_id: 1, playerStateList: playerStateList, completed: completed, gamesWon: gameswonWeekly})\r\n            .then( res => {\r\n                console.log(res.data)\r\n            });\r\n    }\r\n\r\n\r\n    submitWeeklyAnswer = (LastRobotPosition) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            numMoves += moveHistory.length\r\n        });\r\n        var playerStateList = this.state.playerStateList.slice()\r\n        playerStateList[this.state.numPuzzleon] = LastRobotPosition.slice()\r\n        axios.post('/weeklychallengesubmit', {score: numMoves, name: document.getElementById(\"namesubmitHS\").value, solutiondata: moveHistoryList, wc_id: 1, playerStateList: playerStateList, completed: 1,display: 1,gamesWon: [true,true,true,true,true]})\r\n            .then( res => {\r\n                this.setState({\r\n                    dailySubmittedSucessfully: <Alert severity=\"success\">Submitted!</Alert>\r\n                });\r\n            });\r\n    }\r\n\r\n    submitDailyEvolutionAnswer = (LastRobotPosition) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            numMoves += moveHistory.length\r\n        });\r\n        var playerStateList = this.state.playerStateList.slice()\r\n        playerStateList[this.state.numPuzzleon] = [...LastRobotPosition]\r\n        axios.post('/dailyevolution', {score: numMoves, name: document.getElementById(\"namesubmitHS\").value, solutiondata: moveHistoryList, dce_id: this.state.dce_id, playerStateList: playerStateList})\r\n            .then( res => {\r\n                this.setState({\r\n                    dailySubmittedSucessfully: <Alert severity=\"success\">Submitted!</Alert>\r\n                });\r\n            });\r\n        window.dce_movesList = moveHistoryList;\r\n        window.dce_playerList = playerStateList;\r\n        this.state.gameWon = false;\r\n    }\r\n\r\n\r\n\r\n    submitDailyAnswer = (LastRobotPosition) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            numMoves += moveHistory.length\r\n        });\r\n        var playerStateList = this.state.playerStateList.slice()\r\n        playerStateList[this.state.numPuzzleon] = [...LastRobotPosition]\r\n        axios.post('/dailychallenge', {score: numMoves, name: document.getElementById(\"namesubmitHS\").value, solutiondata: moveHistoryList, dc_id: this.state.dc_id, playerStateList: playerStateList})\r\n            .then( res => {\r\n                this.setState({\r\n                    dailySubmittedSucessfully: <Alert severity=\"success\">Submitted!</Alert>\r\n                });\r\n            });\r\n        window.dc_movesList = moveHistoryList;\r\n        window.dc_playerList = playerStateList;\r\n        this.state.gameWon = false;\r\n    }\r\n\r\n    checkwin = (newPlayerState) => {\r\n        if (this.state.goal != null && this.state.coloredGoals == null) {\r\n            var Won = false;\r\n            newPlayerState.map((player) => {\r\n                if (player.top === this.state.goal.top && player.left === this.state.goal.left) {\r\n                    Won = true;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            if (this.state.goal != null) {\r\n                var Won = false;\r\n                newPlayerState.map((player) => {\r\n                    if (player.top === this.state.goal.top && player.left === this.state.goal.left) {\r\n                        Won = true;\r\n                    }\r\n                });\r\n            }\r\n            else if (this.state.coloredGoals.length == 0) {\r\n                var Won = false;\r\n            }\r\n            else {\r\n                var Won = true;\r\n            }\r\n            var found = false;\r\n            var colorfound = false;\r\n            newPlayerState.map((player) => {\r\n                found = false\r\n                colorfound = false\r\n                this.state.coloredGoals.map(goal => {\r\n                    if (goal.colorSignifier == player.colorSignifier && goal.top === player.top && goal.left === player.left) {\r\n                        found = true;\r\n                    }\r\n                    if (goal.colorSignifier == player.colorSignifier) {\r\n                        colorfound = true;\r\n                    }\r\n                });\r\n                if (!found && colorfound) {\r\n                    Won = false;\r\n                }\r\n            });\r\n        }\r\n        if (Won) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No' && this.props.puzzleRush !== 'Yes') {\r\n                var username = window.userInfo.username\r\n                if (this.props.randomGame === 'Yes') {\r\n                    return (\r\n                        <RandomGameStatsModal\r\n                            show={this.state.gameWon}\r\n                            lowestMoves={this.state.lowestMoves}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            numMoves={this.state.moveHistory.length}\r\n                            difficulty={this.state.difficulty}\r\n                            resetPuzzle={this.resetPuzzle}\r\n                            handleShowRandomAnswers={this.handleShowRandomAnswers}\r\n                        />\r\n                    );\r\n                }\r\n                else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n                    return null\r\n                }\r\n                else if (this.props.dailyEvolutionMode === 'Yes') {\r\n                    if ((window.dailyEvolutionSessionBestHistory[this.state.numPuzzleon].length == 0 ||\r\n                            this.state.moveHistory.length < window.dailyEvolutionSessionBestHistory[this.state.numPuzzleon].length)) {\r\n                        window.dailyEvolutionSessionBestHistory[this.state.numPuzzleon] = JSON.parse(JSON.stringify(this.state.moveHistory))\r\n                        window.dailyEvolutionSessionBestPlayerState[this.state.numPuzzleon] = JSON.parse(JSON.stringify(this.state.playerState))\r\n                        window.dailyEvolutionSessionSwitchState[this.state.numPuzzleon] = JSON.parse(JSON.stringify(this.state.coloredSwitchesOn))\r\n                    }\r\n                    this.state.gamesWonDaily.map((gameWon,index) => {\r\n                        if (!(index == this.state.numPuzzleon) && !gameWon) {\r\n                            Won = false\r\n                        }\r\n                    });\r\n                    var moveHistoryList = [...this.state.moveHistoryList]\r\n                    moveHistoryList[this.state.numPuzzleon] = [...this.state.moveHistory]\r\n                    var numMoves = 0\r\n                    moveHistoryList.map(moveHistory => {\r\n                        numMoves += moveHistory.length\r\n                    });\r\n                    return (Won ? <YouWinDailyFinalModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={numMoves}\r\n                        submitAnswer={this.submitDailyEvolutionAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                        undoMove={this.handleUndoMove}\r\n                        newPlayerState={newPlayerState}\r\n                        submitted={this.state.dailySubmittedSucessfully}\r\n                    /> : <YouWinDailySingleModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        totalMoves={numMoves}\r\n                        undoMove={this.handleUndoMove}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        games={this.state.games}\r\n                        handleClickGame={this.handleDailyClickGame} //maybe change\r\n                        numPuzzleon={this.state.numPuzzleon}\r\n                        moveNextPuzzle={this.moveNextPuzzle}\r\n                    />);\r\n                }\r\n                else if (this.props.weeklyChallengeMode === 'Yes') {\r\n                    if (window.weeklyChallengeSessionBestHistory[this.state.numPuzzleon].length == 0 || this.state.moveHistory.length < window.weeklyChallengeSessionBestHistory[this.state.numPuzzleon].length) {\r\n                        window.weeklyChallengeSessionBestHistory[this.state.numPuzzleon] = JSON.parse(JSON.stringify(this.state.moveHistory))\r\n                        window.weeklyChallengeSessionBestPlayerState[this.state.numPuzzleon] = JSON.parse(JSON.stringify(this.state.playerState))\r\n                    }\r\n                    this.state.gamesWonWeekly.map((gameWon,index) => {\r\n                        if (!(index == this.state.numPuzzleon) && !gameWon) {\r\n                            Won = false\r\n                        }\r\n                    });\r\n                    var moveHistoryList = this.state.moveHistoryList\r\n                    moveHistoryList[this.state.numPuzzleon] = [...this.state.moveHistory]\r\n                    var numMoves = 0\r\n                    moveHistoryList.map(moveHistory => {\r\n                        if (moveHistory !== null) {\r\n                            numMoves += moveHistory.length\r\n                        }\r\n                    });\r\n                    if (Won) {\r\n                        this.weeklyChallegeSaveMovesCookie(newPlayerState,1)\r\n                    }\r\n                    return (Won ? <YouWinWeeklyModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={numMoves}\r\n                        submitAnswer={this.submitWeeklyAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                        undoMove={this.handleUndoMove}\r\n                        newPlayerState={newPlayerState}\r\n                        submitted={this.state.dailySubmittedSucessfully}\r\n                    /> : <YouWinDailySingleModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        totalMoves={numMoves}\r\n                        undoMove={this.handleUndoMove}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        games={this.state.games}\r\n                        handleClickGame={this.handleWeeklyClickGame}\r\n                        numPuzzleon={this.state.numPuzzleon}\r\n                        moveNextPuzzle={this.moveNextPuzzleWeekly}\r\n                    />);\r\n                }\r\n                else if (this.props.dailyChallengeMode === 'Yes') {\r\n                    if ((window.dailyChallengeSessionBestHistory[this.state.numPuzzleon].length == 0 ||\r\n                            this.state.moveHistory.length < window.dailyChallengeSessionBestHistory[this.state.numPuzzleon].length)) {\r\n                        window.dailyChallengeSessionBestHistory[this.state.numPuzzleon] = JSON.parse(JSON.stringify(this.state.moveHistory))\r\n                        window.dailyChallengeSessionBestPlayerState[this.state.numPuzzleon] = JSON.parse(JSON.stringify(this.state.playerState))\r\n                    }\r\n                    this.state.gamesWonDaily.map((gameWon,index) => {\r\n                        if (!(index == this.state.numPuzzleon) && !gameWon) {\r\n                            Won = false\r\n                        }\r\n                    });\r\n                    var moveHistoryList = [...this.state.moveHistoryList]\r\n                    moveHistoryList[this.state.numPuzzleon] = [...this.state.moveHistory]\r\n                    var numMoves = 0\r\n                    moveHistoryList.map(moveHistory => {\r\n                        numMoves += moveHistory.length\r\n                    });\r\n                    return (Won ? <YouWinDailyFinalModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={numMoves}\r\n                        submitAnswer={this.submitDailyAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                        undoMove={this.handleUndoMove}\r\n                        newPlayerState={newPlayerState}\r\n                        submitted={this.state.dailySubmittedSucessfully}\r\n                    /> : <YouWinDailySingleModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        totalMoves={numMoves}\r\n                        undoMove={this.handleUndoMove}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        games={this.state.games}\r\n                        handleClickGame={this.handleDailyClickGame}\r\n                        numPuzzleon={this.state.numPuzzleon}\r\n                        moveNextPuzzle={this.moveNextPuzzle}\r\n                    />);\r\n                }\r\n                else if (this.props.learnMode === 'Yes') {\r\n                    return  (<YouWinLessonModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        moveNextPuzzle={this.nextLessonPuzzle}\r\n                    />);\r\n                }\r\n                else {\r\n                    return  (<YouWinModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        submitAnswer={this.submitAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                    />);\r\n                }\r\n            }\r\n            else if (this.props.puzzleRush === 'Yes'){\r\n                axios.post('/puzzlerushsubmit', {p_id: this.state.p_id,g_id:this.state.games[this.state.numPuzzleon].g_id, moveHistory: this.state.moveHistory})\r\n                    .then( res => {\r\n                        console.log(res.data);\r\n                    });\r\n                var totalMoves = this.state.moveHistory.slice().length\r\n                var totalMovesList = this.state.totalMovesList\r\n                totalMovesList.push(totalMoves)\r\n                var solutionmoves = totalMoves - this.state.games[this.state.numPuzzleon].g_moves\r\n                var solutiondifference = this.state.solutiondifference\r\n                solutiondifference.push(solutionmoves)\r\n                var puzzledata = JSON.parse(this.state.games[this.state.numPuzzleon + 1].g_puzzledata)\r\n                if (this.state.numPuzzleon + 10 > this.state.games.length) {\r\n                    axios.get('/puzzlerushgetmore?p_id=' + this.props.p_id + '&difficulty=' + this.props.difficulty)\r\n                        .then( res => {\r\n                                var games = JSON.parse(res.data.games);\r\n                                var stategames = this.state.games\r\n                                var newarray = stategames.concat(games)\r\n                                this.setState({\r\n                                    games: newarray\r\n                                });\r\n                        });\r\n                }\r\n                this.setState(\r\n                    extend(puzzledata,{numPuzzleon: this.state.numPuzzleon + 1, playerState: puzzledata.playerStart.slice(), gameWon: false, solutiondifference: solutiondifference, totalMovesList: totalMovesList})\r\n                );\r\n\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                    submitPuzzleCampaign={this.submitPuzzleCampaign}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handleShowRandomAnswers = () => {\r\n        this.setState({\r\n            tipsText: [this.state.lowestMoveSequence]\r\n        })\r\n    }\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false && !this.state.buildMode) {\r\n            var oldPositon = {left: this.state.playerState[this.state.robotSelected].left, top: this.state.playerState[this.state.robotSelected].top};\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            var newSwitches = [];\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left) && !this.state.buildMode) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier,\r\n                    prevPosition: oldPositon\r\n                });\r\n                if (this.state.isEvolution) {\r\n                    this.state.coloredSwitchesOn.map((switches,index) => {\r\n                        if (switches.left === newPosition.left && switches.top === newPosition.top) {\r\n                            switches.isOn = switches.isOn ? false : true;\r\n                        }\r\n                        newSwitches.push(switches)\r\n                    });\r\n                }\r\n            }\r\n            else if (this.state.isEvolution) {\r\n                newSwitches = this.state.coloredSwitchesOn\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n                coloredSwitchesOn: newSwitches\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseToolTips = (index) => {\r\n        this.state.tipsText.splice(index,1);\r\n        this.setState({\r\n            tipsText: this.state.tipsText,\r\n        });\r\n    }\r\n\r\n    moveNextPuzzle = () => {\r\n        this.handleDailyClickGame((this.state.numPuzzleon + 1) % 4)\r\n    }\r\n\r\n    moveNextPuzzleWeekly = () => {\r\n        this.handleWeeklyClickGame((this.state.numPuzzleon + 1) % 5)\r\n    }\r\n\r\n    handleLearnClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].puzzledata);\r\n        var squareSize = setDefaultSquareSize(puzzledata.width,puzzledata.height);\r\n        this.setState(\r\n            extend(puzzledata,{buildMode: false,squareSize: squareSize, numPuzzleon: index, moveHistory: [], gameWon: false, playerState: puzzledata.playerStart.slice(),tipsText: [this.props.games[index].description]})\r\n        );\r\n    }\r\n\r\n\r\n    handleDailyClickAnswersGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n        var lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[index].g_solutiondata))\r\n        var lowestMovesforPuzzle = this.props.games[index].g_moves\r\n        var difficultyforPuzzle = this.props.games[index].g_difficulty\r\n        var playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[index]\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory,\r\n                    gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily,\r\n                    lowestMoveSequence: lowestMoveSequence, lowestMovesforPuzzle: lowestMovesforPuzzle, difficultyforPuzzle: difficultyforPuzzle,\r\n                    playerMovedSequence: playerMovedSequence})\r\n        );\r\n    }\r\n\r\n    handleWeeklyClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonWeekly = this.state.gamesWonWeekly\r\n        if (this.state.gameWon) {\r\n            gamesWonWeekly[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonWeekly[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n        this.weeklyChallegeSaveMovesCookie(null,0);\r\n        if (puzzledata.goal === undefined)\r\n        {\r\n            this.setState(\r\n                extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonWeekly: gamesWonWeekly, goal: null})\r\n            );\r\n        }\r\n        else if (puzzledata.coloredGoals === undefined) {\r\n            this.setState(\r\n                extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonWeekly: gamesWonWeekly, coloredGoals: []})\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleDailyClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = [...this.state.moveHistoryList[index]];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = [...puzzledata.playerStart]\r\n        }\r\n        else {\r\n            puzzledata.playerState = [...this.state.playerStateList[index]];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = [...playerState];\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = [...this.state.moveHistory];\r\n\r\n\r\n        if (puzzledata.coloredSwitchesOn != undefined) {\r\n            puzzledata['coloredSwitchesStart'] = JSON.parse(JSON.stringify(puzzledata.coloredSwitchesOn));\r\n            if (this.state.coloredSwitchesOnList[index] != undefined) {\r\n                puzzledata['coloredSwitchesOn'] = JSON.parse(JSON.stringify(this.state.coloredSwitchesOnList[index]))\r\n            }\r\n            this.state.coloredSwitchesOnList[this.state.numPuzzleon] = [...this.state.coloredSwitchesOn]\r\n            // somewhere here do coloredSwitchesOn make a coloredSwitchesOnList and stuff\r\n        }\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily})\r\n        );\r\n    }\r\n\r\n\r\n    handleWildCardClick = () => {\r\n        if (this.state.goal == null) {\r\n            this.setState({\r\n                goal: {top: this.state.height - 1, left: this.state.width - 1}\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                goal: null\r\n            });\r\n        }\r\n        this.resetPuzzle();\r\n    }\r\n\r\n    resetToBest = (moveHistory, playerState) => {\r\n        if (this.state.isEvolution) {\r\n            console.log(this.state.coloredSwitchesOn)\r\n            console.log(window.dailyEvolutionSessionSwitchState)\r\n            this.setState({\r\n                moveHistory: moveHistory,\r\n                playerState: playerState,\r\n                coloredSwitchesOn: JSON.parse(JSON.stringify(window.dailyEvolutionSessionSwitchState[this.state.numPuzzleon]))\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                moveHistory: moveHistory,\r\n                playerState: playerState,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleColoredClick = (colorSignifier) => {\r\n        var goal = null;\r\n        this.state.coloredGoals.map(goalItem => {\r\n            if (colorSignifier == goalItem.colorSignifier) {\r\n                goal = goalItem;\r\n            }\r\n        })\r\n        if (goal == null) {\r\n            var newColoredGoals = this.state.coloredGoals;\r\n            var newgoal\r\n            switch (colorSignifier) {\r\n                case 'blue':\r\n                    newgoal = {top: this.state.height - 2, left: this.state.width - 2, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n                    break;\r\n                case 'green':\r\n                    newgoal = {top: this.state.height - 1, left: this.state.width - 2, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n                    break;\r\n                case 'red':\r\n                    newgoal = {top: this.state.height - 2, left: this.state.width - 1, color: ROBOT_RED, colorSignifier: 'red'};\r\n                    break;\r\n                case 'yellow':\r\n                    newgoal = {top: this.state.height - 3, left: this.state.width - 3, color: ROBOT_YELLOW, colorSignifier: 'yellow'};\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            newColoredGoals.push(newgoal);\r\n            this.setState({\r\n                coloredGoals: newColoredGoals\r\n            });\r\n        }\r\n        else {\r\n            var newColoredGoals = this.state.coloredGoals.filter(goalItem =>\r\n                colorSignifier != goalItem.colorSignifier\r\n            );\r\n            this.setState({\r\n                coloredGoals: newColoredGoals\r\n            });\r\n        }\r\n        this.resetPuzzle();\r\n    }\r\n\r\n    trimName = name => {\r\n        var separated = (name + '').split(\" \")\r\n        var toreturn = '';\r\n        separated.map((word) => {\r\n            if (word.length > 17)\r\n                toreturn += word.substring(0, 17) + \"...\" + ' ';\r\n            else {\r\n                toreturn += word + ' '\r\n            }\r\n        });\r\n        return toreturn.substring(0, toreturn.length - 1);\r\n    };\r\n\r\n    loadSidebar = () => {\r\n        if (this.props.learnMode == 'Yes') {\r\n            return (\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\">\r\n                        <Divider/>\r\n                        <Typography\r\n                             color=\"textSecondary\"\r\n                             display=\"block\"\r\n                             variant=\"caption\"\r\n                             style={{paddingBottom: '10px'}}\r\n                         >\r\n                             Beginner Lessons\r\n                         </Typography>\r\n                        {\r\n                            this.state.games.map((game,index) => {\r\n                                    if (index === 4) {\r\n                                        return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Intermediate Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    else if (index === 7) {\r\n                                            return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Advanced Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    return(\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={game.name} index={index} handleClickGame={this.handleLearnClickGame}/>\r\n                                    )\r\n                                }\r\n\r\n                            )\r\n                        }\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickAnswersGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeHistoryData\r\n                            lowestMovesforPuzzle={this.state.lowestMovesforPuzzle}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            difficultyforPuzzle={this.state.difficultyforPuzzle}\r\n                            nameSubmitted={this.props.nameSubmitted}\r\n                            playerMovedSequence={this.state.playerMovedSequence}\r\n                            bestScore={this.props.bestScore}\r\n                            scoreSubmitted={this.props.scoreSubmitted}\r\n                         />\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.weeklyChallengeMode === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <DailyMovesView\r\n                            moveHistory={JSON.parse(JSON.stringify(window.weeklyChallengeSessionBestHistory[this.state.numPuzzleon]))}\r\n                            playerState={JSON.parse(JSON.stringify(window.weeklyChallengeSessionBestPlayerState[this.state.numPuzzleon]))}\r\n                            resetToBest={this.resetToBest}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            color=\"secondary\"\r\n                            display=\"block\"\r\n                            variant={\"h4\"}\r\n\r\n                        >\r\n                            {this.state.dailyDayName}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <WeeklyGameItems\r\n                                            selected={this.state.numPuzzleon}\r\n                                            game={game}\r\n                                            name={'Puzzle ' + (index + 1)}\r\n                                            index={index}\r\n                                            moveHistoryList = {this.state.moveHistoryList}\r\n                                            gamesWonWeekly = {this.state.gamesWonWeekly}\r\n                                            handleClickGame={this.handleWeeklyClickGame}\r\n                                        />\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <HighScores highscores={this.state.highscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyEvolutionMode === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <MyStopwatch seconds_add={this.state.daily_start_timer_seconds} minutes_add={this.state.daily_start_timer_minutes}/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyMovesView\r\n                            moveHistory={JSON.parse(JSON.stringify(window.dailyEvolutionSessionBestHistory[this.state.numPuzzleon]))}\r\n                            playerState={JSON.parse(JSON.stringify(window.dailyEvolutionSessionBestPlayerState[this.state.numPuzzleon]))}\r\n                            resetToBest={this.resetToBest}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            color=\"secondary\"\r\n                            display=\"block\"\r\n                            variant={\"h4\"}\r\n\r\n                        >\r\n                            {'Daily Evolution'}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <WeeklyGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickGame} moveHistoryList={this.state.moveHistoryList}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <HighScores highscores={this.state.highscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <MyStopwatch seconds_add={this.state.daily_start_timer_seconds} minutes_add={this.state.daily_start_timer_minutes}/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyMovesView\r\n                            moveHistory={JSON.parse(JSON.stringify(window.dailyChallengeSessionBestHistory[this.state.numPuzzleon]))}\r\n                            playerState={JSON.parse(JSON.stringify(window.dailyChallengeSessionBestPlayerState[this.state.numPuzzleon]))}\r\n                            resetToBest={this.resetToBest}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography\r\n                            color=\"secondary\"\r\n                            display=\"block\"\r\n                            variant={\"h4\"}\r\n\r\n                        >\r\n                            {this.state.dailyDayName}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            style={{width: '100%'}}\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <DailyGameItems selected={this.state.numPuzzleon}\r\n                                                         game={game} name={'Puzzle #' + (index + 1)}\r\n                                                         index={index}\r\n                                                         handleClickGame={this.handleDailyClickGame}\r\n                                                         moveHistoryList={this.state.moveHistoryList}\r\n                                                         bestScore={window.dailyChallengeSessionBestHistory}\r\n                                        />\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <HighScores highscores={this.state.highscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.state.createMode === 'Yes') {\r\n            return (\r\n                <CreateBoardGoalSelector\r\n                    buildMode={this.state.buildMode}\r\n                    handleWildCardClick={this.handleWildCardClick}\r\n                    handleColoredClick={this.handleColoredClick}\r\n                />\r\n            );\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.puzzleRush) {\r\n            return (\r\n                     <div>\r\n                        <Timer puzzleRushTimeUp={this.puzzleRushTimeUp}>\r\n                        </Timer>\r\n                        <Typography id=\"discrete-slider-small-steps\"\r\n                                     color=\"Primary\"\r\n                                     variant=\"h3\"\r\n                                     display=\"inline\"\r\n                                     gutterBottom>\r\n                             {this.state.numPuzzleon}\r\n                         </Typography>\r\n                     </div>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n            <div style={{display: 'grid'}}>\r\n                <Typography\r\n                    color=\"secondary\"\r\n                    display=\"block\"\r\n                    variant={\"h4\"}\r\n\r\n                >\r\n                    {this.trimName(this.props.name)}\r\n                </Typography>\r\n                <div style={{paddingBottom: '10px', display: 'inline-flex', alignItems: \"center\"}}>\r\n                    <Typography variant=\"caption\" style={{paddingRight: \"5%\"}}>\r\n                        By: {this.trimName(this.props.author)}\r\n                    </Typography>\r\n                    <div>\r\n                        <div style={{display: \"inline-flex\"}}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                style={{borderTopRightRadius: \"0px\", borderBottomRightRadius: \"0px\"}}\r\n                                startIcon={this.state.hasVoted ? <StarIcon/> : <StarBorderIcon/>}\r\n                                onClick={this.updateLike}\r\n                                size={\"small\"}\r\n                            >\r\n                                {this.state.hasVoted ? \"Unlike\" : \"Like\"}\r\n                            </Button>\r\n                            <Paper variant=\"contained\"  style={{borderTopLeftRadius: \"0px\", borderBottomLeftRadius: \"0px\"}} >\r\n                                <Typography style={{marginLeft: \"5px\", marginRight: \"5px\"}} variant=\"h6\">{this.state.votes ? this.state.votes : 0}</Typography>\r\n                            </Paper>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Grid container xs={12} direction=\"column\">\r\n                <HighScores highscores={this.state.highscores}/>\r\n                </Grid>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    updateLike = () => {\r\n        const action = this.state.hasVoted ? \"remove\" : \"create\"\r\n        axios.post('/likepuzzle', {uri: this.state.uri, action: action, vote: \"voting\"})\r\n            .then( res => {\r\n                var newHasVoted = \"Y\"\r\n                var newVotes = this.state.votes\r\n                if (this.state.hasVoted)\r\n                    newHasVoted = null\r\n                if (!isNaN(res.data.votes))\r\n                    newVotes = res.data.votes\r\n\r\n                this.setState({\r\n                    hasVoted: newHasVoted,\r\n                    votes: newVotes\r\n                });\r\n            }).catch(_ => {\r\n                this.props.signInModalOpen(\"Sign in\")\r\n            });\r\n    }\r\n\r\n    handlePlayerMovementFromMouse = (direction) => {\r\n        this.handlePlayerMovement({dir: direction})\r\n    };\r\n\r\n    handleUndoMove = () => {\r\n        var moveHistory = this.state.moveHistory;\r\n        var playerState = this.state.playerState;\r\n        if (moveHistory.length !== 0) {\r\n            var moveObj = moveHistory.pop();\r\n            if (this.state.isEvolution) {\r\n                var newSwitchState = []\r\n                this.state.coloredSwitchesOn.map(switches => {\r\n                    if (switches.left === playerState[moveObj.robot].left && switches.top === playerState[moveObj.robot].top) {\r\n                        switches.isOn = switches.isOn ? false : true;\r\n                    }\r\n                    newSwitchState.push(switches)\r\n                })\r\n            }\r\n            else {\r\n                var newSwitchState = []\r\n            }\r\n            playerState[moveObj.robot].left = moveObj.prevPosition.left;\r\n            playerState[moveObj.robot].top = moveObj.prevPosition.top;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n                gameWon: false,\r\n                coloredSwitchesOn: newSwitchState,\r\n                dailySubmittedSucessfully: null\r\n            });\r\n        }\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes' && this.state.buildMode) {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    checkWinningPosition = (goal,coloredGoals,playerState) => {\r\n        if (goal != null && coloredGoals == null) {\r\n            var Won = false;\r\n            playerState.map((player) => {\r\n                if (player.top === goal.top && player.left === goal.left) {\r\n                    Won = true;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            if (goal != null) {\r\n                var Won = false;\r\n                playerState.map((player) => {\r\n                    if (player.top === goal.top && player.left === goal.left) {\r\n                        Won = true;\r\n                    }\r\n                });\r\n            }\r\n            else if (coloredGoals.length == 0) {\r\n                var Won = false;\r\n            }\r\n            else {\r\n                var Won = true;\r\n            }\r\n            var found = false;\r\n            var colorfound = false;\r\n            playerState.map((player) => {\r\n                found = false\r\n                colorfound = false\r\n                coloredGoals.map(goal => {\r\n                    if (goal.colorSignifier == player.colorSignifier && goal.top === player.top && goal.left === player.left) {\r\n                        found = true;\r\n                    }\r\n                    if (goal.colorSignifier == player.colorSignifier) {\r\n                        colorfound = true;\r\n                    }\r\n                });\r\n                if (!found && colorfound) {\r\n                    Won = false;\r\n                }\r\n            });\r\n        }\r\n        return Won\r\n    }\r\n\r\n\r\n    onStopDragHandlerGoal = (position,color) => {\r\n        if (color == undefined) {\r\n            var goal = {top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize)}\r\n            if (!this.checkWinningPosition(goal,this.state.coloredGoals,this.state.playerState)) {\r\n                this.setState({\r\n                    goal: goal,\r\n                    playerState: this.state.playerStart.slice(),\r\n                    moveHistory: [],\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            var coloredGoals = this.state.coloredGoals;\r\n            var newGoals = [];\r\n            coloredGoals.map(goal => {\r\n                if (goal.color == color) {\r\n                    newGoals.push({top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize), color: color, colorSignifier: goal.colorSignifier});\r\n                }\r\n                else {\r\n                    newGoals.push(goal);\r\n                }\r\n            });\r\n            if (!this.checkWinningPosition(this.state.goal,newGoals,this.state.playerState)) {\r\n                this.setState({\r\n                    coloredGoals: newGoals,\r\n                    playerState: this.state.playerStart.slice(),\r\n                    moveHistory: [],\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    onStopDragHandler = (position,index,oldPosition) => {\r\n        var playerState = this.state.playerState.slice();\r\n        var lastX = position.lastX / this.state.squareSize;\r\n        var lastY = position.lastY / this.state.squareSize;\r\n        playerState[index].top = Math.round(lastY);\r\n        playerState[index].left = Math.round(lastX);\r\n        var Won = this.checkWinningPosition(this.state.goal,this.state.coloredGoals,playerState)\r\n        if (!Won) {\r\n            this.setState({\r\n                playerStart: playerState.slice(),\r\n                playerState: playerState,\r\n                moveHistory: []\r\n            });\r\n        }\r\n        else {\r\n            playerState[index].top = oldPosition.top\r\n            playerState[index].left = oldPosition.left\r\n            this.setState({\r\n                playerState: playerState,\r\n                playerStart: playerState.slice(),\r\n                flashMessage: null\r\n            });\r\n            this.setState({\r\n                flashMessage: <FlashMessage duration={5000}>\r\n                                <Typography variant='h5' color='error'>You must click Build Mode to solve in order to submit the puzzle</Typography>\r\n                              </FlashMessage>\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        puzzleRushTimeUp={this.puzzleRushTimeUp}\r\n                        isPuzzleRush={this.props.puzzleRush}\r\n                        numPuzzleRush={this.state.numPuzzleon}\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                        toggleLineIndicators = {this.toggleLineIndicators}\r\n                        showColoredLineDirections={this.state.showColoredLineDirections}\r\n                        toggleBuildMode = {this.toggleBuildMode}\r\n                        undoMove = {this.handleUndoMove}\r\n                        buildMode = {this.state.buildMode}\r\n                        squareSizeValue = {parseInt((this.state.squareSize/4))}\r\n                        isLesson = {this.props.learnMode}\r\n                        isDailyChallenge = {this.props.dailyChallengeMode}\r\n                        isDailyEvolution = {this.props.dailyEvolutionMode}\r\n                        isDailyChallengeAnswers = {this.props.dailyChallengeModeAnswers}\r\n                        isWeeklyChallenge = {this.props.weeklyChallengeMode}\r\n                    />\r\n                    {this.state.flashMessage}\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? null : <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>}\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8} zeroMinWidth>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal\r\n                            dimension={this.state.squareSize}\r\n                            position={this.state.goal}\r\n                            onStopDragHandler={this.onStopDragHandlerGoal}\r\n                            draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                            isCreateMode={this.state.createMode}\r\n                            buildMode={this.state.buildMode}\r\n                        />\r\n                        {\r\n                            this.state.coloredGoals.map(goal =>\r\n                                <Goal\r\n                                    dimension={this.state.squareSize}\r\n                                    position={goal}\r\n                                    onStopDragHandler={this.onStopDragHandlerGoal}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    color={goal.color}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.coloredSwitchesOn.map(switches =>\r\n                                <SwitchPad\r\n                                    dimension={this.state.squareSize}\r\n                                    position={switches}\r\n                                    color={switches.color}\r\n                                    isOn={switches.isOn}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    onStopDragHandler={this.onStopDragHandler}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                    wallType={wallH.wallType}\r\n                                    coloredSwitches={this.state.coloredSwitchesOn}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                    wallType={wallV.wallType}\r\n                                    coloredSwitches={this.state.coloredSwitchesOn}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={this.state.playerState[this.state.robotSelected].color}\r\n                                    show={this.state.showColoredLineDirections}\r\n                                    handleClick={this.handlePlayerMovementFromMouse}\r\n                                    buildMode={this.state.buildMode}\r\n                                />\r\n                            )\r\n                        }\r\n                    </Board>\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/> : null}\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DescriptionList\r\n                        handleCloseToolTips={this.handleCloseToolTips}\r\n                        tipsText={this.state.tipsText}\r\n                    />\r\n                    {this.loadSidebar()}\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                {\r\n                    this.checkwin(this.state.playerState)\r\n                }\r\n                <PuzzleRushWinModal\r\n                    show={this.state.showPuzzleRushFinishedModal}\r\n                    closeModal={this.closePuzzleRushFinishedModal}\r\n                    numPuzzlesCompleted={this.state.numPuzzlesCompleted}\r\n                    percentile={this.state.puzzleRushPercentileCompleted}\r\n                    averageTime={this.state.averageTime}\r\n                    averageMoves={this.state.averageMoves}\r\n                    differenceOptimal={this.state.differenceOptimal}\r\n                    movesPerSecond={this.state.movesPerSecond}\r\n                    difficulty={this.props.difficulty}\r\n                    handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyEvolutionPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                daily_start_timer_seconds={this.props.daily_start_timer_seconds}\r\n                daily_start_timer_minutes={this.props.daily_start_timer_minutes}\r\n                handleClickDailyEvolution={this.props.handleClickDailyEvolution}\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                dailyEvolutionMode={'Yes'}\r\n                playerStateList={this.props.playerStateList}\r\n                savedMoves={this.props.savedMoves}\r\n                games={this.props.dailyChallengeGameslist}\r\n                dce_id={this.props.dce_id}\r\n                highscores={this.props.dcehighscores}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyEvolutionPage;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  homepage: {\r\n    marginTop: '40px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  baseExpansion: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n    marginTop: \"4px\"\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    marginTop: \"4px\",\r\n    marginLeft: '10px'\r\n  },\r\n  darkmode: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      marginTop: '150px',\r\n  },\r\n  iconcards: {\r\n    width: '250px',\r\n    display: 'inline-block',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  iconcardsDaily: {\r\n    maxWidth: 345,\r\n    minWidth: 250,\r\n    float: 'left',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  titlehome: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '30px',\r\n  },\r\n  titledailyroto: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '10px',\r\n  },\r\n  iconfonts: {\r\n    fontFamily: \"'Arvo', serif\",\r\n  },\r\n  createboardcard: {\r\n    ':hover': {\r\n        content: '/static/images/CreateBoardCardIconPlaced.png',\r\n    }\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  centeredProfile: {\r\n    marginTop: '20px',\r\n    display: 'inline-block',\r\n  },\r\n  expandedPanelDCH: {\r\n    background: 'linear-gradient(70deg, #fff810  30%, rgba(0,0,0,0) 30%), linear-gradient(30deg, #63e89e 60%, #ff7ee3 60%)'\r\n  },\r\n  table: {\r\n    width: '33%'\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n    TableContainer,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell, TableBody\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../Material-UI/themes\";\r\nimport {FaCrown} from \"react-icons/fa\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function Leaderboard(props) {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [puzzleRushTabValue, setPuzzleRushTabValue] = React.useState(0);\r\n    const [puzzleRushDifficultyValue, setPuzzleRushDifficultyValue] = React.useState(\"easy\");\r\n    const [puzzleRushDifficultyLabel, setPuzzleRushDifficultyLabel] = React.useState(\"Easy\");\r\n    const [puzzleRushCurrentScoreList, setPuzzleRushCurrentScoreList] = React.useState(props.puzzle_rush_leaderboard.easyrandomscore);\r\n    const [puzzleRushCurrentUserList, setPuzzleRushCurrentUserList] = React.useState(props.puzzle_rush_leaderboard.easyrandomusername);\r\n\r\n    const handlePuzzleRushTabChange = (event, newValue) => {\r\n        setPuzzleRushTabValue(newValue);\r\n    };\r\n\r\n    const handlePuzzleRushDifficultyChange = (value, label) => {\r\n        setPuzzleRushDifficultyValue(value)\r\n        setPuzzleRushDifficultyLabel(label)\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        updatePuzzleRushList()\r\n    }, [puzzleRushTabValue, puzzleRushDifficultyValue])\r\n\r\n    const updatePuzzleRushList = () => {\r\n        if (puzzleRushTabValue === 0) {\r\n            if (puzzleRushDifficultyValue === \"easy\") {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.easyrandomscore)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.easyrandomusername)\r\n            } else if (puzzleRushDifficultyValue === \"medium\") {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.mediumrandomscore)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.mediumrandomusername)\r\n            } else if (puzzleRushDifficultyValue === \"hard\") {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.hardrandomscore)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.hardrandomusername)\r\n            } else {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.exhardrandomscore)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.exhardrandomusername)\r\n            }\r\n        } else if (puzzleRushTabValue === 1) {\r\n            if (puzzleRushDifficultyValue === \"easy\") {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.easyclassicscore)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.easyclassicusername)\r\n            } else if (puzzleRushDifficultyValue === \"medium\") {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.mediumclassicscore)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.mediumclassicusername)\r\n            } else if (puzzleRushDifficultyValue === \"hard\") {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.hardclassicscore)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.hardclassicusername)\r\n            } else {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.exhardclassicscore)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.exhardclassicusername)\r\n            }\r\n        } else {\r\n            if (puzzleRushDifficultyValue === \"easy\") {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.easyclassicv2score)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.easyclassicv2username)\r\n            } else if (puzzleRushDifficultyValue === \"medium\") {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.mediumclassicv2score)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.mediumclassicv2username)\r\n            } else if (puzzleRushDifficultyValue === \"hard\") {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.hardclassicv2score)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.hardclassicv2username)\r\n            } else {\r\n                setPuzzleRushCurrentScoreList(props.puzzle_rush_leaderboard.exhardclassicv2score)\r\n                setPuzzleRushCurrentUserList(props.puzzle_rush_leaderboard.exhardclassicv2username)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={gamepanel()}>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                    <Typography className={classes.titlehome} variant=\"h3\">Leaderboards</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={4}>\r\n                    <Typography className={classes.titledailyroto} variant=\"h5\">Find Game</Typography>\r\n                    <TableContainer component={Paper}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Rank</TableCell>\r\n                                    <TableCell>User</TableCell>\r\n                                    <TableCell align={\"right\"}>Crowns</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    props.findGame_leaderboard.map((entry,index) =>\r\n                                        <TableRow>\r\n                                            <TableCell>{index + 1}</TableCell>\r\n                                            <TableCell>{entry.username}</TableCell>\r\n                                            <TableCell align={\"right\"}>{entry.Crowns} <FaCrown/></TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={4}>\r\n                    <Typography className={classes.titledailyroto} variant=\"h5\">Daily Challenge</Typography>\r\n                    <TableContainer component={Paper}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Rank</TableCell>\r\n                                    <TableCell>User</TableCell>\r\n                                    <TableCell align={\"right\"}>Crowns</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    props.dailyChallenge_leaderboard.map((entry,index) =>\r\n                                        <TableRow>\r\n                                            <TableCell>{index + 1}</TableCell>\r\n                                            <TableCell>{entry.username}</TableCell>\r\n                                            <TableCell align={\"right\"}>{entry.Crowns} <FaCrown/></TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={4}>\r\n                    <div style={{width: \"100%\", display: \"inline-flex\"}}>\r\n                        <Typography style={{flexGrow: 1}} className={classes.titledailyroto} variant=\"h5\">Puzzle Rush</Typography>\r\n                        <Button\r\n                            onClick={(event) => setAnchorEl(event.currentTarget)}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            style={{height: \"20%\"}}\r\n                        >\r\n                            {puzzleRushDifficultyLabel}\r\n                        </Button>\r\n                        <Menu\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={() => setAnchorEl(null)}\r\n                            getContentAnchorEl={null}\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'center',\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'center',\r\n                            }}\r\n                        >\r\n                            <MenuItem onClick={() => handlePuzzleRushDifficultyChange(\"easy\", \"Easy\")}>Easy</MenuItem>\r\n                            <MenuItem onClick={() => handlePuzzleRushDifficultyChange(\"medium\", \"Medium\")}>Medium</MenuItem>\r\n                            <MenuItem onClick={() => handlePuzzleRushDifficultyChange(\"hard\", \"Hard\")}>Hard</MenuItem>\r\n                            <MenuItem onClick={() => handlePuzzleRushDifficultyChange(\"extra_hard\", \"Extra Hard\")}>Extra Hard</MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n                    <Paper style={{borderBottomLeftRadius: 0, borderBottomRightRadius: 0}}>\r\n                        <Tabs\r\n                            value={puzzleRushTabValue}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={handlePuzzleRushTabChange}\r\n                            aria-label=\"disabled tabs example\"\r\n                            variant={\"fullWidth\"}\r\n                        >\r\n                            <Tab label=\"Random\" />\r\n                            <Tab label=\"Classic\"/>\r\n                            <Tab label=\"Classic V2\" />\r\n                        </Tabs>\r\n                    </Paper>\r\n                    <TableContainer component={Paper} style={{borderTopLeftRadius: 0, borderTopRightRadius: 0}}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Rank</TableCell>\r\n                                    <TableCell>User</TableCell>\r\n                                    <TableCell align={\"right\"}>Score</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    puzzleRushCurrentUserList.map((userName,index) =>\r\n                                        <TableRow>\r\n                                            <TableCell>{index + 1}</TableCell>\r\n                                            <TableCell>{userName}</TableCell>\r\n                                            <TableCell align={\"right\"}>{puzzleRushCurrentScoreList[index]}</TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport axios from 'axios';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        maxWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 360,\r\n        minWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 235,\r\n        height: 225,\r\n        position: 'relative',\r\n        background: 'linear-gradient(100deg, #ffd34d 55%, #fff178 55%)'\r\n    },\r\n\r\n    item: {\r\n        padding: 0\r\n    },\r\n\r\n    upperPadding: {\r\n        paddingTop: 3\r\n    },\r\n    upperPaddingButton: {\r\n        paddingTop: 3,\r\n        position: 'absolute',\r\n        bottom: 15,\r\n        left: 25\r\n    },\r\n\r\n    lowerPadding: {\r\n        paddingBottom: 3\r\n    },\r\n\r\n    rightSideText: {\r\n        textAlign: \"right\",\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    },\r\n\r\n    leftSideText: {\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(ComplexGrid)\r\n\r\nfunction ComplexGrid(props) {\r\n    const { classes } = props;\r\n    const handleClick = () => {\r\n        axios.get('/getFindGameData?uri=' + props.game.uri)\r\n                .then( res => {\r\n                    var game = JSON.parse(res.data.game);\r\n                    props.handleGameClick(game.name, game.puzzledata,props.highscores,game.uri,props.game.authorname,\r\n                        props.game.votes, props.game.hasVoted);\r\n                });\r\n    };\r\n\r\n    var numberOfHighScores = 0;\r\n\r\n    const highscorestyle = highscore => {\r\n        if (numberOfHighScores === 6) return \"\";\r\n        numberOfHighScores++;\r\n        return (\r\n            <ListItem disableGutters={true} classes={{ root: classes.item }}>\r\n                <ListItemText primary={trimNameShort(highscore.comment)} classes={{ root: classes.leftSideText }} />\r\n                <ListItemText secondary={highscore.numMoves} classes={{ root: classes.rightSideText }} />\r\n            </ListItem>\r\n        )\r\n    };\r\n\r\n    const contentDivStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        };\r\n\r\n    };\r\n\r\n    const trimName = name => {\r\n        var separated = (name + '').split(\" \")\r\n        var toreturn = '';\r\n        separated.map((word) => {\r\n            if (word.length > 17)\r\n                toreturn += word.substring(0, 17) + \"...\" + ' ';\r\n            else {\r\n                toreturn += word + ' '\r\n            }\r\n        });\r\n        return toreturn.substring(0, toreturn.length - 1);\r\n    };\r\n\r\n    const trimNameShort = name => {\r\n        if (name.length > 10)\r\n            name = name.substring(0, 10) + \"...\";\r\n        return name\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid item xs={12} md={3} sm={6}>\r\n            <Card variant=\"outlined\" className={classes.root}>\r\n                <CardContent>\r\n                    <div style={contentDivStyle()}>\r\n                        <div style={{width: '150px'}}>\r\n                            <Tooltip title={props.game.name}>\r\n                                <Typography variant=\"h6\" classes={{ root: classes.lowerPadding }}>\r\n                                    {trimName(props.game.name)}\r\n                                </Typography>\r\n                            </Tooltip>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    By: {trimName(props.game.authorname)}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    {props.game.created}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Plays: {props.game.plays}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Likes: {props.game.votes}\r\n                                </Typography>\r\n                            </div>\r\n                            <br/>\r\n                            <Button onClick={handleClick} classes={{ root: classes.upperPaddingButton }} variant=\"contained\" color=\"primary\">Play</Button>\r\n                        </div>\r\n                        <div style={{width: '105px'}}>\r\n                            <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                Top Scores\r\n                            </Typography>\r\n                            <List>\r\n                                {\r\n                                    props.highscores.map(highscore =>\r\n                                        highscorestyle(highscore)\r\n                                    )\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from 'axios';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport extend from '../constants/extend';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center'\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 400,\r\n    },\r\n    input: {\r\n        marginLeft: 5,\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n        marginLeft: 8,\r\n        marginRight: 8,\r\n    },\r\n});\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = this.props.gameslist;\r\n        var highscoreslist = this.props.highscoreslist;\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n            anchorEl: null,\r\n            hasMore: true,\r\n            lastSearch: 'None',\r\n            offsetSearch: gameslist.length,\r\n            isLoadingSearch: false,\r\n        }\r\n\r\n    }\r\n\r\n    handleGameClick = (name,gamedata,highscores,uri,authorname,votes,hasVoted) => {\r\n        this.props.handleGameClick(name,gamedata,highscores,uri,authorname,votes,hasVoted);\r\n    };\r\n\r\n    handleFilterMenuOpen = event => {\r\n        this.setState( {\r\n          anchorEl: event.currentTarget\r\n      });\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.keycode == 13) {\r\n            this.handleSearchSubmit(e);\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        window.scrollTo(0,this.props.findWindowHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.props.setFindWindow(window.scrollY)\r\n    }\r\n\r\n    handleCloseFilterMenuMostPlayed = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'MostPlayed', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'MostPlayed', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'MostPlayed',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleCloseFilterMenuMostLiked = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'MostLiked', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'MostLiked', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'MostLiked',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleCloseFilterMenuHighest = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'Highest', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'Highest', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'Highest',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    handleSearchSubmit = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n\r\n        axios.post('/search', {search: searchTerm, filter: 'None', offset: 0})\r\n            .then( res => {\r\n                var gameslist = JSON.parse(res.data.gameslist)\r\n                var highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                this.props.setNumFindGames(gameslist.length, 'None', searchTerm);\r\n                this.setState({\r\n                    highscoreslist: highscoreslist,\r\n                    gameslist: gameslist,\r\n                    lastSearch: 'None',\r\n                    hasMore: true\r\n                });\r\n            });\r\n    };\r\n\r\n    hasMore = () => {\r\n        return ( this.state.hasMore ? null : <Grid item alignItems=\"center\" justify=\"center\" xs={12}><Typography style={{textAlign: 'center', display: 'block'}} variant=\"caption\">No More Puzzles</Typography></Grid>)\r\n    }\r\n\r\n    loadMoreItems = () => {\r\n        var searchTerm = this.searchRef.value;\r\n        if (!this.state.isLoadingSearch) {\r\n            this.state.isLoadingSearch = true;\r\n            axios.post('/search', {search: searchTerm, filter: 'None', offset: this.state.offsetSearch})\r\n                .then( res => {\r\n                    var gameslist = JSON.parse(res.data.gameslist);\r\n                    this.state.offsetSearch = gameslist.length + this.state.gameslist.length;\r\n                    var highscoreslist = JSON.parse(res.data.highscoreslist);\r\n                    this.props.setNumFindGames(gameslist.length + this.state.gameslist.length, this.state.lastSearch, searchTerm);\r\n                    this.setState({\r\n                        highscoreslist: this.state.highscoreslist.concat(highscoreslist),\r\n                        gameslist: this.state.gameslist.concat(gameslist),\r\n                        hasMore: gameslist.length == 0 ? false : true,\r\n                        isLoadingSearch: false,\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    handleCloseFilterMenu = () => {\r\n        this.setState({\r\n            anchorEl: null\r\n        });\r\n    };\r\n\r\n    render () {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <div id='MainFindPage' style={gamepanel()}>\r\n                <Paper component=\"form\" className={classes.root} >\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        inputRef={ref => this.searchRef = ref}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                this.handleSearchSubmit();\r\n                                event.preventDefault()\r\n                            }\r\n                        }}\r\n                    />\r\n                    <IconButton onClick={this.handleSearchSubmit} className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <Divider className={classes.divider} orientation=\"vertical\" />\r\n                    <Button\r\n                        onClick={this.handleFilterMenuOpen}\r\n                        startIcon={<FilterListIcon />}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        Sort\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(this.state.anchorEl)}\r\n                        onClose={this.handleCloseFilterMenu}\r\n                        getContentAnchorEl={null}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'center',\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'center',\r\n                        }}\r\n                    >\r\n                        <MenuItem onClick={this.handleSearchSubmit}>Recently Created</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuMostPlayed}>Most Played</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuMostLiked}>Most Liked</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuHighest}>Highest Scores</MenuItem>\r\n                    </Menu>\r\n                </Paper>\r\n                <br/>\r\n                <Grid container alignItems={\"stretch\"} spacing={2}>\r\n                    {\r\n                        this.state.gameslist.map((game,index)=>\r\n                            <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                        )\r\n                    }\r\n                    <InfiniteScroll\r\n                        pageStart={1}\r\n                        loadMore={this.loadMoreItems.bind(this)}\r\n                        hasMore={this.state.hasMore}\r\n                        loader={<Grid item alignItems=\"center\" justify=\"center\" xs={12}><CircularProgress style={{textAlign: 'center',alignItems: 'center', marginLeft: 'auto', marginRight: 'auto'}} size={40} color=\"secondary\" /></Grid>}\r\n                        threshold={200}\r\n                        >\r\n                    </InfiniteScroll>\r\n                    {this.hasMore()}\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(FindGame);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  loadedGame={'Yes'}\r\n                  name={this.props.name}\r\n                  author={this.props.authorname}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n                  votes={this.props.votes}\r\n                  hasVoted={this.props.hasVoted}\r\n                  signInModalOpen={this.props.signInModalOpen}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport DailyChallengeScores from '../components/HighScores';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport FindGameElements from \"../containers/FindGameElements\";\r\nimport {GOAL_IMAGE} from '../constants/constants';\r\n\r\nconst style2 = () => {\r\n\r\n}\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n    var greeting = window.experiencedUser != 'Yes' ?\r\n    <div >\r\n        <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n        </Typography>\r\n        <Typography variant=\"p1\" paragraph={true}>Puzzle game for anyone to play! Create your own custom boards or play a random Solved game. <br/>Goal is to get ANY piece to stop on the  <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n        </Typography>\r\n        <br/>\r\n        <img width=\"300\" height=\"300\" src='/static/videos/basic2.gif'/>\r\n        <br/>\r\n    </div>\r\n        :\r\n    <div>\r\n        <Typography className={classes.titlehome} variant=\"h3\"> Daily Challenge Medals are here!!!!\r\n        </Typography>\r\n        <Typography variant=\"p1\" paragraph={true}> Each daily challenge has a gold/silver/bronze medal time based on the minimum number of moves\r\n        </Typography>\r\n        <Typography variant=\"p1\" paragraph={true}> Medals are RESET TO ZERO at the start of each month\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"p1\" paragraph={true}> let me know if the gold/silver/bronze medal times should be adjusted at robotsevolved@gmail.com! Have fun!\r\n        </Typography>\r\n        <br/>\r\n    </div>\r\n\r\n    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n        return (<div className={classes.homepage} >\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                        {greeting}\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n\r\n                        <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                        </Typography>\r\n                        <Typography variant=\"h1\"> 3/22/2021 added website leaderboard for each of the robots catagories.\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography> 10/13/2022 added daily evolution! trying out new game modes again!\r\n                        </Typography>\r\n                        <br/>\r\n                    </Grid>\r\n                    <Grid container item alignItems={\"stretch\"} spacing={2} alignItems=\"center\" justify=\"center\" >\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickDailyEvolution}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Daily Evolution\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/DailyEvolutionCard.png\"\r\n                                        title=\"Daily Evolution\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Daily Evolution\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickFindGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Find a Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/FindAGameCardIcon.png\"\r\n                                        title=\"Find a Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Find a Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/DailyChallengeIcon.png\"\r\n                                        title=\"Daily Challenge\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Daily Challenge\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickCreateGame}>\r\n                                    <CardMedia\r\n                                        className={classes.createboardcard}\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                        title=\"Create Board\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Create Board\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickRandomGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Play a Random Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/puzzle.png\"\r\n                                        title=\"Play a Random Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Play a Random Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickLearnGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                        title=\"Learn\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Learn\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Contemplative Reptile\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/PuzzleRushIcon.png\"\r\n                                        title=\"Contemplative Reptile\"\r\n                                    />\r\n                                    <CardContent style={{textAlign: 'center'}}>\r\n                                        <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            Puzzle Rush\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                    <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                    </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            Medium Mondays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Trouble Tuesday <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Wild Wednesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Tryhard Thursdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                        </Typography>\r\n                        <Typography style={{marginTop: '30px'}} className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                        </Typography>\r\n                        <DailyChallengeScores highscores={window.dchighscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (<div className={classes.homepage}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> Controls\r\n                    </Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Movement\r\n                        </Typography>\r\n                    <img width={'20%'} height={'auto'} src={\"/static/images/keyboard.png\"}/>\r\n                    <Typography>Pieces Move until they hit a wall or another piece</Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Selecting robots\r\n                        </Typography>\r\n                        <img width={'20%'} height={'auto'} src={\"/static/images/tab.png\"}/>\r\n\r\n                    <Typography>Or click</Typography>\r\n                    <Divider/>\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            HotKeys\r\n                        </Typography>\r\n                        <Typography variant=\"h6\">Undo</Typography> <img width={'20%'} height={'auto'} src={\"/static/images/Qkey.png\"}/>\r\n                        <Typography variant=\"h6\">Reset</Typography> <img width={'20%'} height={'auto'} src={\"/static/images/Ekey.png\"}/>\r\n                    <Divider />\r\n                    <div style={{marginTop:'100px'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                    </Typography>\r\n                    <Typography> 3/22/2021 added website leaderboard for each of the robots catagories.\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography> 10/13/2022 added daily evolution! trying out new game modes again!\r\n                        </Typography>\r\n                        <br/>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={8} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    {greeting}\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickDailyEvolution}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Daily Evolution\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/DailyEvolutionCard.png\"\r\n                                title=\"Daily Evolution\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Daily Evolution\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                      <CardActionArea onClick={props.handleClickFindGame}>\r\n                        <CardMedia\r\n                          component=\"img\"\r\n                          alt=\"Find a Game\"\r\n                          height=\"140\"\r\n                          image=\"/static/images/FindAGameCardIcon.png\"\r\n                          title=\"Find a Game\"\r\n                        />\r\n                        <CardContent>\r\n                          <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                            Find a Game\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                      <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                        <CardMedia\r\n                          component=\"img\"\r\n                          alt=\"Create Board\"\r\n                          height=\"140\"\r\n                          image=\"/static/images/DailyChallengeIcon.png\"\r\n                          title=\"Daily Challenge\"\r\n                        />\r\n                        <CardContent>\r\n                          <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                            Daily Challenge\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickCreateGame}>\r\n                            <CardMedia\r\n                                className={classes.createboardcard}\r\n                                component=\"img\"\r\n                                alt=\"Create Board\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                title=\"Create Board\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Create Board\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickRandomGame}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Play a Random Game\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/puzzle.png\"\r\n                                title=\"Play a Random Game\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Play a Random Game\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickLearnGame}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Create Board\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                title=\"Learn\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Learn\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Contemplative Reptile\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/PuzzleRushIcon.png\"\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent style={{textAlign: 'center'}}>\r\n                                <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Puzzle Rush\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                            Medium Mondays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Trouble Tuesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Wild Wednesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Tryhard Thursdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">hard puzzles</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">medium puzzles</Typography>\r\n                        </Typography>\r\n                <Typography className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                </Typography>\r\n                <DailyChallengeScores highscores={window.dchighscores}/>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass WeeklyChallengePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game handleWeeklyClick={this.props.handleWeeklyClick}\r\n                    handleLineDirections={this.props.handleLineDirections}\r\n                    LineDirections={this.props.LineDirections}\r\n                    weeklyChallengeMode={'Yes'}\r\n                    playerStateList={this.props.playerStateList}\r\n                    savedMoves={this.props.savedMoves}\r\n                    games={this.props.weeklyChallengeGameslist}\r\n                    wc_id={this.props.wc_id}\r\n                    highscores={this.props.wchighscores}\r\n                    gamesWon={this.props.gamesWon}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default WeeklyChallengePage;","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst stylecol = () => {\r\n    return({\r\n            float: 'left',\r\n            width: '50%',\r\n            margin: 'auto',\r\n            padding: '0 50px',\r\n            marginTop: '6px',\r\n    });\r\n}\r\n\r\nconst spacing = () => {\r\n    return({\r\n            marginBottom: '10px',\r\n    });\r\n}\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    };\r\n\r\n    loginFacebook = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/facebook\";\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeLoginModal}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>Login to RobotsEvolved</DialogTitle>\r\n                <DialogContent dividers>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                           • Gain <FaCrown/>s when winning the Daily Challenge (stacks)\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                            • Be able to give a like to your favorite puzzles\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                            • Saving settings and your moves in the daily challenge\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography variant=\"body2\" display=\"inline\">\r\n                            • Profile Page to keep track of your submissions.\r\n                        </Typography>\r\n                    <div class=\"col\">\r\n                        <a href=\"#\" onClick={this.loginFacebook} id={\"buttonfb\"}>\r\n                          <i class=\"fa fa-facebook fa-fw\"></i> Login with Facebook\r\n                         </a>\r\n                        <a onClick={this.loginGoogle} href=\"#\" id={\"buttongoogle\"}><i class=\"fa fa-google fa-fw\">\r\n                          </i> Login with Google\r\n                        </a>\r\n                    </div>\r\n                    <Typography variant=\"caption\" display=\"block\">\r\n                            We will NEVER distribute/sell your facebook or google email address.\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeLoginModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <Button color=\"black\" onClick={this.handleClick}><b>{textToShow}</b></Button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport SignInButton from './SignInButton';\r\n\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '40px',\r\n        width: '40px',\r\n        marginTop: '5px',\r\n    };\r\n};\r\n\r\nconst divStyle = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        width: '200px',\r\n    };\r\n};\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    SignInButtonPressed = () => {\r\n        this.props.handleClick('Sign in');\r\n    }\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return <SignInButton onClick={this.SignInButtonPressed}/>\r\n        }\r\n        else {\r\n            return (\r\n                <div style={divStyle()}>\r\n                    <div>{window.userInfo.username}</div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic v2',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty) => {\r\n        console.log(difficulty)\r\n        axios.post('/puzzlerush', {difficulty: difficulty, action: 'start',type: this.state.value})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            isLoading: false,\r\n                        });\r\n                        this.props.handleClickPuzzleRush(difficulty,games,p_id);\r\n                });\r\n    };\r\n\r\n    handleClickEasyPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMediumPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                                {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                                                        ) : (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                         <Grid item xs={6}>\r\n                                         <ButtonGroup\r\n                                            orientation=\"vertical\"\r\n                                            color=\"primary\"\r\n                                            aria-label=\"vertical outlined primary button group\"\r\n                                          >\r\n                                            <Button onClick={this.handleClickEasyPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Easy\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickMediumPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Medium\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Hard\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickExHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Exteremely Hard\r\n                                            </Button>\r\n                                          </ButtonGroup>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                              <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                              <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                                <FormControlLabel value=\"classic v2\" control={<Radio />} label=\"Classic V2\" />\r\n                                                <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                                <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                              </RadioGroup>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic v2',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickRandomGameModal = (difficulty,type) => {\r\n        axios.get('/randomgame?difficulty=' + difficulty + '&type=' + type)\r\n            .then( res => {\r\n                var game = JSON.parse(res.data.game);\r\n                this.setState({\r\n                    isLoading: false,\r\n                });\r\n                this.props.handleClickRandomGame(game,difficulty);\r\n            })\r\n    }\r\n\r\n    handleClickEasy = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMedium = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHard = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHard = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickGodMode = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('GodTeir',this.state.value)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeModal}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.props.closeModal}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                            {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                            ) : (\r\n                            <Grid\r\n                                container xs={12}\r\n                                spacing={4}\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n                                wrap=\"nowrap\"\r\n                            >\r\n                                <Grid item xs={6}>\r\n                                    <ButtonGroup\r\n                                        orientation=\"vertical\"\r\n                                        color=\"primary\"\r\n                                        aria-label=\"vertical outlined primary button group\"\r\n                                      >\r\n                                        <Button onClick={this.handleClickEasy} variant=\"contained\" color=\"primary\">\r\n                                            Easy\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickMedium} variant=\"contained\" color=\"primary\">\r\n                                            Medium\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickHard} variant=\"contained\" color=\"primary\">\r\n                                            Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickExHard} variant=\"contained\" color=\"primary\">\r\n                                            Extremely Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickGodMode} variant=\"contained\" color=\"primary\">\r\n                                            God Tier\r\n                                        </Button>\r\n                                     </ButtonGroup>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl component=\"fieldset\">\r\n                                      <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                      <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                        <FormControlLabel value=\"classic v2\" control={<Radio />} label=\"Classic V2\" />\r\n                                        <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                        <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                      </RadioGroup>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageCreatedGamesDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.game.name,props.game.puzzledata,[],props.game.uri, props.game.authorname, props.game.votes, props.game.hasVoted);\r\n    }\r\n\r\n    return (<div style={{width: \"100%\"}}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography> Highscore Holder: {props.game.username} - {props.game.numMoves} </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">Play</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageSolutionDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.solution.name,props.solution.puzzledata,[],props.solution.uri);\r\n    }\r\n    return (<div style={{width: \"100%\"}}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={3}>\r\n                        <Typography style={{marginTop: 3}} color={'secondary'} variant={'body2'}> {props.solution.WinnerCreated} </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <Typography>\r\n                            Highscore Holder: {props.solution.WinnerUsername} - {props.solution.numMoves}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                            Play\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Table,TableContainer,TableHead,TableRow,TableCell,TableBody} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useStyles from '../Material-UI/themes';\r\nimport ProfilePageCreatedGamesDetails from '../components/ProfilePageComponents/ProfilePageCreatedGamesDetails';\r\nimport ProfilePageSolutionDetails from '../components/ProfilePageComponents/ProfilePageSolutionDetails';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\n\r\nexport default function ProfilePage(props) {\r\n    const classes = useStyles();\r\n    const submitAnswer = () => {\r\n        axios.post('/userUpdate',{newuser: document.getElementById(\"ProfileName\").value})\r\n            .then( res => {\r\n                if (res.data == 'OK') {\r\n                    window.location.href = '/';\r\n                }\r\n                else {\r\n                    setError(res.data);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const createData = (name,col1,col2,col3) => {\r\n        return {name,col1,col2,col3}\r\n    }\r\n\r\n    const columns = [\r\n          { id: 'difficulty', label: 'Difficulty', maxWidth: 75 },\r\n          { id: 'classic', label: 'Classic', maxWidth: 75 },\r\n          { id: 'random', label: 'Random', maxWidth: 75 },\r\n          { id: 'classic V2', label: 'Classic V2', maxWidth: 75},\r\n        ];\r\n    console.log(props);\r\n    const rows = [\r\n        createData('Easy', props.puzzlerushview.maxeasyc,props.puzzlerushview.maxeasyp,props.puzzlerushview.maxeasyc2),\r\n        createData('Medium', props.puzzlerushview.maxmediumc,props.puzzlerushview.maxmediump,props.puzzlerushview.maxmediumc2),\r\n        createData('Hard', props.puzzlerushview.maxhardc,props.puzzlerushview.maxhardp, props.puzzlerushview.maxhardc2),\r\n        createData('Extremely Hard', props.puzzlerushview.maxexhardc,props.puzzlerushview.maxexhardp, props.puzzlerushview.maxexhardc2)\r\n    ]\r\n\r\n    const rowseff = [\r\n        createData('Easy', props.puzzlerushview.maxeffec,props.puzzlerushview.maxeffep,props.puzzlerushview.maxeffec2),\r\n        createData('Medium', props.puzzlerushview.maxeffmc,props.puzzlerushview.maxeffmp,props.puzzlerushview.maxeffmc2),\r\n        createData('Hard', props.puzzlerushview.maxeffhc,props.puzzlerushview.maxeffhp,props.puzzlerushview.maxeffhc2),\r\n        createData('Extremely Hard', props.puzzlerushview.maxeffexc,props.puzzlerushview.maxeffexp,props.puzzlerushview.maxeffexc2)\r\n    ]\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [expandedGame, setExpandedGame] = React.useState(false);\r\n    const [expandedHighscores, setExpandedHighscores] = React.useState(false);\r\n    const handleChangeGame = (panel) => (event, isExpandedGame) => {\r\n        setExpandedGame(isExpandedGame ? panel : false);\r\n    };\r\n    const handleChangeHighscores = (panel) => (event, isExpandedHighScores) => {\r\n        setExpandedHighscores(isExpandedHighScores ? panel : false);\r\n    };\r\n    return (\r\n            <div style={gamepanel()}>\r\n                <Grid container spacing={4}>\r\n                    <Grid item xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <TextField className={classes.centeredProfile} id={\"ProfileName\"} label={\"Username\"} defaultValue={window.userInfo.username}/>\r\n                        <Button className={classes.centeredProfile} variant=\"contained\" color=\"secondary\" onClick={submitAnswer}>Change Username</Button>\r\n                        <Typography color={\"secondary\"}>{error}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Created</Typography>\r\n                        {\r\n                            props.gamesview.map((game,index) =>\r\n                                    <ExpansionPanel expanded={expandedGame === 'panelgame' + index} onChange={handleChangeGame('panelgame' + index)}>\r\n                                        <ExpansionPanelSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls={\"panel\" + index + \"-content\"}\r\n                                          id={\"panel\" + index + \"-header\"}\r\n                                        >\r\n                                          <Typography className={classes.heading}>{game.name}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Plays: {game.plays}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Likes: {game.votes}</Typography>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                          <ProfilePageCreatedGamesDetails\r\n                                            game={game}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                          />\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Solved</Typography>\r\n                        {\r\n                            props.solutionsview.map((solution,index) =>\r\n                                <ExpansionPanel expanded={expandedHighscores === 'panelhigh' + index} onChange={handleChangeHighscores('panelhigh' + index)}>\r\n                                    <ExpansionPanelSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls={\"panel\" + index + \"-content\"}\r\n                                      id={\"panel\" + index + \"-header\"}\r\n                                    >\r\n                                      <Typography className={classes.heading}>{solution.name}</Typography>\r\n                                      <Typography className={classes.secondaryHeading}>Best: {solution.numMoves}</Typography>\r\n                                      {solution.WinnerUserId == window.userInfo.userID ? <FaCrown style={{marginLeft: '30px'}}/> : null}\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <ProfilePageSolutionDetails\r\n                                            solution={solution}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                        />\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Puzzle Rush Records</Typography>\r\n                        <Typography variant=\"body1\">Most Puzzles Solved</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ maxWidth: column.maxWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rows.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                  <TableCell aligh=\"left\">{row.col3}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                        <Typography style={{marginTop: '40px'}} variant=\"body1\">Highest Efficiency Scores</Typography>\r\n                        <Typography variant=\"caption\">Calculated by (total puzzles completed) * 7 - (total redundany moves from best score)</Typography>\r\n                        <TableContainer component={Paper}>\r\n                          <Table size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ maxWidth: column.maxWidth, backgroundColor: 'black', color: 'white' }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {rowseff.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"left\">{row.col1}</TableCell>\r\n                                  <TableCell align=\"left\">{row.col2}</TableCell>\r\n                                  <TableCell aligh=\"left\">{row.col3}</TableCell>\r\n                                </TableRow>\r\n                              ))}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nexport default function RandomGamePage(props) {\r\n    return (\r\n        <Game\r\n              handleLineDirections={props.handleLineDirections}\r\n              LineDirections={props.LineDirections}\r\n              randomGame={'Yes'}\r\n              game={props.game}\r\n              difficulty={props.difficulty}\r\n         />\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PuzzleRushPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleClickPlayAgain={this.props.handleClickPlayAgain}\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  puzzleRush={'Yes'}\r\n                  p_id={this.props.p_id}\r\n                  games={this.props.games}\r\n                  difficulty={this.props.difficulty}\r\n             />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PuzzleRushPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass LessonsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                learnMode={'Yes'}\r\n                games={window.learngameslist}/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default LessonsPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game daily_start_timer_seconds={this.props.daily_start_timer_seconds} daily_start_timer_minutes={this.props.daily_start_timer_minutes} handleClickDailyChallenge={this.props.handleClickDailyChallenge} handleLineDirections={this.props.handleLineDirections} LineDirections={this.props.LineDirections} dailyChallengeMode={'Yes'} playerStateList={this.props.playerStateList} savedMoves={this.props.savedMoves} games={this.props.dailyChallengeGameslist} dc_id={this.props.dc_id} highscores={this.props.dchighscores}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengePage;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Card,CardActions,Button,Avatar} from \"@material-ui/core\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function AboutUs(props) {\r\n    const facebookclick = () => {\r\n        window.open('https://www.facebook.com/RobotsEvolved-105278561284154')\r\n    }\r\n    const discordclick = () => {\r\n        window.open('https://discord.gg/VKMRQuE')\r\n    }\r\n    return (<div style={gamepanel()}>\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item spacing={4} xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card style={{display: 'inline-block', width: '100%'}}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    About\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    RobotsEvolved.com is based on the board game Ricochet Robots by Alex Randolph.\r\n                                    We have several game modes and variants that are inspired by the several Chess variants on the internet.\r\n                                    If you find any bugs or have any feature requests for RobotsEvolved please let me know by emailing robotsevolved@gmail.com or contacting me on FB from our FB page, I would love to hear some of the ideas people have. Ill get to developing the feature/fixing annoying bugs ASAP\r\n                                    If you use Google Login or Facebook Login I will NEVER email you or sell your information, it is strictly for user-identification.\r\n                                    Tell your friends about the site and get people on here!\r\n                                    <br/>\r\n                                    <br/>\r\n                                    Credit to Feyzio for our banner and robot logo Artwork!\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button onClick={facebookclick}>\r\n                                    <Avatar alt=\"Facebook\" src=\"https://facebookbrand.com/wp-content/uploads/2019/04/f_logo_RGB-Hex-Blue_512.png?w=512&h=512\" />\r\n                                </Button>\r\n                                <Button onClick={discordclick}>\r\n                                    <Avatar alt=\"Discord\" src=\"https://cdn.discordapp.com/attachments/675768013731135518/740251382862577694/icons8-discord-new-logo-48.png\" />\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Daily Challenge Rotation\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    The Daily Challenge rotates its difficulty every day as specified below with 2 x Random and 2 x Classic Type puzzles.\r\n                                    <br/>\r\n                                    Medium Mondays - 4 x Medium\r\n                                    <br/>\r\n                                    Trouble Tuesdays - 4 x Hard\r\n                                    <br/>\r\n                                    Wild Wednesdays - 4 x Medium\r\n                                    <br/>\r\n                                    Tryhard Thursdays - 4 x Hard\r\n                                    <br/>\r\n                                    Flyin Fridays - 4 x Medium\r\n                                    <br/>\r\n                                    Sleepy Saturdays - 4 x Medium\r\n                                    <br/>\r\n                                    Standard Sundays - 4 x Medium\r\n                                </Typography>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Classic Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Classic puzzles are based on the original Game. These Puzzles only have walls that are L shaped and a goal is in the center of one of the L puzzles.\r\n                                </Typography>\r\n                                <Typography variant={\"h4\"} display={\"inline\"}>\r\n                                    Random Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Random Puzzles are created by having a 10% chance for a wall to spawn in location possible, Goals and Robot placements are completely random also.\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Easy\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 5-8 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Medium\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 9-13 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 14-17 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"} >\r\n                                    Extremely Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 18-22 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    God Tier\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 23+ Moves, Note: there are a low number of these puzzles due to the CPU required to create them\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Paper class=\"card3\">\r\n                          <img src={\"/static/images/284457_10151211078621477_839164197_n.jpg\"} alt=\"Jane\"/>\r\n                          <div class=\"container3\">\r\n                            <h2>Kyle Kwasniewski</h2>\r\n                            <p class=\"title3\">Creator &amp; FullStack Dev.</p>\r\n                            <p>I work in Software Development and Dev-Ops in New York and consider myself a Ricochet Robots enthusiast so I decided to make this application as a way to better hone my skill in web frameworks as well as pass the time during the quarantine. I play Frisbee and Ski alot as well as play my fair share of Steam games.</p>\r\n                            <p>Thanks for playing!</p>\r\n                            <p>robotsevolved@gmail.com</p>\r\n                          </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/284f909d-0d5c-4ae1-b100-76c9d46ae7d4.png\"} alt=\"Mike\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Jonah Tollefson</h2>\r\n                                <p className=\"title3\">Front-End Dev.</p>\r\n                                <p>Went to college with these other goobers in the US and now I work professionally as a\r\n                                    software engineer in Germany. For RobotsEvolved, I mainly worked on the frontend\r\n                                    using React. Cats and Ultimate Frisbee are life.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/derekschultz.jpg\"} alt=\"John\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Derek Schultz</h2>\r\n                                <p className=\"title3\">Back-End Dev.</p>\r\n                                <p>Full time Software Engineer. Graduated from University of Wisconsin Platteville\r\n                                    with a BS in Computer Science and Minor in Business Administration. Worked on\r\n                                    most of the database aspect of RobotsEvolved and some back end functionality. I\r\n                                    enjoy video games, beer, and playing darts.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nexport default function ShowDailyPuzzleHistory(props) {\r\n    const handleDailyPuzzleHistoryClick = event => {\r\n        console.log(props.history)\r\n        props.handleDailyPuzzleHistoryClick(props.history)\r\n    }\r\n    return (\r\n            <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={handleDailyPuzzleHistoryClick}>\r\n                 answers\r\n            </Button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport ShowDailyPuzzleHistory from '../components/ShowDailyPuzzleHistory';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ProfilePageCreatedGamesDetails from \"../components/ProfilePageComponents/ProfilePageCreatedGamesDetails\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function DailyChallengeHistory(props) {\r\n    const [expandedPanel, setExpandedPanel] = React.useState(false);\r\n    const handleChangePanel = (panel) => (event, isExpanded) => {\r\n        setExpandedPanel(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles();\r\n    return (<div style={gamepanel()}>\r\n                <Typography className={classes.titlehome} variant=\"h3\">Daily Challenge History</Typography>\r\n                {\r\n                    props.dailychallengehistory.map((history, index) =>\r\n                        <ExpansionPanel expanded={expandedPanel === 'panelgame' + index} onChange={handleChangePanel('panelgame' + index)}>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={\"panel\" + index + \"-content\"}\r\n                                id={\"panel\" + index + \"-header\"}\r\n                            >\r\n                                <Grid container>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography className={classes.heading}>{history.created}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={5}>\r\n                                        <Typography noWrap style={{marginLeft: 5, marginRight: 5}} className={classes.secondaryHeading}>{history.nameSubmitted}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                        <ShowDailyPuzzleHistory history={history} handleDailyPuzzleHistoryClick={props.handleDailyPuzzleHistoryClick}/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <Grid container spacing={0}>\r\n                                    <Grid item xs={12} md={3}>\r\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            <FaCrown/> {history.nameSubmitted} - {history.scoreSubmitted} <FaCrown/>\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={3}>\r\n                                        <Typography className={classes.secondaryHeading}>Lowest possible solution: {history.bestScore}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                    )\r\n                }\r\n           </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengeHistoryAnswersPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        console.log(this.props.history);\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                dailyChallengeModeAnswers={'Yes'}\r\n                nameSubmitted={this.props.history.nameSubmitted}\r\n                bestScore={this.props.history.bestScore}\r\n                created={this.props.history.created}\r\n                games={this.props.history.games}\r\n                playerStateList={this.props.history.playerStateList}\r\n                scoreSubmitted={this.props.history.scoreSubmitted}\r\n                solutionDataSubmitted={this.props.history.solutionDataSubmitted}\r\n                submitted={this.props.history.submitted}\r\n                user_id={this.props.user_id}\r\n                />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengeHistoryAnswersPage;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n  },\r\n}));\r\n\r\nexport default function LoadingPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress size={120} color=\"secondary\" />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport DailyChallengeStartModal from './containers/Modals/DailyChallengeStartModal';\r\nimport DailyEvolutionStartModal from './containers/Modals/DailyEvolutionStartModal';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\r\nimport DailyEvolutionPage from './Pages/DailyEvolutionPage';\r\nimport Leaderboard from './Pages/Leaderboard';\r\nimport clsx from 'clsx';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport Home from './Pages/Home';\r\nimport WeeklyChallengePage from './Pages/WeeklyChallengePage';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\nimport axios from 'axios';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport BrushIcon from '@material-ui/icons/Brush';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"./constants/constants\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport PuzzleRushDifficultyModal from \"./containers/Modals/PuzzleRushDifficultyModal\";\r\nimport RandomGameDifficultyModal from \"./containers/Modals/RandomGameDifficultyModal\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport RandomGamePage from \"./Pages/RandomGamePage\";\r\nimport PuzzleRushPage from \"./Pages/PuzzleRushPage\";\r\nimport LessonsPage from \"./Pages/LessonsPage\";\r\nimport DailyChallengePage from \"./Pages/DailyChallenge\";\r\nimport AboutUs from \"./Pages/AboutUs\";\r\nimport DailyChallengeHistory from \"./Pages/DailyChallengeHistory\";\r\nimport DailyChallengeHistoryAnswersPage from \"./Pages/DailyChallengeHistoryAnswersPage\";\r\nimport { FaMedal } from 'react-icons/fa';\r\nimport Launch from '@material-ui/icons/Launch';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport LoadingPage from './components/LoadingPage';\r\nimport {GiPuzzle,GiPodium} from \"react-icons/gi\";\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    drawerHeaderRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerHeaderLeft: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    toolbar1: {\r\n        backgroundColor: '#14A76C',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    dividerFullWidth: {\r\n        margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    darkmode: {\r\n          body: '#363537',\r\n          text: '#FAFAFA',\r\n          toggleBorder: '#6B8096',\r\n          gradient: 'linear-gradient(#091236, #1E215D)',\r\n    },\r\n});\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (window.uri === '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickWeekly100={this.handleWeeklyClick}\r\n                                    handleClickDailyChallenge={this.handleClickDailyChallenge}\r\n                                    handleClickRandomGame={this.handleClickRandomGame}\r\n                                    handleClickLearnGame={this.handleClickLearnGame}\r\n                                    handleClickCreateGame={this.handleClickCreateGame}\r\n                                    handleClickFindGame={this.handleClickFindGame}\r\n                                    handleClickPuzzleRush={this.handleClickPuzzleRush}\r\n                                    handleClickDailyEvolution={this.handleClickDailyEvolution}\r\n                               />,\r\n                dailychallengehistoryloaded: false,\r\n                profileDataloaded: false,\r\n            };\r\n        }\r\n        else {\r\n            if (window.token.g_id === undefined) {\r\n                const linedir = window.loggedin === 'No' ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={linedir} name={window.token.name} gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri} authorname={window.token.authorname} votes={window.token.votes} hasVoted={window.token.hasVoted} signInModalOpen={this.SignInButtonPressed}/>, //when uri is entered to play specific game\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                };\r\n            }\r\n            else {\r\n                const linedir = window.loggedin === 'No' ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={linedir} randomGame={'Yes'} game={window.token} difficulty={window.token.g_difficulty}/>,\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                }\r\n            }\r\n        }\r\n        this.state.open = window.innerWidth >= MOBILE_INNER_SCREEN_WIDTH;\r\n        this.state.mobileAnchorEl = null;\r\n        this.state.mobileMenuOpen = false;\r\n        this.state.showLoginModal = false;\r\n        this.state.showDailyChallengeModal = false;\r\n        this.state.showPuzzleRushModal = false;\r\n        this.state.loadingPage = false;\r\n        this.state.filterTerm = 'None'\r\n        this.state.searchTerm = ''\r\n        this.state.findWindowHeight = 0;\r\n        this.state.numFindGames = window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? 8 : 20;\r\n         if (window.loggedin === 'Yes') {\r\n            this.state.LineDirections = window.userInfo.LineDirFlag === 'Y';\r\n         }\r\n         else {\r\n            this.state.LineDirections = true;\r\n         }\r\n    }\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState( {\r\n            open: false\r\n        })\r\n    };\r\n\r\n    handleLineDirections = (boolean) => {\r\n        if (window.loggedin === 'Yes') {\r\n            axios.post('/settingsChange', {LineDirections: boolean ? 'Y' : 'N'})\r\n                .then( _ => {\r\n                    console.log('changed');\r\n                });\r\n        }\r\n        this.setState({\r\n            LineDirections: boolean\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallenge = (event) => {\r\n        if (window.isDailyStarted === 'False') {\r\n            this.setState({\r\n                showDailyChallengeModal: true,\r\n            });\r\n        }\r\n        else {\r\n            this.handleClickDailyChallengeModal();\r\n        }\r\n    };\r\n\r\n    handleClickDailyEvolution = (_) => {\r\n        window.isEvolutionStarted = 'False'\r\n        if (window.isEvolutionStarted === 'False') {\r\n            this.setState({\r\n                showDailyEvolutionModal: true,\r\n            });\r\n        }\r\n        else {\r\n            this.handleClickDailyEvolutionModal();\r\n        }\r\n    };\r\n\r\n    handleClickDailyEvolutionModal = () => {\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyEvolutionData')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    const dc_movesList = res.data.dc_movesList == null ? null : JSON.parse(res.data.dce_movesList)\r\n                    const dc_playerList = res.data.dc_playerList == null ? null : JSON.parse(res.data.dce_playerList)\r\n                    const daily_start_timer_minutes = res.data.daily_start_timer_minutes;\r\n                    const daily_start_timer_seconds = res.data.daily_start_timer_seconds;\r\n                    console.log(daily_start_timer_minutes);\r\n                    console.log(daily_start_timer_seconds);\r\n                    console.log(res.data)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                                        PageSelected: <DailyEvolutionPage\r\n                                                            handleClickDailyEvolution={this.handleClickDailyEvolution}\r\n                                                            dailyChallengeGameslist={JSON.parse(res.data.dailyEvolutionGameslist)}\r\n                                                            dce_id={res.data.dce_id}\r\n                                                            dcehighscores={JSON.parse(res.data.dcehighscores)}\r\n                                                            handleLineDirections={this.handleLineDirections}\r\n                                                            LineDirections={this.state.LineDirections}\r\n                                                            savedMoves={dc_movesList}\r\n                                                            playerStateList={dc_playerList}\r\n                                                            daily_start_timer_seconds={daily_start_timer_seconds}\r\n                                                            daily_start_timer_minutes={daily_start_timer_minutes}\r\n                                        />,\r\n                                        open: isOpen,\r\n                                        showDailyEvolutionModal: false,\r\n                                        loadingPage: false,\r\n                                    });\r\n                        }\r\n                    });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n            showDailyEvolutionModal: false,\r\n        });\r\n    };\r\n\r\n\r\n\r\n    handleClickDailyChallengeModal = () => {\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeData')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    const dc_movesList = res.data.dc_movesList == null ? null : JSON.parse(res.data.dc_movesList)\r\n                    const dc_playerList = res.data.dc_playerList == null ? null : JSON.parse(res.data.dc_playerList)\r\n                    const daily_start_timer_minutes = res.data.daily_start_timer_minutes;\r\n                    const daily_start_timer_seconds = res.data.daily_start_timer_seconds;\r\n                    console.log(daily_start_timer_seconds);\r\n                    console.log(daily_start_timer_minutes);\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                                        PageSelected: <DailyChallengePage\r\n                                                            handleClickDailyChallenge={this.handleClickDailyChallenge}\r\n                                                            dailyChallengeGameslist={JSON.parse(res.data.dailyChallengeGameslist)}\r\n                                                            dc_id={res.data.dc_id}\r\n                                                            dchighscores={JSON.parse(res.data.dchighscores)}\r\n                                                            handleLineDirections={this.handleLineDirections}\r\n                                                            LineDirections={this.state.LineDirections}\r\n                                                            savedMoves={dc_movesList}\r\n                                                            playerStateList={dc_playerList}\r\n                                                            daily_start_timer_seconds={daily_start_timer_seconds}\r\n                                                            daily_start_timer_minutes={daily_start_timer_minutes}\r\n                                        />,\r\n                                        open: isOpen,\r\n                                        showDailyChallengeModal: false,\r\n                                        loadingPage: false,\r\n                                    });\r\n                        }\r\n                    });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n            showDailyChallengeModal: false,\r\n        });\r\n    };\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState( {\r\n            open: true\r\n        });\r\n    };\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type === 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    };\r\n\r\n    handleClickRandomGameModal = (game,difficulty) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showRandomGameModal: false,\r\n            PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} randomGame={'Yes'} game={game} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickRandomGame = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: true,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickPuzzleRush = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: true,\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallengeHistory = (event) => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.get('/getDailyChallengeHistory')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    var historydata = JSON.parse(res.data)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                            PageSelected: <DailyChallengeHistory handleDailyPuzzleHistoryClick={this.handleDailyPuzzleHistoryClick} dailychallengehistory={historydata}/>,\r\n                            challengeHistoryData: historydata,\r\n                            dailychallengehistoryloaded: true,\r\n                            open: isOpen,\r\n                            loadingPage: false,\r\n                        });\r\n                    }\r\n            });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleDailyPuzzleHistoryClick = history => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <DailyChallengeHistoryAnswersPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} history={history}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty,games,p_id) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showPuzzleRushModal: false,\r\n            PageSelected: <PuzzleRushPage handleClickPlayAgain={this.handleClickPuzzleRush} handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={difficulty}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    };\r\n\r\n    closeDailyChallengeModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showDailyChallengeModal: false\r\n        });\r\n    };\r\n\r\n    closeDailyEvolutionModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showDailyEvolutionModal: false\r\n        });\r\n    };\r\n\r\n\r\n    closePuzzleRushLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: false\r\n        });\r\n    };\r\n\r\n    closeRandomGameLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: false\r\n        });\r\n    };\r\n\r\n    handleGameClick = (name, gamedata, highscores, uri, authorname, votes, hasVoted) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} name={name} highscores={highscores} gamedata={gamedata} uri={uri} authorname={authorname} votes={votes} hasVoted={hasVoted} signInModalOpen={this.SignInButtonPressed}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        let isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <CreateGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} state={\"new\"}/>,\r\n             open: isOpen,\r\n             loadingPage: false,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickProfile = _ => {\r\n        if (window.loggedin === 'Yes') {\r\n            this.state.loadingPage = true;\r\n                    axios.get('/getProfileData')\r\n                        .then( res => {\r\n                            let isOpen = this.state.open;\r\n                            if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                                isOpen = false\r\n                            }\r\n                            const profileData = res.data;\r\n                            const gamesview = JSON.parse(profileData.gamesview);\r\n                            const solutionsview = JSON.parse(profileData.solutionsview)\r\n                            const puzzlerushview = JSON.parse(profileData.puzzlerushview)\r\n                            if (this.state.loadingPage) {\r\n                                this.setState({\r\n                                    PageSelected: <ProfilePage handleClickPlayGame={this.handleGameClick} gamesview={gamesview} solutionsview={solutionsview} puzzlerushview={puzzlerushview}/>,\r\n                                    gamesview: gamesview,\r\n                                    solutionsview: solutionsview,\r\n                                    puzzlerushview: puzzlerushview,\r\n                                    profileDataloaded: true,\r\n                                    open: isOpen,\r\n                                    loadingPage: false,\r\n                                });\r\n                            }\r\n                        });\r\n                    this.setState({\r\n                        PageSelected: <LoadingPage/>,\r\n                    });\r\n                }\r\n        else {\r\n            this.SignInButtonPressed('Sign in');\r\n        }\r\n    };\r\n\r\n    setNumFindGames = (num,filterTerm,searchTerm) => {\r\n        this.setState({\r\n            numFindGames: num,\r\n            searchTerm: searchTerm,\r\n            filterTerm: filterTerm,\r\n        })\r\n    }\r\n\r\n    setFindWindow = height => {\r\n        this.setState({\r\n            findWindowHeight: height\r\n        })\r\n    }\r\n\r\n    handleWeeklyClick = _ => {\r\n        this.state.loadingPage = true;\r\n        axios.get('/getWCData')\r\n            .then( res => {\r\n                    console.log(res.data);\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    const wc_movesList = res.data.wc_movesList == null ? null : JSON.parse(res.data.wc_movesList)\r\n                    const wc_playerList = res.data.wc_playerList == null ? null : JSON.parse(res.data.wc_playerList)\r\n                    if (this.state.loadingPage) {\r\n                        this.setState({\r\n                                        PageSelected: <WeeklyChallengePage\r\n                                                            handleWeeklyClick={this.handleWeeklyClick}\r\n                                                            weeklyChallengeGameslist={JSON.parse(res.data.weeklyChallengeGameslist)}\r\n                                                            wc_id={res.data.wc_id}\r\n                                                            wchighscores={JSON.parse(res.data.wchighscores)}\r\n                                                            handleLineDirections={this.handleLineDirections}\r\n                                                            LineDirections={this.state.LineDirections}\r\n                                                            savedMoves={wc_movesList}\r\n                                                            playerStateList={wc_playerList}\r\n                                                            gamesWon={JSON.parse(res.data.wc_gamesWon)}\r\n                                        />,\r\n                                        open: isOpen,\r\n                                        loadingPage: false,\r\n                                    });\r\n                        }\r\n                    });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.post('/search', {search: this.state.searchTerm, filter: this.state.filterTerm, offset: 0, numGames: this.state.numFindGames})\r\n            .then( res => {\r\n                const gameslist = JSON.parse(res.data.gameslist);\r\n                const highscoreslist = JSON.parse(res.data.highscoreslist);\r\n                var isOpen = this.state.open;\r\n                if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                    isOpen = false\r\n                }\r\n                if (this.state.loadingPage) {\r\n                    this.setState({\r\n                        PageSelected: <FindGame findWindowHeight={this.state.findWindowHeight} setFindWindow={this.setFindWindow} setNumFindGames={this.setNumFindGames} gameslist={gameslist} highscoreslist={highscoreslist} handleGameClick={this.handleGameClick}/>,\r\n                        open: isOpen,\r\n                        loadingPage: false,\r\n                    });\r\n                }\r\n        });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleHomePageClick = () => {\r\n        this.setState({\r\n            PageSelected: <Home\r\n                                handleClickWeekly100={this.handleWeeklyClick}\r\n                                handleClickDailyChallenge={this.handleClickDailyChallenge}\r\n                                handleClickRandomGame={this.handleClickRandomGame}\r\n                                handleClickLearnGame={this.handleClickLearnGame}\r\n                                handleClickCreateGame={this.handleClickCreateGame}\r\n                                handleClickFindGame={this.handleClickFindGame}\r\n                                handleClickPuzzleRush={this.handleClickPuzzleRush}\r\n                                handleClickDailyEvolution={this.handleClickDailyEvolution}\r\n                           />,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n\r\n    handleClickWebsiteLeaderboard = event => {\r\n        event.preventDefault();\r\n        this.state.loadingPage = true;\r\n        axios.get('/leaderboard')\r\n            .then( res => {\r\n                const dailyChallenge_leaderboard = res.data.dailyChallenge_leaderboard\r\n                const findGame_leaderboard = res.data.findGame_leaderboard\r\n                const puzzle_rush_leaderboard = res.data.puzzle_rush_leaderboard\r\n                var isOpen = this.state.open;\r\n                if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                    isOpen = false\r\n                }\r\n                if (this.state.loadingPage) {\r\n                    this.setState({\r\n                        PageSelected: <Leaderboard\r\n                                        dailyChallenge_leaderboard={dailyChallenge_leaderboard}\r\n                                        findGame_leaderboard={findGame_leaderboard}\r\n                                        puzzle_rush_leaderboard={puzzle_rush_leaderboard}\r\n                                        />,\r\n                        open: isOpen,\r\n                        loadingPage: false,\r\n                    });\r\n                }\r\n        });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n\r\n    }\r\n\r\n    handleClickAboutUs = _ => {\r\n        let isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <AboutUs/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n    };\r\n\r\n    handleClickLearnGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <LessonsPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections}/>,\r\n            open: isOpen,\r\n            loadingPage: false,\r\n        });\r\n\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileAnchorEl: null,\r\n            mobileMenuOpen: false\r\n        });\r\n    };\r\n\r\n    showPage = () => {\r\n        return(\r\n            this.state.PageSelected\r\n        )\r\n    };\r\n\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({\r\n            mobileAnchorEl: event.currentTarget,\r\n            mobileMenuOpen: true\r\n        });\r\n    };\r\n\r\n    bannerImg = () => {\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            return (\r\n                <img\r\n                    onClick={this.handleHomePageClick}\r\n                    width={300}\r\n                    height={75}\r\n                    style={{marginTop: -15, marginBottom: -25}}\r\n                    alt={\"Robots Evolved Banner\"}\r\n                    src=\"/static/images/robots_evolved_banner.png\"\r\n                />\r\n            )\r\n        }\r\n        return (\r\n            <img\r\n                onClick={this.handleHomePageClick}\r\n                width={671}\r\n                height={125}\r\n                style={{marginTop: -35, marginBottom: -40}}\r\n                alt={\"Robots Evolved Banner\"}\r\n                src=\"/static/images/robots_evolved_banner.png\"\r\n            />\r\n        )\r\n    }\r\n\r\n    iconImg = () => {\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            return (\r\n                <img onClick={this.handleHomePageClick} alt={\"Logo\"} width={40} height={40} src=\"/static/images/logo150.png\"/>\r\n            )\r\n        }\r\n        return (\r\n            <img onClick={this.handleHomePageClick} alt={\"Logo\"} width={50} height={50} src=\"/static/images/logo150.png\"/>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const theme = createMuiTheme({\r\n            palette: {\r\n                primary: teal,\r\n                secondary: {\r\n                    main: '#e65100',\r\n                },\r\n            }\r\n        });\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <AppBar\r\n                        position=\"fixed\"\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: this.state.open,\r\n                        })}\r\n                     >\r\n                        <Toolbar className={classes.toolbar1}>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={this.handleDrawerOpen}\r\n                                edge=\"start\"\r\n                                className={clsx(classes.menuButton, this.state.open && classes.hide)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            {this.iconImg()}\r\n                            {this.bannerImg()}\r\n                            <div className={classes.grow} />\r\n                            <div className={classes.sectionDesktop}>\r\n                                <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.sectionMobile}>\r\n                                <IconButton\r\n                                    aria-label=\"show more\"\r\n                                    aria-controls={\"primary-search-account-menu-mobile\"}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.handleMobileMenuOpen}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <MoreIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Menu\r\n                        anchorEl={this.state.mobileAnchorEl}\r\n                        anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        id={\"primary-search-account-menu-mobile\"}\r\n                        keepMounted\r\n                        transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        open={this.state.mobileMenuOpen}\r\n                        onClose={this.handleMobileMenuClose}\r\n                    >\r\n                        <MenuItem>\r\n                            <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                    <Drawer\r\n                        id=\"MainDrawer\"\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.state.open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div className={classes.drawerHeader}>\r\n                            <div className={classes.drawerHeaderLeft}>\r\n                                <SignInButton onClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.drawerHeaderRight}>\r\n                                <IconButton onClick={this.handleDrawerClose}>\r\n                                    {useTheme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Play\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Find a Game'} onClick={this.handleClickFindGame}>\r\n                                <ListItemIcon><SearchIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Find a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Weekly 100'} onClick={this.handleWeeklyClick}>\r\n                                <ListItemIcon><GiPuzzle /> </ListItemIcon>\r\n                                <ListItemText primary={'Weekly 100'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge'} onClick={this.handleClickDailyChallenge}>\r\n                                <ListItemIcon><TodayIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Evolution'} onClick={this.handleClickDailyEvolution}>\r\n                                <ListItemIcon><Launch /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Evolution'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Create a Game'} onClick={this.handleClickCreateGame}>\r\n                                <ListItemIcon><BrushIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Create a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Random Game'} onClick={this.handleClickRandomGame}>\r\n                                <ListItemIcon><CasinoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Random Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Puzzle Rush'} onClick={this.handleClickPuzzleRush}>\r\n                                <ListItemIcon><TimerIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Puzzle Rush'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Learn\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Lessons'} onClick={this.handleClickLearnGame}>\r\n                                <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Lessons'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Community\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Profile'} onClick={this.handleClickProfile}>\r\n                                <ListItemIcon><AccountBoxIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Profile'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge History'} onClick={this.handleClickDailyChallengeHistory}>\r\n                                <ListItemIcon><FaMedal /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge History'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Website Leaderboard'} onClick={this.handleClickWebsiteLeaderboard}>\r\n                                <ListItemIcon><GiPodium /></ListItemIcon>\r\n                                <ListItemText primary={'Website Leaderboard'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Tools\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'About'} onClick={this.handleClickAboutUs}>\r\n                                <ListItemIcon><InfoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'About'} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n                    <main className={clsx(classes.content, {\r\n                        [classes.contentShift]: this.state.open,\r\n                    })}>\r\n                        <div className={classes.drawerHeader} />\r\n                        {this.showPage()}\r\n                    </main>\r\n                    <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n                    <PuzzleRushDifficultyModal\r\n                        closeModal={this.closePuzzleRushLoginModal}\r\n                        show={this.state.showPuzzleRushModal}\r\n                        handleClickPuzzleRush={this.handleClickPuzzleRushModal}\r\n                    />\r\n                    <RandomGameDifficultyModal\r\n                        closeModal={this.closeRandomGameLoginModal}\r\n                        show={this.state.showRandomGameModal}\r\n                        handleClickRandomGame={this.handleClickRandomGameModal}\r\n                    />\r\n                    <DailyChallengeStartModal\r\n                        closeModal={this.closeDailyChallengeModal}\r\n                        show={this.state.showDailyChallengeModal}\r\n                        startDaily={this.handleClickDailyChallengeModal}\r\n                    />\r\n                    <DailyEvolutionStartModal\r\n                        closeModal={this.closeDailyEvolutionModal}\r\n                        show={this.state.showDailyEvolutionModal}\r\n                        startEvolution={this.handleClickDailyEvolutionModal}\r\n                    />\r\n                </div>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);\r\n","\r\n\r\n\r\nimport React from 'react';\r\nimport App from './App';\r\n\r\nexport default class ContainerApplication extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Page: <App/>\r\n        }\r\n\r\n    }\r\n\r\n    render = () => this.state.Page;\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport ContainerApplication from './ContainerApplication';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><ContainerApplication /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}