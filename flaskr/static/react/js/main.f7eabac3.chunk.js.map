{"version":3,"sources":["constants/constants.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/GameWonOverlay.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinView.jsx","components/AddPuzzleView.jsx","Material-UI/themes.jsx","components/ResetButton.jsx","containers/Modals/BoardResetModal.js","components/CreateBoardButton.js","containers/DisplayView.js","components/HighScores.jsx","containers/GameWonDisplayView.js","components/ToggleSettings.js","components/boardgenerator.js","containers/Game.js","Pages/CreateGame.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","containers/Modals/LoginModal.js","components/LoggedInUser.js","components/SignInButton.js","App.js","serviceWorker.js","index.js"],"names":["UP","DIRECTION_MAP_IMAGES","yellow","DOWN","LEFT","RIGHT","red","green","blue","MovesView","props","style","width","float","display","this","moveHistory","length","map","move","src","playerState","robot","colorSignifier","dir","React","Component","styleoutside","dimension","position","dim","height","backgroundColor","top","left","styleinside","styleinside2","Square","handleClick","handlePlayerMovementFromMouse","onClick","border","margin","overflow","marginRight","children","transition","color","selectedColor","undefined","borderStyle","index","selected","borderColor","borderRadius","Robot","handleKeyDown","e","newDirection","keyCode","tabSelector","handlePlayerMovement","window","onkeydown","orientation","opacity","wallThickness","Wall","mainStyle","visible","normalStyle","justifyContent","alignItems","opacityStyle","endPosition","obj","key","hasOwnProperty","YouWinView","numMoves","marginTop","marginBottom","id","type","placeholder","onSubmit","submitAnswer","AddPuzzleView","submitPuzzle","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","Width","image","img","maxWidth","maxHeight","resetPuzzle","BoardResetModal","createBoardHandler","event","preventDefault","parseInt","document","getElementById","value","percent","toString","createBoard","show","className","textAlign","paddingRight","title","min","max","closeModal","CreateBoardButton","valuetext","DisplayView","dummy","createElement","body","appendChild","location","host","uri","select","execCommand","removeChild","copiedClipboard","copiedToClipboard","ResetButton","createMode","createBoardPressed","Typography","gutterBottom","Slider","onChangeCommitted","console","log","DimensionChanged","getAriaValueText","aria-labelledby","step","marks","valueLabelDisplay","highscores","marginleft","highscore","comment","highscorestyle","GameWonDisplayView","checkwin","ToggleSettings","class","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","boardState","wallVerticle","wallHorizontal","goal","randomPositions","i","push","randompos1","extend","randompos2","randompos3","randompos4","j","gameWon","playerStart","slice","addEventListener","indexOf","Game","updateHighscores","axios","get","state","then","res","setState","JSON","parse","data","squareSize","componentDidMount","loadedGame","IntervalId","setInterval","componentWillUnmount","clearInterval","robotSelect","robotSelected","namesubmit","post","puzzledata","name","history","toggleLineIndicators","ColoredLineDirections","showBoardResetPanelModal","closeCreateBoardModal","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","robotPosition","posObj","createModeWallClick","newWallHorizontal","wallH","indexToChange","newWallVerticle","wallV","gamedata","settingsWidth","settingsHeight","percentWall","settingsPercent","Board","square","Goal","ColoredLineDirection","ColoredLine","player","GameWonOverlay","HighScores","withRouter","CreateGame","ComplexGrid","classes","highscoreauthor","Grid","handleGameClick","game","cursor","item","Paper","container","ButtonBase","alt","xs","sm","direction","variant","difficulty","authorname","FindGame","handleSearchSubmit","searchTerm","search","highscoreslist","gameslist","justify","PlayGame","LoginModal","loginGoogle","href","closeLoginModal","LoggedInUser","loggedin","userInfo","profilePicture","username","SignInButton","textToShow","App","SignInButtonPressed","showLoginModal","PageSelected","handleClickCreateGame","newGame","handleClickFindGame","token","aria-label","for","role","data-icon","spellcheck","autocomplete","Boolean","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.f7eabac3.chunk.js","sourcesContent":["export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.handlePlayerMovementFromMouse(this.props.position);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '25px auto',\r\n        overflow: 'hidden',\r\n        float: 'left',\r\n        marginRight: '30px',\r\n    };\r\n\r\n\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var selectedColor = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        selectedColor = SELECTED_ROBOT;\r\n        borderStyle = \"solid\";\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        borderStyle: borderStyle,\r\n        borderColor: selectedColor,\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.props.tabSelector();\r\n                return;\r\n                break;\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n\r\n\r\n        }\r\n        this.props.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onkeydown = this.handleKeyDown;\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - 4) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - 4) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE} from '../constants/constants';\r\n\r\n\r\nconst style = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nexport default (props) =>\r\n    <img src={GOAL_IMAGE} style={style(props)}/>\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from \"react\";\r\n\r\nconst mainStyle = (width,height,visible) => {\r\n    var display = 'block';\r\n    if (visible === false) {\r\n        display = 'none';\r\n    }\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        display: display,\r\n        width: widthset,\r\n        height: heightset,\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        float: 'left',\r\n        marginRight: '30px',\r\n        margin: 'auto',\r\n    };\r\n};\r\n\r\nconst normalStyle = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        display: 'flex',\r\n        width: widthset,\r\n        height: heightset,\r\n        position: 'absolute',\r\n        overflow: 'hidden',\r\n        float: 'center',\r\n        marginRight: '30px',\r\n        margin: 'auto',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    };\r\n};\r\n\r\nconst opacityStyle = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        backgroundColor: 'black',\r\n        opacity: 0.5,\r\n        width: widthset,\r\n        height: heightset,\r\n        position: 'absolute',\r\n        overflow: 'hidden',\r\n        float: 'left',\r\n        marginRight: '30px',\r\n        margin: 'auto',\r\n    };\r\n};\r\n\r\nexport default ({ width,height,visible,children }) => (\r\n    <div style={mainStyle(width, height,visible)}>\r\n        <div style={opacityStyle(width,height)}></div>\r\n        <div style={normalStyle(width, height)}>\r\n            {children}\r\n        </div>\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top;\r\n            left = endPosition.left;\r\n            width = position.left - endPosition.left + 'px';\r\n            height = '4px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top;\r\n            left = position.left;\r\n            width = endPosition.left - position.left + 'px';\r\n            height = '4px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top;\r\n            left = endPosition.left;\r\n            width = '4px';\r\n            height = position.top - endPosition.top + 'px';\r\n        } else {\r\n            top = position.top;\r\n            left = position.left;\r\n            width = '4px';\r\n            height = endPosition.top - position.top + 'px'\r\n        }\r\n    }\r\n    top+=18;\r\n    left+=18;\r\n\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\nexport default (props) => (\r\n    <div style={style(props)}/>\r\n);","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{color: 'white'}}>\r\n                You Win! with {this.props.numMoves} Moves!\r\n                </div>\r\n                <input style={buttonpanel()} id={\"namesubmitHS\"} type={\"text\"} placeholder={\"Username\"}>\r\n                </input>\r\n                <form onSubmit={this.props.submitAnswer} style={buttonpanel()}>\r\n                    <button type=\"submit\">Submit Highscore </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinView;","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitPuzzle} style={buttonpanel()}>\r\n                    <button type=\"submit\">Create Puzzle</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"namesubmit\"} type={\"text\"} placeholder={\"Name Of Puzzle?\"}>\r\n\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleView;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n}));\r\n\r\nexport default useStyles;","import React from \"react\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '10px'\r\n    };\r\n};\r\n\r\nexport default (props) =>\r\n    <div>\r\n        <form onSubmit={props.resetPuzzle} style={buttonpanel()}>\r\n            <button type=\"submit\">Reset</button>\r\n        </form>\r\n    </div>","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    render () {\r\n        if (!this.props.show) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"modal\">\r\n                <h2>Create Board Settings</h2>\r\n                <div className=\"content\" style={buttonpanel()}>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <input title=\"default is 16\" id={\"boardWidthInput\"} type={\"number\"} min={\"4\"} max={\"36\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <input title=\"default is 16\" id={\"boardHeightInput\"} type={\"number\"} min={\"4\"} max={\"36\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <input title=\"default is 20%\" id={\"boardRandomPercent\"} type={\"number\"} min={\"0\"} max={\"100\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"actions\">\r\n                    <button type=\"submit\" onClick={this.createBoardHandler}>Create New Board</button>\r\n                    <button style={{float: \"right\"}} className=\"toggle-button\" onClick={this.props.closeModal}>Close</button>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","import React from 'react';\r\n\r\nexport default class CreateBoardButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        return this.props.onClick('Create Board');\r\n    };\r\n\r\n\r\n\r\n    render () {\r\n        return (\r\n            <button onClick={this.handleClick}> Create New Board</button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport useStyles from '../Material-UI/themes';\r\nimport ResetButton from \"../components/ResetButton\";\r\nimport BoardResetModal from './Modals/BoardResetModal';\r\nimport CreateBoardButton from \"../components/CreateBoardButton\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n}\r\n\r\n\r\nexport default function DisplayView(props) {\r\n    const classes = useStyles();\r\n    const isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <CreateBoardButton onClick={props.createBoardPressed}/>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    const copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + props.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        props.copiedClipboard();\r\n    };\r\n\r\n    const handleDimensionChange = (event,value) => {\r\n        var dimension = parseInt(value);\r\n        console.log(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        props.DimensionChanged(dimension);\r\n    }\r\n    return (\r\n            <div style={controlpanel()}>\r\n                <div style={{display: 'inline-flex', width: '200px'}}>\r\n                    <button style={{marginRight: \"10px\"}} onClick={copyToClipboard}>Copy Puzzle Link</button>\r\n                    {\r\n                        props.copiedToClipboard ?\r\n                            <div style={{\"color\": \"green\"}}>\r\n                                Copied!\r\n                            </div> : null\r\n                    }\r\n                </div>\r\n                <div style={buttonPanel()}>\r\n                    <ResetButton\r\n                        resetPuzzle={props.resetPuzzle}\r\n                    />\r\n                    {isCreateMode(props.createMode)}\r\n                </div>\r\n                <div style={buttonPanel()}>\r\n                        <Typography id=\"discrete-slider-small-steps\" gutterBottom>\r\n                          Size Of Board\r\n                        </Typography>\r\n                        <Slider\r\n                          onChangeCommitted={handleDimensionChange}\r\n                          getAriaValueText={valuetext}\r\n                          aria-labelledby=\"discrete-slider-small-steps\"\r\n                          step={1}\r\n                          marks\r\n                          min={2}\r\n                          max={16}\r\n                          valueLabelDisplay=\"auto\"\r\n                        />\r\n                </div>\r\n            </div>\r\n        )\r\n    }","import React from 'react';\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n        <div style={styleelements()}>{'By: ' + highscore.comment}\r\n            <div>\r\n                {'Moves: ' + highscore.numMoves}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <div style={styleouter()}>{'All Highscores:'}\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </div>\r\n)","import React from 'react';\r\nimport ResetButton from \"../components/ResetButton\";\r\nimport HighScores from '../components/HighScores';\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        float: 'center',\r\n        width: '15%',\r\n        opacity: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    };\r\n};\r\n\r\nclass GameWonDisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={'DisplayView'} style={controlpanel()}>\r\n                {\r\n                    this.props.playerState.map(position =>\r\n                        this.props.checkwin(position)\r\n                    )\r\n                }\r\n                <ResetButton\r\n                    resetPuzzle={this.props.resetPuzzle}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameWonDisplayView;","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>Toggle Line Indicators:\r\n                <label class=\"switch\">\r\n                    <input id={\"toggleLineIndicators\"} onClick={this.handleClick} type=\"checkbox\" class=\"real-checkbox\"></input>\r\n                    <span class=\"slider round\"></span>\r\n                </label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n    var randomPositions = [goal];\r\n    for (var i=0;i<5;i++) {\r\n        randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n    }\r\n    var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n    var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n    var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n    var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router'\r\n\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport GameWonOverlay from \"../components/GameWonOverlay\";\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinView from '../components/YouWinView';\r\nimport AddPuzzleView from '../components/AddPuzzleView';\r\nimport DisplayView from './DisplayView';\r\nimport GameWonDisplayView from \"./GameWonDisplayView\";\r\nimport HighScores from '../components/HighScores';\r\nimport ToggleSettings from '../components/ToggleSettings';\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if([32, 37, 38, 39, 40,9].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        display: 'inline-block'\r\n    };\r\n};\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            console.log(this.state)\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,.90);\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false\r\n            },board);\r\n        }\r\n    }\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                this.setState({\r\n                    highscores: JSON.parse(res.data.highscores),\r\n                });\r\n            });\r\n    }\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    }\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            var IntervalId = setInterval(this.updateHighscores, 2000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.ColoredLineDirections.length === 0) {\r\n            this.setState({\r\n                ColoredLineDirections: [LEFT,RIGHT,UP,DOWN],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                ColoredLineDirections: [],\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        console.log(this.state.uri);\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length, name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeCreateBoardModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    createBoard = (width,height,percent) => {\r\n        console.log(width);\r\n        console.log(height);\r\n        console.log(percent);\r\n        var board = BoardGenerator(width,height,percent);\r\n           this.setState(extend({\r\n                width: width,\r\n                height: height,\r\n                percent: percent,\r\n           },board));\r\n    }\r\n\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        console.log(robotX);\r\n        console.log(robotY);\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity == 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall && wall.opacity == 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity == 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall && wall.opacity == 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n    checkwin = (robotPosition) => {\r\n        if (robotPosition.top === this.state.goal.top && robotPosition.left === this.state.goal.left) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No') {\r\n                return  (<YouWinView numMoves={this.state.moveHistory.length} submitAnswer={this.submitAnswer}/>);\r\n            }\r\n            else {\r\n                return (<AddPuzzleView submitPuzzle={this.submitPuzzle}/>);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false) {\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left)) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n            this.checkwin(newPosition);\r\n        }\r\n    };\r\n\r\n    handlePlayerMovementFromMouse = (posObj) => {\r\n        var newDirection;\r\n        var robot = this.state.playerState[this.state.robotSelected];\r\n        if (posObj.top === robot.top && posObj.left < robot.left)\r\n            newDirection = { top: 0, left: -(this.state.squareSize), dir: LEFT};\r\n        else if (posObj.top === robot.top && posObj.left > robot.left)\r\n            newDirection = { top: 0, left: this.state.squareSize, dir: RIGHT};\r\n        else if (posObj.top < robot.top && posObj.left === robot.left)\r\n            newDirection = { top: -(this.state.squareSize), left: 0, dir: UP};\r\n        else if (posObj.top > robot.top && posObj.left === robot.left)\r\n            newDirection = { top: this.state.squareSize, left: 0, dir: DOWN};\r\n        else newDirection = { top: 0, left: 0, dir: undefined};\r\n        this.handlePlayerMovement(newDirection)\r\n    };\r\n\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode == 'Yes') {\r\n            this.resetPuzzle()\r\n            if (orientation == 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                var indexToChange;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top == top && wallH.left == left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                console.log('clicking horizontal wall');\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation == 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                var indexToChange;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top == top && wallV.left == left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div id={'GameMain'} style={gamepanel()}>\r\n\r\n            <div style={leftDisplayPanel()}>\r\n                <DisplayView\r\n                    uri={this.state.uri}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    createMode={this.state.createMode}\r\n                    createBoardPressed={this.createBoardPressed}\r\n                    DimensionChanged={this.DimensionChanged}\r\n                    copiedClipboard = {this.copiedClipboard}\r\n                    copiedToClipboard = {this.copiedToClipboard}\r\n                />\r\n                <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>\r\n            </div>\r\n            <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                {\r\n                    this.state.boardState.map(square =>\r\n                        <Square dimension={this.state.squareSize}\r\n                                position={{top:square.top,left: square.left}}\r\n                                handlePlayerMovementFromMouse={this.handlePlayerMovementFromMouse}\r\n                        />\r\n                    )\r\n                }\r\n                <Goal dimension={this.state.squareSize} position={this.state.goal}/>\r\n                {\r\n                    this.state.ColoredLineDirections.map(ColoredLineDirection =>\r\n                        <ColoredLine\r\n                            dir={ColoredLineDirection}\r\n                            position={{\r\n                                top: this.state.playerState[this.state.robotSelected].top * this.state.squareSize,\r\n                                left: this.state.playerState[this.state.robotSelected].left * this.state.squareSize\r\n                            }}\r\n                            endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                            color={LINE_INDICATOR_COLOR}\r\n                        />\r\n                    )\r\n                }\r\n                {\r\n                    this.state.playerState.map((player, index) =>\r\n                        <Robot\r\n                            dimension={this.state.squareSize}\r\n                            position={{top:player.top,left:player.left}}\r\n                            color={player.color}\r\n                            selected={this.state.robotSelected}\r\n                            index={index}\r\n                            onClick={this.robotSelect}\r\n                            handlePlayerMovement={this.handlePlayerMovement}\r\n                            tabSelector={this.tabSelector}\r\n                        />\r\n                    )\r\n                }\r\n\r\n                {\r\n                    this.state.wallHorizontal.map(wallH =>\r\n                        <Wall\r\n                            orientation={'horizontal'}\r\n                            dimension={this.state.squareSize}\r\n                            position={{top:wallH.top,left:wallH.left}}\r\n                            opacity={wallH.opacity}\r\n                            onClick={this.createModeWallClick}\r\n                        />\r\n                    )\r\n                }\r\n                {\r\n                    this.state.wallVerticle.map(wallV =>\r\n                        <Wall\r\n                            orientation={'verticle'}\r\n                            dimension={this.state.squareSize}\r\n                            position={{top:wallV.top,left:wallV.left}}\r\n                            opacity={wallV.opacity}\r\n                            onClick={this.createModeWallClick}\r\n                        />\r\n                    )\r\n\r\n                }\r\n                <GameWonOverlay\r\n                    width={this.state.width * this.state.squareSize}\r\n                    height={this.state.height * this.state.squareSize}\r\n                    visible={this.state.gameWon}\r\n                >\r\n                    <GameWonDisplayView\r\n                        playerState={this.state.playerState}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        highscores={this.state.highscores}\r\n                        checkwin={this.checkwin}\r\n                    />\r\n                </GameWonOverlay>\r\n            </Board>\r\n            <div style={rightDisplayPanel()}>\r\n                <ToggleSettings onClick={this.toggleLineIndicators}/>\r\n                <HighScores highscores={this.state.highscores}/>\r\n            </div>\r\n            <BoardResetModal\r\n                createBoard={this.createBoard}\r\n                width={this.state.width}\r\n                height={this.state.height}\r\n                percent={this.state.percent}\r\n                closeModal={this.closeCreateBoardModal}\r\n                show={this.state.showBoardResetPanelModal}\r\n            />\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport useStyles from '../Material-UI/themes';\r\n\r\nconst handleClick = (callback,puzzledata,highscores,uri) => {\r\n    callback(puzzledata,highscores,uri);\r\n}\r\n\r\n\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n    if (typeof props.highscore !== 'undefined') {\r\n        var highscore = props.highscore.numMoves;\r\n        var highscoreauthor = props.highscore.comment;\r\n    }\r\n    else {\r\n        var highscore = 'None'\r\n        var highscoreauthor = ''\r\n    }\r\n    const handleClick = () => {\r\n        props.handleGameClick(props.game.puzzledata,props.highscores,props.game.uri);\r\n    }\r\n\r\n    return (\r\n    <Grid onClick={handleClick} style={{ cursor: 'pointer' }} item>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <ButtonBase className={classes.image}>\r\n              <img className={classes.img} alt=\"complex\" src=\"https://scx1.b-cdn.net/csz/news/800/2019/3-robot.jpg\" />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={15} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={5}>\r\n              <Grid item xs>\r\n                <Typography gutterBottom variant=\"subtitle1\">\r\n                  {props.game.name}\r\n                </Typography>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  Type {props.game.type} • {props.game.difficulty}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {props.game.authorname}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                  Remove\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid spacing={2} item>\r\n              <Typography variant=\"body2\">\r\n                  {highscore}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {highscoreauthor}\r\n              </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios';\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = window.gameslist;\r\n        var highscoreslist = window.highscoreslist;\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n        }\r\n    }\r\n\r\n    handleGameClick = (gamedata,highscores,uri) => {\r\n        this.props.handleGameClick(gamedata,highscores,uri);\r\n    }\r\n\r\n    handleSearchSubmit = event => {\r\n        event.preventDefault();\r\n        var searchTerm = document.getElementById(\"searchBarFindGame\").value;\r\n        axios.post('/search', {search: searchTerm})\r\n            .then( res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div id={'GameMain'}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\" spacing={2}>\r\n                        {\r\n                            this.state.gameslist.map((game,index)=>\r\n                                <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n//<SearchBarFindGame submitSearch={this.handleSearchSubmit}/>\r\nexport default FindGame;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game loadedGame={'Yes'}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import React from \"react\";\r\nimport \"./modal.css\";\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    }\r\n\r\n    render () {\r\n        if (!this.props.show) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div class=\"modal\" id=\"modal\">\r\n                <h2>Login to Robits!</h2>\r\n                <img onClick={this.loginGoogle} src={\"/static/images/btn_google_signin_light_normal_web@2x.png\"}></img>\r\n                <button class=\"toggle-button\" onClick={this.props.closeLoginModal}>close</button>\r\n            </div>\r\n            )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '50px',\r\n        width: '50px',\r\n    };\r\n}\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return null\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                    <div>{window.userInfo.username}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <a onClick={this.handleClick} class=\"signin button button-empty\">{textToShow}</a>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(window.highscoreslist);\r\n        console.log(window.gameslist);\r\n        if (window.uri == '') {\r\n            this.state = {\r\n                PageSelected: <CreateGame/>, //default page for website\r\n            };\r\n        }\r\n        else {\r\n            this.state = {\r\n                PageSelected: <PlayGame gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri}/>, //when uri is entered to play specific game\r\n            };\r\n        }\r\n        this.state.showLoginModal = false;\r\n    }\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type == 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    }\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    }\r\n\r\n    handleGameClick = (gamedata,highscores,uri) => {\r\n        this.setState({\r\n            PageSelected: <PlayGame highscores={highscores} gamedata={gamedata} uri={uri}/>\r\n        });\r\n\r\n    }\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var newGame = <CreateGame state={\"new\"}/>; //KNOWN bug where if you create a game you have to refresh the page to cause a re-render of <CreateGame/>\r\n        this.setState({\r\n            PageSelected: newGame, //if selected page is already CreateGame it wont refresh known problem\r\n        });\r\n    }\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            PageSelected: <FindGame handleGameClick={this.handleGameClick}/>,\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header id=\"top\">\r\n                    <div class=\"site-title-nav\">\r\n                        <input type=\"checkbox\" id=\"tn-tg\" class=\"topnav-toggle fullscreen-toggle\" aria-label=\"Navigation\"/>\r\n                            <label for=\"tn-tg\" class=\"fullscreen-mask\"></label>\r\n                            <label for=\"tn-tg\" class=\"hbg\">\r\n                                <span class=\"hbg__in\"></span>\r\n                            </label>\r\n                            <h1 class=\"site-title\">\r\n                                <a href=\"/\">RobitsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </h1>\r\n                            <nav id=\"topnav\" class=\"hover\">\r\n                                <section>\r\n                                    <a href=\"/\">\r\n                                        <span class=\"play\">Play</span>\r\n                                        <span class=\"home\">robitsevolved</span>\r\n                                    </a>\r\n                                    <div role=\"group\">\r\n                                        <a onClick={this.handleClickCreateGame} href=\"/#createGame\">Create a game</a>\r\n                                        <a onClick={this.handleClickFindGame} href=\"/#findgame\">Find a game</a>\r\n                                        <a href=\"/simul\">Puzzle Rush</a>\r\n                                    </div>\r\n                                </section>\r\n                                <section>\r\n                                    <a href=\"/training\">Learn</a>\r\n                                    <div role=\"group\">\r\n                                        <a href=\"/learn\">Robits Basics</a>\r\n                                        <a href=\"/training\">Starter Puzzles</a>\r\n                                    </div>\r\n                                </section>\r\n                                <section>\r\n                                    <a href=\"/player\">Community</a>\r\n                                    <div role=\"group\">\r\n                                        <a href=\"/player\">Players</a>\r\n                                        <a href=\"/team\">Teams</a>\r\n                                        <a href=\"/forum\">Forum</a>\r\n                                    </div>\r\n                                </section>\r\n                                <section>\r\n                                    <a href=\"/analysis\">Tools</a>\r\n                                    <div role=\"group\">\r\n                                        <a href=\"/analysis\">Robits solver (test)</a>\r\n                                        <a href=\"/analysis#explorer\">Settings</a>\r\n                                    </div>\r\n                                </section>\r\n                            </nav>\r\n                    </div>\r\n                    <div class=\"site-buttons\">\r\n                        <div id=\"clinput\">\r\n                            <a class=\"link\">\r\n                                <span data-icon=\"y\"></span>\r\n                            </a>\r\n                            <input spellcheck=\"false\" autocomplete=\"false\" aria-label=\"Search\" placeholder=\"Search\"></input>\r\n                        </div>\r\n                        <div class=\"dasher\">\r\n                            <a class=\"toggle link anon\">\r\n                                <span title=\"Preferences\" data-icon=\"%\"></span>\r\n                            </a>\r\n                        </div>\r\n                        <LoggedInUser/>\r\n                        <SignInButton onClick={this.SignInButtonPressed}/>\r\n                    </div>\r\n                </header>\r\n                {this.state.PageSelected}\r\n                <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}