{"version":3,"sources":["components/LearnGameItems.js","constants/constants.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinModal.jsx","components/YouWinDailySingleModal.js","components/YouWinDailyFinalModal.js","components/AddPuzzleModal.jsx","components/ToggleSettings.js","components/Timer.js","containers/DisplayView.js","components/HighScores.jsx","components/DailyChallengeScores.jsx","containers/Modals/PuzzleRushFinishedModal.js","containers/Modals/RandomGameStatsModal.jsx","components/CloseIconWithOnClick.jsx","components/DescriptionList.jsx","components/YouWinLessonModal.js","components/ShowDailyChallengeScoresCard.jsx","components/DailyChallengeHistoryData.js","components/boardgenerator.js","containers/Modals/BoardResetModal.js","containers/Game.js","Pages/CreateGame.js","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","Material-UI/themes.jsx","Pages/Home.js","containers/Modals/LoginModal.js","components/LoggedInUser.js","components/SignInButton.js","containers/Modals/PuzzleRushDifficultyModal.js","containers/Modals/RandomGameDifficultyModal.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","components/ProfilePageComponents/ProfilePageCreatedGamesDetails.js","components/ProfilePageComponents/ProfilePageSolutionDetails.js","Pages/ProfilePage.js","Pages/RandomGamePage.js","Pages/PuzzleRushPage.js","Pages/LessonsPage.js","Pages/DailyChallenge.js","Pages/AboutUs.js","components/ShowDailyPuzzleHistory.js","Pages/DailyChallengeHistory.js","Pages/DailyChallengeHistoryAnswersPage.js","components/LoadingPage.jsx","App.js","serviceWorker.js","index.js"],"names":["LearnGameItems","props","handleClick","handleClickGame","index","selected","Button","variant","color","aria-label","onClick","name","UP","DIRECTION_MAP_IMAGES","yellow","DOWN","LEFT","RIGHT","red","green","blue","MovesView","style","width","float","display","this","moveHistory","length","map","move","src","playerState","robot","colorSignifier","dir","React","Component","styleoutside","dimension","position","dim","height","backgroundColor","top","left","styleinside","styleinside2","Square","border","margin","overflow","children","id","transition","styleoutsidedraggable","selectedColor","undefined","borderStyle","borderColor","borderRadius","Robot","handleKeyDown","e","newDirection","keyCode","tabSelector","resetPuzzle","handlePlayerMovement","onStopDragHandler","handleCreateMode","isCreateMode","buildMode","x","y","grid","draggableGrid","onStop","bounds","window","onkeydown","orientation","opacity","wallThickness","wallOffset","Wall","userSelect","styledragable","Goal","show","endPosition","obj","key","hasOwnProperty","YouWinModal","Dialog","onClose","handleClose","container","document","getElementById","BackdropProps","aria-labelledby","open","maxWidth","DialogTitle","DialogContent","dividers","numMoves","TextField","label","defaultValue","username","DialogActions","submitAnswer","YouWinDailySingleModal","Typography","totalMoves","undoMove","moveNextPuzzle","YouWinDailyFinalModal","handleClickSubmitGame","robotPosition","AddPuzzleModal","submitPuzzle","ToggleSettings","event","console","log","showColoredLineDirections","FormControlLabel","value","control","Switch","onChange","checked","Timer","state","minutes","seconds","timer","myInterval","setInterval","setState","puzzleRushTimeUp","clearInterval","valuetext","DisplayView","createMode","fullWidth","handleCreateBoardClick","toggleBuildMode","createBoardPressed","copyToClipboard","dummy","createElement","body","appendChild","location","host","uri","select","execCommand","removeChild","copiedClipboard","thisThing","copyButtonText","setTimeout","handleDimensionChange","getElementsByClassName","blur","parseInt","toString","DimensionChanged","showPuzzleLink","isPuzzleRush","isLesson","isDailyChallengeAnswers","isDailyChallenge","paddingBottom","marginRight","marginTop","marginBottom","Divider","ButtonGroup","toggleLineIndicators","gutterBottom","Slider","onChangeCommitted","getAriaValueText","step","marks","min","max","squareSizeValue","valueLabelDisplay","highscores","Grid","item","xs","marginleft","highscore","Paper","elevation","spacing","comment","userid","created","highscorestyle","wins","i","crowns","push","CrownCounter","user_id","score","submitted","direction","PuzzleRushWinModal","difficulty","md","List","dense","ListItem","ListItemText","primary","secondary","numPuzzlesCompleted","percentile","averageTime","averageMoves","differenceOptimal","movesPerSecond","playPuzzleRushAgain","closeModal","RandomGameStatsModal","showStatsModal","handleShowRandomAnswers","answers","lowestMoveSequence","lowestMoves","CloseIconWithOnClick","onMouseDown","Descriptionlist","tipsText","text","ListItemSecondaryAction","IconButton","edge","handleCloseToolTips","YouWinLessonModal","useStyles","makeStyles","root","minWidth","bullet","transform","title","fontSize","pos","ShowDailyChallengeScoresCard","classes","Card","className","CardContent","component","bestScore","MovesforPuzzle","MoveSequence","DailyChallengeHistoryData","difficultyforPuzzle","lowestMovesforPuzzle","nameSubmitted","scoreSubmitted","playerMovedSequence","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","type","boardState","wallVerticle","wallHorizontal","goal","randompos1","randompos2","randompos3","randompos4","randomPositions","extend","j","gameWon","playerStart","slice","BoardResetModal","createBoardHandler","preventDefault","percent","createBoard","textAlign","paddingRight","Input","inputProps","placeholder","addEventListener","indexOf","formatGeneratedMoveSequence","moves","images","charAt","setDefaultSquareSize","boardWidth","boardHeight","drawerWidth","getComputedStyle","windowWidth","innerWidth","settingstop","innerHeight","settings","squarevalue","ColoredLineDirections","Game","updateHighscores","axios","get","then","res","JSON","parse","data","squareSize","copiedToClipboard","updateDailyHighscores","dc_id","componentDidMount","loadedGame","IntervalId","dailyChallengeMode","componentWillUnmount","robotSelect","robotSelected","namesubmit","userInfo","post","puzzledata","authorname","history","handleLineDirections","showBoardResetPanelModal","closeRandomStatsModal","closeCreateBoardModal","closePuzzleRushFinishedModal","showPuzzleRushFinishedModal","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","totalMovesDiff","solutiondifference","numPuzzleon","totalMovesList","avgMoves","p_id","differenceFrom","submitDailyAnswer","LastRobotPosition","moveHistoryList","playerStateList","solutiondata","handleUndoMove","checkwin","puzzleRush","randomGame","dailyChallengeModeAnswers","Won","gamesWonDaily","games","handleDailyClickGame","learnMode","g_id","solutionmoves","g_moves","g_puzzledata","newarray","concat","oldPositon","prevPosition","splice","handleLearnClickGame","description","handleDailyClickAnswersGame","g_solutiondata","g_difficulty","solutionDataSubmitted","loadSidebar","game","paddingTop","DailyChallengeScores","HighScores","handlePlayerMovementFromMouse","moveObj","pop","createModeWallClick","indexToChange","newWallHorizontal","wallH","newWallVerticle","wallV","onStopDragHandlerGoal","round","lastY","lastX","goals","gamedata","savedMoves","g_uri","pushState","settingsWidth","settingsHeight","percentWall","settingsPercent","LineDirections","padding","alignItems","sm","numPuzzleRush","zeroMinWidth","Board","square","player","ColoredLineDirection","ColoredLine","puzzleRushPercentileCompleted","withRouter","CreateGame","withStyles","theme","upperPadding","lowerPadding","rightSideText","leftSideText","numberOfHighScores","trimName","substring","justifyContent","Tooltip","handleGameClick","flexItem","disableGutters","FindGame","handleFilterMenuOpen","anchorEl","currentTarget","handleCloseFilterMenu","handleSearchSubmit","searchTerm","searchRef","search","offset","highscoreslist","gameslist","InputBase","input","inputRef","ref","onKeyPress","iconButton","divider","startIcon","Menu","keepMounted","Boolean","MenuItem","FindGameElements","marginLeft","flex","PlayGame","flexGrow","homepage","griditems","paper","Width","image","img","maxHeight","baseExpansion","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","darkmode","iconcards","marginBotton","iconcardsDaily","titlehome","fontFamily","iconfonts","createboardcard","content","demo","background","ComplexGrid","justify","paragraph","CardActionArea","handleClickCreateGame","CardMedia","alt","handleClickFindGame","handleClickDailyChallenge","handleClickRandomGame","handleClickLearnGame","handleClickPuzzleRush","dchighscores","dividerFullWidth","LoginModal","loginGoogle","href","closeLoginModal","LoggedInUser","loggedin","class","profilePicture","SignInButton","textToShow","PuzzleRushDifficultyModal","handleClickPuzzleRushModal","action","isLoading","handleClickEasyPuzzleRush","handleClickMediumPuzzleRush","handleClickHardPuzzleRush","handleClickExHardPuzzleRush","handleChange","target","wrap","CircularProgress","FormControl","FormLabel","RadioGroup","Radio","handleClickRandomGameModal","handleClickEasy","handleClickMedium","handleClickHard","handleClickExHard","ProfilePageCreatedGamesDetails","handleClickPlayGame","ProfilePageSolutionDetails","solution","ProfilePage","useState","expandedGame","setExpandedGame","expandedHighscores","setExpandedHighscores","puzzlerushview","gamesview","ExpansionPanel","expanded","panel","isExpandedGame","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","solutionsview","isExpandedHighScores","maxeasy","averageeasy","averagediffeasy","maxmedium","averagemedium","averagediffmedium","maxhard","averagehard","averagediffhard","maxexhard","averageexhard","averagediffexhard","RandomGamePage","PuzzleRushPage","LessonsPage","learngameslist","DailyChallengePage","dailyChallengeGameslist","AboutUs","ShowDailyPuzzleHistory","size","handleDailyPuzzleHistoryClick","DailyChallengeHistory","expandedPanel","setExpandedPanel","dailychallengehistory","isExpanded","DailyChallengeHistoryAnswersPage","LoadingPage","App","handleDrawerClose","boolean","dc_movesList","stringify","dc_playerList","PageSelected","DailyChallenge","handleDrawerOpen","SignInButtonPressed","showLoginModal","showRandomGameModal","showPuzzleRushModal","handleClickDailyChallengeHistory","historydata","challengeHistoryData","dailychallengehistoryloaded","closePuzzleRushLoginModal","closeRandomGameLoginModal","handleClickProfile","profileData","profileDataloaded","handleHomePageClick","handleClickAboutUs","handleMobileMenuClose","mobileAnchorEl","mobileMenuOpen","showPage","handleMobileMenuOpen","token","LineDirFlag","createMuiTheme","teal","main","AppBar","clsx","appBar","appBarShift","Toolbar","menuButton","hide","noWrap","grow","sectionDesktop","sectionMobile","aria-haspopup","anchorOrigin","vertical","horizontal","transformOrigin","Badge","badgeContent","Drawer","drawer","anchor","drawerPaper","drawerHeader","drawerHeaderLeft","drawerHeaderRight","useTheme","button","ListItemIcon","contentShift","RandomGameDifficultyModal","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","mixins","toolbar","breakpoints","up","toggleBorder","gradient","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.7d275585.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function LearnGameItems(props) {\r\n    const handleClick = () => {\r\n        props.handleClickGame(props.index)\r\n    }\r\n    if (props.selected === props.index) {\r\n        return (\r\n            <Button\r\n                variant=\"contained\" color=\"primary\"\r\n                aria-label=\"vertical outlined primary button group\"\r\n                onClick={handleClick}\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={handleClick}\r\n                aria-label=\"vertical outlined primary button group\"\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n}","export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const MOBILE_INNER_SCREEN_WIDTH = '960';\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div id=\"MainGameBoard\" style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleoutsidedraggable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var selectedColor = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        selectedColor = SELECTED_ROBOT;\r\n        borderStyle = \"solid\";\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        borderStyle: borderStyle,\r\n        borderColor: selectedColor,\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.props.tabSelector();\r\n                return;\r\n                break;\r\n            case 32:\r\n                this.props.resetPuzzle();\r\n                return;\r\n                break;\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n\r\n\r\n        }\r\n        this.props.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    onStopDragHandler = (e, position) => {\r\n        this.props.onStopDragHandler(position,this.props.index);\r\n    }\r\n\r\n\r\n    handleCreateMode = () => {\r\n        if (this.props.isCreateMode === 'Yes' && this.props.buildMode) {\r\n            return (\r\n            <Draggable position={{x: this.props.position.left * this.props.dimension, y:this.props.position.top*this.props.dimension}} grid={this.props.draggableGrid} onStop={this.onStopDragHandler} bounds=\"parent\">\r\n                <div onClick={this.handleClick} style={styleoutsidedraggable(this.props)}>\r\n                    <div style={styleinside(this.props)}>\r\n                        <div style={styleinside2(this.props)}/>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n        this.handleCreateMode()\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onkeydown = this.handleKeyDown;\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.isCreateMode === 'Yes'  && props.buildMode) {\r\n        const onStopDragHandler = (e, position) => {\r\n            props.onStopDragHandler(position);\r\n        }\r\n        return(\r\n        <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n            <img src={GOAL_IMAGE} style={styledragable(props)}/>\r\n        </Draggable>\r\n        )\r\n    }\r\n    else {\r\n        return(<img src={GOAL_IMAGE} style={style(props)}/>)\r\n    }\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({buildMode,show,dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension + dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension + dimension;\r\n            left = position.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        opacity: show ? '0.5' : '0.0',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default (props) => {\r\n    const handleClick = () => {\r\n        props.handleClick(props.dir)\r\n    }\r\n    if (props.buildMode === 'undefined' || !props.buildMode)\r\n    {\r\n        return (\r\n            <div onClick={handleClick} style={style(props)}/>\r\n        );\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LearnGameItems from '../components/LearnGameItems';\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailySingleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Completed!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <Typography variant=\"body1\">\r\n                        You used {this.props.numMoves} Moves, for this puzzle.\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Total Moves: {this.props.totalMoves}\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Finish all puzzles to get submit your score!\r\n                    </Typography>\r\n                    <br/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailySingleModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailyFinalModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClickSubmitGame = () => {\r\n        this.props.submitAnswer(this.props.robotPosition)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Completed the Challenge!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickSubmitGame}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailyFinalModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Submit Puzzle</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField id={\"namesubmit\"} label={\"Name of Puzzle\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleModal;\r\n","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        console.log(this.props.showColoredLineDirections)\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Path Indicators\"\r\n                    checked={this.props.showColoredLineDirections}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n\r\n    state = {\r\n            minutes: 5,\r\n            seconds: 0,\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.puzzleRushTimeUp();\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    timer = () => {\r\n        if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n            return (<h2>Time is up!</h2>)\r\n        }\r\n        else {\r\n            return(\r\n                <h2>Time Remaining: {this.state.minutes}:{this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds}</h2>)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            this.timer()\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ToggleSettings from \"../components/ToggleSettings\";\r\nimport Timer from \"../components/Timer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                        copyButtonText: \"Copy Puzzle Link\"\r\n                     };\r\n        this.state.uri = this.props.isDailyChallenge === 'Yes' ? 'dailychallenge' : this.props.uri;\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <div>\r\n                    <Button color=\"secondary\" variant={\"outlined\"} fullWidth={true} onClick={this.handleCreateBoardClick}>Modify Board</Button>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Switch color=\"primary\" checked={this.props.buildMode} onChange={this.props.toggleBuildMode}/>}\r\n                        label=\"Build Mode\"\r\n                            />\r\n                </div>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.state.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        document.getElementsByClassName(\"MuiSlider-thumb\")[0].blur();\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n    showPuzzleLink = () => {\r\n        if (this.props.createMode === 'Yes' || this.props.isPuzzleRush === 'Yes' || this.props.isLesson === 'Yes' || this.props.isDailyChallengeAnswers === 'Yes' || this.props.isDailyChallenge === 'Yes') {\r\n            return null;\r\n        }\r\n        else {\r\n                return(\r\n                     <div style={{paddingBottom: '10px'}}>\r\n                         <Button fullWidth={true} variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                                 onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                     </div>\r\n                    )\r\n        }\r\n    }\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                {this.showPuzzleLink()}\r\n                 <Divider />\r\n                 <Typography\r\n                     color=\"textSecondary\"\r\n                     display=\"block\"\r\n                     variant=\"caption\"\r\n                     style={{paddingBottom: '10px'}}\r\n                 >\r\n                     Board Actions\r\n                 </Typography>\r\n                 <ButtonGroup fullWidth={true} color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     <Button onClick={this.props.undoMove}>Undo</Button>\r\n                 </ButtonGroup>\r\n                 {this.isCreateMode(this.props.createMode)}\r\n                 <Divider />\r\n                 <ToggleSettings showColoredLineDirections={this.props.showColoredLineDirections} onClick={this.props.toggleLineIndicators}/>\r\n                 <div style={buttonPanel()}>\r\n                     <Typography id=\"discrete-slider-small-steps\"\r\n                                 color=\"textSecondary\"\r\n                                 display=\"inline\"\r\n                                 gutterBottom>\r\n                         Size Of Board\r\n                     </Typography>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={this.props.squareSizeValue}\r\n                         valueLabelDisplay=\"auto\"\r\n                         id=\"sliderelement\"\r\n                     />\r\n                 </div>\r\n                 <Divider/>\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n}\r\n\r\nconst paperstyle = () => {\r\n    return {\r\n        marginBottom: '15px'\r\n    }\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n                <Paper style={paperstyle()}elevation={3}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={9}>\r\n                            <Typography color={'primary'} style={{float: 'left'}}>\r\n                                {highscore.comment}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                                {highscore.userid != 1 ? <GoVerified/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'textSecondary'}>{highscore.numMoves}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.created}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Paper>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid item xs={12} style={styleouter()}>\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginTop: '30px',\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst CrownCounter = highscore => {\r\n    var crowns = []\r\n    var i;\r\n    for (i=0; i<highscore.wins;i++) {\r\n        crowns.push(<FaCrown/>);\r\n    }\r\n    return (\r\n        <div>\r\n            {crowns}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (<Grid item xs={12}>\r\n                <Paper elevation={3}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={9}>\r\n                            <Typography color={'primary'} style={{float: 'left'}}>\r\n                                {highscore.name}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                                {highscore.wins == 0 || highscore.wins == null ? null : CrownCounter(highscore) }\r\n                                {highscore.user_id != 1 ? <GoVerified/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'textSecondary'}>{highscore.score}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.submitted}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Paper>\r\n            </Grid>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid style={styleouter()} container direction={'column'} spacing={1}>\r\n        {\r\n                highscores.map(highscore =>\r\n                    highscorestyle(highscore)\r\n                )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\n\r\nclass PuzzleRushWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Puzzle Rush - {this.props.difficulty}</DialogTitle>\r\n                <DialogContent dividers>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"h6\">\r\n                            Statistics\r\n                          </Typography>\r\n                          <div>\r\n                            <List dense={true}>\r\n\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Number of Puzzles Completed\"\r\n                                    secondary={this.props.numPuzzlesCompleted}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Percentile\"\r\n                                    secondary={this.props.percentile}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average time Per Puzzle\"\r\n                                    secondary={this.props.averageTime}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average Moves per Puzzle\"\r\n                                    secondary={this.props.averageMoves}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Difference from most optimal Solution\"\r\n                                    secondary={this.props.differenceOptimal}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Moves Per Second\"\r\n                                    secondary={this.props.movesPerSecond}\r\n                                  />\r\n                                </ListItem>\r\n                            </List>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.playPuzzleRushAgain}>Play Again!</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushWinModal;\r\n\r\n","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../../constants/constants';\r\n\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass RandomGameStatsModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answers: null,\r\n        }\r\n    }\r\n\r\n    showStatsModal = () => {\r\n        this.props.handleShowRandomAnswers()\r\n        this.setState({\r\n            answers: this.props.lowestMoveSequence\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-random\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        lowest possible moves: {this.props.lowestMoves}\r\n                    </div>\r\n                    {this.state.answers}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.showStatsModal}>Show Puzzle Answers</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomGameStatsModal;","import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nexport default function CloseIconWithOnClick(props) {\r\n    const handleClose = () => {\r\n        props.handleClose(props.index);\r\n    }\r\n    return (<CloseIcon onMouseDown={handleClose}/>\r\n    )\r\n}","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport CloseIconWithOnClick from './CloseIconWithOnClick'\r\n\r\nexport default function Descriptionlist(props) {\r\n    return(\r\n            <List>\r\n              {\r\n                  props.tipsText.map((text,index) =>\r\n                    <ListItem>\r\n                      <div>\r\n                        {text}\r\n                      </div>\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                          <CloseIconWithOnClick index={index} handleClose={props.handleCloseToolTips}/>\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  )\r\n              }\r\n            </List>\r\n    )\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinLessonModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <Typography> You completed the Lesson! Move on to the next one!\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinLessonModal;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function ShowDailyChallengeScoresCard(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {props.name}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {props.bestScore}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          This Puzzle Moves\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.MovesforPuzzle}\r\n          <br/>\r\n          {props.MoveSequence}\r\n          <br />\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport MovesView from '../components/MovesView';\r\nimport ShowDailyChallengeScoreCard from '../components/ShowDailyChallengeScoresCard'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst stylebelow = () => {\r\n    return {\r\n        marginTop: '40px'\r\n    }\r\n}\r\n\r\nclass DailyChallengeHistoryData extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography style={stylebelow()} variant=\"h4\"> {this.props.difficultyforPuzzle} </Typography>\r\n                <ShowDailyChallengeScoreCard\r\n                    name={\"Robit God\"}\r\n                    bestScore={this.props.bestScore}\r\n                    MovesforPuzzle={this.props.lowestMovesforPuzzle}\r\n                    MoveSequence={this.props.lowestMoveSequence}\r\n                />\r\n                <ShowDailyChallengeScoreCard\r\n                    name={this.props.nameSubmitted}\r\n                    bestScore={this.props.scoreSubmitted}\r\n                    MovesforPuzzle={this.props.playerMovedSequence.length}\r\n                    MoveSequence={<MovesView\r\n                                        moveHistory={this.props.playerMovedSequence} playerState={[{colorSignifier: \"blue\"},{colorSignifier: \"green\"},{colorSignifier: \"red\"},{colorSignifier: \"yellow\"}]}\r\n                                  />}\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyChallengeHistoryData;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent,type) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    if (type === 'blank') {\r\n        var goal = {top: height-1, left: width-1};\r\n        var randompos1 = {top: 0,left: 0, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n        var randompos2 = {top: 0,left: 1, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n        var randompos3 = {top: 1,left: 0, color: ROBOT_RED, colorSignifier: 'red'};\r\n        var randompos4 = {top: 1,left: 1, color: ROBOT_YELLOW, colorSignifier:'yellow'};\r\n    }\r\n    else {\r\n        var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n        var randomPositions = [goal];\r\n        for (var i=0;i<5;i++) {\r\n            randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n        }\r\n        var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n        var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n        var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n        var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    }\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router';\r\nimport Draggable from 'react-draggable';\r\nimport LearnGameItems from '../components/LearnGameItems';\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport YouWinDailySingleModal from '../components/YouWinDailySingleModal';\r\nimport YouWinDailyFinalModal from '../components/YouWinDailyFinalModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport PuzzleRushWinModal from '../containers/Modals/PuzzleRushFinishedModal';\r\nimport RandomGameStatsModal from '../containers/Modals/RandomGameStatsModal';\r\nimport DescriptionList from '../components/DescriptionList';\r\nimport YouWinLessonModal from '../components/YouWinLessonModal';\r\nimport DailyChallengeHistoryData from '../components/DailyChallengeHistoryData';\r\nimport Timer from \"../components/Timer\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if([37, 38, 39, 40, 9].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        padding: '40px'\r\n    };\r\n};\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\nconst formatGeneratedMoveSequence = (moves) => {\r\n    var images = []\r\n    moves.map(move => {\r\n        var color = move.charAt(0);\r\n        var direction = move.charAt(1);\r\n        if (color == 'B') {\r\n            color = 'blue'\r\n        }\r\n        else if (color == 'R') {\r\n            color = 'red'\r\n        }\r\n        else if (color == 'Y') {\r\n            color = 'yellow'\r\n        }\r\n        else {\r\n            color = 'green'\r\n        }\r\n        if (direction == 'N') {\r\n            direction = UP\r\n        }\r\n        else if (direction == 'S') {\r\n            direction = DOWN\r\n        }\r\n        else if (direction == 'E') {\r\n            direction = RIGHT\r\n        }\r\n        else {\r\n            direction = LEFT\r\n        }\r\n        images.push(<img src={DIRECTION_MAP_IMAGES[color][direction]}/>)\r\n    });\r\n    return images\r\n}\r\n\r\n\r\nconst setDefaultSquareSize = (boardWidth,boardHeight) => {\r\n    const drawerWidth = document.getElementById(\"MainDrawer\") == null ? 140 : parseInt(getComputedStyle(document.getElementById(\"MainDrawer\")).width);\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n    var settingstop = windowHeight - 120;\r\n\r\n    settingstop = settingstop / boardHeight\r\n    settingstop = parseInt(settingstop);\r\n    settingstop = settingstop - (settingstop % 4)\r\n\r\n    var settings = ((windowWidth < 600) ? windowWidth : (windowWidth - drawerWidth) / 1.75);\r\n    settings = settings / boardWidth;\r\n    settings = parseInt(settings);\r\n    settings = settings - (settings % 4);\r\n    var squarevalue = settings > settingstop ? settingstop : settings\r\n    if (squarevalue < 16) {\r\n        squarevalue = 16;\r\n    }\r\n    else if (squarevalue > 52) {\r\n        squarevalue = 52;\r\n    }\r\n    return squarevalue;\r\n};\r\n\r\nconst ColoredLineDirections = [LEFT,RIGHT,UP,DOWN]\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.puzzleRush === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.p_id = this.props.p_id;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = []\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            this.state.moveHistoryList=[];\r\n\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[0].g_solutiondata))\r\n            this.state.lowestMovesforPuzzle = this.props.games[0].g_moves\r\n            this.state.difficultyforPuzzle = this.props.games[0].g_difficulty\r\n            this.state.playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[0]\r\n\r\n            this.state.playerStateList = [];\r\n            this.state.tipsText = [];\r\n            this.state.highscores = [];\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            console.log(this.props.playerStateList)\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            if (this.props.savedMoves != null) {\r\n                this.state.moveHistoryList = this.props.savedMoves\r\n                this.state.gamesWonDaily = [true,true,true,true]\r\n                this.state.moveHistory = this.props.savedMoves[0].slice()\r\n                this.state.playerState = this.props.playerStateList[0].slice()\r\n            }\r\n            else {\r\n                this.state.moveHistoryList=[];\r\n            }\r\n            this.state.playerStateList = this.props.playerStateList != null ? this.props.playerStateList : [];\r\n            this.state.tipsText = ['Winners who are Logged in will receive a Crown','See about page for details on the daily challenge difficulty','Puzzles Reset at 3PM EST'];\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.dc_id = this.props.dc_id;\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.game.g_puzzledata)\r\n            this.state.lowestMoves = this.props.game.g_moves\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.game.g_solutiondata))\r\n            this.state.difficulty = this.props.game.g_difficulty\r\n            this.state.createMode = 'No';\r\n            this.state.gameWon = false;\r\n            this.state.buildMode = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = ['this game was randomly generated'];\r\n            this.state.uri = this.props.game.g_uri;\r\n            window.history.pushState({id: 'Random Game'},'RobotsEvolved | Random Game','/play/' + this.props.game.g_uri)\r\n        }\r\n        else if (this.props.learnMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [this.props.games[0].description];\r\n        }\r\n        else if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.buildMode = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = []\r\n            window.history.pushState({id: 'Play Game'},'RobotsEvolved | Play Game','/play/'+ this.props.uri)\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,1,'blank');\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                buildMode: true,\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false,\r\n                tipsText: [\r\n                                        'Click on Wall spots to toggle',\r\n                                        'Click and Drag robots or goal to move robots',\r\n                                        'When you are ready, toggle build mode in order to solve the puzzle',\r\n                                        'You must solve the puzzle in order to submit.']\r\n            },board);\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n        }\r\n        this.state.showColoredLineDirections = this.props.LineDirections;\r\n    };\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                this.setState({\r\n                    highscores: JSON.parse(res.data.highscores),\r\n                });\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    updateDailyHighscores = () => {\r\n        axios.get('/dailychallengehighscores?dc_id=' + this.state.dc_id)\r\n            .then( res => {\r\n                this.setState({\r\n                    highscores: JSON.parse(res.data.highscores),\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.updateHighscores();\r\n            var IntervalId = setInterval(this.updateHighscores, 4000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.updateDailyHighscores();\r\n            var IntervalId = setInterval(this.updateDailyHighscores, 4000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.userInfo !== null) {\r\n            username = window.userInfo.username\r\n        }\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.showColoredLineDirections === true) {\r\n            this.setState({\r\n                showColoredLineDirections: false,\r\n            });\r\n            this.props.handleLineDirections(false)\r\n        }\r\n        else {\r\n            this.setState({\r\n                showColoredLineDirections: true,\r\n            });\r\n            this.props.handleLineDirections(true)\r\n        }\r\n    };\r\n\r\n    toggleBuildMode = () => {\r\n        if (this.state.buildMode) {\r\n            this.setState({\r\n                buildMode: false,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n                buildMode: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length, name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeRandomStatsModal = event => {\r\n        this.setState({\r\n            closeRandomStatsModal: false,\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    }\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushFinishedModal = event => {\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: false\r\n        });\r\n\r\n    }\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent, 'blank');\r\n        var squareSize = setDefaultSquareSize(width,height);\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n            squareSize: squareSize,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n    showStatsModal = () => {\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            showStatsModal: true,\r\n        });\r\n    }\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n\r\n    puzzleRushTimeUp = () => {\r\n        var totalMovesDiff = 0;\r\n        this.state.solutiondifference.map(numMoves => {\r\n            totalMovesDiff += numMoves;\r\n        });\r\n        var averageTime = parseInt(300 / (this.state.numPuzzleon))\r\n        var totalMoves = 0;\r\n        this.state.totalMovesList.map(numMoves => {\r\n            totalMoves += numMoves\r\n        });\r\n        var avgMoves = parseInt(totalMoves / (this.state.numPuzzleon))\r\n        var movesPerSecond = totalMoves / 300;\r\n\r\n        axios.post('/puzzlerushend', {p_id: this.state.p_id,totalMoves: totalMoves,differenceFrom: totalMovesDiff})\r\n            .then( res => {\r\n                console.log(res.data);\r\n            });\r\n\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: true,\r\n            numPuzzlesCompleted: this.state.numPuzzleon,\r\n            percentile: 'TBD%',\r\n            averageTime: averageTime + 's',\r\n            averageMoves: avgMoves,\r\n            differenceOptimal: totalMovesDiff,\r\n            movesPerSecond: movesPerSecond\r\n        });\r\n    }\r\n\r\n    submitDailyAnswer = (LastRobotPosition) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            numMoves += moveHistory.length\r\n        });\r\n        var playerStateList = this.state.playerStateList.slice()\r\n        var playerState = this.state.playerState.slice()\r\n        console.log(this.state.robotSelected)\r\n        playerState[parseInt(this.state.robotSelected)] = LastRobotPosition;\r\n        console.log(playerState[parseInt(this.state.robotSelected)])\r\n        console.log(playerState);\r\n\r\n        playerStateList[this.state.numPuzzleon] = playerState\r\n        console.log(LastRobotPosition);\r\n        console.log(playerState);\r\n        axios.post('/dailychallenge', {score: numMoves, name: document.getElementById(\"namesubmitHS\").value, solutiondata: moveHistoryList, dc_id: this.state.dc_id, playerStateList: playerStateList})\r\n            .then( res => {\r\n                console.log(res)\r\n                this.handleUndoMove();\r\n            });\r\n        this.state.gameWon = false;\r\n    }\r\n\r\n    checkwin = (robotPosition) => {\r\n        if (robotPosition.top === this.state.goal.top && robotPosition.left === this.state.goal.left) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No' && this.props.puzzleRush !== 'Yes') {\r\n                var username = '';\r\n                if (window.userInfo !== null) {\r\n                    username = window.userInfo.username\r\n                }\r\n                if (this.props.randomGame === 'Yes') {\r\n                    return (\r\n                        <RandomGameStatsModal\r\n                            show={this.state.gameWon}\r\n                            lowestMoves={this.state.lowestMoves}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            numMoves={this.state.moveHistory.length}\r\n                            difficulty={this.state.difficulty}\r\n                            resetPuzzle={this.resetPuzzle}\r\n                            handleShowRandomAnswers={this.handleShowRandomAnswers}\r\n                        />\r\n                    );\r\n                }\r\n                else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n                    return null\r\n                }\r\n                else if (this.props.dailyChallengeMode === 'Yes') {\r\n                    var Won=true\r\n                    this.state.gamesWonDaily.map((gameWon,index) => {\r\n                        if (!(index == this.state.numPuzzleon) && !gameWon) {\r\n                            Won = false\r\n                        }\r\n                    });\r\n                    var moveHistoryList = this.state.moveHistoryList\r\n                    moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory\r\n                    var numMoves = 0\r\n                    moveHistoryList.map(moveHistory => {\r\n                        numMoves += moveHistory.length\r\n                    });\r\n                    return (Won ? <YouWinDailyFinalModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={numMoves}\r\n                        submitAnswer={this.submitDailyAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                        undoMove={this.handleUndoMove}\r\n                        robotPosition={robotPosition}\r\n                    /> : <YouWinDailySingleModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        totalMoves={numMoves}\r\n                        undoMove={this.handleUndoMove}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        games={this.state.games}\r\n                        handleClickGame={this.handleDailyClickGame}\r\n                        numPuzzleon={this.state.numPuzzleon}\r\n                        moveNextPuzzle={this.moveNextPuzzle}\r\n                    />);\r\n                }\r\n                else if (this.props.learnMode === 'Yes') {\r\n                    return  (<YouWinLessonModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                    />);\r\n                }\r\n                else {\r\n                    return  (<YouWinModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        submitAnswer={this.submitAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                    />);\r\n                }\r\n            }\r\n            else if (this.props.puzzleRush === 'Yes'){\r\n                axios.post('/puzzlerushsubmit', {p_id: this.state.p_id,g_id:this.state.games[this.state.numPuzzleon].g_id, moveHistory: this.state.moveHistory})\r\n                    .then( res => {\r\n                        console.log(res.data);\r\n                    });\r\n                var totalMoves = this.state.moveHistory.slice().length\r\n                var totalMovesList = this.state.totalMovesList\r\n                totalMovesList.push(totalMoves)\r\n                var solutionmoves = totalMoves - this.state.games[this.state.numPuzzleon].g_moves\r\n                var solutiondifference = this.state.solutiondifference\r\n                solutiondifference.push(solutionmoves)\r\n                var puzzledata = JSON.parse(this.state.games[this.state.numPuzzleon + 1].g_puzzledata)\r\n                if (this.state.numPuzzleon + 10 > this.state.games.length) {\r\n                    axios.get('/puzzlerushgetmore?p_id=' + this.props.p_id + '&difficulty=' + this.props.difficulty)\r\n                        .then( res => {\r\n                                var games = JSON.parse(res.data.games);\r\n                                var stategames = this.state.games\r\n                                var newarray = stategames.concat(games)\r\n                                this.setState({\r\n                                    games: newarray\r\n                                });\r\n                        });\r\n                }\r\n                this.setState(\r\n                    extend(puzzledata,{numPuzzleon: this.state.numPuzzleon + 1, playerState: puzzledata.playerStart.slice(), gameWon: false, solutiondifference: solutiondifference, totalMovesList: totalMovesList})\r\n                );\r\n\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handleShowRandomAnswers = () => {\r\n        this.setState({\r\n            tipsText: [this.state.lowestMoveSequence]\r\n        })\r\n    }\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false && !this.state.buildMode) {\r\n            var oldPositon = {left: this.state.playerState[this.state.robotSelected].left, top: this.state.playerState[this.state.robotSelected].top};\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left) && !this.state.buildMode) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier,\r\n                    prevPosition: oldPositon\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n            this.checkwin(newPosition);\r\n        }\r\n    };\r\n\r\n    handleCloseToolTips = (index) => {\r\n        this.state.tipsText.splice(index,1);\r\n        this.setState({\r\n            tipsText: this.state.tipsText,\r\n        });\r\n    }\r\n\r\n    moveNextPuzzle = () => {\r\n        this.handleDailyClickGame((this.state.numPuzzleon + 1) % 4)\r\n    }\r\n\r\n    handleLearnClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].puzzledata);\r\n        var squareSize = setDefaultSquareSize(puzzledata.width,puzzledata.height);\r\n        this.setState(\r\n            extend(puzzledata,{buildMode: false,squareSize: squareSize, numPuzzleon: index, moveHistory: [], gameWon: false, playerState: puzzledata.playerStart.slice(),tipsText: [this.props.games[index].description]})\r\n        );\r\n    }\r\n\r\n    handleDailyClickAnswersGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n        var lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[index].g_solutiondata))\r\n        var lowestMovesforPuzzle = this.props.games[index].g_moves\r\n        var difficultyforPuzzle = this.props.games[index].g_difficulty\r\n        var playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[index]\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory,\r\n                    gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily,\r\n                    lowestMoveSequence: lowestMoveSequence, lowestMovesforPuzzle: lowestMovesforPuzzle, difficultyforPuzzle: difficultyforPuzzle,\r\n                    playerMovedSequence: playerMovedSequence})\r\n        );\r\n    }\r\n\r\n    handleDailyClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily})\r\n        );\r\n    }\r\n\r\n\r\n    loadSidebar = () => {\r\n        if (this.props.learnMode == 'Yes') {\r\n            return (\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\">\r\n                        <Divider/>\r\n                        <Typography\r\n                             color=\"textSecondary\"\r\n                             display=\"block\"\r\n                             variant=\"caption\"\r\n                             style={{paddingBottom: '10px'}}\r\n                         >\r\n                             Beginner Lessons\r\n                         </Typography>\r\n                        {\r\n                            this.state.games.map((game,index) => {\r\n                                    if (index === 4) {\r\n                                        return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Intermediate Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    else if (index === 7) {\r\n                                            return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Advanced Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    return(\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={game.name} index={index} handleClickGame={this.handleLearnClickGame}/>\r\n                                    )\r\n                                }\r\n\r\n                            )\r\n                        }\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickAnswersGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeHistoryData\r\n                            lowestMovesforPuzzle={this.state.lowestMovesforPuzzle}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            difficultyforPuzzle={this.state.difficultyforPuzzle}\r\n                            nameSubmitted={this.props.nameSubmitted}\r\n                            playerMovedSequence={this.state.playerMovedSequence}\r\n                            bestScore={this.props.bestScore}\r\n                            scoreSubmitted={this.props.scoreSubmitted}\r\n                         />\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeScores highscores={this.state.highscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.state.createMode === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.puzzleRush) {\r\n            return (\r\n                     <div>\r\n                        <Timer puzzleRushTimeUp={this.puzzleRushTimeUp}>\r\n                        </Timer>\r\n                        <Typography id=\"discrete-slider-small-steps\"\r\n                                     color=\"Primary\"\r\n                                     variant=\"h3\"\r\n                                     display=\"inline\"\r\n                                     gutterBottom>\r\n                             {this.state.numPuzzleon}\r\n                         </Typography>\r\n                     </div>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n            <div style={{display: 'grid'}}>\r\n                <Typography\r\n                    color=\"secondary\"\r\n                    display=\"block\"\r\n                    variant={\"h4\"}\r\n\r\n                >\r\n                    {this.props.name}\r\n                </Typography>\r\n                <br/>\r\n                <Grid container xs={12} direction=\"column\">\r\n                <HighScores highscores={this.state.highscores}/>\r\n                </Grid>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    handlePlayerMovementFromMouse = (direction) => {\r\n        this.handlePlayerMovement({dir: direction})\r\n    };\r\n\r\n    handleUndoMove = () => {\r\n        var moveHistory = this.state.moveHistory;\r\n        var playerState = this.state.playerState;\r\n        if (moveHistory.length !== 0) {\r\n            var moveObj = moveHistory.pop();\r\n            playerState[moveObj.robot].left = moveObj.prevPosition.left;\r\n            playerState[moveObj.robot].top = moveObj.prevPosition.top;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n                gameWon: false,\r\n            });\r\n        }\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes' && this.state.buildMode) {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                console.log('clicking horizontal wall');\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onStopDragHandlerGoal = (position) => {\r\n        this.setState({\r\n            goal: {top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize)},\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n        })\r\n    };\r\n\r\n\r\n    onStopDragHandler = (position,index) => {\r\n        var playerState = this.state.playerState.slice();\r\n        var lastX = position.lastX / this.state.squareSize;\r\n        var lastY = position.lastY / this.state.squareSize;\r\n        playerState[index].top = Math.round(lastY);\r\n        playerState[index].left = Math.round(lastX);\r\n        this.setState({\r\n            playerStart: playerState.slice(),\r\n            playerState: playerState,\r\n            moveHistory: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        puzzleRushTimeUp={this.puzzleRushTimeUp}\r\n                        isPuzzleRush={this.props.puzzleRush}\r\n                        numPuzzleRush={this.state.numPuzzleon}\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                        toggleLineIndicators = {this.toggleLineIndicators}\r\n                        showColoredLineDirections={this.state.showColoredLineDirections}\r\n                        toggleBuildMode = {this.toggleBuildMode}\r\n                        undoMove = {this.handleUndoMove}\r\n                        buildMode = {this.state.buildMode}\r\n                        squareSizeValue = {parseInt((this.state.squareSize/4))}\r\n                        isLesson = {this.props.learnMode}\r\n                        isDailyChallenge = {this.props.dailyChallengeMode}\r\n                        isDailyChallengeAnswers = {this.props.dailyChallengeModeAnswers}\r\n                    />\r\n                    <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8} zeroMinWidth>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal\r\n                            dimension={this.state.squareSize}\r\n                            position={this.state.goal}\r\n                            onStopDragHandler={this.onStopDragHandlerGoal}\r\n                            draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                            isCreateMode={this.state.createMode}\r\n                            buildMode={this.state.buildMode}\r\n                        />\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    onStopDragHandler={this.onStopDragHandler}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={this.state.playerState[this.state.robotSelected].color}\r\n                                    show={this.state.showColoredLineDirections}\r\n                                    handleClick={this.handlePlayerMovementFromMouse}\r\n                                    buildMode={this.state.buildMode}\r\n                                />\r\n                            )\r\n                        }\r\n                    </Board>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DescriptionList\r\n                        handleCloseToolTips={this.handleCloseToolTips}\r\n                        tipsText={this.state.tipsText}\r\n                    />\r\n                    {this.loadSidebar()}\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                {\r\n                    this.state.playerState.map(position =>\r\n                        this.checkwin(position))\r\n                }\r\n                <PuzzleRushWinModal\r\n                    show={this.state.showPuzzleRushFinishedModal}\r\n                    closeModal={this.closePuzzleRushFinishedModal}\r\n                    numPuzzlesCompleted={this.state.numPuzzlesCompleted}\r\n                    percentile={this.state.puzzleRushPercentileCompleted}\r\n                    averageTime={this.state.averageTime}\r\n                    averageMoves={this.state.averageMoves}\r\n                    differenceOptimal={this.state.differenceOptimal}\r\n                    movesPerSecond={this.state.movesPerSecond}\r\n                    difficulty={this.props.difficulty}\r\n                />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\"\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        maxWidth: 360,\r\n        height: 175\r\n    },\r\n\r\n    item: {\r\n        padding: 0\r\n    },\r\n\r\n    upperPadding: {\r\n        paddingTop: 3\r\n    },\r\n\r\n    lowerPadding: {\r\n        paddingBottom: 3\r\n    },\r\n\r\n    rightSideText: {\r\n        textAlign: \"right\",\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    },\r\n\r\n    leftSideText: {\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(ComplexGrid)\r\n\r\nfunction ComplexGrid(props) {\r\n    const { classes } = props;\r\n    const handleClick = () => {\r\n        props.handleGameClick(props.game.name, props.game.puzzledata,props.highscores,props.game.uri);\r\n    };\r\n\r\n    var numberOfHighScores = 0;\r\n\r\n    const highscorestyle = highscore => {\r\n        if (numberOfHighScores === 5) return \"\";\r\n        numberOfHighScores++;\r\n        return (\r\n            <ListItem disableGutters={true} classes={{ root: classes.item }}>\r\n                <ListItemText primary={trimName(highscore.comment)} classes={{ root: classes.leftSideText }} />\r\n                <ListItemText secondary={highscore.numMoves} classes={{ root: classes.rightSideText }} />\r\n            </ListItem>\r\n        )\r\n    };\r\n\r\n    const contentDivStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        };\r\n\r\n    };\r\n\r\n    const trimName = name => {\r\n        if (name.length > 10)\r\n            name = name.substring(0, 10) + \"...\";\r\n        return name\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid item xs={12} sm={3}>\r\n            <Card variant=\"outlined\" className={classes.root}>\r\n                <CardContent>\r\n                    <div style={contentDivStyle()}>\r\n                        <div style={{width: '125px'}}>\r\n                            <Tooltip title={props.game.name}>\r\n                                <Typography variant=\"h6\" classes={{ root: classes.lowerPadding }}>\r\n                                    {trimName(props.game.name)}\r\n                                </Typography>\r\n                            </Tooltip>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    By: {trimName(props.game.authorname)}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    {props.game.created}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Plays: {props.highscores.length}\r\n                                </Typography>\r\n                            </div>\r\n                            <br/>\r\n                            <Button onClick={handleClick} classes={{ root: classes.upperPadding }} variant=\"contained\" color=\"primary\">Play</Button>\r\n                        </div>\r\n                        <Divider orientation=\"vertical\" flexItem />\r\n                        <div style={{width: '125px'}}>\r\n                            <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                Top Scores\r\n                            </Typography>\r\n                            <List>\r\n                                {\r\n                                    props.highscores.map(highscore =>\r\n                                        highscorestyle(highscore)\r\n                                    )\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from 'axios';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 400,\r\n    },\r\n    input: {\r\n        marginLeft: 5,\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n        marginLeft: 8,\r\n        marginRight: 8,\r\n    },\r\n});\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = this.props.gameslist;\r\n        var highscoreslist = this.props.highscoreslist;\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n            anchorEl: null\r\n        }\r\n    }\r\n\r\n    handleGameClick = (name,gamedata,highscores,uri) => {\r\n        this.props.handleGameClick(name,gamedata,highscores,uri);\r\n    };\r\n\r\n    handleFilterMenuOpen = event => {\r\n        this.setState( {\r\n          anchorEl: event.currentTarget\r\n      });\r\n    };\r\n\r\n    handleCloseFilterMenu = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n    };\r\n\r\n    handleSearchSubmit = event => {\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, offset: 0})\r\n            .then( res => {\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    };\r\n\r\n    render () {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <div id={'GameMain'}>\r\n                <Paper component=\"form\" className={classes.root} >\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        inputRef={ref => this.searchRef = ref}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                this.handleSearchSubmit();\r\n                                event.preventDefault()\r\n                            }\r\n                        }}\r\n                    />\r\n                    <IconButton onClick={this.handleSearchSubmit} className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <Divider className={classes.divider} orientation=\"vertical\" />\r\n                    <Button\r\n                        onClick={this.handleFilterMenuOpen}\r\n                        startIcon={<FilterListIcon />}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        Sort\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(this.state.anchorEl)}\r\n                        onClose={this.handleCloseFilterMenu}\r\n                    >\r\n                        <MenuItem onClick={this.handleCloseFilterMenu}>Most Popular</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenu}>Hottest</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenu}>Newest</MenuItem>\r\n                    </Menu>\r\n                </Paper>\r\n                <br/>\r\n                <Grid container alignItems={\"stretch\"} spacing={2}>\r\n                    {\r\n                        this.state.gameslist.map((game,index)=>\r\n                            <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(FindGame);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  loadedGame={'Yes'}\r\n                  name={this.props.name}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  homepage: {\r\n    marginTop: '40px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  baseExpansion: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: '10px'\r\n  },\r\n  darkmode: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      marginTop: '150px',\r\n  },\r\n  iconcards: {\r\n    width: '250px',\r\n    display: 'inline-block',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  iconcardsDaily: {\r\n    maxWidth: 345,\r\n    minWidth: 250,\r\n    float: 'left',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  titlehome: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '30px',\r\n  },\r\n  iconfonts: {\r\n    fontFamily: \"'Arvo', serif\",\r\n  },\r\n  createboardcard: {\r\n    ':hover': {\r\n        content: '/static/images/CreateBoardCardIconPlaced.png',\r\n    }\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport FindGameElements from \"../containers/FindGameElements\";\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n\r\n    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n        return (<div className={classes.homepage} >\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                        </Typography>\r\n                        <Typography variant=\"p2\" paragraph={true}> Create your own Robots Boards and challenge others to solve them, or play puzzle rush and get better.\r\n                        </Typography>\r\n                        <br/>\r\n                        <img width=\"400\" height=\"225\" src='/static/videos/basic.gif'/>\r\n                        <br/>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                        <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                        </Typography>\r\n                        <Typography> Robots Evolved New Homepage!!! <br/>Almost Done with the project expect a release date of 8/1/2020\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container item alignItems={\"stretch\"} spacing={2} alignItems=\"center\" justify=\"center\" >\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickCreateGame}>\r\n                                    <CardMedia\r\n                                        className={classes.createboardcard}\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                        title=\"Create Board\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Create Board\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickFindGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Find a Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/FindAGameCardIcon.png\"\r\n                                        title=\"Find a Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Find a Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/DailyChallengeIcon.png\"\r\n                                        title=\"Daily Challenge\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Daily Challenge\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickRandomGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Play a Random Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/puzzle.png\"\r\n                                        title=\"Play a Random Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Play a Random Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickLearnGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                        title=\"Learn\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Learn\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Contemplative Reptile\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/PuzzleRushIcon.png\"\r\n                                        title=\"Contemplative Reptile\"\r\n                                    />\r\n                                    <CardContent style={{textAlign: 'center'}}>\r\n                                        <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            Puzzle Rush\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                        <Typography className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                        </Typography>\r\n                        <DailyChallengeScores highscores={window.dchighscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (<div className={classes.homepage}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> Controls\r\n                    </Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Movement\r\n                        </Typography>\r\n                    <img width={'20%'} height={'auto'} src={\"/static/images/keyboard.png\"}/>\r\n                    <Typography>Or use mouse button to click on the Robot you want to move</Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Selecting robots\r\n                        </Typography>\r\n                        <img width={'20%'} height={'auto'} src={\"/static/images/tab.png\"}/>\r\n\r\n                    <Typography>Or use mouse button to click</Typography>\r\n                    <Divider/>\r\n                    <div style={{marginTop:'100px'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                    </Typography>\r\n                    <Typography> Robots Evolved New Homepage!!! <br/>Almost Done with the project expect a release date of 8/1/2020\r\n                    </Typography>\r\n                    </div>\r\n\r\n                </Grid>\r\n                <Grid item xs={8} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                    </Typography>\r\n                    <Typography variant=\"p2\"> Create your own Robots Boards and challenge others to solve them, or play puzzle rush and get better.\r\n                    </Typography>\r\n                    <br/>\r\n                        <img width=\"400\" height=\"225\" src='/static/videos/basic.gif'/>\r\n                    <br/>\r\n                    <Card className={classes.iconcards}>\r\n                              <CardActionArea onClick={props.handleClickCreateGame}>\r\n                                <CardMedia\r\n                                  className={classes.createboardcard}\r\n                                  component=\"img\"\r\n                                  alt=\"Create Board\"\r\n                                  height=\"140\"\r\n                                  image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                  title=\"Create Board\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Create Board\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </Card>\r\n                            <Card className={classes.iconcards}>\r\n                              <CardActionArea onClick={props.handleClickFindGame}>\r\n                                <CardMedia\r\n                                  component=\"img\"\r\n                                  alt=\"Find a Game\"\r\n                                  height=\"140\"\r\n                                  image=\"/static/images/FindAGameCardIcon.png\"\r\n                                  title=\"Find a Game\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Find a Game\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </Card>\r\n                            <Card className={classes.iconcards}>\r\n                              <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                                <CardMedia\r\n                                  component=\"img\"\r\n                                  alt=\"Create Board\"\r\n                                  height=\"140\"\r\n                                  image=\"/static/images/DailyChallengeIcon.png\"\r\n                                  title=\"Daily Challenge\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Daily Challenge\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </Card>\r\n                            <Card className={classes.iconcards}>\r\n                    <CardActionArea onClick={props.handleClickRandomGame}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\"Play a Random Game\"\r\n                            height=\"140\"\r\n                            image=\"/static/images/puzzle.png\"\r\n                            title=\"Play a Random Game\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                Play a Random Game\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickLearnGame}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Create Board\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                title=\"Learn\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Learn\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Contemplative Reptile\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/PuzzleRushIcon.png\"\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent style={{textAlign: 'center'}}>\r\n                                <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Puzzle Rush\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                <Typography className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                </Typography>\r\n                <DailyChallengeScores highscores={window.dchighscores}/>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeLoginModal}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>Login to Robits</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <img onClick={this.loginGoogle} src={\"/static/images/btn_google_signin_light_normal_web@2x.png\"}></img>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeLoginModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '40px',\r\n        width: '40px',\r\n        marginTop: '5px',\r\n    };\r\n};\r\n\r\nconst divStyle = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        width: '200px',\r\n    };\r\n};\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return null\r\n        }\r\n        else {\r\n            return (\r\n                <div style={divStyle()}>\r\n                    <div>{window.userInfo.username}</div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <Button color=\"primary\" onClick={this.handleClick}>{textToShow}</Button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty) => {\r\n        console.log(difficulty)\r\n        axios.post('/puzzlerush', {difficulty: difficulty, action: 'start',type: this.state.value})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            isLoading: false,\r\n                        });\r\n                        this.props.handleClickPuzzleRush(difficulty,games,p_id);\r\n                });\r\n    };\r\n\r\n    handleClickEasyPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMediumPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                                {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                                                        ) : (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                         <Grid item xs={6}>\r\n                                         <ButtonGroup\r\n                                            orientation=\"vertical\"\r\n                                            color=\"primary\"\r\n                                            aria-label=\"vertical outlined primary button group\"\r\n                                          >\r\n                                            <Button onClick={this.handleClickEasyPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Easy\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickMediumPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Medium\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Hard\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickExHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Exteremely Hard\r\n                                            </Button>\r\n                                          </ButtonGroup>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                              <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                              <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                                <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                                <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                              </RadioGroup>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickRandomGameModal = (difficulty,type) => {\r\n        axios.get('/randomgame?difficulty=' + difficulty + '&type=' + type)\r\n            .then( res => {\r\n                var game = JSON.parse(res.data.game);\r\n                this.setState({\r\n                    isLoading: false,\r\n                });\r\n                this.props.handleClickRandomGame(game,difficulty);\r\n            })\r\n    }\r\n\r\n    handleClickEasy = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMedium = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHard = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHard = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                            {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                            ) : (\r\n                            <Grid\r\n                                container xs={12}\r\n                                spacing={4}\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n                                wrap=\"nowrap\"\r\n                            >\r\n                                <Grid item xs={6}>\r\n                                    <ButtonGroup\r\n                                        orientation=\"vertical\"\r\n                                        color=\"primary\"\r\n                                        aria-label=\"vertical outlined primary button group\"\r\n                                      >\r\n                                        <Button onClick={this.handleClickEasy} variant=\"contained\" color=\"primary\">\r\n                                            Easy\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickMedium} variant=\"contained\" color=\"primary\">\r\n                                            Medium\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickHard} variant=\"contained\" color=\"primary\">\r\n                                            Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickExHard} variant=\"contained\" color=\"primary\">\r\n                                            Extremely Hard\r\n                                        </Button>\r\n                                     </ButtonGroup>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl component=\"fieldset\">\r\n                                      <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                      <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                        <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                        <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                      </RadioGroup>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageCreatedGamesDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.game.name,props.game.puzzledata,[],props.game.uri);\r\n    }\r\n\r\n    return (<div>\r\n            <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography> Highscore Holder: </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.game.username} - {props.game.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageSolutionDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.solution.name,props.solution.puzzledata,[],props.solution.uri);\r\n    }\r\n    return (<div>\r\n              <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography> Highscore Holder: </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.solution.name} - {props.solution.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useStyles from '../Material-UI/themes';\r\nimport ProfilePageCreatedGamesDetails from '../components/ProfilePageComponents/ProfilePageCreatedGamesDetails';\r\nimport ProfilePageSolutionDetails from '../components/ProfilePageComponents/ProfilePageSolutionDetails';\r\n\r\n\r\n\r\nexport default function ProfilePage(props) {\r\n    const classes = useStyles();\r\n    const [expandedGame, setExpandedGame] = React.useState(false);\r\n    const [expandedHighscores, setExpandedHighscores] = React.useState(false);\r\n    const handleChangeGame = (panel) => (event, isExpandedGame) => {\r\n        setExpandedGame(isExpandedGame ? panel : false);\r\n    };\r\n    const handleChangeHighscores = (panel) => (event, isExpandedHighScores) => {\r\n        setExpandedHighscores(isExpandedHighScores ? panel : false);\r\n    };\r\n    console.log(props.puzzlerushview);\r\n    return (\r\n            <div id={'GameMain'} className={classes.root}>\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item xs={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Created</Typography>\r\n                        {\r\n                            props.gamesview.map((game,index) =>\r\n                                    <ExpansionPanel expanded={expandedGame === 'panelgame' + index} onChange={handleChangeGame('panelgame' + index)}>\r\n                                        <ExpansionPanelSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls={\"panel\" + index + \"-content\"}\r\n                                          id={\"panel\" + index + \"-header\"}\r\n                                        >\r\n                                          <Typography className={classes.heading}>{game.name}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Plays: </Typography>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                          <ProfilePageCreatedGamesDetails\r\n                                            game={game}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                          />\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Solved</Typography>\r\n                        {\r\n                            props.solutionsview.map((solution,index) =>\r\n                                <ExpansionPanel expanded={expandedHighscores === 'panelhigh' + index} onChange={handleChangeHighscores('panelhigh' + index)}>\r\n                                    <ExpansionPanelSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls={\"panel\" + index + \"-content\"}\r\n                                      id={\"panel\" + index + \"-header\"}\r\n                                    >\r\n                                      <Typography className={classes.heading}>{solution.name}</Typography>\r\n                                      <Typography className={classes.secondaryHeading}>Score: {solution.numMoves}</Typography>\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <ProfilePageSolutionDetails\r\n                                            solution={solution}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                        />\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Puzzle Rush Data:</Typography>\r\n                        <Paper>\r\n                              <Typography className={classes.heading}>Easy</Typography>\r\n                              <Typography className={classes.secondaryHeading}>Best Score: {props.puzzlerushview.maxeasy}</Typography>\r\n                              <Typography>\r\n                                Average Score: {props.puzzlerushview.averageeasy}\r\n                              </Typography>\r\n                              <Typography>\r\n                                Average Difference of Moves from Optimal Solution: {props.puzzlerushview.averagediffeasy}\r\n                              </Typography>\r\n                          </Paper>\r\n                          <br/>\r\n                          <Paper>\r\n                              <Typography className={classes.heading}>Medium</Typography>\r\n                              <Typography className={classes.secondaryHeading}>Best Score: {props.puzzlerushview.maxmedium}</Typography>\r\n                              <Typography>\r\n                                Average Score: {props.puzzlerushview.averagemedium}\r\n                              </Typography>\r\n                              <Typography>\r\n                                Average Difference of Moves from Optimal Solution: {props.puzzlerushview.averagediffmedium}\r\n                              </Typography>\r\n                            </Paper>\r\n                            <br/>\r\n                            <Paper>\r\n                              <Typography className={classes.heading}>Hard</Typography>\r\n                              <Typography className={classes.secondaryHeading}>Best Score: {props.puzzlerushview.maxhard}</Typography>\r\n                              <Typography>\r\n                                Average Score: {props.puzzlerushview.averagehard}\r\n                              </Typography>\r\n                              <Typography>\r\n                                Average Difference of Moves from Optimal Solution: {props.puzzlerushview.averagediffhard}\r\n                              </Typography>\r\n                            </Paper>\r\n                            <br/>\r\n                            <Paper>\r\n                              <Typography className={classes.heading}>Extremely Hard</Typography>\r\n                              <Typography className={classes.secondaryHeading}>Best Score: {props.puzzlerushview.maxexhard}</Typography>\r\n                              <Typography>\r\n                                Average Score: {props.puzzlerushview.averageexhard}\r\n                              </Typography>\r\n                              <Typography>\r\n                                Average Difference of Moves from Optimal Solution: {props.puzzlerushview.averagediffexhard}\r\n                              </Typography>\r\n                            </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nexport default function RandomGamePage(props) {\r\n    return (\r\n        <Game\r\n              handleLineDirections={props.handleLineDirections}\r\n              LineDirections={props.LineDirections}\r\n              randomGame={'Yes'}\r\n              game={props.game}\r\n              difficulty={props.difficulty}\r\n         />\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PuzzleRushPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  puzzleRush={'Yes'}\r\n                  p_id={this.props.p_id}\r\n                  games={this.props.games}\r\n                  difficulty={this.props.difficulty}\r\n             />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PuzzleRushPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass LessonsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                learnMode={'Yes'}\r\n                games={window.learngameslist}/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default LessonsPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game handleLineDirections={this.props.handleLineDirections} LineDirections={this.props.LineDirections} dailyChallengeMode={'Yes'} playerStateList={this.props.playerStateList} savedMoves={this.props.savedMoves} games={window.dailyChallengeGameslist} dc_id={window.dc_id} highscores={window.dchighscores}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengePage;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Card} from \"@material-ui/core\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nexport default function AboutUs(props) {\r\n    return (<div id=\"GameMain\">\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item spacing={4} xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Typography variant={'body1'}>\r\n                            RobotsEvolved.com is based on the board game Ricochet Robots.\r\n                            We have several game modes and variants that are inspired by the several Chess variants on the internet.\r\n                            If you use Google Login or Facebook Login we will never email or sell your information.\r\n                            Tell your friends about the site and get people on here!\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card style={{height: \"350px\"}}>\r\n                            <CardContent>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Classic\r\n                                </Typography>\r\n                                <Typography variant={\"body1\"} paragraph={true}>\r\n                                    Classic Puzzles are based on the original Game. These Puzzles only have walls that are L shaped and a goal is in the center of one of them.\r\n                                </Typography>\r\n                                <Typography variant={\"h4\"} display={\"inline\"}>\r\n                                    Random\r\n                                </Typography>\r\n                                <Typography variant={\"body1\"} paragraph={true}>\r\n                                    Random Puzzles are created by having a 10% chance for a wall to spawn in Any location possible wall location, Goals and Robot placements are completely random also.\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card style={{height: \"350px\"}}>\r\n                            <CardContent>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Easy\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 5-8 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Medium\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 9-13 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 13-18 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"} >\r\n                                    Extremely Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 18-23 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    God Tier\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in over 23 Moves\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Paper class=\"card3\">\r\n                          <img src={\"/static/images/284457_10151211078621477_839164197_n.jpg\"} alt=\"Jane\"/>\r\n                          <div class=\"container3\">\r\n                            <h2>Kyle Kwasniewski</h2>\r\n                            <p class=\"title3\">Creator &amp; FullStack Dev.</p>\r\n                            <p>I work in Software Development and Dev-Ops in New York and consider myself a Ricochet Robots enthusiast so I decided to make this application as a way to better hone my skill in web frameworks as well as pass the time during the quarantine. If you find any bugs or feature requests for robotsevolved please let me know by emailing me below. Ill get to developing the feature/fixing annoying bugs.</p>\r\n                            <p>Thanks for playing!</p>\r\n                            <p>robotsevolved@gmail.com</p>\r\n                          </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/284f909d-0d5c-4ae1-b100-76c9d46ae7d4.png\"} alt=\"Mike\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Jonah Tollefson</h2>\r\n                                <p className=\"title3\">Front-End Dev.</p>\r\n                                <p>Went to college with these other goobers in the US and now I work professionally as a\r\n                                    software engineer in Germany. For RobotsEvolved, I mainly worked on the frontend\r\n                                    using React. Cats and Ultimate Frisbee are life.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/derekschultz.jpg\"} alt=\"John\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Derek Schultz</h2>\r\n                                <p className=\"title3\">Back-End Dev.</p>\r\n                                <p>Full time Software Engineer. Graduated from University of Wisconsin Platteville\r\n                                    with a BS in Computer Science and Minor in Business Administration. Worked on\r\n                                    most of the database aspect of RobotsEvolved and some back end functionality. I\r\n                                    enjoy video games, beer, and playing darts.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n\r\n\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nexport default function ShowDailyPuzzleHistory(props) {\r\n    const handleDailyPuzzleHistoryClick = event => {\r\n        console.log(props.history)\r\n        props.handleDailyPuzzleHistoryClick(props.history)\r\n    }\r\n    return (\r\n            <Button size=\"small\" color=\"primary\" onClick={handleDailyPuzzleHistoryClick}>\r\n                 details\r\n            </Button>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport ShowDailyPuzzleHistory from '../components/ShowDailyPuzzleHistory';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ProfilePageCreatedGamesDetails from \"../components/ProfilePageComponents/ProfilePageCreatedGamesDetails\";\r\n\r\n\r\n\r\nexport default function DailyChallengeHistory(props) {\r\n    const [expandedPanel, setExpandedPanel] = React.useState(false);\r\n    const handleChangePanel = (panel) => (event, isExpanded) => {\r\n        setExpandedPanel(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles();\r\n    return (<div id={'GameMain'}>\r\n                <Typography className={classes.titlehome} variant=\"h3\">Daily Challenge History</Typography>\r\n                {\r\n                    props.dailychallengehistory.map((history, index) =>\r\n                        <ExpansionPanel expanded={expandedPanel === 'panelgame' + index} onChange={handleChangePanel('panelgame' + index)}>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={\"panel\" + index + \"-content\"}\r\n                                id={\"panel\" + index + \"-header\"}\r\n                            >\r\n                                <Typography className={classes.heading}>{history.created}</Typography>\r\n                                <Typography className={classes.secondaryHeading}>Winner: {history.nameSubmitted}</Typography>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <div>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        <FaCrown/> {history.nameSubmitted} - {history.scoreSubmitted} <FaCrown/>\r\n                                    </Typography>\r\n                                    <Typography className={classes.secondaryHeading}>Lowest possible solution: {history.bestScore}</Typography>\r\n                                    <br/>\r\n                                    <ShowDailyPuzzleHistory history={history} handleDailyPuzzleHistoryClick={props.handleDailyPuzzleHistoryClick}/>\r\n                                </div>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                    )\r\n                }\r\n           </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengeHistoryAnswersPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        console.log(this.props.history);\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                dailyChallengeModeAnswers={'Yes'}\r\n                nameSubmitted={this.props.history.nameSubmitted}\r\n                bestScore={this.props.history.bestScore}\r\n                created={this.props.history.created}\r\n                games={this.props.history.games}\r\n                playerStateList={this.props.history.playerStateList}\r\n                scoreSubmitted={this.props.history.scoreSubmitted}\r\n                solutionDataSubmitted={this.props.history.solutionDataSubmitted}\r\n                submitted={this.props.history.submitted}\r\n                user_id={this.props.user_id}\r\n                />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengeHistoryAnswersPage;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n  },\r\n}));\r\n\r\nexport default function LoadingPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress size={120} color=\"secondary\" />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport clsx from 'clsx';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport Home from './Pages/Home';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\nimport axios from 'axios';\r\nimport Game from './containers/Game';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"./constants/constants\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport PuzzleRushDifficultyModal from \"./containers/Modals/PuzzleRushDifficultyModal\";\r\nimport RandomGameDifficultyModal from \"./containers/Modals/RandomGameDifficultyModal\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport RandomGamePage from \"./Pages/RandomGamePage\";\r\nimport PuzzleRushPage from \"./Pages/PuzzleRushPage\";\r\nimport LessonsPage from \"./Pages/LessonsPage\";\r\nimport DailyChallengePage from \"./Pages/DailyChallenge\";\r\nimport AboutUs from \"./Pages/AboutUs\";\r\nimport DailyChallengeHistory from \"./Pages/DailyChallengeHistory\";\r\nimport DailyChallengeHistoryAnswersPage from \"./Pages/DailyChallengeHistoryAnswersPage\";\r\nimport { FaMedal } from 'react-icons/fa';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport LoadingPage from './components/LoadingPage';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    drawerHeaderRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerHeaderLeft: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    dividerFullWidth: {\r\n        margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    darkmode: {\r\n          body: '#363537',\r\n          text: '#FAFAFA',\r\n          toggleBorder: '#6B8096',\r\n          gradient: 'linear-gradient(#091236, #1E215D)',\r\n    },\r\n});\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (window.uri === '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n                dailychallengehistoryloaded: false,\r\n                profileDataloaded: false,\r\n            };\r\n        }\r\n        else {\r\n            if (window.token.g_id == undefined) {\r\n                this.state = {\r\n                    PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={window.userInfo.LineDirFlag === 'Y'} name={window.token.name} gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri}/>, //when uri is entered to play specific game\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                };\r\n            }\r\n            else {\r\n                this.state = {\r\n                    PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={window.userInfo.LineDirFlag === 'Y'} randomGame={'Yes'} game={window.token} difficulty={window.token.g_difficulty}/>,\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                }\r\n            }\r\n        }\r\n        this.state.open = true;\r\n        this.state.mobileAnchorEl = null;\r\n        this.state.mobileMenuOpen = false;\r\n        this.state.showLoginModal = false;\r\n        this.state.showPuzzleRushModal = false;\r\n         if (window.loggedin === 'Yes') {\r\n            this.state.LineDirections = window.userInfo.LineDirFlag === 'Y';\r\n         }\r\n         else {\r\n            this.state.LineDirections = false;\r\n         }\r\n    }\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState( {\r\n            open: false\r\n        })\r\n    };\r\n\r\n    handleLineDirections = (boolean) => {\r\n        if (window.loggedin === 'Yes') {\r\n            axios.post('/settingsChange', {LineDirections: boolean ? 'Y' : 'N'})\r\n                .then( res => {\r\n                    console.log('changed');\r\n                });\r\n        }\r\n        this.setState({\r\n            LineDirections: boolean\r\n        });\r\n    }\r\n\r\n    handleClickDailyChallenge = (event) => {\r\n        event.preventDefault();\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        const dc_movesList = window.dc_movesList == null ? null : JSON.parse(JSON.stringify(window.dc_movesList))\r\n        const dc_playerList = window.dc_playerList == null ? null : JSON.parse(JSON.stringify(window.dc_playerList))\r\n        this.setState({\r\n            PageSelected: <DailyChallengePage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} savedMoves={dc_movesList} playerStateList={dc_playerList}/>,\r\n        });\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState( {\r\n            open: true\r\n        });\r\n    };\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type === 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    };\r\n\r\n    handleClickRandomGameModal = (game,difficulty) => {\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showRandomGameModal: false,\r\n            PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} randomGame={'Yes'} game={game} difficulty={difficulty}/>,\r\n        });\r\n    }\r\n\r\n    handleClickRandomGame = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: true,\r\n        });\r\n    }\r\n\r\n\r\n    handleClickPuzzleRush = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: true,\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallengeHistory = (event) => {\r\n        event.preventDefault();\r\n        axios.get('/getDailyChallengeHistory')\r\n            .then( res => {\r\n                    var isOpen = true;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    var historydata = JSON.parse(res.data)\r\n                    this.setState({\r\n                        PageSelected: <DailyChallengeHistory handleDailyPuzzleHistoryClick={this.handleDailyPuzzleHistoryClick} dailychallengehistory={historydata}/>,\r\n                        challengeHistoryData: historydata,\r\n                        dailychallengehistoryloaded: true,\r\n                    });\r\n            });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    }\r\n\r\n    handleDailyPuzzleHistoryClick = history => {\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <DailyChallengeHistoryAnswersPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} history={history}/>,\r\n        });\r\n    }\r\n\r\n    handleClickPuzzleRushModal = (difficulty,games,p_id) => {\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showPuzzleRushModal: false,\r\n            PageSelected: <PuzzleRushPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={difficulty}/>,\r\n        });\r\n    };\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: false\r\n        });\r\n    }\r\n\r\n    closeRandomGameLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: false\r\n        });\r\n    }\r\n\r\n    handleGameClick = (name, gamedata,highscores,uri) => {\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} name={name} highscores={highscores} gamedata={gamedata} uri={uri}/>,\r\n        });\r\n    };\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <CreateGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} state={\"new\"}/>, //if selected page is already CreateGame it wont refresh known problem\r\n        });\r\n    };\r\n\r\n\r\n    handleClickProfile = event => {\r\n        if (window.loggedin === 'Yes') {\r\n                    axios.get('/getProfileData')\r\n                        .then( res => {\r\n                            var isOpen = true;\r\n                            if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                                isOpen = false\r\n                            }\r\n                            var profileData = res.data;\r\n                            var gamesview = JSON.parse(profileData.gamesview)\r\n                            var solutionsview = JSON.parse(profileData.solutionsview)\r\n                            var puzzlerushview = JSON.parse(profileData.puzzlerushview)\r\n                            this.setState({\r\n                                PageSelected: <ProfilePage handleClickPlayGame={this.handleGameClick} gamesview={gamesview} solutionsview={solutionsview} puzzlerushview={puzzlerushview}/>,\r\n                                gamesview: gamesview,\r\n                                solutionsview: solutionsview,\r\n                                puzzlerushview: puzzlerushview,\r\n                                profileDataloaded: true,\r\n                            });\r\n                        });\r\n                    this.setState({\r\n                        PageSelected: <LoadingPage/>,\r\n                    });\r\n                }\r\n        else {\r\n            this.SignInButtonPressed('Sign in');\r\n        }\r\n    };\r\n\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        axios.get('/getFindGames')\r\n            .then( res => {\r\n                const gameslist = JSON.parse(res.data.gameslist)\r\n                const highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                var isOpen = true;\r\n                if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                    isOpen = false\r\n                }\r\n                this.setState({\r\n                    PageSelected: <FindGame gameslist={gameslist} highscoreslist={highscoreslist} handleGameClick={this.handleGameClick}/>,\r\n                });\r\n        });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleHomePageClick = () => {\r\n        this.setState({\r\n            PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n        });\r\n    }\r\n\r\n\r\n    handleClickAboutUs = event => {\r\n        var isOpen = true;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <AboutUs/>,\r\n        });\r\n    }\r\n\r\n    handleClickLearnGame = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            PageSelected: <LessonsPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections}/>,\r\n        });\r\n\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileAnchorEl: null,\r\n            mobileMenuOpen: false\r\n        });\r\n    };\r\n\r\n    showPage = () => {\r\n        return(\r\n            this.state.PageSelected\r\n        )\r\n    }\r\n\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({\r\n            mobileAnchorEl: event.currentTarget,\r\n            mobileMenuOpen: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const theme = createMuiTheme({\r\n            palette: {\r\n                primary: teal,\r\n                secondary: {\r\n                    main: '#e65100',\r\n                },\r\n            }\r\n        });\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <AppBar\r\n                        position=\"fixed\"\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: this.state.open,\r\n                        })}\r\n                     >\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={this.handleDrawerOpen}\r\n                                edge=\"start\"\r\n                                className={clsx(classes.menuButton, this.state.open && classes.hide)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <img onClick={this.handleHomePageClick} width={50} height={50} src=\"/static/images/logo150.png\"/>\r\n                            <Typography variant=\"h6\" className={classes.title} noWrap>\r\n                                <a href=\"/\" style={{color: 'white'}}>RobotsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </Typography>\r\n                            <div className={classes.grow} />\r\n                            <div className={classes.sectionDesktop}>\r\n                                <LoggedInUser/>\r\n                            </div>\r\n                            <div className={classes.sectionMobile}>\r\n                                <IconButton\r\n                                    aria-label=\"show more\"\r\n                                    aria-controls={\"primary-search-account-menu-mobile\"}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.handleMobileMenuOpen}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <MoreIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Menu\r\n                        anchorEl={this.state.mobileAnchorEl}\r\n                        anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        id={\"primary-search-account-menu-mobile\"}\r\n                        keepMounted\r\n                        transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        open={this.state.mobileMenuOpen}\r\n                        onClose={this.handleMobileMenuClose}\r\n                    >\r\n                        <MenuItem>\r\n                            <LoggedInUser/>\r\n                        </MenuItem>\r\n                        <MenuItem>\r\n                            <p>Notifications</p>\r\n                            <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                                <Badge badgeContent={11} color=\"secondary\">\r\n                                    <NotificationsIcon/>\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                    <Drawer\r\n                        id=\"MainDrawer\"\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.state.open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div className={classes.drawerHeader}>\r\n                            <div className={classes.drawerHeaderLeft}>\r\n                                <SignInButton onClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.drawerHeaderRight}>\r\n                                <IconButton onClick={this.handleDrawerClose}>\r\n                                    {useTheme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Play\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Create a Game'} onClick={this.handleClickCreateGame}>\r\n                                <ListItemIcon><PlayArrowIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Create a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Find a Game'} onClick={this.handleClickFindGame}>\r\n                                <ListItemIcon><SearchIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Find a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge'} onClick={this.handleClickDailyChallenge}>\r\n                                <ListItemIcon><TodayIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Random Game'} onClick={this.handleClickRandomGame}>\r\n                                <ListItemIcon><CasinoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Random Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Puzzle Rush'} onClick={this.handleClickPuzzleRush}>\r\n                                <ListItemIcon><TimerIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Puzzle Rush'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Learn\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Lessons'} onClick={this.handleClickLearnGame}>\r\n                                <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Lessons'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Community\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Profile'} onClick={this.handleClickProfile}>\r\n                                <ListItemIcon><AccountBoxIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Profile'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge History'} onClick={this.handleClickDailyChallengeHistory}>\r\n                                <ListItemIcon><FaMedal /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge History'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Tools\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'About'} onClick={this.handleClickAboutUs}>\r\n                                <ListItemIcon><InfoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'About'} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n                    <main className={clsx(classes.content, {\r\n                        [classes.contentShift]: this.state.open,\r\n                    })}>\r\n                        <div className={classes.drawerHeader} />\r\n                        {this.showPage()}\r\n                    </main>\r\n                    <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n                    <PuzzleRushDifficultyModal\r\n                        closeModal={this.closePuzzleRushLoginModal}\r\n                        show={this.state.showPuzzleRushModal}\r\n                        handleClickPuzzleRush={this.handleClickPuzzleRushModal}\r\n                    />\r\n                    <RandomGameDifficultyModal\r\n                        closeModal={this.closeRandomGameLoginModal}\r\n                        show={this.state.showRandomGameModal}\r\n                        handleClickRandomGame={this.handleClickRandomGameModal}\r\n                    />\r\n                </div>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}