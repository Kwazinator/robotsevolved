{"version":3,"sources":["components/LearnGameItems.js","constants/constants.js","components/MovesView.jsx","components/Square.jsx","components/Board.jsx","components/Robot.jsx","components/Wall.jsx","components/Goal.jsx","components/ColoredLine.jsx","constants/extend.js","components/YouWinModal.jsx","components/YouWinDailySingleModal.js","components/YouWinDailyFinalModal.js","components/AddPuzzleModal.jsx","components/ToggleSettings.js","components/Timer.js","containers/DisplayView.js","components/HighScores.jsx","components/DailyChallengeScores.jsx","containers/Modals/PuzzleRushFinishedModal.js","containers/Modals/RandomGameStatsModal.jsx","components/CloseIconWithOnClick.jsx","components/DescriptionList.jsx","components/YouWinLessonModal.js","components/ShowDailyChallengeScoresCard.jsx","components/DailyChallengeHistoryData.js","components/boardgenerator.js","containers/Modals/BoardResetModal.js","containers/Game.js","Pages/CreateGame.js","containers/FindGameElements.js","Pages/FindGame.js","Pages/PlayGame.js","Material-UI/themes.jsx","Pages/Home.js","containers/Modals/LoginModal.js","components/SignInButton.js","components/LoggedInUser.js","containers/Modals/PuzzleRushDifficultyModal.js","containers/Modals/RandomGameDifficultyModal.js","components/GameListItemView.jsx","components/SearchBarFindGame.jsx","components/ProfilePageComponents/ProfilePageCreatedGamesDetails.js","components/ProfilePageComponents/ProfilePageSolutionDetails.js","Pages/ProfilePage.js","Pages/RandomGamePage.js","Pages/PuzzleRushPage.js","Pages/LessonsPage.js","Pages/DailyChallenge.js","Pages/AboutUs.js","components/ShowDailyPuzzleHistory.js","Pages/DailyChallengeHistory.js","Pages/DailyChallengeHistoryAnswersPage.js","components/LoadingPage.jsx","App.js","serviceWorker.js","index.js"],"names":["LearnGameItems","props","handleClick","handleClickGame","index","selected","Button","variant","color","aria-label","onClick","name","UP","GOAL_IMAGE","DIRECTION_MAP_IMAGES","yellow","DOWN","LEFT","RIGHT","red","green","blue","MovesView","style","width","float","display","this","moveHistory","length","map","move","src","playerState","robot","colorSignifier","dir","React","Component","styleoutside","dimension","position","dim","height","backgroundColor","top","left","styleinside","styleinside2","Square","border","margin","overflow","children","id","transition","styleoutsidedraggable","selectedColor","undefined","borderStyle","borderColor","borderRadius","Robot","onStopDragHandler","e","handleCreateMode","isCreateMode","buildMode","x","y","grid","draggableGrid","onStop","bounds","orientation","opacity","wallThickness","wallOffset","Wall","userSelect","styledragable","Goal","show","endPosition","obj","key","hasOwnProperty","YouWinModal","Dialog","onClose","handleClose","container","document","getElementById","BackdropProps","aria-labelledby","open","maxWidth","DialogTitle","DialogContent","dividers","numMoves","TextField","label","defaultValue","username","DialogActions","submitAnswer","resetPuzzle","YouWinDailySingleModal","Typography","totalMoves","undoMove","moveNextPuzzle","YouWinDailyFinalModal","handleClickSubmitGame","robotPosition","AddPuzzleModal","submitPuzzle","ToggleSettings","event","FormControlLabel","value","control","Switch","onChange","checked","showColoredLineDirections","Timer","state","minutes","seconds","timer","myInterval","setInterval","setState","puzzleRushTimeUp","clearInterval","valuetext","DisplayView","createMode","fullWidth","handleCreateBoardClick","toggleBuildMode","createBoardPressed","copyToClipboard","dummy","createElement","body","appendChild","window","location","host","uri","select","execCommand","removeChild","copiedClipboard","thisThing","copyButtonText","setTimeout","handleDimensionChange","getElementsByClassName","blur","parseInt","toString","DimensionChanged","showPuzzleLink","isPuzzleRush","isLesson","isDailyChallengeAnswers","isDailyChallenge","paddingBottom","marginRight","marginTop","marginBottom","Divider","ButtonGroup","toggleLineIndicators","gutterBottom","Slider","onChangeCommitted","getAriaValueText","step","marks","min","max","squareSizeValue","valueLabelDisplay","highscores","Grid","item","xs","marginleft","highscore","Paper","elevation","spacing","comment","userid","created","highscorestyle","wins","i","crowns","push","CrownCounter","user_id","score","submitted","direction","PuzzleRushWinModal","difficulty","md","List","dense","ListItem","ListItemText","primary","secondary","numPuzzlesCompleted","averageTime","averageMoves","differenceOptimal","movesPerSecond","playPuzzleRushAgain","closeModal","RandomGameStatsModal","showStatsModal","handleShowRandomAnswers","answers","lowestMoveSequence","lowestMoves","CloseIconWithOnClick","onMouseDown","Descriptionlist","tipsText","text","ListItemSecondaryAction","IconButton","edge","handleCloseToolTips","YouWinLessonModal","useStyles","makeStyles","root","minWidth","bullet","transform","title","fontSize","pos","ShowDailyChallengeScoresCard","classes","Card","className","CardContent","component","bestScore","MovesforPuzzle","MoveSequence","DailyChallengeHistoryData","difficultyforPuzzle","lowestMovesforPuzzle","nameSubmitted","scoreSubmitted","playerMovedSequence","checkDeadendHorizontal","wallHorizontalList","WallVertToPlace","LastWall","indexX","indexY","isWallAbove","wall","isWallBeside","checkDeadendTop","wallVerticleList","WallHorizToPlace","wallHorizList","isWallBesideLeft","isWallBesideRight","randomBoardPosition","dontPlacePositions","Y","X","tryAgain","Math","floor","random","randomPercent","type","boardState","wallVerticle","wallHorizontal","goal","randompos1","randompos2","randompos3","randompos4","randomPositions","extend","j","gameWon","playerStart","slice","BoardResetModal","createBoardHandler","preventDefault","percent","createBoard","textAlign","paddingRight","Input","inputProps","placeholder","addEventListener","keyCode","target","indexOf","formatGeneratedMoveSequence","moves","images","charAt","setDefaultSquareSize","boardWidth","boardHeight","drawerWidth","getComputedStyle","windowWidth","innerWidth","settingstop","innerHeight","settings","squarevalue","ColoredLineDirections","Game","updateHighscores","axios","get","then","res","JSON","parse","data","squareSize","copiedToClipboard","updateDailyHighscores","dc_id","handleClickDailyChallenge","dchighscores","componentDidMount","onkeydown","handleKeyDown","loadedGame","IntervalId","dailyChallengeMode","componentWillUnmount","newDirection","tabSelector","handleUndoMove","handlePlayerMovement","robotSelect","robotSelected","namesubmit","userInfo","console","log","post","puzzledata","authorname","history","handleLineDirections","showBoardResetPanelModal","closeRandomStatsModal","closeCreateBoardModal","closePuzzleRushFinishedModal","showPuzzleRushFinishedModal","board","BoardGenerator","handleCollision","dirObj","newPosition","robotX","robotY","minimumWall","checkRobot","totalMovesDiff","solutiondifference","numPuzzleon","totalMovesList","avgMoves","p_id","differenceFrom","percentile","submitDailyAnswer","LastRobotPosition","moveHistoryList","playerStateList","solutiondata","dc_movesList","dc_playerList","checkwin","puzzleRush","randomGame","dailyChallengeModeAnswers","Won","gamesWonDaily","games","handleDailyClickGame","learnMode","g_id","solutionmoves","g_moves","g_puzzledata","newarray","concat","oldPositon","prevPosition","splice","handleLearnClickGame","description","handleDailyClickAnswersGame","g_solutiondata","g_difficulty","solutionDataSubmitted","loadSidebar","game","paddingTop","DailyChallengeScores","HighScores","handlePlayerMovementFromMouse","moveObj","pop","createModeWallClick","indexToChange","newWallHorizontal","wallH","newWallVerticle","wallV","onStopDragHandlerGoal","round","lastY","lastX","goals","gamedata","savedMoves","g_uri","pushState","settingsWidth","settingsHeight","percentWall","settingsPercent","LineDirections","paddingLeft","alignItems","sm","numPuzzleRush","zeroMinWidth","Board","square","player","ColoredLineDirection","ColoredLine","puzzleRushPercentileCompleted","withRouter","CreateGame","withStyles","theme","background","padding","upperPadding","upperPaddingButton","bottom","lowerPadding","rightSideText","leftSideText","numberOfHighScores","trimName","separated","split","toreturn","word","substring","trimNameShort","justifyContent","Tooltip","plays","handleGameClick","disableGutters","FindGame","handleFilterMenuOpen","anchorEl","currentTarget","handleCloseFilterMenuMostPlayed","searchTerm","searchRef","search","filter","offset","highscoreslist","gameslist","handleCloseFilterMenuHighest","handleSearchSubmit","align","InputBase","input","inputRef","ref","onKeyPress","iconButton","divider","startIcon","Menu","keepMounted","Boolean","handleCloseFilterMenu","MenuItem","FindGameElements","marginLeft","flex","PlayGame","flexGrow","homepage","griditems","paper","Width","image","img","maxHeight","baseExpansion","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","darkmode","iconcards","marginBotton","iconcardsDaily","titlehome","fontFamily","titledailyroto","iconfonts","createboardcard","content","demo","centeredProfile","expandedPanelDCH","ComplexGrid","justify","paragraph","CardActionArea","handleClickCreateGame","CardMedia","alt","handleClickFindGame","handleClickRandomGame","handleClickLearnGame","handleClickPuzzleRush","dividerFullWidth","LoginModal","loginGoogle","href","closeLoginModal","class","SignInButton","loggedin","textToShow","LoggedInUser","SignInButtonPressed","profilePicture","PuzzleRushDifficultyModal","handleClickPuzzleRushModal","action","isLoading","handleClickEasyPuzzleRush","handleClickMediumPuzzleRush","handleClickHardPuzzleRush","handleClickExHardPuzzleRush","handleChange","wrap","CircularProgress","FormControl","FormLabel","RadioGroup","Radio","handleClickRandomGameModal","handleClickEasy","handleClickMedium","handleClickHard","handleClickExHard","handleClickGodMode","ProfilePageCreatedGamesDetails","handleClickPlayGame","ProfilePageSolutionDetails","solution","WinnerCreated","WinnerUsername","ProfilePage","useState","error","setError","expandedGame","setExpandedGame","expandedHighscores","setExpandedHighscores","puzzlerushview","newuser","gamesview","ExpansionPanel","expanded","panel","isExpandedGame","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","solutionsview","isExpandedHighScores","WinnerUserId","userID","maxeasy","averageeasy","averagediffeasy","maxmedium","averagemedium","averagediffmedium","maxhard","averagehard","averagediffhard","maxexhard","averageexhard","averagediffexhard","RandomGamePage","PuzzleRushPage","LessonsPage","learngameslist","DailyChallengePage","dailyChallengeGameslist","AboutUs","ShowDailyPuzzleHistory","size","handleDailyPuzzleHistoryClick","DailyChallengeHistory","expandedPanel","setExpandedPanel","dailychallengehistory","isExpanded","DailyChallengeHistoryAnswersPage","LoadingPage","App","handleDrawerClose","boolean","isOpen","PageSelected","DailyChallenge","handleDrawerOpen","showLoginModal","showRandomGameModal","showPuzzleRushModal","handleClickDailyChallengeHistory","historydata","challengeHistoryData","dailychallengehistoryloaded","closePuzzleRushLoginModal","closeRandomGameLoginModal","handleClickProfile","profileData","profileDataloaded","handleHomePageClick","handleClickAboutUs","handleMobileMenuClose","mobileAnchorEl","mobileMenuOpen","showPage","handleMobileMenuOpen","token","linedir","LineDirFlag","createMuiTheme","teal","main","AppBar","clsx","appBar","appBarShift","Toolbar","toolbar1","menuButton","hide","noWrap","grow","sectionDesktop","sectionMobile","aria-haspopup","anchorOrigin","vertical","horizontal","transformOrigin","Drawer","drawer","anchor","drawerPaper","drawerHeader","drawerHeaderLeft","drawerHeaderRight","useTheme","button","ListItemIcon","contentShift","RandomGameDifficultyModal","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","mixins","toolbar","breakpoints","up","toggleBorder","gradient","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"js/main.699aa201.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function LearnGameItems(props) {\r\n    const handleClick = () => {\r\n        props.handleClickGame(props.index)\r\n    }\r\n    if (props.selected === props.index) {\r\n        return (\r\n            <Button\r\n                variant=\"contained\" color=\"primary\"\r\n                aria-label=\"vertical outlined primary button group\"\r\n                onClick={handleClick}\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={handleClick}\r\n                aria-label=\"vertical outlined primary button group\"\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n}","export const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const MAX_WIDTH = 16*40;\r\nexport const MAX_HEIGHT = 16*40;\r\n\r\nexport const MOBILE_INNER_SCREEN_WIDTH = '960';\r\n\r\nexport const SQUARE_CORE_COLOR = '#e1e1e1';\r\nexport const SQUARE_INNER_COLOR = '#c4a1a1';\r\nexport const SQUARE_OUTSIDE_COLOR = '#807878';\r\n\r\nexport const ROBOT_GREEN = '#228b22';\r\nexport const ROBOT_BLUE = '#4169e1';\r\nexport const ROBOT_YELLOW = '#ff8c00';\r\nexport const ROBOT_RED = '#b22222';\r\nexport const ROBOT_PURPLE = '#9c1aff';\r\nexport const ROBOT_ORANGE = '#e66000';\r\nexport const ROBOT_PINK = '#ff85c2';\r\n\r\nexport const SELECTED_ROBOT = '#ffd700';\r\nexport const LINE_INDICATOR_COLOR = 'red';\r\n\r\nexport const GOAL_IMAGE = '/static/images/swirl.png';\r\nexport const GREEN_UP_PICTURE = '/static/images/Green_Up.png';\r\n\r\nexport const DIRECTION_MAP_IMAGES = {\r\n    yellow: {\r\n        UP: '/static/images/yellow_up.png',\r\n        DOWN: '/static/images/yellow_down.png',\r\n        LEFT: '/static/images/yellow_left.png',\r\n        RIGHT: '/static/images/yellow_right.png',\r\n    },\r\n    red:  {\r\n        UP: '/static/images/red_up.png',\r\n        DOWN: '/static/images/red_down.png',\r\n        LEFT: '/static/images/red_left.png',\r\n        RIGHT: '/static/images/red_right.png',\r\n    },\r\n    green:  {\r\n        UP: '/static/images/green_up.png',\r\n        DOWN: '/static/images/green_down.png',\r\n        LEFT: '/static/images/green_left.png',\r\n        RIGHT: '/static/images/green_right.png',\r\n    },\r\n    blue:  {\r\n        UP: '/static/images/blue_up.png',\r\n        DOWN: '/static/images/blue_down.png',\r\n        LEFT: '/static/images/blue_left.png',\r\n        RIGHT: '/static/images/blue_right.png',\r\n    },\r\n}","import React from 'react';\r\nimport {DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\nconst style = () => {\r\n    return {\r\n            width: '15%',\r\n            float: 'left',\r\n            display: 'contents'\r\n        };\r\n    };\r\n\r\n\r\nclass MovesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={style()}><h3>Moves: {this.props.moveHistory.length}</h3>\r\n                {\r\n                    this.props.moveHistory.map(move =>\r\n                        <img src={DIRECTION_MAP_IMAGES[this.props.playerState[move.robot].colorSignifier][move.dir]}/>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovesView;","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR} from '../constants/constants';\r\n\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_OUTSIDE_COLOR,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside = ({dimension,position}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_INNER_COLOR,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,position}) => {\r\n    const dim = (dimension-4)/2 + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: SQUARE_CORE_COLOR,\r\n        position: 'absolute',\r\n        top: (dimension-4)/4 + 'px',\r\n        left: (dimension-4)/4 + 'px',\r\n    };\r\n};\r\n\r\nclass Square extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Square;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = (width,height) => {\r\n    const widthset = width + 'px';\r\n    const heightset = height + 'px';\r\n    return {\r\n        width: widthset,\r\n        height: heightset,\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n        margin: '0 auto',\r\n        overflow: 'hidden'\r\n    };\r\n};\r\n\r\nexport default ({ width,height, children }) => (\r\n    <div id=\"MainGameBoard\" style={style(width,height)}>\r\n        {children}\r\n    </div>\r\n)","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT,SELECTED_ROBOT} from '../constants/constants';\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nconst styleoutside = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleoutsidedraggable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nconst styleinside = ({dimension}) => {\r\n    const dim = (dimension - 4) + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: 2 + 'px',\r\n        left: 2 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\nconst styleinside2 = ({dimension,color,index,selected}) => {\r\n    const dim = ((dimension-4)*3)/4 + 'px';\r\n    var selectedColor = undefined;\r\n    var borderStyle = \"none\";\r\n    if (index === selected) {\r\n        selectedColor = SELECTED_ROBOT;\r\n        borderStyle = \"solid\";\r\n    }\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        backgroundColor: color,\r\n        borderStyle: borderStyle,\r\n        borderColor: selectedColor,\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: (dimension-4)/8 + 'px',\r\n        left: (dimension-4)/8 + 'px',\r\n        transition: 'all 0.1s ease'\r\n    };\r\n};\r\n\r\n\r\nclass Robot extends React.Component {\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    };\r\n\r\n    onStopDragHandler = (e, position) => {\r\n        this.props.onStopDragHandler(position,this.props.index);\r\n    }\r\n\r\n\r\n    handleCreateMode = () => {\r\n        if (this.props.isCreateMode === 'Yes' && this.props.buildMode) {\r\n            return (\r\n            <Draggable position={{x: this.props.position.left * this.props.dimension, y:this.props.position.top*this.props.dimension}} grid={this.props.draggableGrid} onStop={this.onStopDragHandler} bounds=\"parent\">\r\n                <div onClick={this.handleClick} style={styleoutsidedraggable(this.props)}>\r\n                    <div style={styleinside(this.props)}>\r\n                        <div style={styleinside2(this.props)}/>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n            <div onClick={this.handleClick} style={styleoutside(this.props)}>\r\n                <div style={styleinside(this.props)}>\r\n                    <div style={styleinside2(this.props)}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            this.handleCreateMode()\r\n        );\r\n    }\r\n}\r\n\r\nexport default Robot;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: grey; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: blue; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute; border-radius: 50%\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\n\r\nconst style = ({orientation,dimension,position,opacity,onClick}) => {\r\n    const wallThickness = (dimension/4) + 'px';\r\n    const wallOffset = (dimension/4)/2\r\n    if (orientation=='horizontal') {\r\n        var width = dimension + 'px';\r\n        var height = wallThickness;\r\n        var top = ((position.top * dimension) - wallOffset) + 'px';\r\n        var left = position.left * dimension + 'px';\r\n    }\r\n    else {\r\n        var width = wallThickness;\r\n        var height = dimension + 'px'\r\n        var top = position.top * dimension + 'px';\r\n        var left = ((position.left * dimension) - wallOffset) + 'px';\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: 'black',\r\n        position: 'absolute',\r\n        top: top,\r\n        left: left,\r\n        opacity: opacity,\r\n    };\r\n};\r\n\r\nclass Wall extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n        if (this.props.opacity == 1) {\r\n            this.props.onClick(0,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n        else {\r\n            this.props.onClick(1,this.props.orientation,this.props.position.top,this.props.position.left);\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={style(this.props)} onClick={this.handleClick}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wall;\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {SQUARE_OUTSIDE_COLOR,SQUARE_INNER_COLOR,SQUARE_CORE_COLOR,GOAL_IMAGE} from '../constants/constants';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nconst style = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        top: position.top * dimension + 'px',\r\n        left: position.left * dimension + 'px',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\nconst styledragable = ({dimension,position}) => {\r\n    const dim = dimension + 'px';\r\n    return {\r\n        width: dim,\r\n        height: dim,\r\n        position: 'absolute',\r\n        userSelect: 'none'\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default function Goal(props) {\r\n    if (props.isCreateMode === 'Yes'  && props.buildMode) {\r\n        const onStopDragHandler = (e, position) => {\r\n            props.onStopDragHandler(position);\r\n        }\r\n        return(\r\n        <Draggable position={{x:props.position.left * props.dimension,y: props.position.top * props.dimension}} bounds=\"parent\" grid={props.draggableGrid} onStop={onStopDragHandler}>\r\n            <img src={GOAL_IMAGE} style={styledragable(props)}/>\r\n        </Draggable>\r\n        )\r\n    }\r\n    else {\r\n        return(<img src={GOAL_IMAGE} style={style(props)}/>)\r\n    }\r\n}\r\n\r\n\r\n//<div style=\"background-Color: black;width: 40px;height: 40px; position: absolute;\">\r\n//  <div style=\"background-Color: white; width: 36px; height: 36px; top: 2px; left: 2px;position: absolute;\">\r\n//      <div style=\"background-Color: grey; width: 18px; height: 18px; top: 9px; left: 9px;position: absolute;\">\r\n//      </div>\r\n//  </div>\r\n//</div>","import React from 'react';\r\nimport {UP,DOWN,LEFT,RIGHT} from '../constants/constants';\r\n\r\nconst style = ({buildMode,show,dimension, dir, position, endPosition, color}) => {\r\n    var width = 0;\r\n    var height = 0;\r\n    var top = 0;\r\n    var left = 0;\r\n    if (position !== undefined && endPosition !== undefined) {\r\n        if (dir === LEFT) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = (position.left*dimension) - (endPosition.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === RIGHT) {\r\n            top = position.top*dimension;\r\n            left = position.left*dimension + dimension;\r\n            width = (endPosition.left*dimension) - (position.left*dimension) + 'px';\r\n            height = dimension + 'px';\r\n        } else if (dir === UP) {\r\n            top = endPosition.top*dimension;\r\n            left = endPosition.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (position.top*dimension) - (endPosition.top*dimension) + 'px';\r\n        } else {\r\n            top = position.top*dimension + dimension;\r\n            left = position.left*dimension;\r\n            width = dimension + 'px';\r\n            height = (endPosition.top*dimension) - (position.top*dimension) + 'px'\r\n        }\r\n    }\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        backgroundColor: color,\r\n        position: 'absolute',\r\n        top: top + 'px',\r\n        left: left + 'px',\r\n        opacity: show ? '0.5' : '0.0',\r\n        transition: 'all 0.1s ease',\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default (props) => {\r\n    const handleClick = () => {\r\n        props.handleClick(props.dir)\r\n    }\r\n    if (props.buildMode === 'undefined' || !props.buildMode)\r\n    {\r\n        return (\r\n            <div onClick={handleClick} style={style(props)}/>\r\n        );\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}","export default (obj, src) => {\r\n    for (var key in src) {\r\n        if (src.hasOwnProperty(key)) obj[key] = src[key];\r\n    }\r\n    return obj;\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitAnswer}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport LearnGameItems from '../components/LearnGameItems';\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailySingleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Completed!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <Typography variant=\"body1\">\r\n                        You used {this.props.numMoves} Moves, for this puzzle.\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Total Moves: {this.props.totalMoves}\r\n                    </Typography>\r\n                    <br/>\r\n                    <Typography variant=\"body1\">\r\n                        Finish all puzzles to get submit your score!\r\n                    </Typography>\r\n                    <br/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.moveNextPuzzle}>Next Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailySingleModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinDailyFinalModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClickSubmitGame = () => {\r\n        this.props.submitAnswer(this.props.robotPosition)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Completed the Challenge!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <TextField id={\"namesubmitHS\"} label={\"Username\"} defaultValue={this.props.username}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.undoMove}>Undo Move</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickSubmitGame}>Submit Highscore</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinDailyFinalModal;","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass AddPuzzleModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Submit Puzzle</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <TextField id={\"namesubmit\"} label={\"Name of Puzzle\"} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.submitPuzzle}>Submit Puzzle</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPuzzleModal;\r\n","import React from 'react';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        float: 'left',\r\n    };\r\n}\r\n\r\nclass ToggleSettings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.props.onClick();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={buttonpanel()}>\r\n                <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Switch color=\"primary\" onChange={this.handleClick}/>}\r\n                    label=\"Path Indicators\"\r\n                    checked={this.props.showColoredLineDirections}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToggleSettings;","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n\r\n    state = {\r\n            minutes: 5,\r\n            seconds: 0,\r\n        }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    this.props.puzzleRushTimeUp();\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    timer = () => {\r\n        if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n            return (<h2>Time is up!</h2>)\r\n        }\r\n        else {\r\n            return(\r\n                <h2>Time Remaining: {this.state.minutes}:{this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds}</h2>)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            this.timer()\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport ToggleSettings from \"../components/ToggleSettings\";\r\nimport Timer from \"../components/Timer\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst controlpanel = () => {\r\n    return {\r\n        marginRight: '10px',\r\n        marginTop: '25px',\r\n        marginBottom: '10px',\r\n        opacity: 1\r\n    };\r\n};\r\n\r\nconst buttonPanel = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        width: '200px',\r\n    }\r\n};\r\n\r\nconst valuetext = (value) => {\r\n    return value + 'px';\r\n};\r\n\r\n\r\nclass DisplayView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                        copyButtonText: \"Copy Puzzle Link\"\r\n                     };\r\n        this.state.uri = this.props.isDailyChallenge === 'Yes' ? 'dailychallenge' : this.props.uri;\r\n    }\r\n\r\n    isCreateMode = (createMode) => {\r\n        if (createMode === 'Yes') {\r\n            return (\r\n                <div>\r\n                    <Button color=\"secondary\" variant={\"outlined\"} fullWidth={true} onClick={this.handleCreateBoardClick}>Modify Board</Button>\r\n                    <FormControlLabel\r\n                        value=\"end\"\r\n                        control={<Switch color=\"primary\" checked={this.props.buildMode} onChange={this.props.toggleBuildMode}/>}\r\n                        label=\"Build Mode\"\r\n                            />\r\n                </div>\r\n                );\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    };\r\n\r\n    handleCreateBoardClick = event => {\r\n        return this.props.createBoardPressed('Create Board');\r\n    };\r\n\r\n    copyToClipboard = () => {\r\n        var dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = 'http://' + window.location.host + '/play/' + this.state.uri;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n        this.props.copiedClipboard();\r\n        var thisThing = this;\r\n        thisThing.setState({copyButtonText: \"Link Copied\"});\r\n        setTimeout(function () {\r\n            thisThing.setState({copyButtonText: \"Copy Puzzle Link\"})\r\n        }, 1500)\r\n    };\r\n\r\n    handleDimensionChange = (event,value) => {\r\n        document.getElementsByClassName(\"MuiSlider-thumb\")[0].blur();\r\n        var dimension = parseInt(value);\r\n        if (dimension.toString() === \"NaN\") {\r\n            dimension = 10;\r\n        } else if (dimension > 16) {\r\n            dimension = 16;\r\n        } else if (dimension < 2) {\r\n            dimension = 2;\r\n        }\r\n        this.props.DimensionChanged(dimension);\r\n    };\r\n\r\n    showPuzzleLink = () => {\r\n        if (this.props.createMode === 'Yes' || this.props.isPuzzleRush === 'Yes' || this.props.isLesson === 'Yes' || this.props.isDailyChallengeAnswers === 'Yes' || this.props.isDailyChallenge === 'Yes') {\r\n            return null;\r\n        }\r\n        else {\r\n                return(\r\n                     <div style={{paddingBottom: '10px'}}>\r\n                         <Button fullWidth={true} variant=\"contained\" color=\"secondary\" style={{marginRight: \"10px\"}}\r\n                                 onClick={this.copyToClipboard}>{this.state.copyButtonText}</Button>\r\n                     </div>\r\n                    )\r\n        }\r\n    }\r\n\r\n     render() {\r\n         return (\r\n             <div style={controlpanel()}>\r\n                {this.showPuzzleLink()}\r\n                 <Divider />\r\n                 <Typography\r\n                     color=\"textSecondary\"\r\n                     display=\"block\"\r\n                     variant=\"caption\"\r\n                     style={{paddingBottom: '10px'}}\r\n                 >\r\n                     Board Actions\r\n                 </Typography>\r\n                 <ButtonGroup fullWidth={true} color=\"secondary\" aria-label=\"contained primary button group\">\r\n                     <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                     <Button onClick={this.props.undoMove}>Undo</Button>\r\n                 </ButtonGroup>\r\n                 {this.isCreateMode(this.props.createMode)}\r\n                 <Divider />\r\n                 <ToggleSettings showColoredLineDirections={this.props.showColoredLineDirections} onClick={this.props.toggleLineIndicators}/>\r\n                 <div style={buttonPanel()}>\r\n                     <Typography id=\"discrete-slider-small-steps\"\r\n                                 color=\"textSecondary\"\r\n                                 display=\"inline\"\r\n                                 gutterBottom>\r\n                         Size Of Board\r\n                     </Typography>\r\n                     <Slider\r\n                         onChangeCommitted={this.handleDimensionChange}\r\n                         getAriaValueText={valuetext}\r\n                         aria-labelledby=\"discrete-slider-small-steps\"\r\n                         step={1}\r\n                         marks\r\n                         min={2}\r\n                         max={16}\r\n                         defaultValue={this.props.squareSizeValue}\r\n                         valueLabelDisplay=\"auto\"\r\n                         id=\"sliderelement\"\r\n                     />\r\n                 </div>\r\n                 <Divider/>\r\n             </div>\r\n         )\r\n     }\r\n    }\r\n\r\nexport default DisplayView","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginleft: '15px',\r\n        float: 'left'\r\n    };\r\n}\r\n\r\nconst paperstyle = () => {\r\n    return {\r\n        marginBottom: '15px'\r\n    }\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (\r\n                <Paper style={paperstyle()}elevation={3}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={9}>\r\n                            <Typography color={'primary'} style={{float: 'left'}}>\r\n                                {highscore.comment}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                                {highscore.userid != 1 ? <GoVerified/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'textSecondary'}>{highscore.numMoves}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.created}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Paper>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid item xs={12} style={styleouter()}>\r\n        {\r\n            highscores.map(highscore =>\r\n                highscorestyle(highscore)\r\n            )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { GoVerified } from \"react-icons/go\";\r\n\r\n\r\nconst styleouter = () => {\r\n    return {\r\n        marginTop: '30px',\r\n    };\r\n\r\n}\r\n\r\nconst styleelements = () => {\r\n    return {\r\n        marginBottom: '20px',\r\n        marginTop: '10px'\r\n    };\r\n\r\n}\r\n\r\nconst CrownCounter = highscore => {\r\n    var crowns = []\r\n    var i;\r\n    for (i=0; i<highscore.wins;i++) {\r\n        crowns.push(<FaCrown/>);\r\n    }\r\n    return (\r\n        <div>\r\n            {crowns}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst highscorestyle = highscore => {\r\n    return (<Grid item xs={12}>\r\n                <Paper elevation={3}>\r\n                    <Grid container spacing={0}>\r\n                        <Grid item xs={9}>\r\n                            <Typography color={'primary'} style={{float: 'left'}}>\r\n                                {highscore.name}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                                {highscore.wins == 0 || highscore.wins == null ? null : CrownCounter(highscore) }\r\n                                {highscore.user_id != 1 ? <GoVerified/> : null}\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'textSecondary'}>{highscore.score}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Typography color={'secondary'} variant={'body2'}>{highscore.submitted}</Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                </Paper>\r\n            </Grid>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default ({highscores}) => (\r\n    <Grid style={styleouter()} container direction={'column'} spacing={1}>\r\n        {\r\n                highscores.map(highscore =>\r\n                    highscorestyle(highscore)\r\n                )\r\n        }\r\n    </Grid>\r\n)","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nclass PuzzleRushWinModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Puzzle Rush - {this.props.difficulty}</DialogTitle>\r\n                <DialogContent dividers>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                          <Typography variant=\"h6\">\r\n                            Statistics\r\n                          </Typography>\r\n                          <div>\r\n                            <List dense={true}>\r\n\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Number of Puzzles Completed\"\r\n                                    secondary={this.props.numPuzzlesCompleted}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average time Per Puzzle\"\r\n                                    secondary={this.props.averageTime}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Average Moves per Puzzle\"\r\n                                    secondary={this.props.averageMoves}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Difference from most optimal Solution\"\r\n                                    secondary={this.props.differenceOptimal}\r\n                                  />\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                  <ListItemText\r\n                                    primary=\"Moves Per Second\"\r\n                                    secondary={this.props.movesPerSecond}\r\n                                  />\r\n                                </ListItem>\r\n                            </List>\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.props.playPuzzleRushAgain}>Play Again!</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushWinModal;\r\n\r\n","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR\r\n} from '../../constants/constants';\r\n\r\n\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass RandomGameStatsModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answers: null,\r\n        }\r\n    }\r\n\r\n    showStatsModal = () => {\r\n        this.props.handleShowRandomAnswers()\r\n        this.setState({\r\n            answers: this.props.lowestMoveSequence\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-random\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        lowest possible moves: {this.props.lowestMoves}\r\n                    </div>\r\n                    {this.state.answers}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.showStatsModal}>Show Puzzle Answers</Button>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomGameStatsModal;","import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nexport default function CloseIconWithOnClick(props) {\r\n    const handleClose = () => {\r\n        props.handleClose(props.index);\r\n    }\r\n    return (<CloseIcon onMouseDown={handleClose}/>\r\n    )\r\n}","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport CloseIconWithOnClick from './CloseIconWithOnClick'\r\n\r\nexport default function Descriptionlist(props) {\r\n    return(\r\n            <List>\r\n              {\r\n                  props.tipsText.map((text,index) =>\r\n                    <ListItem>\r\n                      <div>\r\n                        {text}\r\n                      </div>\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                          <CloseIconWithOnClick index={index} handleClose={props.handleCloseToolTips}/>\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  )\r\n              }\r\n            </List>\r\n    )\r\n}","import React from 'react';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass YouWinLessonModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog onClose={this.handleClose} container={() => document.getElementById('MainGameBoard')} style={{position: 'absolute'}} BackdropProps={{ style: { position: 'absolute' } }}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>You Win!</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        You used {this.props.numMoves} Moves!\r\n                    </div>\r\n                    <br/>\r\n                    <Typography> You completed the Lesson! Move on to the next one!\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.resetPuzzle}>Reset</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YouWinLessonModal;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 25,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function ShowDailyChallengeScoresCard(props) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {props.name}\r\n        </Typography>\r\n        <Typography style={{marginBottom: '30px'}} variant=\"h5\" component=\"h2\">\r\n          {props.bestScore}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.MovesforPuzzle}\r\n          <br/>\r\n          {props.MoveSequence}\r\n          <br />\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport MovesView from '../components/MovesView';\r\nimport ShowDailyChallengeScoreCard from '../components/ShowDailyChallengeScoresCard'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst stylebelow = () => {\r\n    return {\r\n        marginTop: '40px',\r\n        marginBottom: '20px'\r\n    }\r\n}\r\n\r\nclass DailyChallengeHistoryData extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography style={stylebelow()} variant=\"h4\"> {this.props.difficultyforPuzzle} </Typography>\r\n                <ShowDailyChallengeScoreCard\r\n                    name={\"Robot God\"}\r\n                    bestScore={this.props.bestScore}\r\n                    MovesforPuzzle={this.props.lowestMovesforPuzzle}\r\n                    MoveSequence={this.props.lowestMoveSequence}\r\n                />\r\n                <ShowDailyChallengeScoreCard\r\n                    name={this.props.nameSubmitted}\r\n                    bestScore={this.props.scoreSubmitted}\r\n                    MovesforPuzzle={null}\r\n                    MoveSequence={<MovesView\r\n                                        moveHistory={this.props.playerMovedSequence} playerState={[{colorSignifier: \"blue\"},{colorSignifier: \"green\"},{colorSignifier: \"red\"},{colorSignifier: \"yellow\"}]}\r\n                                  />}\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyChallengeHistoryData;","import extend from '../constants/extend';\r\nimport {LEFT,RIGHT,UP,DOWN,MAX_WIDTH,MAX_HEIGHT,ROBOT_BLUE,ROBOT_GREEN,ROBOT_RED,ROBOT_YELLOW,GREEN_UP_PICTURE,DIRECTION_MAP_IMAGES} from '../constants/constants';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSTILL NEED TO CHECK LAST row\r\n*/\r\nconst checkDeadendHorizontal = (wallHorizontalList,WallVertToPlace,LastWall,width,height) => {\r\n    var indexX = WallVertToPlace.left;\r\n    var indexY = WallVertToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizontalList.map(wall => {\r\n        if (wall.top == indexY && wall.left == indexX-1 && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    //var isWallAbove = (wallHorizontalList.find(wall => wall = {top: indexY-4, left: indexX -40}) !== undefined);\r\n    var isWallBeside = (LastWall.top == indexY && LastWall.left == (indexX-1) && LastWall.opacity == 1);\r\n    /*if ((isWallAbove && isWallBeside)) {\r\n        console.log(wallHorizontalList);\r\n        console.log(WallVertToPlace);\r\n        console.log(LastWall);\r\n    }*/\r\n\r\n    return !(isWallAbove && isWallBeside)\r\n}\r\n\r\n/*\r\nSTILL NEED TO CHECK last row of things bottom https://cdn.discordapp.com/attachments/551490947893035023/708384650187374642/unknown.png\r\n*/\r\n\r\nconst checkDeadendTop = (wallVerticleList, WallHorizToPlace,wallHorizList,width,height) => {\r\n    var indexX = WallHorizToPlace.left;\r\n    var indexY = WallHorizToPlace.top;\r\n    var isWallAbove = false;\r\n    wallHorizList.map(wall => {\r\n        if (wall.top == indexY-1 && wall.left == indexX && wall.opacity == 1) {\r\n            isWallAbove = true;\r\n        }\r\n    });\r\n    var isWallBesideLeft = false;\r\n    var isWallBesideRight = false;\r\n    wallVerticleList.map(wall => {\r\n        if (wall.top == indexY-1 && (wall.left == indexX) && wall.opacity == 1) {\r\n            isWallBesideLeft = true;\r\n        }\r\n        if (wall.top == indexY-1 && (wall.left == indexX+1) && wall.opacity == 1) {\r\n            isWallBesideRight = true;\r\n        }\r\n    });\r\n    return !((isWallAbove && (isWallBesideLeft || isWallBesideRight)) || (isWallBesideLeft && isWallBesideRight))\r\n}\r\n\r\n\r\nconst randomBoardPosition = (dontPlacePositions,width,height) => {\r\n    var tryAgain = 0;\r\n    var Y,X;\r\n    do {\r\n        tryAgain = 0;\r\n        Y = Math.floor(Math.random() * Math.floor(height));\r\n        X = Math.floor(Math.random() * Math.floor(width));\r\n        dontPlacePositions.map(position => {\r\n            if (Y == position.top && X == position.left) {\r\n                tryAgain = 1;\r\n            }\r\n        });\r\n    } while (tryAgain == 1);\r\n    return {top: Y,left: X};\r\n};\r\n\r\nexport default (width,height,randomPercent,type) => {\r\n    var boardState = [];\r\n    var wallVerticle = [{top: 0, left: 0}];\r\n    var wallHorizontal = [];\r\n    var playerState = [];\r\n    if (type === 'blank') {\r\n        var goal = {top: height-1, left: width-1};\r\n        var randompos1 = {top: 0,left: 0, color: ROBOT_BLUE, colorSignifier: 'blue'};\r\n        var randompos2 = {top: 0,left: 1, color: ROBOT_GREEN, colorSignifier: 'green'};\r\n        var randompos3 = {top: 1,left: 0, color: ROBOT_RED, colorSignifier: 'red'};\r\n        var randompos4 = {top: 1,left: 1, color: ROBOT_YELLOW, colorSignifier:'yellow'};\r\n    }\r\n    else {\r\n        var goal = {top:Math.floor(Math.random() * Math.floor(height)), left:Math.floor(Math.random() * Math.floor(width))};\r\n        var randomPositions = [goal];\r\n        for (var i=0;i<5;i++) {\r\n            randomPositions.push(randomBoardPosition(randomPositions,width,height));\r\n        }\r\n        var randompos1 = extend(randomPositions[1],{color: ROBOT_BLUE, colorSignifier: 'blue'});\r\n        var randompos2 = extend(randomPositions[2],{color: ROBOT_GREEN, colorSignifier: 'green'});\r\n        var randompos3 = extend(randomPositions[3],{color: ROBOT_RED, colorSignifier: 'red'});\r\n        var randompos4 = extend(randomPositions[4],{color: ROBOT_YELLOW, colorSignifier:'yellow'});\r\n    }\r\n    playerState.push(randompos1);\r\n    playerState.push(randompos2);\r\n    playerState.push(randompos3);\r\n    playerState.push(randompos4);\r\n    for (var i=0;i<width;i+=1) {\r\n        for (var j=0;j<height;j+=1) {\r\n            boardState.push({top: j,left: i});\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i < 1) {\r\n                wallVerticle.push({top: j, left: i, opacity: 1});\r\n            }\r\n            else if (i==(width-1)) {\r\n                wallVerticle.push({top: j, left: i+1, opacity: 1});\r\n            }\r\n            if (j < 1) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else if (j == (height-1)) {\r\n                wallHorizontal.push({top: j+1, left: i, opacity: 1});\r\n            }\r\n        }\r\n    }\r\n    for (var j=0;j<height;j+=1) {\r\n        for (var i=0;i<width;i+=1) {\r\n            if (i > 1 && i != (width-1) && Math.random() > randomPercent && checkDeadendHorizontal(wallHorizontal, {top: j, left: i}, wallVerticle[wallVerticle.length -1], width,height)) {\r\n                wallVerticle.push({top: j,left: i,opacity: 1});\r\n            }\r\n            else {\r\n                wallVerticle.push({top: j,left: i, opacity: 0})\r\n            }\r\n            if (j > 1 && j != (height-1) && Math.random() > randomPercent && checkDeadendTop(wallVerticle,{top: j,left:i}, wallHorizontal,width,height)) {\r\n                wallHorizontal.push({top: j,left: i, opacity: 1});\r\n            }\r\n            else {\r\n                wallHorizontal.push({top: j,left: i, opacity: 0});\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        playerState: playerState,\r\n        gameWon: false,\r\n        boardState: boardState,\r\n        wallHorizontal: wallHorizontal,\r\n        wallVerticle: wallVerticle,\r\n        goal: goal,\r\n        playerStart: playerState.slice(),\r\n    };\r\n}\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    };\r\n};\r\n\r\nconst labelStyle = () => {\r\n    return {\r\n        display: 'inline-block',\r\n        textAlign: 'right',\r\n        width: '140px',\r\n        paddingRight: '20px'\r\n    };\r\n};\r\n\r\n\r\nclass BoardResetModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createBoardHandler = event => {\r\n        event.preventDefault();\r\n        var width = parseInt(document.getElementById(\"boardWidthInput\").value);\r\n        var height = parseInt(document.getElementById(\"boardHeightInput\").value);\r\n        var percent = parseInt(document.getElementById(\"boardRandomPercent\").value);\r\n\r\n        if (width.toString() === \"NaN\") {\r\n            width = 16;\r\n        } else if (width > 36) {\r\n            width = 36;\r\n        } else if (width < 4) {\r\n            width = 4;\r\n        }\r\n\r\n        if (height.toString() === \"NaN\") {\r\n            height = 16;\r\n        } else if (height.toString() === \"NaN\" || height > 36) {\r\n            height = 36;\r\n        } else if (height < 4) {\r\n            height = 4;\r\n        }\r\n\r\n        if (percent.toString() === \"NaN\") {\r\n            percent = 20;\r\n        } else if (percent < 0) {\r\n            percent = 0;\r\n        } else if (percent > 100) {\r\n            percent = 100;\r\n        }\r\n\r\n\r\n        this.props.createBoard(\r\n            width,\r\n            height,\r\n            (100 - percent)/100);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>Create Board Settings</DialogTitle>\r\n                <DialogContent dividers>\r\n                    <div>\r\n                        <label style={labelStyle()} >{'Board Width:\\t\\t'}</label>\r\n                        <Input id={\"boardWidthInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Board Height:\\t\\t'}</label>\r\n                        <Input id={\"boardHeightInput\"} inputProps={{max: \"36\", min: \"4\", title:\"default is 16\"}} type={\"number\"} placeholder={\"4-36\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <label style={labelStyle()}>{'Wall Spawn Rate:\\t'}</label>\r\n                        <Input id={\"boardRandomPercent\"} inputProps={{max: \"100\", min: \"0\", title:\"default is 20%\"}} type={\"number\"} placeholder={\"0-100%\"}/>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.createBoardHandler}>Create New Board</Button>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default BoardResetModal;\r\n\r\n","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router';\r\nimport Draggable from 'react-draggable';\r\nimport LearnGameItems from '../components/LearnGameItems';\r\nimport MovesView from '../components/MovesView';\r\nimport Square from '../components/Square';\r\nimport Board from '../components/Board';\r\nimport Robot from '../components/Robot';\r\nimport Wall from '../components/Wall';\r\nimport Goal from '../components/Goal';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ColoredLine from '../components/ColoredLine';\r\nimport extend from '../constants/extend';\r\nimport YouWinModal from '../components/YouWinModal';\r\nimport YouWinDailySingleModal from '../components/YouWinDailySingleModal';\r\nimport YouWinDailyFinalModal from '../components/YouWinDailyFinalModal';\r\nimport AddPuzzleModal from '../components/AddPuzzleModal';\r\nimport DisplayView from './DisplayView';\r\nimport HighScores from '../components/HighScores';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport PuzzleRushWinModal from '../containers/Modals/PuzzleRushFinishedModal';\r\nimport RandomGameStatsModal from '../containers/Modals/RandomGameStatsModal';\r\nimport DescriptionList from '../components/DescriptionList';\r\nimport YouWinLessonModal from '../components/YouWinLessonModal';\r\nimport DailyChallengeHistoryData from '../components/DailyChallengeHistoryData';\r\nimport Timer from \"../components/Timer\";\r\nimport {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n    DOWN,\r\n    MAX_WIDTH,\r\n    MAX_HEIGHT,\r\n    ROBOT_BLUE,\r\n    ROBOT_GREEN,\r\n    ROBOT_RED,\r\n    ROBOT_YELLOW,\r\n    GREEN_UP_PICTURE,\r\n    DIRECTION_MAP_IMAGES,\r\n    LINE_INDICATOR_COLOR,\r\n    MOBILE_INNER_SCREEN_WIDTH\r\n} from '../constants/constants';\r\nimport BoardGenerator from '../components/boardgenerator';\r\nimport BoardResetModal from \"./Modals/BoardResetModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nwindow.addEventListener(\"keydown\", function(e) {\r\n    // space and arrow keys\r\n    if(e.keyCode == 32 && e.target == document.body) {\r\n    e.preventDefault();\r\n  }\r\n    if([37, 38, 39, 40, 9,13].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n    }\r\n}, false);\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n    }\r\n}\r\n\r\nconst leftDisplayPanel = () => {\r\n    return {\r\n        width: '15%',\r\n        display: 'inline-block',\r\n        float: 'left'\r\n    }\r\n};\r\n\r\nconst rightDisplayPanel = () => {\r\n    return {\r\n        display: 'grid',\r\n        marginTop: '15px'\r\n    }\r\n};\r\nconst formatGeneratedMoveSequence = (moves) => {\r\n    var images = []\r\n    moves.map(move => {\r\n        var color = move.charAt(0);\r\n        var direction = move.charAt(1);\r\n        if (color == 'B') {\r\n            color = 'blue'\r\n        }\r\n        else if (color == 'R') {\r\n            color = 'red'\r\n        }\r\n        else if (color == 'Y') {\r\n            color = 'yellow'\r\n        }\r\n        else {\r\n            color = 'green'\r\n        }\r\n        if (direction == 'N') {\r\n            direction = UP\r\n        }\r\n        else if (direction == 'S') {\r\n            direction = DOWN\r\n        }\r\n        else if (direction == 'E') {\r\n            direction = RIGHT\r\n        }\r\n        else {\r\n            direction = LEFT\r\n        }\r\n        images.push(<img src={DIRECTION_MAP_IMAGES[color][direction]}/>)\r\n    });\r\n    return images\r\n}\r\n\r\n\r\nconst setDefaultSquareSize = (boardWidth,boardHeight) => {\r\n    const drawerWidth = document.getElementById(\"MainDrawer\") == null ? 140 : parseInt(getComputedStyle(document.getElementById(\"MainDrawer\")).width);\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n    var settingstop = windowHeight - 120;\r\n\r\n    settingstop = settingstop / boardHeight\r\n    settingstop = parseInt(settingstop);\r\n    settingstop = settingstop - (settingstop % 4)\r\n\r\n    var settings = ((windowWidth < MOBILE_INNER_SCREEN_WIDTH) ? windowWidth - 20 : (windowWidth - drawerWidth) / 1.75);\r\n    settings = settings / boardWidth;\r\n    settings = parseInt(settings);\r\n    settings = settings - (settings % 4);\r\n    var squarevalue = settings > settingstop ? settingstop : settings\r\n    if (squarevalue < 16) {\r\n        squarevalue = 16;\r\n    }\r\n    else if (squarevalue > 52) {\r\n        squarevalue = 52;\r\n    }\r\n    return squarevalue;\r\n};\r\n\r\nconst ColoredLineDirections = [LEFT,RIGHT,UP,DOWN]\r\n\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.puzzleRush === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.p_id = this.props.p_id;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = []\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            this.state.moveHistoryList=[];\r\n\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[0].g_solutiondata))\r\n            this.state.lowestMovesforPuzzle = this.props.games[0].g_moves\r\n            this.state.difficultyforPuzzle = this.props.games[0].g_difficulty\r\n            this.state.playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[0]\r\n\r\n            this.state.playerStateList = [];\r\n            this.state.tipsText = [];\r\n            this.state.highscores = [];\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].g_puzzledata)\r\n            this.state.goals = [];\r\n            this.props.games.map(game => {\r\n                var gamedata = JSON.parse(game.g_puzzledata)\r\n                this.state.goals.push(gamedata.goal)\r\n            })\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            console.log(this.props.playerStateList)\r\n            this.state.gamesWonDaily = [false,false,false,false];\r\n            if (this.props.savedMoves != null) {\r\n                this.state.moveHistoryList = this.props.savedMoves\r\n                this.state.gamesWonDaily = [true,true,true,true]\r\n                this.state.moveHistory = this.props.savedMoves[0].slice()\r\n                this.state.playerState = this.props.playerStateList[0].slice()\r\n            }\r\n            else {\r\n                this.state.moveHistoryList=[];\r\n            }\r\n            this.state.playerStateList = this.props.playerStateList != null ? this.props.playerStateList : [];\r\n            this.state.tipsText = ['Winners who are Logged in will receive a Crown','See about page for details on the daily challenge difficulty','Puzzles reset at 3PM EST, the page will refresh automatically'];\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.dc_id = this.props.dc_id;\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.game.g_puzzledata)\r\n            this.state.lowestMoves = this.props.game.g_moves\r\n            this.state.lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.game.g_solutiondata))\r\n            this.state.difficulty = this.props.game.g_difficulty\r\n            this.state.createMode = 'No';\r\n            this.state.gameWon = false;\r\n            this.state.buildMode = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = ['this game was randomly generated'];\r\n            this.state.uri = this.props.game.g_uri;\r\n            window.history.pushState({id: 'Random Game'},'RobotsEvolved | Random Game','/play/' + this.props.game.g_uri)\r\n        }\r\n        else if (this.props.learnMode === 'Yes') {\r\n            this.state = JSON.parse(this.props.games[0].puzzledata)\r\n            this.state.games = this.props.games\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.numPuzzleon = 0;\r\n            this.state.createMode = 'No';\r\n            this.state.buildMode = false;\r\n            this.state.totalMovesList = [];\r\n            this.state.solutiondifference = [];\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = [this.props.games[0].description];\r\n        }\r\n        else if (this.props.loadedGame === 'Yes') {\r\n            this.state = JSON.parse(this.props.gamedata);\r\n            this.state.highscores = this.props.highscores;\r\n            this.state.uri = this.props.uri;\r\n            this.state.gameWon = false;\r\n            this.state.ColoredLineDirections = [];\r\n            this.state.showBoardResetPanelModal = false;\r\n            this.state.squareSize = 40;\r\n            this.state.buildMode = false;\r\n            this.state.copiedToClipboard = false;\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n            this.state.tipsText = []\r\n            window.history.pushState({id: 'Play Game'},'RobotsEvolved | Play Game','/play/'+ this.props.uri)\r\n        }\r\n        else {\r\n            var squareSize = 40;\r\n            var board = BoardGenerator(this.props.settingsWidth,this.props.settingsHeight,1,'blank');\r\n            this.state = extend({\r\n                robotSelected: 0,\r\n                moveHistory: [],\r\n                uri: '',\r\n                createMode: 'Yes',\r\n                buildMode: true,\r\n                highscores: [],\r\n                showBoardResetPanelModal: false,\r\n                ColoredLineDirections: [],\r\n                width: this.props.settingsWidth,\r\n                height: this.props.settingsHeight,\r\n                percentWall: this.props.settingsPercent,\r\n                squareSize: squareSize,\r\n                copiedToClipboard: false,\r\n                tipsText: [\r\n                                        'Click on Wall spots to toggle',\r\n                                        'Click and Drag robots or goal to move robots',\r\n                                        'When you are ready, toggle build mode in order to solve the puzzle',\r\n                                        'You must solve the puzzle in order to submit.']\r\n            },board);\r\n            this.state.squareSize = setDefaultSquareSize(this.state.width,this.state.height);\r\n        }\r\n        this.state.showColoredLineDirections = this.props.LineDirections;\r\n    };\r\n\r\n    updateHighscores = () => {\r\n        axios.get('/updatehighscores?uri=' + this.state.uri)\r\n            .then( res => {\r\n                this.setState({\r\n                    highscores: JSON.parse(res.data.highscores),\r\n                });\r\n            });\r\n    };\r\n\r\n    DimensionChanged = (dimension) => {\r\n        this.setState({\r\n            squareSize: dimension * 4\r\n        });\r\n    };\r\n\r\n    copiedClipboard = () => {\r\n        this.setState({\r\n            copiedToClipboard: true,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    updateDailyHighscores = () => {\r\n        axios.get('/dailychallengehighscores?dc_id=' + this.state.dc_id)\r\n            .then( res => {\r\n                this.setState({\r\n                    highscores: JSON.parse(res.data.highscores),\r\n                });\r\n                if (res.data.dc_id != this.state.dc_id) {\r\n                    this.props.handleClickDailyChallenge();\r\n                }\r\n                window.dchighscores = JSON.parse(res.data.highscores)\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.onkeydown = this.handleKeyDown;\r\n        if (this.props.loadedGame === 'Yes') {\r\n            this.updateHighscores();\r\n            var IntervalId = setInterval(this.updateHighscores, 4000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            this.updateDailyHighscores();\r\n            var IntervalId = setInterval(this.updateDailyHighscores, 4000);\r\n            this.setState({\r\n                IntervalId: IntervalId,\r\n            });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.loadedGame === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            clearInterval(this.state.IntervalId);\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        let newDirection;\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                newDirection = { top: 0, left: -40, dir: LEFT};\r\n                break;\r\n            case 38:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;\r\n            case 39:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 40:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 9:\r\n                this.tabSelector();\r\n                return;\r\n                break;\r\n            case 32:\r\n                if (!this.state.gameWon) {\r\n                    this.handleUndoMove();\r\n                }\r\n                break;\r\n                return;\r\n            case 13:\r\n                if (!this.state.gameWon) {\r\n                    this.resetPuzzle();\r\n                }\r\n            /*case 83:\r\n                newDirection = { top: 40, left: 0, dir: DOWN};\r\n                break;\r\n            case 68:\r\n                newDirection = { top: 0, left: 40, dir: RIGHT};\r\n                break;\r\n            case 87:\r\n                newDirection = { top: -40, left: 0, dir: UP};\r\n                break;*/\r\n            default:\r\n                return;\r\n        }\r\n        this.handlePlayerMovement(newDirection);\r\n    };\r\n\r\n    robotSelect = (i) => {\r\n        this.setState({\r\n            robotSelected: i,\r\n        });\r\n    };\r\n\r\n    submitPuzzle = event => {\r\n        event.preventDefault();\r\n        var namesubmit = document.getElementById(\"namesubmit\").value;\r\n        var state = this.state;\r\n        state.playerState = this.state.playerStart.slice();\r\n        state.moveHistory = [];\r\n        state.createMode = 'No';\r\n        var username = 'Anonymous';\r\n        if (window.userInfo !== null) {\r\n            username = window.userInfo.username\r\n        }\r\n        console.log(state);\r\n        axios.post('/submitpuzzle', extend({puzzledata: state},{name: namesubmit,authorname: username}))\r\n            .then( res => {\r\n                this.setState({\r\n                    uri: res.data.uri,\r\n                    gameWon: false\r\n                });\r\n                this.props.history.push('/play/' + res.data.uri)\r\n            });\r\n    };\r\n\r\n    toggleLineIndicators = () => {\r\n        if (this.state.showColoredLineDirections === true) {\r\n            this.setState({\r\n                showColoredLineDirections: false,\r\n            });\r\n            this.props.handleLineDirections(false)\r\n        }\r\n        else {\r\n            this.setState({\r\n                showColoredLineDirections: true,\r\n            });\r\n            this.props.handleLineDirections(true)\r\n        }\r\n    };\r\n\r\n    toggleBuildMode = () => {\r\n        if (this.state.buildMode) {\r\n            this.setState({\r\n                buildMode: false,\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                playerState: this.state.playerStart.slice(),\r\n                moveHistory: [],\r\n                buildMode: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    submitAnswer = event => {\r\n        event.preventDefault();\r\n        axios.post('/submithighscore', {highscore: this.state.moveHistory.length, name: document.getElementById(\"namesubmitHS\").value, uri: this.state.uri})\r\n            .then( res => {\r\n                this.setState({gameWon: false});\r\n            });\r\n        this.resetPuzzle();\r\n    };\r\n\r\n    resetPuzzle = event => {\r\n        if (typeof event !== 'undefined') {\r\n            event.preventDefault();\r\n        }\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n        });\r\n    };\r\n\r\n    tabSelector = () => {\r\n        if (this.state.gameWon === false) {\r\n            var robotSelected = this.state.robotSelected + 1;\r\n            robotSelected = robotSelected % 4;\r\n            this.setState({\r\n                robotSelected: robotSelected,\r\n            });\r\n        }\r\n    };\r\n\r\n    createBoardPressed = (type) => {\r\n        if (type === 'Create Board') {\r\n            this.setState({\r\n                showBoardResetPanelModal: true\r\n            });\r\n        }\r\n    };\r\n\r\n    closeRandomStatsModal = event => {\r\n        this.setState({\r\n            closeRandomStatsModal: false,\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false\r\n        });\r\n    }\r\n\r\n    closeCreateBoardModal = event => {\r\n        this.setState({\r\n            showBoardResetPanelModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushFinishedModal = event => {\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: false\r\n        });\r\n\r\n    }\r\n\r\n    createBoard = (width,height,percent) => {\r\n        var board = BoardGenerator(width,height,percent, 'blank');\r\n        var squareSize = setDefaultSquareSize(width,height);\r\n        this.setState(extend({\r\n            width: width,\r\n            height: height,\r\n            percent: percent,\r\n            squareSize: squareSize,\r\n        },board));\r\n        this.closeCreateBoardModal()\r\n    };\r\n\r\n    showStatsModal = () => {\r\n        this.setState({\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n            gameWon: false,\r\n            showStatsModal: true,\r\n        });\r\n    }\r\n\r\n    handleCollision = (dirObj,robotSelected,color) => {\r\n        var newPosition;\r\n        var robotX = this.state.playerState[robotSelected].left;\r\n        var robotY = this.state.playerState[robotSelected].top;\r\n        switch(dirObj.dir) {\r\n            case UP:\r\n                var minimumWall = 0;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top <= robotY && wall.top > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.top;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top < robotY && checkRobot.top + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.top + 1;\r\n                    }\r\n\r\n                });\r\n\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            case RIGHT:\r\n                var minimumWall = this.state.width - 1;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left > robotX && wall.left < minimumWall + 1 && wall.opacity === 1) {\r\n                        minimumWall = wall.left - 1;\r\n\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left > robotX && checkRobot.left < minimumWall + 1) {\r\n                        minimumWall = checkRobot.left - 1;\r\n                    }\r\n\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case LEFT:\r\n                var minimumWall = 0;\r\n                this.state.wallVerticle.map(wall => {\r\n                    if (wall.top === robotY && wall.left <= robotX && wall.left > minimumWall && wall.opacity === 1) {\r\n                        minimumWall = wall.left;\r\n                    }\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.top === robotY && checkRobot.left < robotX && checkRobot.left + 1 > minimumWall) {\r\n                        minimumWall = checkRobot.left + 1;\r\n                    }\r\n                });\r\n                newPosition = {top: robotY, left:minimumWall, color: color};\r\n                break;\r\n            case DOWN:\r\n                var minimumWall = this.state.height - 1;\r\n                this.state.wallHorizontal.map(wall =>\r\n                {\r\n                    if (wall.left === robotX && wall.top > robotY && wall.top < minimumWall + 1 && wall.opacity === 1)\r\n                        minimumWall = wall.top - 1;\r\n\r\n                });\r\n                this.state.playerState.map(checkRobot => {\r\n                    if (checkRobot.left === robotX && checkRobot.top > robotY && checkRobot.top < minimumWall + 1) {\r\n                        minimumWall = checkRobot.top - 1;\r\n                    }\r\n                });\r\n                newPosition = {top: minimumWall, left: robotX, color: color};\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        return newPosition;\r\n    };\r\n\r\n\r\n    puzzleRushTimeUp = () => {\r\n        var totalMovesDiff = 0;\r\n        this.state.solutiondifference.map(numMoves => {\r\n            totalMovesDiff += numMoves;\r\n        });\r\n        var averageTime = parseInt(300 / (this.state.numPuzzleon))\r\n        var totalMoves = 0;\r\n        this.state.totalMovesList.map(numMoves => {\r\n            totalMoves += numMoves\r\n        });\r\n        var avgMoves = parseInt(totalMoves / (this.state.numPuzzleon))\r\n        var movesPerSecond = totalMoves / 300;\r\n\r\n        axios.post('/puzzlerushend', {p_id: this.state.p_id,totalMoves: totalMoves,differenceFrom: totalMovesDiff})\r\n            .then( res => {\r\n                console.log(res.data);\r\n            });\r\n\r\n        this.setState({\r\n            showPuzzleRushFinishedModal: true,\r\n            numPuzzlesCompleted: this.state.numPuzzleon,\r\n            percentile: 'TBD%',\r\n            averageTime: averageTime + 's',\r\n            averageMoves: avgMoves,\r\n            differenceOptimal: totalMovesDiff,\r\n            movesPerSecond: movesPerSecond\r\n        });\r\n    }\r\n\r\n    submitDailyAnswer = (LastRobotPosition) => {\r\n        var moveHistoryList = this.state.moveHistoryList.slice()\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice()\r\n        var numMoves = 0\r\n        moveHistoryList.map(moveHistory => {\r\n            numMoves += moveHistory.length\r\n        });\r\n        var playerStateList = this.state.playerStateList.slice()\r\n        var playerState = this.state.playerState.slice()\r\n        console.log(this.state.robotSelected)\r\n        playerState[parseInt(this.state.robotSelected)] = LastRobotPosition;\r\n        console.log(playerState[parseInt(this.state.robotSelected)])\r\n        console.log(playerState);\r\n\r\n        playerStateList[this.state.numPuzzleon] = playerState\r\n        console.log(LastRobotPosition);\r\n        console.log(playerState);\r\n        axios.post('/dailychallenge', {score: numMoves, name: document.getElementById(\"namesubmitHS\").value, solutiondata: moveHistoryList, dc_id: this.state.dc_id, playerStateList: playerStateList})\r\n            .then( res => {\r\n                console.log(res)\r\n                this.handleUndoMove();\r\n            });\r\n        window.dc_movesList = moveHistoryList;\r\n        window.dc_playerList = playerStateList;\r\n        this.state.gameWon = false;\r\n    }\r\n\r\n    checkwin = (robotPosition) => {\r\n        if (robotPosition.top === this.state.goal.top && robotPosition.left === this.state.goal.left) {\r\n            if (this.state.gameWon === false)\r\n                this.setState({gameWon: true});\r\n            if (this.state.createMode === 'No' && this.props.puzzleRush !== 'Yes') {\r\n                var username = '';\r\n                if (window.userInfo !== null) {\r\n                    username = window.userInfo.username\r\n                }\r\n                if (this.props.randomGame === 'Yes') {\r\n                    return (\r\n                        <RandomGameStatsModal\r\n                            show={this.state.gameWon}\r\n                            lowestMoves={this.state.lowestMoves}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            numMoves={this.state.moveHistory.length}\r\n                            difficulty={this.state.difficulty}\r\n                            resetPuzzle={this.resetPuzzle}\r\n                            handleShowRandomAnswers={this.handleShowRandomAnswers}\r\n                        />\r\n                    );\r\n                }\r\n                else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n                    return null\r\n                }\r\n                else if (this.props.dailyChallengeMode === 'Yes') {\r\n                    var Won=true\r\n                    this.state.gamesWonDaily.map((gameWon,index) => {\r\n                        if (!(index == this.state.numPuzzleon) && !gameWon) {\r\n                            Won = false\r\n                        }\r\n                    });\r\n                    var moveHistoryList = this.state.moveHistoryList\r\n                    moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory\r\n                    var numMoves = 0\r\n                    moveHistoryList.map(moveHistory => {\r\n                        numMoves += moveHistory.length\r\n                    });\r\n                    return (Won ? <YouWinDailyFinalModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={numMoves}\r\n                        submitAnswer={this.submitDailyAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                        undoMove={this.handleUndoMove}\r\n                        robotPosition={robotPosition}\r\n                    /> : <YouWinDailySingleModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        totalMoves={numMoves}\r\n                        undoMove={this.handleUndoMove}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        games={this.state.games}\r\n                        handleClickGame={this.handleDailyClickGame}\r\n                        numPuzzleon={this.state.numPuzzleon}\r\n                        moveNextPuzzle={this.moveNextPuzzle}\r\n                    />);\r\n                }\r\n                else if (this.props.learnMode === 'Yes') {\r\n                    return  (<YouWinLessonModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                    />);\r\n                }\r\n                else {\r\n                    return  (<YouWinModal\r\n                        show={this.state.gameWon}\r\n                        numMoves={this.state.moveHistory.length}\r\n                        submitAnswer={this.submitAnswer}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        username={username}\r\n                    />);\r\n                }\r\n            }\r\n            else if (this.props.puzzleRush === 'Yes'){\r\n                axios.post('/puzzlerushsubmit', {p_id: this.state.p_id,g_id:this.state.games[this.state.numPuzzleon].g_id, moveHistory: this.state.moveHistory})\r\n                    .then( res => {\r\n                        console.log(res.data);\r\n                    });\r\n                var totalMoves = this.state.moveHistory.slice().length\r\n                var totalMovesList = this.state.totalMovesList\r\n                totalMovesList.push(totalMoves)\r\n                var solutionmoves = totalMoves - this.state.games[this.state.numPuzzleon].g_moves\r\n                var solutiondifference = this.state.solutiondifference\r\n                solutiondifference.push(solutionmoves)\r\n                var puzzledata = JSON.parse(this.state.games[this.state.numPuzzleon + 1].g_puzzledata)\r\n                if (this.state.numPuzzleon + 10 > this.state.games.length) {\r\n                    axios.get('/puzzlerushgetmore?p_id=' + this.props.p_id + '&difficulty=' + this.props.difficulty)\r\n                        .then( res => {\r\n                                var games = JSON.parse(res.data.games);\r\n                                var stategames = this.state.games\r\n                                var newarray = stategames.concat(games)\r\n                                this.setState({\r\n                                    games: newarray\r\n                                });\r\n                        });\r\n                }\r\n                this.setState(\r\n                    extend(puzzledata,{numPuzzleon: this.state.numPuzzleon + 1, playerState: puzzledata.playerStart.slice(), gameWon: false, solutiondifference: solutiondifference, totalMovesList: totalMovesList})\r\n                );\r\n\r\n            }\r\n            else {\r\n                return (<AddPuzzleModal\r\n                    show={this.state.gameWon}\r\n                    submitPuzzle={this.submitPuzzle}\r\n                    resetPuzzle={this.resetPuzzle}\r\n                />);\r\n            }\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    handleShowRandomAnswers = () => {\r\n        this.setState({\r\n            tipsText: [this.state.lowestMoveSequence]\r\n        })\r\n    }\r\n\r\n    handlePlayerMovement = (dirObj) => {\r\n        if (dirObj.dir !== undefined && this.state.gameWon === false && !this.state.buildMode) {\r\n            var oldPositon = {left: this.state.playerState[this.state.robotSelected].left, top: this.state.playerState[this.state.robotSelected].top};\r\n            var newPosition = this.handleCollision(dirObj, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color);\r\n            var playerState = this.state.playerState;\r\n            var moveHistory = this.state.moveHistory;\r\n            newPosition = extend(newPosition, {colorSignifier: playerState[this.state.robotSelected].colorSignifier});\r\n            if (!(newPosition.top === playerState[this.state.robotSelected].top && newPosition.left === playerState[this.state.robotSelected].left) && !this.state.buildMode) {\r\n                moveHistory.push({\r\n                    dir: dirObj.dir,\r\n                    robot: this.state.robotSelected,\r\n                    colorSignifier: playerState[this.state.robotSelected].colorSignifier,\r\n                    prevPosition: oldPositon\r\n                });\r\n            }\r\n            playerState[this.state.robotSelected] = newPosition;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n            });\r\n            this.checkwin(newPosition);\r\n        }\r\n    };\r\n\r\n    handleCloseToolTips = (index) => {\r\n        this.state.tipsText.splice(index,1);\r\n        this.setState({\r\n            tipsText: this.state.tipsText,\r\n        });\r\n    }\r\n\r\n    moveNextPuzzle = () => {\r\n        this.handleDailyClickGame((this.state.numPuzzleon + 1) % 4)\r\n    }\r\n\r\n    handleLearnClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].puzzledata);\r\n        var squareSize = setDefaultSquareSize(puzzledata.width,puzzledata.height);\r\n        this.setState(\r\n            extend(puzzledata,{buildMode: false,squareSize: squareSize, numPuzzleon: index, moveHistory: [], gameWon: false, playerState: puzzledata.playerStart.slice(),tipsText: [this.props.games[index].description]})\r\n        );\r\n    }\r\n\r\n    handleDailyClickAnswersGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n        var lowestMoveSequence = formatGeneratedMoveSequence(JSON.parse(this.props.games[index].g_solutiondata))\r\n        var lowestMovesforPuzzle = this.props.games[index].g_moves\r\n        var difficultyforPuzzle = this.props.games[index].g_difficulty\r\n        var playerMovedSequence = JSON.parse(this.props.solutionDataSubmitted)[index]\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory,\r\n                    gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily,\r\n                    lowestMoveSequence: lowestMoveSequence, lowestMovesforPuzzle: lowestMovesforPuzzle, difficultyforPuzzle: difficultyforPuzzle,\r\n                    playerMovedSequence: playerMovedSequence})\r\n        );\r\n    }\r\n\r\n    handleDailyClickGame = index => {\r\n        var puzzledata = JSON.parse(this.props.games[index].g_puzzledata);\r\n        if (this.state.moveHistoryList[index]==undefined) {\r\n            var moveHistory = [];\r\n        }\r\n        else {\r\n            var moveHistory = this.state.moveHistoryList[index];\r\n        }\r\n\r\n        if (this.state.playerStateList[index]==undefined) {\r\n            puzzledata.playerState = puzzledata.playerStart.slice()\r\n        }\r\n        else {\r\n            puzzledata.playerState = this.state.playerStateList[index];\r\n        }\r\n        var gamesWonDaily = this.state.gamesWonDaily\r\n        if (this.state.gameWon) {\r\n            gamesWonDaily[this.state.numPuzzleon] = true\r\n        }\r\n        else {\r\n            gamesWonDaily[this.state.numPuzzleon] = false\r\n        }\r\n        var playerState = this.state.playerState.slice();\r\n        var playerStateList = this.state.playerStateList;\r\n        playerStateList[this.state.numPuzzleon] = playerState;\r\n        var moveHistoryList = this.state.moveHistoryList;\r\n        moveHistoryList[this.state.numPuzzleon] = this.state.moveHistory.slice();\r\n\r\n        this.setState(\r\n            extend(puzzledata,{highscores: this.state.highscores, numPuzzleon: index, moveHistory: moveHistory, gameWon: false, playerStateList: playerStateList, moveHistoryList: moveHistoryList, gamesWonDaily: gamesWonDaily})\r\n        );\r\n    }\r\n\r\n\r\n    loadSidebar = () => {\r\n        if (this.props.learnMode == 'Yes') {\r\n            return (\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        aria-label=\"vertical contained primary button group\"\r\n                        variant=\"contained\">\r\n                        <Divider/>\r\n                        <Typography\r\n                             color=\"textSecondary\"\r\n                             display=\"block\"\r\n                             variant=\"caption\"\r\n                             style={{paddingBottom: '10px'}}\r\n                         >\r\n                             Beginner Lessons\r\n                         </Typography>\r\n                        {\r\n                            this.state.games.map((game,index) => {\r\n                                    if (index === 4) {\r\n                                        return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Intermediate Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    else if (index === 7) {\r\n                                            return(\r\n                                                <Typography\r\n                                                     color=\"textSecondary\"\r\n                                                     display=\"block\"\r\n                                                     variant=\"caption\"\r\n                                                     style={{paddingBottom: '10px', paddingTop: '30px'}}\r\n                                                 >\r\n                                                     Advanced Lessons\r\n                                                 </Typography>\r\n                                        )\r\n                                    }\r\n                                    return(\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={game.name} index={index} handleClickGame={this.handleLearnClickGame}/>\r\n                                    )\r\n                                }\r\n\r\n                            )\r\n                        }\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeModeAnswers === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickAnswersGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeHistoryData\r\n                            lowestMovesforPuzzle={this.state.lowestMovesforPuzzle}\r\n                            lowestMoveSequence={this.state.lowestMoveSequence}\r\n                            difficultyforPuzzle={this.state.difficultyforPuzzle}\r\n                            nameSubmitted={this.props.nameSubmitted}\r\n                            playerMovedSequence={this.state.playerMovedSequence}\r\n                            bestScore={this.props.bestScore}\r\n                            scoreSubmitted={this.props.scoreSubmitted}\r\n                         />\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.props.dailyChallengeMode === 'Yes') {\r\n            return(\r\n                <Grid container xs={12} direction=\"column\">\r\n                    <Grid item xs={12}>\r\n                        <ButtonGroup\r\n                            orientation=\"vertical\"\r\n                            aria-label=\"vertical contained primary button group\"\r\n                            variant=\"contained\">\r\n                            {\r\n                                this.state.games.map((game,index) =>\r\n                                        <LearnGameItems selected={this.state.numPuzzleon} game={game} name={'Puzzle #' + (index + 1)} index={index} handleClickGame={this.handleDailyClickGame}/>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DailyChallengeScores highscores={this.state.highscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n        else if (this.state.createMode === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.randomGame === 'Yes') {\r\n            return null;\r\n        }\r\n        else if (this.props.puzzleRush) {\r\n            return (\r\n                     <div>\r\n                        <Timer puzzleRushTimeUp={this.puzzleRushTimeUp}>\r\n                        </Timer>\r\n                        <Typography id=\"discrete-slider-small-steps\"\r\n                                     color=\"Primary\"\r\n                                     variant=\"h3\"\r\n                                     display=\"inline\"\r\n                                     gutterBottom>\r\n                             {this.state.numPuzzleon}\r\n                         </Typography>\r\n                     </div>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n            <div style={{display: 'grid'}}>\r\n                <Typography\r\n                    color=\"secondary\"\r\n                    display=\"block\"\r\n                    variant={\"h4\"}\r\n\r\n                >\r\n                    {this.props.name}\r\n                </Typography>\r\n                <br/>\r\n                <Grid container xs={12} direction=\"column\">\r\n                <HighScores highscores={this.state.highscores}/>\r\n                </Grid>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    handlePlayerMovementFromMouse = (direction) => {\r\n        this.handlePlayerMovement({dir: direction})\r\n    };\r\n\r\n    handleUndoMove = () => {\r\n        var moveHistory = this.state.moveHistory;\r\n        var playerState = this.state.playerState;\r\n        if (moveHistory.length !== 0) {\r\n            var moveObj = moveHistory.pop();\r\n            playerState[moveObj.robot].left = moveObj.prevPosition.left;\r\n            playerState[moveObj.robot].top = moveObj.prevPosition.top;\r\n            this.setState({\r\n                playerState: playerState,\r\n                moveHistory: moveHistory,\r\n                gameWon: false,\r\n            });\r\n        }\r\n    };\r\n\r\n    createModeWallClick = (opacity,orientation,top,left) => {\r\n        if (this.state.createMode === 'Yes' && this.state.buildMode) {\r\n            this.resetPuzzle();\r\n            var indexToChange;\r\n            if (orientation === 'horizontal') {\r\n                var newWallHorizontal = this.state.wallHorizontal;\r\n                newWallHorizontal.map((wallH, index) => {\r\n                    if (wallH.top === top && wallH.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallHorizontal[indexToChange] = {top: top,left: left,opacity: opacity};\r\n                this.setState({\r\n                    wallHorizontal: newWallHorizontal\r\n                });\r\n            }\r\n            else if (orientation === 'verticle') {\r\n                var newWallVerticle = this.state.wallVerticle;\r\n                newWallVerticle.map((wallV, index) => {\r\n                    if (wallV.top === top && wallV.left === left) {\r\n                        indexToChange = index;\r\n                    }\r\n                });\r\n                newWallVerticle[indexToChange] = {top: top, left: left, opacity: opacity};\r\n                this.setState({\r\n                    wallVerticle: newWallVerticle\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onStopDragHandlerGoal = (position) => {\r\n        this.setState({\r\n            goal: {top: Math.round(position.lastY / this.state.squareSize), left: Math.round(position.lastX / this.state.squareSize)},\r\n            playerState: this.state.playerStart.slice(),\r\n            moveHistory: [],\r\n        })\r\n    };\r\n\r\n\r\n    onStopDragHandler = (position,index) => {\r\n        var playerState = this.state.playerState.slice();\r\n        var lastX = position.lastX / this.state.squareSize;\r\n        var lastY = position.lastY / this.state.squareSize;\r\n        playerState[index].top = Math.round(lastY);\r\n        playerState[index].left = Math.round(lastX);\r\n        this.setState({\r\n            playerStart: playerState.slice(),\r\n            playerState: playerState,\r\n            moveHistory: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div style={gamepanel()}>\r\n            <Grid container alignItems={\"stretch\"}>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DisplayView\r\n                        puzzleRushTimeUp={this.puzzleRushTimeUp}\r\n                        isPuzzleRush={this.props.puzzleRush}\r\n                        numPuzzleRush={this.state.numPuzzleon}\r\n                        uri={this.state.uri}\r\n                        resetPuzzle={this.resetPuzzle}\r\n                        createBoard={this.createBoard}\r\n                        width={this.state.width}\r\n                        height={this.state.height}\r\n                        percent={this.state.percent}\r\n                        createMode={this.state.createMode}\r\n                        createBoardPressed={this.createBoardPressed}\r\n                        DimensionChanged={this.DimensionChanged}\r\n                        copiedClipboard = {this.copiedClipboard}\r\n                        copiedToClipboard = {this.copiedToClipboard}\r\n                        toggleLineIndicators = {this.toggleLineIndicators}\r\n                        showColoredLineDirections={this.state.showColoredLineDirections}\r\n                        toggleBuildMode = {this.toggleBuildMode}\r\n                        undoMove = {this.handleUndoMove}\r\n                        buildMode = {this.state.buildMode}\r\n                        squareSizeValue = {parseInt((this.state.squareSize/4))}\r\n                        isLesson = {this.props.learnMode}\r\n                        isDailyChallenge = {this.props.dailyChallengeMode}\r\n                        isDailyChallengeAnswers = {this.props.dailyChallengeModeAnswers}\r\n                    />\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? null : <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/>}\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8} zeroMinWidth>\r\n                    <Board width={this.state.width * this.state.squareSize} height={this.state.height * this.state.squareSize}>\r\n                        {\r\n                            this.state.boardState.map(square =>\r\n                                <Square dimension={this.state.squareSize}\r\n                                        position={{top:square.top,left: square.left}}\r\n                                />\r\n                            )\r\n                        }\r\n                        <Goal\r\n                            dimension={this.state.squareSize}\r\n                            position={this.state.goal}\r\n                            onStopDragHandler={this.onStopDragHandlerGoal}\r\n                            draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                            isCreateMode={this.state.createMode}\r\n                            buildMode={this.state.buildMode}\r\n                        />\r\n                        {\r\n                            this.state.playerState.map((player, index) =>\r\n                                <Robot\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:player.top,left:player.left}}\r\n                                    color={player.color}\r\n                                    selected={this.state.robotSelected}\r\n                                    index={index}\r\n                                    onClick={this.robotSelect}\r\n                                    handlePlayerMovement={this.handlePlayerMovement}\r\n                                    tabSelector={this.tabSelector}\r\n                                    isCreateMode={this.state.createMode}\r\n                                    buildMode={this.state.buildMode}\r\n                                    onStopDragHandler={this.onStopDragHandler}\r\n                                    draggableGrid={[this.state.squareSize,this.state.squareSize]}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallHorizontal.map(wallH =>\r\n                                <Wall\r\n                                    orientation={'horizontal'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallH.top,left:wallH.left}}\r\n                                    opacity={wallH.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.wallVerticle.map(wallV =>\r\n                                <Wall\r\n                                    orientation={'verticle'}\r\n                                    dimension={this.state.squareSize}\r\n                                    position={{top:wallV.top,left:wallV.left}}\r\n                                    opacity={wallV.opacity}\r\n                                    onClick={this.createModeWallClick}\r\n                                />\r\n                            )\r\n                        }\r\n                        {\r\n                            ColoredLineDirections.map(ColoredLineDirection =>\r\n                                <ColoredLine\r\n                                    dimension={this.state.squareSize}\r\n                                    dir={ColoredLineDirection}\r\n                                    position={{\r\n                                        top: this.state.playerState[this.state.robotSelected].top,\r\n                                        left: this.state.playerState[this.state.robotSelected].left\r\n                                    }}\r\n                                    endPosition={this.handleCollision({dir: ColoredLineDirection}, this.state.robotSelected, this.state.playerState[this.state.robotSelected].color)}\r\n                                    color={this.state.playerState[this.state.robotSelected].color}\r\n                                    show={this.state.showColoredLineDirections}\r\n                                    handleClick={this.handlePlayerMovementFromMouse}\r\n                                    buildMode={this.state.buildMode}\r\n                                />\r\n                            )\r\n                        }\r\n                    </Board>\r\n                    {window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? <MovesView moveHistory={this.state.moveHistory} playerState={this.state.playerState}/> : null}\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2}>\r\n                    <DescriptionList\r\n                        handleCloseToolTips={this.handleCloseToolTips}\r\n                        tipsText={this.state.tipsText}\r\n                    />\r\n                    {this.loadSidebar()}\r\n                </Grid>\r\n                <BoardResetModal\r\n                    createBoard={this.createBoard}\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    percent={this.state.percent}\r\n                    closeModal={this.closeCreateBoardModal}\r\n                    show={this.state.showBoardResetPanelModal}\r\n                />\r\n                {\r\n                    this.state.playerState.map(position =>\r\n                        this.checkwin(position))\r\n                }\r\n                <PuzzleRushWinModal\r\n                    show={this.state.showPuzzleRushFinishedModal}\r\n                    closeModal={this.closePuzzleRushFinishedModal}\r\n                    numPuzzlesCompleted={this.state.numPuzzlesCompleted}\r\n                    percentile={this.state.puzzleRushPercentileCompleted}\r\n                    averageTime={this.state.averageTime}\r\n                    averageMoves={this.state.averageMoves}\r\n                    differenceOptimal={this.state.differenceOptimal}\r\n                    movesPerSecond={this.state.movesPerSecond}\r\n                    difficulty={this.props.difficulty}\r\n                />\r\n            </Grid>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Game);\r\n","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass CreateGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settingsWidth: 16,\r\n            settingsHeight: 16,\r\n            settingsPercent: .9,\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <Game loadedGame='No'\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  settingsWidth={this.state.settingsWidth}\r\n                  settingsHeight={this.state.settingsHeight}\r\n                  settingsPercent={this.state.settingsPercent}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CreateGame;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        maxWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 360,\r\n        minWidth: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 320,\r\n        height: 225,\r\n        position: 'relative',\r\n        background: 'linear-gradient(100deg, #fdcd3b 55%, #ffed4b 55%)'\r\n    },\r\n\r\n    item: {\r\n        padding: 0\r\n    },\r\n\r\n    upperPadding: {\r\n        paddingTop: 3\r\n    },\r\n    upperPaddingButton: {\r\n        paddingTop: 3,\r\n        position: 'absolute',\r\n        bottom: 15,\r\n        left: 25\r\n    },\r\n\r\n    lowerPadding: {\r\n        paddingBottom: 3\r\n    },\r\n\r\n    rightSideText: {\r\n        textAlign: \"right\",\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    },\r\n\r\n    leftSideText: {\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(ComplexGrid)\r\n\r\nfunction ComplexGrid(props) {\r\n    const { classes } = props;\r\n    const handleClick = () => {\r\n        props.handleGameClick(props.game.name, props.game.puzzledata,props.highscores,props.game.uri);\r\n    };\r\n\r\n    var numberOfHighScores = 0;\r\n\r\n    const highscorestyle = highscore => {\r\n        if (numberOfHighScores === 6) return \"\";\r\n        numberOfHighScores++;\r\n        return (\r\n            <ListItem disableGutters={true} classes={{ root: classes.item }}>\r\n                <ListItemText primary={trimNameShort(highscore.comment)} classes={{ root: classes.leftSideText }} />\r\n                <ListItemText secondary={highscore.numMoves} classes={{ root: classes.rightSideText }} />\r\n            </ListItem>\r\n        )\r\n    };\r\n\r\n    const contentDivStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        };\r\n\r\n    };\r\n\r\n    const trimName = name => {\r\n        var separated = (name + '').split(\" \")\r\n        var toreturn = '';\r\n        separated.map((word) => {\r\n            if (word.length > 17)\r\n                toreturn += word.substring(0, 17) + \"...\" + ' ';\r\n            else {\r\n                toreturn += word + ' '\r\n            }\r\n        });\r\n        return toreturn.substring(0, toreturn.length - 1);\r\n    };\r\n\r\n    const trimNameShort = name => {\r\n        if (name.length > 10)\r\n            name = name.substring(0, 10) + \"...\";\r\n        return name\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid item xs={12} md={3} sm={6}>\r\n            <Card variant=\"outlined\" className={classes.root}>\r\n                <CardContent>\r\n                    <div style={contentDivStyle()}>\r\n                        <div style={{width: '150px'}}>\r\n                            <Tooltip title={props.game.name}>\r\n                                <Typography variant=\"h6\" classes={{ root: classes.lowerPadding }}>\r\n                                    {trimName(props.game.name)}\r\n                                </Typography>\r\n                            </Tooltip>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    By: {trimName(props.game.authorname)}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography variant=\"caption\">\r\n                                    {props.game.created}\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                    Plays: {props.game.plays}\r\n                                </Typography>\r\n                            </div>\r\n                            <br/>\r\n                            <Button onClick={handleClick} classes={{ root: classes.upperPaddingButton }} variant=\"contained\" color=\"primary\">Play</Button>\r\n                        </div>\r\n                        <div style={{width: '105px'}}>\r\n                            <Typography color=\"textSecondary\" variant=\"caption\">\r\n                                Top Scores\r\n                            </Typography>\r\n                            <List>\r\n                                {\r\n                                    props.highscores.map(highscore =>\r\n                                        highscorestyle(highscore)\r\n                                    )\r\n                                }\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from 'axios';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '100%' : 400,\r\n    },\r\n    input: {\r\n        marginLeft: 5,\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n        marginLeft: 8,\r\n        marginRight: 8,\r\n    },\r\n});\r\n\r\nclass FindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var gameslist = this.props.gameslist;\r\n        var highscoreslist = this.props.highscoreslist;\r\n        this.state = {\r\n            gameslist: gameslist,\r\n            highscoreslist: highscoreslist,\r\n            anchorEl: null\r\n        }\r\n    }\r\n\r\n    handleGameClick = (name,gamedata,highscores,uri) => {\r\n        this.props.handleGameClick(name,gamedata,highscores,uri);\r\n    };\r\n\r\n    handleFilterMenuOpen = event => {\r\n        this.setState( {\r\n          anchorEl: event.currentTarget\r\n      });\r\n    };\r\n\r\n    handleCloseFilterMenuMostPlayed = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'MostPlayed', offset: 0})\r\n            .then( res => {\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    };\r\n\r\n    handleCloseFilterMenuHighest = event => {\r\n        this.setState( {\r\n            anchorEl: null\r\n        })\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'Highest', offset: 0})\r\n            .then( res => {\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    };\r\n\r\n    handleSearchSubmit = event => {\r\n        var searchTerm = this.searchRef.value;\r\n        axios.post('/search', {search: searchTerm, filter: 'None', offset: 0})\r\n            .then( res => {\r\n                this.setState({\r\n                    highscoreslist: JSON.parse(res.data.highscoreslist),\r\n                    gameslist: JSON.parse(res.data.gameslist)\r\n                });\r\n            });\r\n    };\r\n\r\n    render () {\r\n        const  { classes } = this.props;\r\n        return (\r\n            <div style={gamepanel()}>\r\n                <Paper component=\"form\" className={classes.root} >\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        inputRef={ref => this.searchRef = ref}\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                this.handleSearchSubmit();\r\n                                event.preventDefault()\r\n                            }\r\n                        }}\r\n                    />\r\n                    <IconButton onClick={this.handleSearchSubmit} className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <Divider className={classes.divider} orientation=\"vertical\" />\r\n                    <Button\r\n                        onClick={this.handleFilterMenuOpen}\r\n                        startIcon={<FilterListIcon />}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                    >\r\n                        Sort\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(this.state.anchorEl)}\r\n                        onClose={this.handleCloseFilterMenu}\r\n                    >\r\n                        <MenuItem onClick={this.handleCloseFilterMenuMostPlayed}>Most Played</MenuItem>\r\n                        <MenuItem onClick={this.handleCloseFilterMenuHighest}>Highest Scores</MenuItem>\r\n                    </Menu>\r\n                </Paper>\r\n                <br/>\r\n                <Grid container alignItems={\"stretch\"} spacing={2}>\r\n                    {\r\n                        this.state.gameslist.map((game,index)=>\r\n                            <FindGameElements handleGameClick={this.handleGameClick} game={game} highscores={this.state.highscoreslist[index]} highscore={this.state.highscoreslist[index][0]}/>\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(FindGame);","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PlayGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  loadedGame={'Yes'}\r\n                  name={this.props.name}\r\n                  gamedata={this.props.gamedata}\r\n                  highscores={this.props.highscores}\r\n                  uri={this.props.uri}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PlayGame;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    marginTop: '150px',\r\n  },\r\n  homepage: {\r\n    marginTop: '40px',\r\n  },\r\n  griditems: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    Width: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  baseExpansion: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: '10px'\r\n  },\r\n  darkmode: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      marginTop: '150px',\r\n  },\r\n  iconcards: {\r\n    width: '250px',\r\n    display: 'inline-block',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  iconcardsDaily: {\r\n    maxWidth: 345,\r\n    minWidth: 250,\r\n    float: 'left',\r\n    marginLeft: '40px',\r\n    marginTop: '40px',\r\n    marginBotton: '40px',\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  titlehome: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '30px',\r\n  },\r\n  titledailyroto: {\r\n    fontFamily: \"'Epilogue', sans-serif\",\r\n    marginBottom: '10px',\r\n  },\r\n  iconfonts: {\r\n    fontFamily: \"'Arvo', serif\",\r\n  },\r\n  createboardcard: {\r\n    ':hover': {\r\n        content: '/static/images/CreateBoardCardIconPlaced.png',\r\n    }\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  centeredProfile: {\r\n    marginTop: '20px',\r\n    display: 'inline-block',\r\n  },\r\n  expandedPanelDCH: {\r\n    background: 'linear-gradient(70deg, #fff810  30%, rgba(0,0,0,0) 30%), linear-gradient(30deg, #63e89e 60%, #ff7ee3 60%)'\r\n  }\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport DailyChallengeScores from '../components/DailyChallengeScores';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport FindGameElements from \"../containers/FindGameElements\";\r\nimport {GOAL_IMAGE} from '../constants/constants';\r\n\r\n\r\nexport default function ComplexGrid(props) {\r\n    const classes = useStyles();\r\n\r\n    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n        return (<div className={classes.homepage} >\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                        </Typography>\r\n                        <Typography variant=\"p1\" paragraph={true}>Puzzle Game for anyone to play! Create your own custom boards or play a random Solved game. <br/>Goal is to get ANY piece to stop on the  <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                        </Typography>\r\n                        <br/>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                        <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                        </Typography>\r\n                        <Typography> Robots Evolved New Homepage!!! <br/>Almost Done with the project expect a release date of 8/1/2020\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container item alignItems={\"stretch\"} spacing={2} alignItems=\"center\" justify=\"center\" >\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickCreateGame}>\r\n                                    <CardMedia\r\n                                        className={classes.createboardcard}\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                        title=\"Create Board\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Create Board\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickFindGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Find a Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/FindAGameCardIcon.png\"\r\n                                        title=\"Find a Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Find a Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/DailyChallengeIcon.png\"\r\n                                        title=\"Daily Challenge\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Daily Challenge\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickRandomGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Play a Random Game\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/puzzle.png\"\r\n                                        title=\"Play a Random Game\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Play a Random Game\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickLearnGame}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Create Board\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                        title=\"Learn\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                            Learn\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                            <Card className={classes.iconcards}>\r\n                                <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Contemplative Reptile\"\r\n                                        height=\"140\"\r\n                                        image=\"/static/images/PuzzleRushIcon.png\"\r\n                                        title=\"Contemplative Reptile\"\r\n                                    />\r\n                                    <CardContent style={{textAlign: 'center'}}>\r\n                                        <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            Puzzle Rush\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}} >\r\n                    <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                    </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            Medium Mondays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">(Medium,Medium,Medium,Medium)</Typography>\r\n                            Tryhard Teusdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">(ExHard,ExHard,Hard,Hard)</Typography>\r\n                            Wild Wednesdays <br/>\r\n                            <Typography paragraph={true} variant=\"caption\">Hard,Hard,Medium,Medium)</Typography>\r\n                            Tilted Thursday<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">(ExHard,Hard,Medium,Easy)</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">(Medium,Easy,Easy,Easy)</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">(Medium,Easy,Easy,Easy)</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">(Hard,Medium,Medium,Easy)</Typography>\r\n                        </Typography>\r\n                        <Typography style={{marginTop: '30px'}} className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                        </Typography>\r\n                        <DailyChallengeScores highscores={window.dchighscores}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (<div className={classes.homepage}>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> Controls\r\n                    </Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Movement\r\n                        </Typography>\r\n                    <img width={'20%'} height={'auto'} src={\"/static/images/keyboard.png\"}/>\r\n                    <Typography>Pieces Move until they hit a wall or another piece</Typography>\r\n                    <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Selecting robots\r\n                        </Typography>\r\n                        <img width={'20%'} height={'auto'} src={\"/static/images/tab.png\"}/>\r\n\r\n                    <Typography>Or click</Typography>\r\n                    <Divider/>\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            HotKeys\r\n                        </Typography>\r\n                        <img width={'20%'} height={'auto'} src={\"/static/images/spacebar.png\"}/> <Typography display={'block'}>Undo</Typography>\r\n                        <img width={'20%'} height={'auto'} src={\"/static/images/enterkey.png\"}/> <Typography>Reset</Typography>\r\n                    <Divider />\r\n                    <div style={{marginTop:'100px'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h4\"> News\r\n                    </Typography>\r\n                    <Typography> Robots Evolved New Homepage!!! <br/>Almost Done with the project expect a release date of 8/7/2020\r\n                    </Typography>\r\n                    </div>\r\n\r\n\r\n                </Grid>\r\n                <Grid item xs={8} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                    <Typography className={classes.titlehome} variant=\"h3\"> Welcome To RobotsEvolved\r\n                    </Typography>\r\n                    <Typography paragraph={true} variant=\"p1\">Puzzle Game for anyone to play! Create your own custom boards or play a random Solved game.<br/>Goal is to get ANY piece to stop on the  <img style={{width: '40px',height:'40px'}} src={GOAL_IMAGE}/>\r\n                    </Typography>\r\n                    <br/>\r\n                        <img width=\"400\" height=\"225\" src='/static/videos/basic.gif'/>\r\n                    <br/>\r\n                    <Card className={classes.iconcards}>\r\n                              <CardActionArea onClick={props.handleClickCreateGame}>\r\n                                <CardMedia\r\n                                  className={classes.createboardcard}\r\n                                  component=\"img\"\r\n                                  alt=\"Create Board\"\r\n                                  height=\"140\"\r\n                                  image=\"/static/images/CreateBoardCardIcon.png\"\r\n                                  title=\"Create Board\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Create Board\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </Card>\r\n                            <Card className={classes.iconcards}>\r\n                              <CardActionArea onClick={props.handleClickFindGame}>\r\n                                <CardMedia\r\n                                  component=\"img\"\r\n                                  alt=\"Find a Game\"\r\n                                  height=\"140\"\r\n                                  image=\"/static/images/FindAGameCardIcon.png\"\r\n                                  title=\"Find a Game\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Find a Game\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </Card>\r\n                            <Card className={classes.iconcards}>\r\n                              <CardActionArea onClick={props.handleClickDailyChallenge}>\r\n                                <CardMedia\r\n                                  component=\"img\"\r\n                                  alt=\"Create Board\"\r\n                                  height=\"140\"\r\n                                  image=\"/static/images/DailyChallengeIcon.png\"\r\n                                  title=\"Daily Challenge\"\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Daily Challenge\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </Card>\r\n                            <Card className={classes.iconcards}>\r\n                    <CardActionArea onClick={props.handleClickRandomGame}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\"Play a Random Game\"\r\n                            height=\"140\"\r\n                            image=\"/static/images/puzzle.png\"\r\n                            title=\"Play a Random Game\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                Play a Random Game\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickLearnGame}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Create Board\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/LessonsBoardCardIcon.png\"\r\n                                title=\"Learn\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom className={classes.iconfonts} variant=\"h5\" component=\"h2\">\r\n                                    Learn\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Card className={classes.iconcards}>\r\n                        <CardActionArea onClick={props.handleClickPuzzleRush}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Contemplative Reptile\"\r\n                                height=\"140\"\r\n                                image=\"/static/images/PuzzleRushIcon.png\"\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent style={{textAlign: 'center'}}>\r\n                                <Typography className={classes.iconfonts} gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    Puzzle Rush\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={2} spacing={3} alignItems=\"center\" justify=\"center\" style={{textAlign: 'center'}}>\r\n                <Typography className={classes.titledailyroto} variant=\"h4\"> Daily Challenge Rotation\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                            Medium Mondays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">(Medium,Medium,Medium,Medium)</Typography>\r\n                            Tryhard Teusdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">(ExHard,ExHard,Hard,Hard)</Typography>\r\n                            Wild Wednesdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">(Hard,Hard,Medium,Medium)</Typography>\r\n                            Tilted Thursday<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">(ExHard,Hard,Medium,Easy)</Typography>\r\n                            Flyin Fridays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">(Medium,Easy,Easy,Easy)</Typography>\r\n                            Sleepy Saturdays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">(Medium,Easy,Easy,Easy)</Typography>\r\n                            Standard Sundays<br/>\r\n                            <Typography paragraph={true} variant=\"caption\">(Hard,Medium,Medium,Easy)</Typography>\r\n                </Typography>\r\n                <Typography className={classes.titlehome} variant=\"h4\"> Daily Challenge Scores\r\n                </Typography>\r\n                <DailyChallengeScores highscores={window.dchighscores}/>\r\n                </Grid>\r\n              </Grid>\r\n           </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./modal.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst stylecol = () => {\r\n    return({\r\n            float: 'left',\r\n            width: '50%',\r\n            margin: 'auto',\r\n            padding: '0 50px',\r\n            marginTop: '6px',\r\n    });\r\n}\r\n\r\nconst spacing = () => {\r\n    return({\r\n            marginBottom: '10px',\r\n    });\r\n}\r\n\r\nexport default class LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    loginGoogle = event => {\r\n        event.preventDefault();\r\n        window.location.href = \"/login/google\";\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.props.closeLoginModal}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={this.props.closeLoginModal}>Login to RobotsEvolved</DialogTitle>\r\n                <DialogContent dividers>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                           • Gain <FaCrown/>s when winning the Daily Challenge (stacks)\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography style={spacing()} variant=\"body2\" display=\"inline\">\r\n                            • Saving settings and your moves in the daily challenge\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography variant=\"body2\" display=\"inline\">\r\n                            • Profile Page to keep track of your submissions.\r\n                        </Typography>\r\n                    <div class=\"col\">\r\n                        <a href=\"#\" id={\"buttonfb\"}>\r\n                          <i class=\"fa fa-facebook fa-fw\"></i> Login with Facebook\r\n                         </a>\r\n                        <a onClick={this.loginGoogle} href=\"#\" id={\"buttongoogle\"}><i class=\"fa fa-google fa-fw\">\r\n                          </i> Login with Google\r\n                        </a>\r\n                    </div>\r\n                    <Typography variant=\"caption\" display=\"block\">\r\n                            We will NEVER distribute/sell your email or profileID.\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeLoginModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class SignInButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = event => {\r\n        if (window.loggedin == 'Yes') {\r\n            return this.props.onClick('Logout');\r\n        }\r\n        else {\r\n            return this.props.onClick('Sign in');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if (window.loggedin == 'Yes') {\r\n            var textToShow = 'Logout';\r\n        }\r\n        else {\r\n            var textToShow = 'Sign in';\r\n        }\r\n        return (\r\n            <Button color=\"black\" onClick={this.handleClick}><b>{textToShow}</b></Button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport SignInButton from './SignInButton';\r\n\r\n\r\nconst style = () => {\r\n    return {\r\n        borderRadius: '50%',\r\n        height: '40px',\r\n        width: '40px',\r\n        marginTop: '5px',\r\n    };\r\n};\r\n\r\nconst divStyle = () => {\r\n    return {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        width: '200px',\r\n    };\r\n};\r\n\r\nexport default class LoggedInUser extends React.Component {\r\n\r\n    SignInButtonPressed = () => {\r\n        this.props.handleClick('Sign in');\r\n    }\r\n\r\n    render () {\r\n        if (window.loggedin == 'No') {\r\n            return <SignInButton onClick={this.SignInButtonPressed}/>\r\n        }\r\n        else {\r\n            return (\r\n                <div style={divStyle()}>\r\n                    <div>{window.userInfo.username}</div>\r\n                    <div class=\"dasher\">\r\n                        <img src={window.userInfo.profilePicture} style={style()}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickPuzzleRushModal = (difficulty) => {\r\n        console.log(difficulty)\r\n        axios.post('/puzzlerush', {difficulty: difficulty, action: 'start',type: this.state.value})\r\n                .then( res => {\r\n                        var games = JSON.parse(res.data.games);\r\n                        var p_id = res.data.p_id;\r\n                        this.setState({\r\n                            isLoading: false,\r\n                        });\r\n                        this.props.handleClickPuzzleRush(difficulty,games,p_id);\r\n                });\r\n    };\r\n\r\n    handleClickEasyPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMediumPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHardPuzzleRush = (event) => {\r\n        event.preventDefault();\r\n        this.handleClickPuzzleRushModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                                {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                                                        ) : (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                         <Grid item xs={6}>\r\n                                         <ButtonGroup\r\n                                            orientation=\"vertical\"\r\n                                            color=\"primary\"\r\n                                            aria-label=\"vertical outlined primary button group\"\r\n                                          >\r\n                                            <Button onClick={this.handleClickEasyPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Easy\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickMediumPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Medium\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Hard\r\n                                            </Button>\r\n                                            <Button onClick={this.handleClickExHardPuzzleRush} variant=\"contained\" color=\"primary\">\r\n                                                Exteremely Hard\r\n                                            </Button>\r\n                                          </ButtonGroup>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <FormControl component=\"fieldset\">\r\n                                              <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                              <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                                <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                                <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                              </RadioGroup>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst divStyle = () => {\r\n    return ({\r\n            display: 'flex',\r\n            marginTop: '50px',\r\n            marginBottom: '50px'\r\n        });\r\n}\r\n\r\nclass PuzzleRushDifficultyModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            value: 'classic',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.show = false;\r\n    };\r\n\r\n    handleClickRandomGameModal = (difficulty,type) => {\r\n        axios.get('/randomgame?difficulty=' + difficulty + '&type=' + type)\r\n            .then( res => {\r\n                var game = JSON.parse(res.data.game);\r\n                this.setState({\r\n                    isLoading: false,\r\n                });\r\n                this.props.handleClickRandomGame(game,difficulty);\r\n            })\r\n    }\r\n\r\n    handleClickEasy = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('easy',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickMedium = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('medium',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickHard = event => {\r\n        event.preventDefault();\r\n         this.handleClickRandomGameModal('hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickExHard = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('Exteremly Hard',this.state.value)\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    handleClickGodMode = event => {\r\n        event.preventDefault();\r\n        this.handleClickRandomGameModal('GodTeir',this.state.value)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {value: event.target.value}\r\n        )\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dialog onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title-2\"\r\n                    open={this.props.show}\r\n                    maxWidth={\"xs\"}\r\n                    fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"customized-dialog-title-2\" onClose={this.handleClose}>Select a Difficulty</DialogTitle>\r\n                <DialogContent dividers>\r\n                            {this.state.isLoading ? (\r\n                                    <Grid\r\n                                        container xs={12}\r\n                                        spacing={4}\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        justify=\"center\"\r\n                                        wrap=\"nowrap\"\r\n                                    >\r\n                                        <div style={divStyle()}>\r\n                                              <CircularProgress />\r\n                                         </div>\r\n                                    </Grid>\r\n                            ) : (\r\n                            <Grid\r\n                                container xs={12}\r\n                                spacing={4}\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n                                wrap=\"nowrap\"\r\n                            >\r\n                                <Grid item xs={6}>\r\n                                    <ButtonGroup\r\n                                        orientation=\"vertical\"\r\n                                        color=\"primary\"\r\n                                        aria-label=\"vertical outlined primary button group\"\r\n                                      >\r\n                                        <Button onClick={this.handleClickEasy} variant=\"contained\" color=\"primary\">\r\n                                            Easy\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickMedium} variant=\"contained\" color=\"primary\">\r\n                                            Medium\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickHard} variant=\"contained\" color=\"primary\">\r\n                                            Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickExHard} variant=\"contained\" color=\"primary\">\r\n                                            Extremely Hard\r\n                                        </Button>\r\n                                        <Button onClick={this.handleClickGodMode} variant=\"contained\" color=\"primary\">\r\n                                            God Tier\r\n                                        </Button>\r\n                                     </ButtonGroup>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <FormControl component=\"fieldset\">\r\n                                      <FormLabel component=\"legend\">Game Type</FormLabel>\r\n                                      <RadioGroup aria-label=\"game type\" name=\"gametype\" value={this.state.value} onChange={this.handleChange}>\r\n                                        <FormControlLabel value=\"classic\" control={<Radio />} label=\"Classic\" />\r\n                                        <FormControlLabel value=\"random\" control={<Radio />} label=\"Random\" />\r\n                                      </RadioGroup>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                            )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.closeModal}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default PuzzleRushDifficultyModal;\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst mainStyle = () => {\r\n    return {\r\n        marginRight: '25px',\r\n        marginTop: '25px',\r\n        marginBottom: '50px',\r\n        marginLeft: '50px',\r\n        paddingRight: '25px',\r\n        paddingLeft: '25px',\r\n        paddingTop: '25px',\r\n        paddingBottom: '25px',\r\n        float: 'left',\r\n    }\r\n}\r\n\r\nconst highscoresStyle = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n    }\r\n\r\n}\r\n\r\n\r\nclass GameListItemView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleGameClick = () => {\r\n        this.props.handleGameClick(this.props.game.puzzledata,this.props.highscores,this.props.game.uri);\r\n    }\r\n\r\n\r\n render() {\r\n        var highscore = this.props.highscore;\r\n        if (typeof highscore === 'undefined') {\r\n            highscore = {\r\n                comment: '',\r\n                numMoves: '',\r\n            }\r\n        }\r\n        return (\r\n        <div style={mainStyle()}>\r\n            <div>\r\n                <h2 onClick={this.handleGameClick}>{this.props.game.name}</h2>\r\n            </div>\r\n            <div style={highscoresStyle()}><h4>Highscore:</h4>\r\n                <div><div>{highscore.comment}</div><div>{highscore.numMoves}</div></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default GameListItemView","import React from 'react';\r\n\r\nconst buttonpanel = () => {\r\n    return {\r\n        marginRight: '5px',\r\n        marginTop: '15px',\r\n        marginBottom: '15px',\r\n        float: 'left',\r\n    };\r\n}\r\nclass SearchBarFindGame extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.submitSearch} style={buttonpanel()}>\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n                <input style={buttonpanel()} id={\"searchBarFindGame\"} type={\"text\"} placeholder={\"Search\"}>\r\n                </input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBarFindGame;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageCreatedGamesDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.game.name,props.game.puzzledata,[],props.game.uri);\r\n    }\r\n\r\n    return (<div>\r\n            <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography> Highscore Holder: </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.game.username} - {props.game.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ProfilePageSolutionDetails(props) {\r\n    const handleClickPlayGame = () => {\r\n        props.handleClickPlayGame(props.solution.name,props.solution.puzzledata,[],props.solution.uri);\r\n    }\r\n    return (<div>\r\n              <Grid container xs={12}>\r\n                <Grid item xs={6}>\r\n                    <Typography color={'secondary'} variant={'body2'}> {props.solution.WinnerCreated} </Typography>\r\n                </Grid>\r\n                 <Grid item xs={6}>\r\n                  <Typography>\r\n                    {props.solution.WinnerUsername} - {props.solution.numMoves}\r\n                  </Typography>\r\n              </Grid>\r\n              </Grid>\r\n              <Button onClick={handleClickPlayGame} variant=\"contained\" color=\"primary\">\r\n                    Play\r\n              </Button>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport GameListItemView from '../components/GameListItemView';\r\nimport SearchBarFindGame from '../components/SearchBarFindGame';\r\nimport FindGameElements from '../containers/FindGameElements'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport axios from 'axios';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport useStyles from '../Material-UI/themes';\r\nimport ProfilePageCreatedGamesDetails from '../components/ProfilePageComponents/ProfilePageCreatedGamesDetails';\r\nimport ProfilePageSolutionDetails from '../components/ProfilePageComponents/ProfilePageSolutionDetails';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\n\r\nexport default function ProfilePage(props) {\r\n    const classes = useStyles();\r\n    const submitAnswer = () => {\r\n        axios.post('/userUpdate',{newuser: document.getElementById(\"ProfileName\").value})\r\n            .then( res => {\r\n                if (res.data == 'OK') {\r\n                    window.location.href = '/';\r\n                }\r\n                else {\r\n                    setError(res.data);\r\n                }\r\n            });\r\n    };\r\n\r\n    const [error, setError] = React.useState(null)\r\n    const [expandedGame, setExpandedGame] = React.useState(false);\r\n    const [expandedHighscores, setExpandedHighscores] = React.useState(false);\r\n    const handleChangeGame = (panel) => (event, isExpandedGame) => {\r\n        setExpandedGame(isExpandedGame ? panel : false);\r\n    };\r\n    const handleChangeHighscores = (panel) => (event, isExpandedHighScores) => {\r\n        setExpandedHighscores(isExpandedHighScores ? panel : false);\r\n    };\r\n    console.log(props.puzzlerushview);\r\n    return (\r\n            <div style={gamepanel()}>\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <TextField className={classes.centeredProfile} id={\"ProfileName\"} label={\"Username\"} defaultValue={window.userInfo.username}/>\r\n                        <Button className={classes.centeredProfile} variant=\"contained\" color=\"secondary\" onClick={submitAnswer}>Change Username</Button>\r\n                        <Typography color={\"secondary\"}>{error}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Created</Typography>\r\n                        {\r\n                            props.gamesview.map((game,index) =>\r\n                                    <ExpansionPanel expanded={expandedGame === 'panelgame' + index} onChange={handleChangeGame('panelgame' + index)}>\r\n                                        <ExpansionPanelSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls={\"panel\" + index + \"-content\"}\r\n                                          id={\"panel\" + index + \"-header\"}\r\n                                        >\r\n                                          <Typography className={classes.heading}>{game.name}</Typography>\r\n                                          <Typography className={classes.secondaryHeading}>Plays: {game.plays}</Typography>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails>\r\n                                          <ProfilePageCreatedGamesDetails\r\n                                            game={game}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                          />\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Games Solved</Typography>\r\n                        {\r\n                            props.solutionsview.map((solution,index) =>\r\n                                <ExpansionPanel expanded={expandedHighscores === 'panelhigh' + index} onChange={handleChangeHighscores('panelhigh' + index)}>\r\n                                    <ExpansionPanelSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls={\"panel\" + index + \"-content\"}\r\n                                      id={\"panel\" + index + \"-header\"}\r\n                                    >\r\n                                      <Typography className={classes.heading}>{solution.name}</Typography>\r\n                                      <Typography className={classes.secondaryHeading}>Best: {solution.numMoves}</Typography>\r\n                                      {solution.WinnerUserId == window.userInfo.userID ? <FaCrown style={{marginLeft: '30px'}}/> : null}\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <ProfilePageSolutionDetails\r\n                                            solution={solution}\r\n                                            handleClickPlayGame={props.handleClickPlayGame}\r\n                                        />\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <Typography className={classes.titlehome} variant=\"h3\">Puzzle Rush Data:</Typography>\r\n                        <Paper>\r\n                              <Typography className={classes.heading}>Easy</Typography>\r\n                              <Typography className={classes.secondaryHeading}>Best Score: {props.puzzlerushview.maxeasy}</Typography>\r\n                              <Typography>\r\n                                Average Score: {props.puzzlerushview.averageeasy}\r\n                              </Typography>\r\n                              <Typography>\r\n                                Average Difference of Moves from Optimal Solution: {props.puzzlerushview.averagediffeasy}\r\n                              </Typography>\r\n                          </Paper>\r\n                          <br/>\r\n                          <Paper>\r\n                              <Typography className={classes.heading}>Medium</Typography>\r\n                              <Typography className={classes.secondaryHeading}>Best Score: {props.puzzlerushview.maxmedium}</Typography>\r\n                              <Typography>\r\n                                Average Score: {props.puzzlerushview.averagemedium}\r\n                              </Typography>\r\n                              <Typography>\r\n                                Average Difference of Moves from Optimal Solution: {props.puzzlerushview.averagediffmedium}\r\n                              </Typography>\r\n                            </Paper>\r\n                            <br/>\r\n                            <Paper>\r\n                              <Typography className={classes.heading}>Hard</Typography>\r\n                              <Typography className={classes.secondaryHeading}>Best Score: {props.puzzlerushview.maxhard}</Typography>\r\n                              <Typography>\r\n                                Average Score: {props.puzzlerushview.averagehard}\r\n                              </Typography>\r\n                              <Typography>\r\n                                Average Difference of Moves from Optimal Solution: {props.puzzlerushview.averagediffhard}\r\n                              </Typography>\r\n                            </Paper>\r\n                            <br/>\r\n                            <Paper>\r\n                              <Typography className={classes.heading}>Extremely Hard</Typography>\r\n                              <Typography className={classes.secondaryHeading}>Best Score: {props.puzzlerushview.maxexhard}</Typography>\r\n                              <Typography>\r\n                                Average Score: {props.puzzlerushview.averageexhard}\r\n                              </Typography>\r\n                              <Typography>\r\n                                Average Difference of Moves from Optimal Solution: {props.puzzlerushview.averagediffexhard}\r\n                              </Typography>\r\n                            </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nexport default function RandomGamePage(props) {\r\n    return (\r\n        <Game\r\n              handleLineDirections={props.handleLineDirections}\r\n              LineDirections={props.LineDirections}\r\n              randomGame={'Yes'}\r\n              game={props.game}\r\n              difficulty={props.difficulty}\r\n         />\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass PuzzleRushPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                  handleLineDirections={this.props.handleLineDirections}\r\n                  LineDirections={this.props.LineDirections}\r\n                  puzzleRush={'Yes'}\r\n                  p_id={this.props.p_id}\r\n                  games={this.props.games}\r\n                  difficulty={this.props.difficulty}\r\n             />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PuzzleRushPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass LessonsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                learnMode={'Yes'}\r\n                games={window.learngameslist}/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default LessonsPage;","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengePage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Game handleClickDailyChallenge={this.props.handleClickDailyChallenge} handleLineDirections={this.props.handleLineDirections} LineDirections={this.props.LineDirections} dailyChallengeMode={'Yes'} playerStateList={this.props.playerStateList} savedMoves={this.props.savedMoves} games={this.props.dailyChallengeGameslist} dc_id={this.props.dc_id} highscores={this.props.dchighscores}\r\n             />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengePage;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Card} from \"@material-ui/core\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function AboutUs(props) {\r\n    return (<div style={gamepanel()}>\r\n                <Grid container spacing={4} alignItems={\"stretch\"}>\r\n                    <Grid item spacing={4} xs={12} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Typography variant={'body1'}>\r\n                            RobotsEvolved.com is based on the board game Ricochet Robots.\r\n                            We have several game modes and variants that are inspired by the several Chess variants on the internet.\r\n                            If you use Google Login or Facebook Login we will never email or sell your information.\r\n                            Tell your friends about the site and get people on here!\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Daily Challenge Rotation\r\n                                </Typography>\r\n                                <Typography variant={\"body1\"} paragraph={true}>\r\n                                    The Daily Challenge rotates its difficulty every day as specified below (random order)\r\n                                    <br/>\r\n                                    Medium Mondays - (Medium,Medium,Medium,Medium)\r\n                                    <br/>\r\n                                    Tryhard Teusdays - (ExHard,ExHard,Hard,Hard)\r\n                                    <br/>\r\n                                    Wild Wednesdays - (Hard,Hard,Medium,Medium)\r\n                                    <br/>\r\n                                    Tilted Thursday - (ExHard,Hard,Medium,Easy)\r\n                                    <br/>\r\n                                    Flyin Fridays - (Medium,Easy,Easy,Easy)\r\n                                    <br/>\r\n                                    Sleepy Saturdays - (Medium,Easy,Easy,Easy)\r\n                                    <br/>\r\n                                    Standard Sundays - (Hard,Medium,Medium,Easy)\r\n                                </Typography>\r\n                                <Typography color={'textPrimary'} variant={\"h4\"}>\r\n                                    Classic Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body1\"} paragraph={true}>\r\n                                    Classic Puzzles are based on the original Game. These Puzzles only have walls that are L shaped and a goal is in the center of one of them.\r\n                                </Typography>\r\n                                <Typography variant={\"h4\"} display={\"inline\"}>\r\n                                    Random Puzzles\r\n                                </Typography>\r\n                                <Typography variant={\"body1\"} paragraph={true}>\r\n                                    Random Puzzles are created by having a 10% chance for a wall to spawn in Any location possible wall location, Goals and Robot placements are completely random also.\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid spacing={4} item xs={12} sm={6} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Easy\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 5-8 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Medium\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 9-13 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 13-18 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"} >\r\n                                    Extremely Hard\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in 18-23 Moves\r\n                                </Typography>\r\n                                <Typography variant={\"h5\"}>\r\n                                    God Tier\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} paragraph={true}>\r\n                                    Puzzles of this difficulty always can be solved in over 23 Moves, Note: there are a low number of these puzzles due to the CPU required to create them\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <Paper class=\"card3\">\r\n                          <img src={\"/static/images/284457_10151211078621477_839164197_n.jpg\"} alt=\"Jane\"/>\r\n                          <div class=\"container3\">\r\n                            <h2>Kyle Kwasniewski</h2>\r\n                            <p class=\"title3\">Creator &amp; FullStack Dev.</p>\r\n                            <p>I work in Software Development and Dev-Ops in New York and consider myself a Ricochet Robots enthusiast so I decided to make this application as a way to better hone my skill in web frameworks as well as pass the time during the quarantine. If you find any bugs or feature requests for robotsevolved please let me know by emailing me below. Ill get to developing the feature/fixing annoying bugs.</p>\r\n                            <p>Thanks for playing!</p>\r\n                            <p>robotsevolved@gmail.com</p>\r\n                          </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/284f909d-0d5c-4ae1-b100-76c9d46ae7d4.png\"} alt=\"Mike\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Jonah Tollefson</h2>\r\n                                <p className=\"title3\">Front-End Dev.</p>\r\n                                <p>Went to college with these other goobers in the US and now I work professionally as a\r\n                                    software engineer in Germany. For RobotsEvolved, I mainly worked on the frontend\r\n                                    using React. Cats and Ultimate Frisbee are life.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item spacing={4} xs={12} sm={4} justify={\"center\"} alignItems={\"center\"}>\r\n                        <div className=\"card3\" style={{height: \"480px\"}}>\r\n                            <img src={\"/static/images/derekschultz.jpg\"} alt=\"John\"/>\r\n                            <div className=\"container3\">\r\n                                <h2>Derek Schultz</h2>\r\n                                <p className=\"title3\">Back-End Dev.</p>\r\n                                <p>Full time Software Engineer. Graduated from University of Wisconsin Platteville\r\n                                    with a BS in Computer Science and Minor in Business Administration. Worked on\r\n                                    most of the database aspect of RobotsEvolved and some back end functionality. I\r\n                                    enjoy video games, beer, and playing darts.</p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n\r\n\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\n\r\nexport default function ShowDailyPuzzleHistory(props) {\r\n    const handleDailyPuzzleHistoryClick = event => {\r\n        console.log(props.history)\r\n        props.handleDailyPuzzleHistoryClick(props.history)\r\n    }\r\n    return (\r\n            <Button style={window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? {marginLeft: '5px'} : {marginLeft: '60px'}} variant=\"contained\" size=\"small\" color=\"primary\" onClick={handleDailyPuzzleHistoryClick}>\r\n                 show answers\r\n            </Button>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\nimport useStyles from '../Material-UI/themes';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { FaCrown } from 'react-icons/fa';\r\nimport ShowDailyPuzzleHistory from '../components/ShowDailyPuzzleHistory';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ProfilePageCreatedGamesDetails from \"../components/ProfilePageComponents/ProfilePageCreatedGamesDetails\";\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"../constants/constants\";\r\n\r\nconst gamepanel = () => {\r\n    return {\r\n        width: '100%',\r\n        paddingTop: '40px',\r\n        paddingLeft: window.innerWidth < MOBILE_INNER_SCREEN_WIDTH ? '0px' : '40px',\r\n        margin: '0 auto',\r\n        align: 'center',\r\n    }\r\n}\r\n\r\nexport default function DailyChallengeHistory(props) {\r\n    const [expandedPanel, setExpandedPanel] = React.useState(false);\r\n    const handleChangePanel = (panel) => (event, isExpanded) => {\r\n        setExpandedPanel(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles();\r\n    return (<div style={gamepanel()}>\r\n                <Typography className={classes.titlehome} variant=\"h3\">Daily Challenge History</Typography>\r\n                {\r\n                    props.dailychallengehistory.map((history, index) =>\r\n                        <ExpansionPanel expanded={expandedPanel === 'panelgame' + index} onChange={handleChangePanel('panelgame' + index)}>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls={\"panel\" + index + \"-content\"}\r\n                                id={\"panel\" + index + \"-header\"}\r\n                            >\r\n                                <Typography className={classes.heading}>{history.created}</Typography>\r\n                                <Typography className={classes.secondaryHeading}>Winner: {history.nameSubmitted}</Typography>\r\n                                <ShowDailyPuzzleHistory history={history} handleDailyPuzzleHistoryClick={props.handleDailyPuzzleHistoryClick}/>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        <FaCrown/> {history.nameSubmitted} - {history.scoreSubmitted} <FaCrown/>\r\n                                    </Typography>\r\n                                    <Typography className={classes.secondaryHeading}>Lowest possible solution: {history.bestScore}</Typography>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                    )\r\n                }\r\n           </div>\r\n    )\r\n}","import React from 'react';\r\nimport Game from '../containers/Game';\r\n\r\nclass DailyChallengeHistoryAnswersPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        console.log(this.props.history);\r\n        return (\r\n            <Game\r\n                handleLineDirections={this.props.handleLineDirections}\r\n                LineDirections={this.props.LineDirections}\r\n                dailyChallengeModeAnswers={'Yes'}\r\n                nameSubmitted={this.props.history.nameSubmitted}\r\n                bestScore={this.props.history.bestScore}\r\n                created={this.props.history.created}\r\n                games={this.props.history.games}\r\n                playerStateList={this.props.history.playerStateList}\r\n                scoreSubmitted={this.props.history.scoreSubmitted}\r\n                solutionDataSubmitted={this.props.history.solutionDataSubmitted}\r\n                submitted={this.props.history.submitted}\r\n                user_id={this.props.user_id}\r\n                />\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DailyChallengeHistoryAnswersPage;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n  },\r\n}));\r\n\r\nexport default function LoadingPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress size={120} color=\"secondary\" />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CasinoIcon from '@material-ui/icons/Casino';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport clsx from 'clsx';\r\nimport CreateGame from './Pages/CreateGame';\r\nimport FindGame from './Pages/FindGame';\r\nimport PlayGame from './Pages/PlayGame';\r\nimport Home from './Pages/Home';\r\nimport LoginModal from './containers/Modals/LoginModal';\r\nimport LoggedInUser from './components/LoggedInUser';\r\nimport SignInButton from './components/SignInButton';\r\nimport axios from 'axios';\r\nimport Game from './containers/Game';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {MOBILE_INNER_SCREEN_WIDTH} from \"./constants/constants\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport PuzzleRushDifficultyModal from \"./containers/Modals/PuzzleRushDifficultyModal\";\r\nimport RandomGameDifficultyModal from \"./containers/Modals/RandomGameDifficultyModal\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport RandomGamePage from \"./Pages/RandomGamePage\";\r\nimport PuzzleRushPage from \"./Pages/PuzzleRushPage\";\r\nimport LessonsPage from \"./Pages/LessonsPage\";\r\nimport DailyChallengePage from \"./Pages/DailyChallenge\";\r\nimport AboutUs from \"./Pages/AboutUs\";\r\nimport DailyChallengeHistory from \"./Pages/DailyChallengeHistory\";\r\nimport DailyChallengeHistoryAnswersPage from \"./Pages/DailyChallengeHistoryAnswersPage\";\r\nimport { FaMedal } from 'react-icons/fa';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport LoadingPage from './components/LoadingPage';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    drawerHeaderRight: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerHeaderLeft: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    toolbar1: {\r\n        backgroundColor: '#14A76C',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    dividerFullWidth: {\r\n        margin: `5px 0 0 ${theme.spacing(2)}px`,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    darkmode: {\r\n          body: '#363537',\r\n          text: '#FAFAFA',\r\n          toggleBorder: '#6B8096',\r\n          gradient: 'linear-gradient(#091236, #1E215D)',\r\n    },\r\n});\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (window.uri === '') {\r\n            this.state = {\r\n                PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n                dailychallengehistoryloaded: false,\r\n                profileDataloaded: false,\r\n            };\r\n        }\r\n        else {\r\n            if (window.token.g_id == undefined) {\r\n                const linedir = window.userInfo == undefined ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={linedir} name={window.token.name} gamedata={window.token.puzzledata} highscores={window.highscores} uri={window.uri}/>, //when uri is entered to play specific game\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                };\r\n            }\r\n            else {\r\n                const linedir = window.userInfo == undefined ? true : window.userInfo.LineDirFlag === 'Y';\r\n                this.state = {\r\n                    PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={linedir} randomGame={'Yes'} game={window.token} difficulty={window.token.g_difficulty}/>,\r\n                    dailychallengehistoryloaded: false,\r\n                    profileDataloaded: false,\r\n                }\r\n            }\r\n        }\r\n        this.state.open = false;\r\n        this.state.mobileAnchorEl = null;\r\n        this.state.mobileMenuOpen = false;\r\n        this.state.showLoginModal = false;\r\n        this.state.showPuzzleRushModal = false;\r\n         if (window.loggedin === 'Yes') {\r\n            this.state.LineDirections = window.userInfo.LineDirFlag === 'Y';\r\n         }\r\n         else {\r\n            this.state.LineDirections = true;\r\n         }\r\n    }\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState( {\r\n            open: false\r\n        })\r\n    };\r\n\r\n    handleLineDirections = (boolean) => {\r\n        if (window.loggedin === 'Yes') {\r\n            axios.post('/settingsChange', {LineDirections: boolean ? 'Y' : 'N'})\r\n                .then( res => {\r\n                    console.log('changed');\r\n                });\r\n        }\r\n        this.setState({\r\n            LineDirections: boolean\r\n        });\r\n    }\r\n\r\n    handleClickDailyChallenge = () => {\r\n        axios.get('/getDailyChallengeData')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    const dc_movesList = res.data.dc_movesList == null ? null : JSON.parse(res.data.dc_movesList)\r\n                    const dc_playerList = res.data.dc_playerList == null ? null : JSON.parse(res.data.dc_playerList)\r\n                    this.setState({\r\n                                    PageSelected: <DailyChallengePage\r\n                                                        handleClickDailyChallenge={this.handleClickDailyChallenge}\r\n                                                        dailyChallengeGameslist={JSON.parse(res.data.dailyChallengeGameslist)}\r\n                                                        dc_id={res.data.dc_id}\r\n                                                        dchighscores={JSON.parse(res.data.dchighscores)}\r\n                                                        handleLineDirections={this.handleLineDirections}\r\n                                                        LineDirections={this.state.LineDirections}\r\n                                                        savedMoves={dc_movesList}\r\n                                                        playerStateList={dc_playerList}\r\n                                    />,\r\n                                    open: isOpen\r\n                                });\r\n                    });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState( {\r\n            open: true\r\n        });\r\n    };\r\n\r\n    SignInButtonPressed = (type) => {\r\n        if (type === 'Sign in') {\r\n            this.setState({\r\n                showLoginModal: true\r\n            });\r\n        }\r\n        else {\r\n            window.location.href = \"/auth/logout\";\r\n        }\r\n    };\r\n\r\n    handleClickRandomGameModal = (game,difficulty) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showRandomGameModal: false,\r\n            PageSelected: <RandomGamePage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} randomGame={'Yes'} game={game} difficulty={difficulty}/>,\r\n            open: isOpen\r\n        });\r\n    }\r\n\r\n    handleClickRandomGame = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: true,\r\n        });\r\n    }\r\n\r\n\r\n    handleClickPuzzleRush = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: true,\r\n        });\r\n    };\r\n\r\n    handleClickDailyChallengeHistory = (event) => {\r\n        event.preventDefault();\r\n        axios.get('/getDailyChallengeHistory')\r\n            .then( res => {\r\n                    var isOpen = this.state.open;\r\n                    if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                        isOpen = false\r\n                    }\r\n                    var historydata = JSON.parse(res.data)\r\n                    this.setState({\r\n                        PageSelected: <DailyChallengeHistory handleDailyPuzzleHistoryClick={this.handleDailyPuzzleHistoryClick} dailychallengehistory={historydata}/>,\r\n                        challengeHistoryData: historydata,\r\n                        dailychallengehistoryloaded: true,\r\n                        open: isOpen\r\n                    });\r\n            });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    }\r\n\r\n    handleDailyPuzzleHistoryClick = history => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <DailyChallengeHistoryAnswersPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} history={history}/>,\r\n            open: isOpen\r\n        });\r\n    }\r\n\r\n    handleClickPuzzleRushModal = (difficulty,games,p_id) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: null\r\n        });\r\n        this.setState({\r\n            showPuzzleRushModal: false,\r\n            PageSelected: <PuzzleRushPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} puzzleRush={'Yes'} games={games} p_id={p_id} difficulty={difficulty}/>,\r\n            open: isOpen\r\n        });\r\n    };\r\n\r\n    closeLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showLoginModal: false\r\n        });\r\n    };\r\n\r\n    closePuzzleRushLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPuzzleRushModal: false\r\n        });\r\n    }\r\n\r\n    closeRandomGameLoginModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showRandomGameModal: false\r\n        });\r\n    }\r\n\r\n    handleGameClick = (name, gamedata,highscores,uri) => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <PlayGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} name={name} highscores={highscores} gamedata={gamedata} uri={uri}/>,\r\n            open: isOpen\r\n        });\r\n    };\r\n\r\n    handleClickCreateGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <CreateGame handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections} state={\"new\"}/>,\r\n             open: isOpen\r\n        });\r\n    };\r\n\r\n\r\n    handleClickProfile = event => {\r\n        if (window.loggedin === 'Yes') {\r\n                    axios.get('/getProfileData')\r\n                        .then( res => {\r\n                            var isOpen = this.state.open;\r\n                            if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                                isOpen = false\r\n                            }\r\n                            var profileData = res.data;\r\n                            var gamesview = JSON.parse(profileData.gamesview)\r\n                            var solutionsview = JSON.parse(profileData.solutionsview)\r\n                            var puzzlerushview = JSON.parse(profileData.puzzlerushview)\r\n                            this.setState({\r\n                                PageSelected: <ProfilePage handleClickPlayGame={this.handleGameClick} gamesview={gamesview} solutionsview={solutionsview} puzzlerushview={puzzlerushview}/>,\r\n                                gamesview: gamesview,\r\n                                solutionsview: solutionsview,\r\n                                puzzlerushview: puzzlerushview,\r\n                                profileDataloaded: true,\r\n                                open: isOpen\r\n                            });\r\n                        });\r\n                    this.setState({\r\n                        PageSelected: <LoadingPage/>,\r\n                    });\r\n                }\r\n        else {\r\n            this.SignInButtonPressed('Sign in');\r\n        }\r\n    };\r\n\r\n\r\n    handleClickFindGame = event => {\r\n        event.preventDefault();\r\n        axios.get('/getFindGames')\r\n            .then( res => {\r\n                const gameslist = JSON.parse(res.data.gameslist)\r\n                const highscoreslist = JSON.parse(res.data.highscoreslist)\r\n                var isOpen = this.state.open;\r\n                if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n                    isOpen = false\r\n                }\r\n                this.setState({\r\n                    PageSelected: <FindGame gameslist={gameslist} highscoreslist={highscoreslist} handleGameClick={this.handleGameClick}/>,\r\n                    open: isOpen\r\n                });\r\n        });\r\n        this.setState({\r\n            PageSelected: <LoadingPage/>,\r\n        });\r\n    };\r\n\r\n    handleHomePageClick = () => {\r\n        this.setState({\r\n            PageSelected: <Home handleClickDailyChallenge={this.handleClickDailyChallenge} handleClickRandomGame={this.handleClickRandomGame} handleClickLearnGame={this.handleClickLearnGame} handleClickCreateGame={this.handleClickCreateGame} handleClickFindGame={this.handleClickFindGame} handleClickPuzzleRush={this.handleClickPuzzleRush}/>,\r\n        });\r\n    }\r\n\r\n\r\n    handleClickAboutUs = event => {\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <AboutUs/>,\r\n            open: isOpen\r\n        });\r\n    }\r\n\r\n    handleClickLearnGame = event => {\r\n        event.preventDefault();\r\n        var isOpen = this.state.open;\r\n        if (window.innerWidth < MOBILE_INNER_SCREEN_WIDTH) {\r\n            isOpen = false\r\n        }\r\n        this.setState({\r\n            PageSelected: <LessonsPage handleLineDirections={this.handleLineDirections} LineDirections={this.state.LineDirections}/>,\r\n            open: isOpen\r\n        });\r\n\r\n    };\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({\r\n            mobileAnchorEl: null,\r\n            mobileMenuOpen: false\r\n        });\r\n    };\r\n\r\n    showPage = () => {\r\n        return(\r\n            this.state.PageSelected\r\n        )\r\n    }\r\n\r\n\r\n    handleMobileMenuOpen = (event) => {\r\n        this.setState({\r\n            mobileAnchorEl: event.currentTarget,\r\n            mobileMenuOpen: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const theme = createMuiTheme({\r\n            palette: {\r\n                primary: teal,\r\n                secondary: {\r\n                    main: '#e65100',\r\n                },\r\n            }\r\n        });\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <AppBar\r\n                        position=\"fixed\"\r\n                        className={clsx(classes.appBar, {\r\n                            [classes.appBarShift]: this.state.open,\r\n                        })}\r\n                     >\r\n                        <Toolbar className={classes.toolbar1}>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={this.handleDrawerOpen}\r\n                                edge=\"start\"\r\n                                className={clsx(classes.menuButton, this.state.open && classes.hide)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <img onClick={this.handleHomePageClick} width={50} height={50} src=\"/static/images/logo150.png\"/>\r\n                            <Typography variant=\"h6\" className={classes.title} noWrap>\r\n                                <a href=\"/\" style={{color: 'white'}}>RobotsEvolved\r\n                                    <span>.com</span>\r\n                                </a>\r\n                            </Typography>\r\n                            <div className={classes.grow} />\r\n                            <div className={classes.sectionDesktop}>\r\n                                <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.sectionMobile}>\r\n                                <IconButton\r\n                                    aria-label=\"show more\"\r\n                                    aria-controls={\"primary-search-account-menu-mobile\"}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={this.handleMobileMenuOpen}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <MoreIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Menu\r\n                        anchorEl={this.state.mobileAnchorEl}\r\n                        anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        id={\"primary-search-account-menu-mobile\"}\r\n                        keepMounted\r\n                        transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n                        open={this.state.mobileMenuOpen}\r\n                        onClose={this.handleMobileMenuClose}\r\n                    >\r\n                        <MenuItem>\r\n                            <LoggedInUser handleClick={this.SignInButtonPressed}/>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                    <Drawer\r\n                        id=\"MainDrawer\"\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.state.open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div className={classes.drawerHeader}>\r\n                            <div className={classes.drawerHeaderLeft}>\r\n                                <SignInButton onClick={this.SignInButtonPressed}/>\r\n                            </div>\r\n                            <div className={classes.drawerHeaderRight}>\r\n                                <IconButton onClick={this.handleDrawerClose}>\r\n                                    {useTheme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Play\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Create a Game'} onClick={this.handleClickCreateGame}>\r\n                                <ListItemIcon><PlayArrowIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Create a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Find a Game'} onClick={this.handleClickFindGame}>\r\n                                <ListItemIcon><SearchIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Find a Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge'} onClick={this.handleClickDailyChallenge}>\r\n                                <ListItemIcon><TodayIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Random Game'} onClick={this.handleClickRandomGame}>\r\n                                <ListItemIcon><CasinoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Random Game'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Puzzle Rush'} onClick={this.handleClickPuzzleRush}>\r\n                                <ListItemIcon><TimerIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Puzzle Rush'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Learn\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Lessons'} onClick={this.handleClickLearnGame}>\r\n                                <ListItemIcon><SchoolIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Lessons'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Community\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'Profile'} onClick={this.handleClickProfile}>\r\n                                <ListItemIcon><AccountBoxIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Profile'} />\r\n                            </ListItem>\r\n                            <ListItem button key={'Daily Challenge History'} onClick={this.handleClickDailyChallengeHistory}>\r\n                                <ListItemIcon><FaMedal /></ListItemIcon>\r\n                                <ListItemText primary={'Daily Challenge History'} />\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                        <Typography\r\n                            className={classes.dividerFullWidth}\r\n                            color=\"textSecondary\"\r\n                            display=\"block\"\r\n                            variant=\"caption\"\r\n                        >\r\n                            Tools\r\n                        </Typography>\r\n                        <List>\r\n                            <ListItem button key={'About'} onClick={this.handleClickAboutUs}>\r\n                                <ListItemIcon><InfoIcon /></ListItemIcon>\r\n                                <ListItemText primary={'About'} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n                    <main className={clsx(classes.content, {\r\n                        [classes.contentShift]: this.state.open,\r\n                    })}>\r\n                        <div className={classes.drawerHeader} />\r\n                        {this.showPage()}\r\n                    </main>\r\n                    <LoginModal closeLoginModal={this.closeLoginModal} show={this.state.showLoginModal}/>\r\n                    <PuzzleRushDifficultyModal\r\n                        closeModal={this.closePuzzleRushLoginModal}\r\n                        show={this.state.showPuzzleRushModal}\r\n                        handleClickPuzzleRush={this.handleClickPuzzleRushModal}\r\n                    />\r\n                    <RandomGameDifficultyModal\r\n                        closeModal={this.closeRandomGameLoginModal}\r\n                        show={this.state.showRandomGameModal}\r\n                        handleClickRandomGame={this.handleClickRandomGameModal}\r\n                    />\r\n                </div>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('MainApp'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}